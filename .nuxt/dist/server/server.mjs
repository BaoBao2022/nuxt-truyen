
// --------------------
// Request: /Users/bonn/Documents/GitHub/next-truyen/node_modules/nuxt/dist/app/entry
// Parents: 
// - <entry> ($id_c757eb9e)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/ohmyfetch/dist/index.mjs ($id_780217c4)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/paths.mjs ($id_dba18d01)
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/css.mjs ($id_a5c1c6ec)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/plugins/server.mjs ($id_54c812eb)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/root-component.mjs ($id_1d2b572d)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/app-component.mjs ($id_88ee8cb1)
// --------------------
const $id_e3b1bc70 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/ohmyfetch/dist/index.mjs");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/paths.mjs");

const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/index.mjs");

const __vite_ssr_import_4__ = await __vite_ssr_import__("/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/css.mjs");

const __vite_ssr_import_5__ = await __vite_ssr_import__("/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/plugins/server.mjs");

const __vite_ssr_import_6__ = await __vite_ssr_import__("/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/root-component.mjs");

const __vite_ssr_import_7__ = await __vite_ssr_import__("/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/app-component.mjs");

if (!globalThis.$fetch) {
  globalThis.$fetch = __vite_ssr_import_1__.$fetch.create({
    baseURL: __vite_ssr_import_2__.baseURL()
  });
}
let entry;
const plugins = __vite_ssr_import_3__.normalizePlugins(__vite_ssr_import_5__.default);
if (true) {
  entry = async function createNuxtAppServer(ssrContext) {
    const vueApp = __vite_ssr_import_0__.createApp(__vite_ssr_import_6__.default);
    vueApp.component("App", __vite_ssr_import_7__.default);
    const nuxt = __vite_ssr_import_3__.createNuxtApp({ vueApp, ssrContext });
    try {
      await __vite_ssr_import_3__.applyPlugins(nuxt, plugins);
      await nuxt.hooks.callHook("app:created", vueApp);
    } catch (err) {
      await nuxt.callHook("app:error", err);
      ssrContext.error = ssrContext.error || err;
    }
    return vueApp;
  };
}
if (false) {
  if (true && __vite_ssr_import_meta__.webpackHot) {
    __vite_ssr_import_meta__.webpackHot.accept();
  }
  entry = async function initApp() {
    const isSSR = Boolean(window.__NUXT__?.serverRendered);
    const vueApp = isSSR ? __vite_ssr_import_0__.createSSRApp(__vite_ssr_import_6__.default) : __vite_ssr_import_0__.createApp(__vite_ssr_import_6__.default);
    vueApp.component("App", __vite_ssr_import_7__.default);
    const nuxt = __vite_ssr_import_3__.createNuxtApp({ vueApp });
    nuxt.hooks.hookOnce("app:suspense:resolve", () => {
      nuxt.isHydrating = false;
    });
    try {
      await __vite_ssr_import_3__.applyPlugins(nuxt, plugins);
    } catch (err) {
      await nuxt.callHook("app:error", err);
      nuxt.payload.error = nuxt.payload.error || err;
    }
    try {
      await nuxt.hooks.callHook("app:created", vueApp);
      await nuxt.hooks.callHook("app:beforeMount", vueApp);
      vueApp.mount("#__nuxt");
      await nuxt.hooks.callHook("app:mounted", vueApp);
      await __vite_ssr_import_0__.nextTick();
    } catch (err) {
      await nuxt.callHook("app:error", err);
      nuxt.payload.error = nuxt.payload.error || err;
    }
  };
  entry().catch((error) => {
    console.error("Error while mounting app:", error);
  });
}
__vite_ssr_exports__.default = (ctx) => entry(ctx);
;
}


// --------------------
// Request: /node_modules/vue/dist/vue.cjs.js
// Parents: 
// - /Users/bonn/Documents/GitHub/next-truyen/node_modules/nuxt/dist/app/entry ($id_e3b1bc70)
// - /node_modules/nuxt/dist/app/nuxt.mjs ($id_e069d411)
// - /node_modules/nuxt/dist/app/composables/component.mjs ($id_53345950)
// - /node_modules/nuxt/dist/app/composables/asyncData.mjs ($id_d5b6a221)
// - /node_modules/nuxt/dist/app/composables/utils.mjs ($id_df511336)
// - /node_modules/nuxt/dist/app/composables/state.mjs ($id_7d872108)
// - /node_modules/nuxt/dist/app/composables/fetch.mjs ($id_41f5ae4e)
// - /node_modules/nuxt/dist/app/composables/cookie.mjs ($id_511b441d)
// - /node_modules/nuxt/dist/app/components/nuxt-link.mjs ($id_ffac87b5)
// - /node_modules/nuxt/dist/head/runtime/composables.mjs ($id_04ea9504)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/components.plugin.mjs ($id_2078c34e)
// - /node_modules/@vueuse/head/dist/index.mjs ($id_c032264e)
// - /node_modules/nuxt/dist/head/runtime/lib/vueuse-head.plugin.mjs ($id_e6f12003)
// - /node_modules/nuxt/dist/head/runtime/plugin.mjs ($id_a2650341)
// - /node_modules/nuxt/dist/head/runtime/components.mjs ($id_b2a29d6f)
// - /node_modules/nuxt/dist/pages/runtime/router.mjs ($id_a090977b)
// - /node_modules/nuxt/dist/pages/runtime/page.mjs ($id_5fc14cdc)
// - /node_modules/nuxt/dist/pages/runtime/utils.mjs ($id_80f433aa)
// - /node_modules/nuxt/dist/app/components/utils.mjs ($id_69c52686)
// - /node_modules/nuxt/dist/app/components/layout.mjs ($id_39003883)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/layouts.mjs ($id_5e3529c5)
// - /components/TheSidebar.vue ($id_a452c5e5)
// - /components/TheNav.vue ($id_0ec40bd1)
// - /components/TheHeader.vue ($id_d18d7003)
// - /node_modules/nuxt/dist/app/compat/capi.mjs ($id_0c5717a4)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs ($id_fe38f457)
// - /components/TheFooter.vue ($id_cdfd5170)
// - /layouts/default.vue ($id_7689e89d)
// - /components/TheHome.vue ($id_370723ed)
// - /components/HomePage/Spotlight.vue ($id_3c9ba117)
// - /components/HomePage/MangeNewUpdate.vue ($id_eef87c89)
// - /components/HomePage/MangaFeatured.vue ($id_f783c960)
// - /pages/index.vue?macro=true ($id_5dd70240)
// - /pages/manga/index.vue?macro=true ($id_811fac0c)
// - /components/Manga/Review.vue ($id_4f57d685)
// - /components/Manga/Chaplist.vue ($id_49b3b6a3)
// - /pages/manga/read/[slug]/[chapter]/[id].vue?macro=true ($id_6e06068f)
// - /pages/index.vue ($id_cca58e97)
// - /pages/manga/index.vue ($id_f3f97c4e)
// - /pages/manga/read/[slug]/[chapter]/[id].vue ($id_b9cb4a69)
// - /node_modules/@nuxtjs/color-mode/dist/runtime/plugin.server.mjs ($id_a217e6ae)
// - /node_modules/nuxt/dist/app/components/nuxt-root.vue ($id_e9bfada3)
// - /node_modules/@nuxt/ui-templates/dist/templates/error-404.vue ($id_b90d4d0f)
// - /node_modules/@nuxt/ui-templates/dist/templates/error-500.vue ($id_14c8b574)
// - /node_modules/@nuxt/ui-templates/dist/templates/error-dev.vue ($id_bc2d74a1)
// - /node_modules/nuxt/dist/app/components/nuxt-error-page.vue ($id_8cc6d73f)
// - /app.vue ($id_2b46e842)
// Dependencies: 

// --------------------
const $id_60f0615f = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/vue/dist/vue.cjs.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/vue/dist/vue.cjs.js\".")
  })


// --------------------
// Request: /node_modules/ohmyfetch/dist/index.mjs
// Parents: 
// - /Users/bonn/Documents/GitHub/next-truyen/node_modules/nuxt/dist/app/entry ($id_e3b1bc70)
// Dependencies: 

// --------------------
const $id_780217c4 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/ohmyfetch/dist/index.mjs")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/ohmyfetch/dist/index.mjs\".")
  })


// --------------------
// Request: /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/paths.mjs
// Parents: 
// - /Users/bonn/Documents/GitHub/next-truyen/node_modules/nuxt/dist/app/entry ($id_e3b1bc70)
// Dependencies: 
// - /node_modules/ufo/dist/index.mjs ($id_614de060)
// --------------------
const $id_dba18d01 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/ufo/dist/index.mjs");

const appConfig = {"baseURL":"/","buildAssetsDir":"/_nuxt/","assetsPath":{},"cdnURL":"","head":{"charset":"utf-8","viewport":"width=device-width, initial-scale=1","meta":[],"link":[],"style":[],"script":[],"title":"Truyện tranh online free"}}
const baseURL = () => appConfig.baseURL
Object.defineProperty(__vite_ssr_exports__, "baseURL", { enumerable: true, configurable: true, get(){ return baseURL }});
const buildAssetsDir = () => appConfig.buildAssetsDir
Object.defineProperty(__vite_ssr_exports__, "buildAssetsDir", { enumerable: true, configurable: true, get(){ return buildAssetsDir }});
const buildAssetsURL = (...path) => __vite_ssr_import_0__.joinURL(publicAssetsURL(), buildAssetsDir(), ...path)
Object.defineProperty(__vite_ssr_exports__, "buildAssetsURL", { enumerable: true, configurable: true, get(){ return buildAssetsURL }});
const publicAssetsURL = (...path) => {
  const publicBase = appConfig.cdnURL || appConfig.baseURL
  return path.length ? __vite_ssr_import_0__.joinURL(publicBase, ...path) : publicBase
}
Object.defineProperty(__vite_ssr_exports__, "publicAssetsURL", { enumerable: true, configurable: true, get(){ return publicAssetsURL }});;
}


// --------------------
// Request: /node_modules/ufo/dist/index.mjs
// Parents: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/paths.mjs ($id_dba18d01)
// - /node_modules/nuxt/dist/app/composables/router.mjs ($id_db4d90a8)
// - /node_modules/nuxt/dist/app/components/nuxt-link.mjs ($id_ffac87b5)
// - /node_modules/nuxt/dist/pages/runtime/router.mjs ($id_a090977b)
// Dependencies: 

// --------------------
const $id_614de060 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/ufo/dist/index.mjs")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/ufo/dist/index.mjs\".")
  })


// --------------------
// Request: /node_modules/nuxt/dist/app/index.mjs
// Parents: 
// - /Users/bonn/Documents/GitHub/next-truyen/node_modules/nuxt/dist/app/entry ($id_e3b1bc70)
// - /node_modules/nuxt/dist/app/composables/asyncData.mjs ($id_d5b6a221)
// - /node_modules/nuxt/dist/app/composables/hydrate.mjs ($id_0063df1b)
// - /node_modules/nuxt/dist/app/composables/state.mjs ($id_7d872108)
// - /node_modules/nuxt/dist/app/composables/error.mjs ($id_6fe050f1)
// - /node_modules/nuxt/dist/app/composables/ssr.mjs ($id_c4866ba7)
// - /node_modules/nuxt/dist/app/composables/cookie.mjs ($id_511b441d)
// - /node_modules/nuxt/dist/app/composables/router.mjs ($id_db4d90a8)
// - /node_modules/nuxt/dist/app/components/nuxt-link.mjs ($id_ffac87b5)
// - /node_modules/nuxt/dist/head/runtime/composables.mjs ($id_04ea9504)
// - /node_modules/nuxt/dist/app/plugins/preload.server.mjs ($id_9871bba0)
// - /node_modules/nuxt/dist/head/runtime/lib/vueuse-head.plugin.mjs ($id_e6f12003)
// - /node_modules/nuxt/dist/head/runtime/plugin.mjs ($id_a2650341)
// - /node_modules/nuxt/dist/pages/runtime/page.mjs ($id_5fc14cdc)
// - /node_modules/nuxt/dist/pages/runtime/router.mjs ($id_a090977b)
// - /node_modules/nuxt/dist/app/components/layout.mjs ($id_39003883)
// - /components/TheHeader.vue ($id_d18d7003)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs ($id_fe38f457)
// - /components/HomePage/Spotlight.vue ($id_3c9ba117)
// - /pages/manga/index.vue?macro=true ($id_811fac0c)
// - /pages/manga/read/[slug]/[chapter]/[id].vue?macro=true ($id_6e06068f)
// - /pages/manga/index.vue ($id_f3f97c4e)
// - /pages/manga/read/[slug]/[chapter]/[id].vue ($id_b9cb4a69)
// - /node_modules/nuxt/dist/app/components/nuxt-root.vue ($id_e9bfada3)
// Dependencies: 
// - /node_modules/nuxt/dist/app/nuxt.mjs ($id_e069d411)
// - /node_modules/nuxt/dist/app/composables/index.mjs ($id_b067a79a)
// - /node_modules/nuxt/dist/app/components/index.mjs ($id_161bfe9f)
// - /node_modules/nuxt/dist/head/runtime/index.mjs ($id_b7351483)
// --------------------
const $id_36927477 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/nuxt.mjs");
__vite_ssr_exportAll__(__vite_ssr_import_0__);
const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/composables/index.mjs");
__vite_ssr_exportAll__(__vite_ssr_import_1__);
const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/components/index.mjs");
__vite_ssr_exportAll__(__vite_ssr_import_2__);
const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/nuxt/dist/head/runtime/index.mjs");

Object.defineProperty(__vite_ssr_exports__, "useHead", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_3__.useHead }});
Object.defineProperty(__vite_ssr_exports__, "useMeta", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_3__.useMeta }});
const isVue2 = false;
Object.defineProperty(__vite_ssr_exports__, "isVue2", { enumerable: true, configurable: true, get(){ return isVue2 }});
const isVue3 = true;
Object.defineProperty(__vite_ssr_exports__, "isVue3", { enumerable: true, configurable: true, get(){ return isVue3 }});
;
}


// --------------------
// Request: /node_modules/nuxt/dist/app/nuxt.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// - /node_modules/nuxt/dist/app/compat/legacy-app.mjs ($id_a48341bc)
// - /node_modules/nuxt/dist/app/composables/component.mjs ($id_53345950)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/hookable/dist/index.mjs ($id_a2c811c4)
// - /node_modules/unctx/dist/index.mjs ($id_a569ca2d)
// - /node_modules/nuxt/dist/app/compat/legacy-app.mjs ($id_a48341bc)
// --------------------
const $id_e069d411 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/hookable/dist/index.mjs");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/unctx/dist/index.mjs");

const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/compat/legacy-app.mjs");

const nuxtAppCtx = __vite_ssr_import_2__.getContext("nuxt-app");
const NuxtPluginIndicator = "__nuxt_plugin";
Object.defineProperty(__vite_ssr_exports__, "NuxtPluginIndicator", { enumerable: true, configurable: true, get(){ return NuxtPluginIndicator }});
function createNuxtApp(options) {
  const nuxtApp = {
    provide: void 0,
    globalName: "nuxt",
    payload: __vite_ssr_import_0__.reactive({
      data: {},
      state: {},
      _errors: {},
      ...false ? window.__NUXT__ : { serverRendered: true }
    }),
    isHydrating: false,
    _asyncDataPromises: {},
    ...options
  };
  nuxtApp.hooks = __vite_ssr_import_1__.createHooks();
  nuxtApp.hook = nuxtApp.hooks.hook;
  nuxtApp.callHook = nuxtApp.hooks.callHook;
  nuxtApp.provide = (name, value) => {
    const $name = "$" + name;
    defineGetter(nuxtApp, $name, value);
    defineGetter(nuxtApp.vueApp.config.globalProperties, $name, value);
  };
  defineGetter(nuxtApp.vueApp, "$nuxt", nuxtApp);
  defineGetter(nuxtApp.vueApp.config.globalProperties, "$nuxt", nuxtApp);
  if (nuxtApp.ssrContext) {
    nuxtApp.ssrContext.nuxt = nuxtApp;
  }
  if (true) {
    nuxtApp.ssrContext = nuxtApp.ssrContext || {};
    nuxtApp.ssrContext.payload = nuxtApp.payload;
  }
  if (true) {
    nuxtApp.payload.config = {
      public: options.ssrContext.runtimeConfig.public,
      app: options.ssrContext.runtimeConfig.app
    };
  }
  const runtimeConfig = true ? options.ssrContext.runtimeConfig : __vite_ssr_import_0__.reactive(nuxtApp.payload.config);
  const compatibilityConfig = new Proxy(runtimeConfig, {
    get(target, prop) {
      if (prop === "public") {
        return target.public;
      }
      return target[prop] ?? target.public[prop];
    },
    set(target, prop, value) {
      if (true || prop === "public" || prop === "app") {
        return false;
      }
      target[prop] = value;
      target.public[prop] = value;
      return true;
    }
  });
  nuxtApp.provide("config", compatibilityConfig);
  return nuxtApp;
}
Object.defineProperty(__vite_ssr_exports__, "createNuxtApp", { enumerable: true, configurable: true, get(){ return createNuxtApp }});
async function applyPlugin(nuxtApp, plugin) {
  if (typeof plugin !== "function") {
    return;
  }
  const { provide } = await callWithNuxt(nuxtApp, plugin, [nuxtApp]) || {};
  if (provide && typeof provide === "object") {
    for (const key in provide) {
      nuxtApp.provide(key, provide[key]);
    }
  }
}
Object.defineProperty(__vite_ssr_exports__, "applyPlugin", { enumerable: true, configurable: true, get(){ return applyPlugin }});
async function applyPlugins(nuxtApp, plugins) {
  for (const plugin of plugins) {
    await applyPlugin(nuxtApp, plugin);
  }
}
Object.defineProperty(__vite_ssr_exports__, "applyPlugins", { enumerable: true, configurable: true, get(){ return applyPlugins }});
function normalizePlugins(_plugins) {
  let needsLegacyContext = false;
  const plugins = _plugins.map((plugin) => {
    if (typeof plugin !== "function") {
      return () => {
      };
    }
    if (isLegacyPlugin(plugin)) {
      needsLegacyContext = true;
      return (nuxtApp) => plugin(nuxtApp._legacyContext, nuxtApp.provide);
    }
    return plugin;
  });
  if (needsLegacyContext) {
    plugins.unshift(__vite_ssr_import_3__.legacyPlugin);
  }
  return plugins;
}
Object.defineProperty(__vite_ssr_exports__, "normalizePlugins", { enumerable: true, configurable: true, get(){ return normalizePlugins }});
function defineNuxtPlugin(plugin) {
  plugin[NuxtPluginIndicator] = true;
  return plugin;
}
Object.defineProperty(__vite_ssr_exports__, "defineNuxtPlugin", { enumerable: true, configurable: true, get(){ return defineNuxtPlugin }});
function isLegacyPlugin(plugin) {
  return !plugin[NuxtPluginIndicator];
}
Object.defineProperty(__vite_ssr_exports__, "isLegacyPlugin", { enumerable: true, configurable: true, get(){ return isLegacyPlugin }});
function callWithNuxt(nuxt, setup, args) {
  const fn = () => args ? setup(...args) : setup();
  if (true) {
    return nuxtAppCtx.callAsync(nuxt, fn);
  } else {
    nuxtAppCtx.set(nuxt);
    return fn();
  }
}
Object.defineProperty(__vite_ssr_exports__, "callWithNuxt", { enumerable: true, configurable: true, get(){ return callWithNuxt }});
function useNuxtApp() {
  const vm = __vite_ssr_import_0__.getCurrentInstance();
  if (!vm) {
    const nuxtAppInstance = nuxtAppCtx.use();
    if (!nuxtAppInstance) {
      throw new Error("nuxt instance unavailable");
    }
    return nuxtAppInstance;
  }
  return vm.appContext.app.$nuxt;
}
Object.defineProperty(__vite_ssr_exports__, "useNuxtApp", { enumerable: true, configurable: true, get(){ return useNuxtApp }});
function useRuntimeConfig() {
  return useNuxtApp().$config;
}
Object.defineProperty(__vite_ssr_exports__, "useRuntimeConfig", { enumerable: true, configurable: true, get(){ return useRuntimeConfig }});
function defineGetter(obj, key, val) {
  Object.defineProperty(obj, key, { get: () => val });
}
;
}


// --------------------
// Request: /node_modules/hookable/dist/index.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/nuxt.mjs ($id_e069d411)
// Dependencies: 

// --------------------
const $id_a2c811c4 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/hookable/dist/index.mjs")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/hookable/dist/index.mjs\".")
  })


// --------------------
// Request: /node_modules/unctx/dist/index.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/nuxt.mjs ($id_e069d411)
// Dependencies: 

// --------------------
const $id_a569ca2d = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/unctx/dist/index.mjs")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/unctx/dist/index.mjs\".")
  })


// --------------------
// Request: /node_modules/nuxt/dist/app/compat/legacy-app.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/nuxt.mjs ($id_e069d411)
// Dependencies: 
// - /node_modules/unenv/runtime/mock/proxy.mjs ($id_39e12da7)
// - /node_modules/nuxt/dist/app/nuxt.mjs ($id_e069d411)
// --------------------
const $id_a48341bc = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/unenv/runtime/mock/proxy.mjs");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/nuxt.mjs");

function mock(warning) {
  console.warn(warning);
  return __vite_ssr_import_0__.default;
}
const unsupported = new Set([
  "store",
  "spa",
  "fetchCounters"
]);
const todo = new Set([
  "isHMR",
  "base",
  "payload",
  "from",
  "next",
  "error",
  "redirect",
  "redirected",
  "enablePreview",
  "$preview",
  "beforeNuxtRender",
  "beforeSerialize"
]);
const serverProperties = new Set([
  "req",
  "res",
  "ssrContext"
]);
const routerKeys = ["route", "params", "query"];
const staticFlags = {
  isClient: false,
  isServer: true,
  isDev: true,
  isStatic: void 0,
  target: "server",
  modern: false
};
const legacyPlugin = (nuxtApp) => {
  nuxtApp._legacyContext = new Proxy(nuxtApp, {
    get(nuxt, p) {
      if (unsupported.has(p)) {
        return mock(`Accessing ${p} is not supported in Nuxt 3.`);
      }
      if (todo.has(p)) {
        return mock(`Accessing ${p} is not yet supported in Nuxt 3.`);
      }
      if (routerKeys.includes(p)) {
        if (!("$router" in nuxtApp)) {
          return mock("vue-router is not being used in this project.");
        }
        switch (p) {
          case "route":
            return nuxt.$router.currentRoute.value;
          case "params":
          case "query":
            return nuxt.$router.currentRoute.value[p];
        }
      }
      if (p === "$config" || p === "env") {
        return __vite_ssr_import_1__.useRuntimeConfig();
      }
      if (p in staticFlags) {
        return staticFlags[p];
      }
      if (false && serverProperties.has(p)) {
        return void 0;
      }
      if (p === "ssrContext") {
        return nuxt._legacyContext;
      }
      if (nuxt.ssrContext && p in nuxt.ssrContext) {
        return nuxt.ssrContext[p];
      }
      if (p === "nuxt") {
        return nuxt.payload;
      }
      if (p === "nuxtState") {
        return nuxt.payload.data;
      }
      if (p in nuxtApp.vueApp) {
        return nuxtApp.vueApp[p];
      }
      if (p in nuxtApp) {
        return nuxtApp[p];
      }
      return mock(`Accessing ${p} is not supported in Nuxt3.`);
    }
  });
  if (false) {
    nuxtApp.hook("app:created", () => {
      const legacyApp = new Proxy(nuxtApp.vueApp, {
        get(source, p) {
          if (["$root", "constructor"].includes(p)) {
            return legacyApp;
          }
          return source[p] || nuxtApp[p];
        }
      });
      window[`$${nuxtApp.globalName}`] = legacyApp;
    });
  }
};
Object.defineProperty(__vite_ssr_exports__, "legacyPlugin", { enumerable: true, configurable: true, get(){ return legacyPlugin }});
;
}


// --------------------
// Request: /node_modules/unenv/runtime/mock/proxy.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/compat/legacy-app.mjs ($id_a48341bc)
// Dependencies: 

// --------------------
const $id_39e12da7 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/unenv/runtime/mock/proxy.mjs")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/unenv/runtime/mock/proxy.mjs\".")
  })


// --------------------
// Request: /node_modules/nuxt/dist/app/composables/index.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// Dependencies: 
// - /node_modules/nuxt/dist/app/composables/component.mjs ($id_53345950)
// - /node_modules/nuxt/dist/app/composables/asyncData.mjs ($id_d5b6a221)
// - /node_modules/nuxt/dist/app/composables/hydrate.mjs ($id_0063df1b)
// - /node_modules/nuxt/dist/app/composables/state.mjs ($id_7d872108)
// - /node_modules/nuxt/dist/app/composables/error.mjs ($id_6fe050f1)
// - /node_modules/nuxt/dist/app/composables/fetch.mjs ($id_41f5ae4e)
// - /node_modules/nuxt/dist/app/composables/cookie.mjs ($id_511b441d)
// - /node_modules/nuxt/dist/app/composables/ssr.mjs ($id_c4866ba7)
// - /node_modules/nuxt/dist/app/composables/router.mjs ($id_db4d90a8)
// --------------------
const $id_b067a79a = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/composables/component.mjs");

Object.defineProperty(__vite_ssr_exports__, "defineNuxtComponent", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_0__.defineNuxtComponent }});
const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/composables/asyncData.mjs");

Object.defineProperty(__vite_ssr_exports__, "useAsyncData", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_1__.useAsyncData }});
Object.defineProperty(__vite_ssr_exports__, "useLazyAsyncData", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_1__.useLazyAsyncData }});
Object.defineProperty(__vite_ssr_exports__, "refreshNuxtData", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_1__.refreshNuxtData }});
const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/composables/hydrate.mjs");

Object.defineProperty(__vite_ssr_exports__, "useHydration", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_2__.useHydration }});
const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/composables/state.mjs");

Object.defineProperty(__vite_ssr_exports__, "useState", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_3__.useState }});
const __vite_ssr_import_4__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/composables/error.mjs");

Object.defineProperty(__vite_ssr_exports__, "clearError", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_4__.clearError }});
Object.defineProperty(__vite_ssr_exports__, "throwError", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_4__.throwError }});
Object.defineProperty(__vite_ssr_exports__, "useError", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_4__.useError }});
const __vite_ssr_import_5__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/composables/fetch.mjs");

Object.defineProperty(__vite_ssr_exports__, "useFetch", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_5__.useFetch }});
Object.defineProperty(__vite_ssr_exports__, "useLazyFetch", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_5__.useLazyFetch }});
const __vite_ssr_import_6__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/composables/cookie.mjs");

Object.defineProperty(__vite_ssr_exports__, "useCookie", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_6__.useCookie }});
const __vite_ssr_import_7__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/composables/ssr.mjs");

Object.defineProperty(__vite_ssr_exports__, "useRequestHeaders", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_7__.useRequestHeaders }});
Object.defineProperty(__vite_ssr_exports__, "useRequestEvent", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_7__.useRequestEvent }});
const __vite_ssr_import_8__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/composables/router.mjs");

Object.defineProperty(__vite_ssr_exports__, "abortNavigation", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_8__.abortNavigation }});
Object.defineProperty(__vite_ssr_exports__, "addRouteMiddleware", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_8__.addRouteMiddleware }});
Object.defineProperty(__vite_ssr_exports__, "defineNuxtRouteMiddleware", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_8__.defineNuxtRouteMiddleware }});
Object.defineProperty(__vite_ssr_exports__, "navigateTo", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_8__.navigateTo }});
Object.defineProperty(__vite_ssr_exports__, "useRoute", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_8__.useRoute }});
Object.defineProperty(__vite_ssr_exports__, "useActiveRoute", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_8__.useActiveRoute }});
Object.defineProperty(__vite_ssr_exports__, "useRouter", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_8__.useRouter }});
;
}


// --------------------
// Request: /node_modules/nuxt/dist/app/composables/component.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/composables/index.mjs ($id_b067a79a)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/vue-router/dist/vue-router.cjs.js ($id_f9a4a698)
// - /node_modules/nuxt/dist/app/nuxt.mjs ($id_e069d411)
// - /node_modules/nuxt/dist/app/composables/asyncData.mjs ($id_d5b6a221)
// --------------------
const $id_53345950 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/vue-router/dist/vue-router.cjs.js");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/nuxt.mjs");

const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/composables/asyncData.mjs");

const NuxtComponentIndicator = "__nuxt_component";
Object.defineProperty(__vite_ssr_exports__, "NuxtComponentIndicator", { enumerable: true, configurable: true, get(){ return NuxtComponentIndicator }});
async function runLegacyAsyncData(res, fn) {
  const nuxt = __vite_ssr_import_2__.useNuxtApp();
  const route = __vite_ssr_import_1__.useRoute();
  const vm = __vite_ssr_import_0__.getCurrentInstance();
  const { fetchKey } = vm.proxy.$options;
  const key = typeof fetchKey === "function" ? fetchKey(() => "") : fetchKey || route.fullPath;
  const { data } = await __vite_ssr_import_3__.useAsyncData(`options:asyncdata:${key}`, () => fn(nuxt._legacyContext));
  if (data.value && typeof data.value === "object") {
    Object.assign(await res, __vite_ssr_import_0__.toRefs(__vite_ssr_import_0__.reactive(data.value)));
  } else if (true) {
    console.warn("[nuxt] asyncData should return an object", data);
  }
}
const defineNuxtComponent = function defineNuxtComponent2(options) {
  const { setup } = options;
  if (!setup && !options.asyncData) {
    return {
      [NuxtComponentIndicator]: true,
      ...options
    };
  }
  return {
    [NuxtComponentIndicator]: true,
    ...options,
    setup(props, ctx) {
      const res = setup?.(props, ctx) || {};
      let promises = [];
      promises = promises || [];
      if (options.asyncData) {
        promises.push(runLegacyAsyncData(res, options.asyncData));
      }
      return Promise.resolve(res).then(() => Promise.all(promises)).then(() => res).finally(() => {
        promises.length = 0;
        promises = null;
      });
    }
  };
};
Object.defineProperty(__vite_ssr_exports__, "defineNuxtComponent", { enumerable: true, configurable: true, get(){ return defineNuxtComponent }});
;
}


// --------------------
// Request: /node_modules/vue-router/dist/vue-router.cjs.js
// Parents: 
// - /node_modules/nuxt/dist/app/composables/component.mjs ($id_53345950)
// - /node_modules/nuxt/dist/pages/runtime/router.mjs ($id_a090977b)
// - /node_modules/nuxt/dist/pages/runtime/page.mjs ($id_5fc14cdc)
// Dependencies: 

// --------------------
const $id_f9a4a698 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/vue-router/dist/vue-router.cjs.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/vue-router/dist/vue-router.cjs.js\".")
  })


// --------------------
// Request: /node_modules/nuxt/dist/app/composables/asyncData.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/composables/component.mjs ($id_53345950)
// - /node_modules/nuxt/dist/app/composables/index.mjs ($id_b067a79a)
// - /node_modules/nuxt/dist/app/composables/fetch.mjs ($id_41f5ae4e)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/nuxt/dist/app/composables/utils.mjs ($id_df511336)
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// --------------------
const $id_d5b6a221 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/composables/utils.mjs");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/index.mjs");

const getDefault = () => null;
function useAsyncData(key, handler, options = {}) {
  if (typeof key !== "string") {
    throw new TypeError("asyncData key must be a string");
  }
  if (typeof handler !== "function") {
    throw new TypeError("asyncData handler must be a function");
  }
  options = { server: true, default: getDefault, ...options };
  if (options.defer) {
    console.warn("[useAsyncData] `defer` has been renamed to `lazy`. Support for `defer` will be removed in RC.");
  }
  options.lazy = options.lazy ?? options.defer ?? false;
  options.initialCache = options.initialCache ?? true;
  const nuxt = __vite_ssr_import_2__.useNuxtApp();
  const instance = __vite_ssr_import_0__.getCurrentInstance();
  if (instance && !instance._nuxtOnBeforeMountCbs) {
    const cbs = instance._nuxtOnBeforeMountCbs = [];
    if (instance && false) {
      __vite_ssr_import_0__.onBeforeMount(() => {
        cbs.forEach((cb) => {
          cb();
        });
        cbs.splice(0, cbs.length);
      });
      __vite_ssr_import_0__.onUnmounted(() => cbs.splice(0, cbs.length));
    }
  }
  const useInitialCache = () => options.initialCache && nuxt.payload.data[key] !== void 0;
  const asyncData = {
    data: __vite_ssr_import_1__.wrapInRef(nuxt.payload.data[key] ?? options.default()),
    pending: __vite_ssr_import_0__.ref(!useInitialCache()),
    error: __vite_ssr_import_0__.ref(nuxt.payload._errors[key] ?? null)
  };
  asyncData.refresh = (opts = {}) => {
    if (nuxt._asyncDataPromises[key]) {
      return nuxt._asyncDataPromises[key];
    }
    if (opts._initial && useInitialCache()) {
      return nuxt.payload.data[key];
    }
    asyncData.pending.value = true;
    nuxt._asyncDataPromises[key] = Promise.resolve(handler(nuxt)).then((result) => {
      if (options.transform) {
        result = options.transform(result);
      }
      if (options.pick) {
        result = pick(result, options.pick);
      }
      asyncData.data.value = result;
      asyncData.error.value = null;
    }).catch((error) => {
      asyncData.error.value = error;
      asyncData.data.value = __vite_ssr_import_0__.unref(options.default());
    }).finally(() => {
      asyncData.pending.value = false;
      nuxt.payload.data[key] = asyncData.data.value;
      if (asyncData.error.value) {
        nuxt.payload._errors[key] = true;
      }
      delete nuxt._asyncDataPromises[key];
    });
    return nuxt._asyncDataPromises[key];
  };
  const initialFetch = () => asyncData.refresh({ _initial: true });
  const fetchOnServer = options.server !== false && nuxt.payload.serverRendered;
  if (true && fetchOnServer) {
    const promise = initialFetch();
    __vite_ssr_import_0__.onServerPrefetch(() => promise);
  }
  if (false) {
    if (fetchOnServer && nuxt.isHydrating && key in nuxt.payload.data) {
      asyncData.pending.value = false;
    } else if (instance && nuxt.payload.serverRendered && (nuxt.isHydrating || options.lazy)) {
      instance._nuxtOnBeforeMountCbs.push(initialFetch);
    } else {
      initialFetch();
    }
    if (options.watch) {
      __vite_ssr_import_0__.watch(options.watch, () => asyncData.refresh());
    }
    const off = nuxt.hook("app:data:refresh", (keys) => {
      if (!keys || keys.includes(key)) {
        return asyncData.refresh();
      }
    });
    if (instance) {
      __vite_ssr_import_0__.onUnmounted(off);
    }
  }
  const asyncDataPromise = Promise.resolve(nuxt._asyncDataPromises[key]).then(() => asyncData);
  Object.assign(asyncDataPromise, asyncData);
  return asyncDataPromise;
}
Object.defineProperty(__vite_ssr_exports__, "useAsyncData", { enumerable: true, configurable: true, get(){ return useAsyncData }});
function useLazyAsyncData(key, handler, options = {}) {
  return useAsyncData(key, handler, { ...options, lazy: true });
}
Object.defineProperty(__vite_ssr_exports__, "useLazyAsyncData", { enumerable: true, configurable: true, get(){ return useLazyAsyncData }});
function refreshNuxtData(keys) {
  if (true) {
    return Promise.resolve();
  }
  const _keys = keys ? Array.isArray(keys) ? keys : [keys] : void 0;
  return __vite_ssr_import_2__.useNuxtApp().callHook("app:data:refresh", _keys);
}
Object.defineProperty(__vite_ssr_exports__, "refreshNuxtData", { enumerable: true, configurable: true, get(){ return refreshNuxtData }});
function pick(obj, keys) {
  const newObj = {};
  for (const key of keys) {
    newObj[key] = obj[key];
  }
  return newObj;
}
;
}


// --------------------
// Request: /node_modules/nuxt/dist/app/composables/utils.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/composables/asyncData.mjs ($id_d5b6a221)
// - /node_modules/nuxt/dist/app/composables/cookie.mjs ($id_511b441d)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// --------------------
const $id_df511336 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const wrapInRef = (value) => __vite_ssr_import_0__.isRef(value) ? value : __vite_ssr_import_0__.ref(value);
Object.defineProperty(__vite_ssr_exports__, "wrapInRef", { enumerable: true, configurable: true, get(){ return wrapInRef }});
;
}


// --------------------
// Request: /node_modules/nuxt/dist/app/composables/hydrate.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/composables/index.mjs ($id_b067a79a)
// Dependencies: 
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// --------------------
const $id_0063df1b = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/index.mjs");

const useHydration = (key, get, set) => {
  const nuxt = __vite_ssr_import_0__.useNuxtApp();
  if (true) {
    nuxt.hooks.hook("app:rendered", () => {
      nuxt.payload[key] = get();
    });
  }
  if (false) {
    nuxt.hooks.hook("app:created", () => {
      set(nuxt.payload[key]);
    });
  }
};
Object.defineProperty(__vite_ssr_exports__, "useHydration", { enumerable: true, configurable: true, get(){ return useHydration }});
;
}


// --------------------
// Request: /node_modules/nuxt/dist/app/composables/state.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/composables/index.mjs ($id_b067a79a)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// --------------------
const $id_7d872108 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/index.mjs");

const useState = (key, init) => {
  const nuxt = __vite_ssr_import_1__.useNuxtApp();
  const state = __vite_ssr_import_0__.toRef(nuxt.payload.state, key);
  if (state.value === void 0 && init) {
    const initialValue = init();
    if (__vite_ssr_import_0__.isRef(initialValue)) {
      nuxt.payload.state[key] = initialValue;
      return initialValue;
    }
    state.value = initialValue;
  }
  return state;
};
Object.defineProperty(__vite_ssr_exports__, "useState", { enumerable: true, configurable: true, get(){ return useState }});
;
}


// --------------------
// Request: /node_modules/nuxt/dist/app/composables/error.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/composables/index.mjs ($id_b067a79a)
// Dependencies: 
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// --------------------
const $id_6fe050f1 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/index.mjs");

const useError = () => {
  const nuxtApp = __vite_ssr_import_0__.useNuxtApp();
  return __vite_ssr_import_0__.useState("error", () => true ? nuxtApp.ssrContext.error : nuxtApp.payload.error);
};
Object.defineProperty(__vite_ssr_exports__, "useError", { enumerable: true, configurable: true, get(){ return useError }});
const throwError = (_err) => {
  const nuxtApp = __vite_ssr_import_0__.useNuxtApp();
  const error = useError();
  const err = typeof _err === "string" ? new Error(_err) : _err;
  nuxtApp.callHook("app:error", err);
  if (true) {
    nuxtApp.ssrContext.error = nuxtApp.ssrContext.error || err;
  } else {
    error.value = error.value || err;
  }
  return err;
};
Object.defineProperty(__vite_ssr_exports__, "throwError", { enumerable: true, configurable: true, get(){ return throwError }});
const clearError = async (options = {}) => {
  const nuxtApp = __vite_ssr_import_0__.useNuxtApp();
  const error = useError();
  nuxtApp.callHook("app:error:cleared", options);
  if (options.redirect) {
    await nuxtApp.$router.replace(options.redirect);
  }
  error.value = null;
};
Object.defineProperty(__vite_ssr_exports__, "clearError", { enumerable: true, configurable: true, get(){ return clearError }});
;
}


// --------------------
// Request: /node_modules/nuxt/dist/app/composables/fetch.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/composables/index.mjs ($id_b067a79a)
// Dependencies: 
// - /node_modules/ohash/dist/index.mjs ($id_b1b82cf3)
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/nuxt/dist/app/composables/asyncData.mjs ($id_d5b6a221)
// --------------------
const $id_41f5ae4e = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/ohash/dist/index.mjs");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/composables/asyncData.mjs");

function useFetch(request, opts = {}) {
  if (true && opts.transform && !opts.key) {
    console.warn("[nuxt] You should provide a key for `useFetch` when using a custom transform function.");
  }
  const key = "$f_" + (opts.key || __vite_ssr_import_0__.hash([request, { ...opts, transform: null }]));
  const _request = __vite_ssr_import_1__.computed(() => {
    let r = request;
    if (typeof r === "function") {
      r = r();
    }
    return __vite_ssr_import_1__.isRef(r) ? r.value : r;
  });
  const _fetchOptions = {
    ...opts,
    cache: typeof opts.cache === "boolean" ? void 0 : opts.cache
  };
  const _asyncDataOptions = {
    ...opts,
    watch: [
      _request,
      ...opts.watch || []
    ]
  };
  const asyncData = __vite_ssr_import_2__.useAsyncData(key, () => {
    return $fetch(_request.value, _fetchOptions);
  }, _asyncDataOptions);
  return asyncData;
}
Object.defineProperty(__vite_ssr_exports__, "useFetch", { enumerable: true, configurable: true, get(){ return useFetch }});
function useLazyFetch(request, opts = {}) {
  return useFetch(request, {
    ...opts,
    lazy: true
  });
}
Object.defineProperty(__vite_ssr_exports__, "useLazyFetch", { enumerable: true, configurable: true, get(){ return useLazyFetch }});
;
}


// --------------------
// Request: /node_modules/ohash/dist/index.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/composables/fetch.mjs ($id_41f5ae4e)
// Dependencies: 

// --------------------
const $id_b1b82cf3 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/ohash/dist/index.mjs")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/ohash/dist/index.mjs\".")
  })


// --------------------
// Request: /node_modules/nuxt/dist/app/composables/cookie.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/composables/index.mjs ($id_b067a79a)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/cookie-es/dist/index.mjs ($id_f4975261)
// - /node_modules/h3/dist/index.mjs ($id_57d7ded6)
// - /node_modules/destr/dist/index.mjs ($id_03d15ecd)
// - /node_modules/nuxt/dist/app/composables/ssr.mjs ($id_c4866ba7)
// - /node_modules/nuxt/dist/app/composables/utils.mjs ($id_df511336)
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// --------------------
const $id_511b441d = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/cookie-es/dist/index.mjs");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/h3/dist/index.mjs");

const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/destr/dist/index.mjs");

const __vite_ssr_import_4__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/composables/ssr.mjs");

const __vite_ssr_import_5__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/composables/utils.mjs");

const __vite_ssr_import_6__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/index.mjs");

const CookieDefaults = {
  path: "/",
  decode: (val) => __vite_ssr_import_3__.default(decodeURIComponent(val)),
  encode: (val) => encodeURIComponent(typeof val === "string" ? val : JSON.stringify(val))
};
function useCookie(name, _opts) {
  const opts = { ...CookieDefaults, ..._opts };
  const cookies = readRawCookies(opts);
  const cookie = __vite_ssr_import_5__.wrapInRef(cookies[name] ?? opts.default?.());
  if (false) {
    __vite_ssr_import_0__.watch(cookie, () => {
      writeClientCookie(name, cookie.value, opts);
    });
  } else if (true) {
    const nuxtApp = __vite_ssr_import_6__.useNuxtApp();
    const writeFinalCookieValue = () => {
      if (cookie.value !== cookies[name]) {
        writeServerCookie(__vite_ssr_import_4__.useRequestEvent(nuxtApp), name, cookie.value, opts);
      }
    };
    nuxtApp.hooks.hookOnce("app:rendered", writeFinalCookieValue);
    nuxtApp.hooks.hookOnce("app:redirected", writeFinalCookieValue);
  }
  return cookie;
}
Object.defineProperty(__vite_ssr_exports__, "useCookie", { enumerable: true, configurable: true, get(){ return useCookie }});
function readRawCookies(opts = {}) {
  if (true) {
    return __vite_ssr_import_1__.parse(__vite_ssr_import_4__.useRequestEvent()?.req.headers.cookie || "", opts);
  } else if (false) {
    return __vite_ssr_import_1__.parse(document.cookie, opts);
  }
}
function serializeCookie(name, value, opts = {}) {
  if (value === null || value === void 0) {
    return __vite_ssr_import_1__.serialize(name, value, { ...opts, maxAge: -1 });
  }
  return __vite_ssr_import_1__.serialize(name, value, opts);
}
function writeClientCookie(name, value, opts = {}) {
  if (false) {
    document.cookie = serializeCookie(name, value, opts);
  }
}
function writeServerCookie(event, name, value, opts = {}) {
  if (event) {
    __vite_ssr_import_2__.appendHeader(event, "Set-Cookie", serializeCookie(name, value, opts));
  }
}
;
}


// --------------------
// Request: /node_modules/cookie-es/dist/index.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/composables/cookie.mjs ($id_511b441d)
// Dependencies: 

// --------------------
const $id_f4975261 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/cookie-es/dist/index.mjs")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/cookie-es/dist/index.mjs\".")
  })


// --------------------
// Request: /node_modules/h3/dist/index.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/composables/cookie.mjs ($id_511b441d)
// - /node_modules/nuxt/dist/app/composables/router.mjs ($id_db4d90a8)
// - /node_modules/nuxt/dist/pages/runtime/router.mjs ($id_a090977b)
// Dependencies: 

// --------------------
const $id_57d7ded6 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/h3/dist/index.mjs")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/h3/dist/index.mjs\".")
  })


// --------------------
// Request: /node_modules/destr/dist/index.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/composables/cookie.mjs ($id_511b441d)
// Dependencies: 

// --------------------
const $id_03d15ecd = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/destr/dist/index.mjs")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/destr/dist/index.mjs\".")
  })


// --------------------
// Request: /node_modules/nuxt/dist/app/composables/ssr.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/composables/cookie.mjs ($id_511b441d)
// - /node_modules/nuxt/dist/app/composables/index.mjs ($id_b067a79a)
// Dependencies: 
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// --------------------
const $id_c4866ba7 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/index.mjs");

function useRequestHeaders(include) {
  if (false) {
    return {};
  }
  const headers = __vite_ssr_import_0__.useNuxtApp().ssrContext?.event.req.headers ?? {};
  if (!include) {
    return headers;
  }
  return Object.fromEntries(include.filter((key) => headers[key]).map((key) => [key, headers[key]]));
}
Object.defineProperty(__vite_ssr_exports__, "useRequestHeaders", { enumerable: true, configurable: true, get(){ return useRequestHeaders }});
function useRequestEvent(nuxtApp = __vite_ssr_import_0__.useNuxtApp()) {
  return nuxtApp.ssrContext?.event;
}
Object.defineProperty(__vite_ssr_exports__, "useRequestEvent", { enumerable: true, configurable: true, get(){ return useRequestEvent }});
;
}


// --------------------
// Request: /node_modules/nuxt/dist/app/composables/router.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/composables/index.mjs ($id_b067a79a)
// Dependencies: 
// - /node_modules/h3/dist/index.mjs ($id_57d7ded6)
// - /node_modules/ufo/dist/index.mjs ($id_614de060)
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// --------------------
const $id_db4d90a8 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/h3/dist/index.mjs");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/ufo/dist/index.mjs");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/index.mjs");

const useRouter = () => {
  return __vite_ssr_import_2__.useNuxtApp()?.$router;
};
Object.defineProperty(__vite_ssr_exports__, "useRouter", { enumerable: true, configurable: true, get(){ return useRouter }});
const useRoute = () => {
  return __vite_ssr_import_2__.useNuxtApp()._route;
};
Object.defineProperty(__vite_ssr_exports__, "useRoute", { enumerable: true, configurable: true, get(){ return useRoute }});
const useActiveRoute = () => {
  return __vite_ssr_import_2__.useNuxtApp()._activeRoute;
};
Object.defineProperty(__vite_ssr_exports__, "useActiveRoute", { enumerable: true, configurable: true, get(){ return useActiveRoute }});
const defineNuxtRouteMiddleware = (middleware) => middleware;
Object.defineProperty(__vite_ssr_exports__, "defineNuxtRouteMiddleware", { enumerable: true, configurable: true, get(){ return defineNuxtRouteMiddleware }});
const addRouteMiddleware = (name, middleware, options = {}) => {
  const nuxtApp = __vite_ssr_import_2__.useNuxtApp();
  if (options.global || typeof name === "function") {
    nuxtApp._middleware.global.push(typeof name === "function" ? name : middleware);
  } else {
    nuxtApp._middleware.named[name] = middleware;
  }
};
Object.defineProperty(__vite_ssr_exports__, "addRouteMiddleware", { enumerable: true, configurable: true, get(){ return addRouteMiddleware }});
const isProcessingMiddleware = () => {
  try {
    if (__vite_ssr_import_2__.useNuxtApp()._processingMiddleware) {
      return true;
    }
  } catch {
    return true;
  }
  return false;
};
const navigateTo = (to, options = {}) => {
  if (!to) {
    to = "/";
  }
  if (false && isProcessingMiddleware()) {
    return to;
  }
  const router = useRouter();
  if (true) {
    const nuxtApp = __vite_ssr_import_2__.useNuxtApp();
    if (nuxtApp.ssrContext && nuxtApp.ssrContext.event) {
      const redirectLocation = __vite_ssr_import_1__.joinURL(__vite_ssr_import_2__.useRuntimeConfig().app.baseURL, router.resolve(to).fullPath || "/");
      return nuxtApp.callHook("app:redirected").then(() => __vite_ssr_import_0__.sendRedirect(nuxtApp.ssrContext.event, redirectLocation, options.redirectCode || 302));
    }
  }
  return options.replace ? router.replace(to) : router.push(to);
};
Object.defineProperty(__vite_ssr_exports__, "navigateTo", { enumerable: true, configurable: true, get(){ return navigateTo }});
const abortNavigation = (err) => {
  if (true && !isProcessingMiddleware()) {
    throw new Error("abortNavigation() is only usable inside a route middleware handler.");
  }
  if (err) {
    throw err instanceof Error ? err : new Error(err);
  }
  return false;
};
Object.defineProperty(__vite_ssr_exports__, "abortNavigation", { enumerable: true, configurable: true, get(){ return abortNavigation }});
;
}


// --------------------
// Request: /node_modules/nuxt/dist/app/components/index.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// Dependencies: 
// - /node_modules/nuxt/dist/app/components/nuxt-link.mjs ($id_ffac87b5)
// --------------------
const $id_161bfe9f = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/components/nuxt-link.mjs");

Object.defineProperty(__vite_ssr_exports__, "defineNuxtLink", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_0__.defineNuxtLink }});
;
}


// --------------------
// Request: /node_modules/nuxt/dist/app/components/nuxt-link.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/components/index.mjs ($id_161bfe9f)
// - /node_modules/@nuxt/ui-templates/dist/templates/error-404.vue ($id_b90d4d0f)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/ufo/dist/index.mjs ($id_614de060)
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// --------------------
const $id_ffac87b5 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/ufo/dist/index.mjs");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/index.mjs");

const firstNonUndefined = (...args) => args.find((arg) => arg !== void 0);
const DEFAULT_EXTERNAL_REL_ATTRIBUTE = "noopener noreferrer";
function defineNuxtLink(options) {
  const componentName = options.componentName || "NuxtLink";
  const checkPropConflicts = (props, main, sub) => {
    if (true && props[main] !== void 0 && props[sub] !== void 0) {
      console.warn(`[${componentName}] \`${main}\` and \`${sub}\` cannot be used together. \`${sub}\` will be ignored.`);
    }
  };
  return __vite_ssr_import_0__.defineComponent({
    name: componentName,
    props: {
      to: {
        type: [String, Object],
        default: void 0,
        required: false
      },
      href: {
        type: [String, Object],
        default: void 0,
        required: false
      },
      target: {
        type: String,
        default: void 0,
        required: false
      },
      rel: {
        type: String,
        default: void 0,
        required: false
      },
      noRel: {
        type: Boolean,
        default: void 0,
        required: false
      },
      activeClass: {
        type: String,
        default: void 0,
        required: false
      },
      exactActiveClass: {
        type: String,
        default: void 0,
        required: false
      },
      replace: {
        type: Boolean,
        default: void 0,
        required: false
      },
      ariaCurrentValue: {
        type: String,
        default: void 0,
        required: false
      },
      external: {
        type: Boolean,
        default: void 0,
        required: false
      },
      custom: {
        type: Boolean,
        default: void 0,
        required: false
      }
    },
    setup(props, { slots }) {
      const router = __vite_ssr_import_2__.useRouter();
      const to = __vite_ssr_import_0__.computed(() => {
        checkPropConflicts(props, "to", "href");
        return props.to || props.href || "";
      });
      const isExternal = __vite_ssr_import_0__.computed(() => {
        if (props.external) {
          return true;
        }
        if (props.target && props.target !== "_self") {
          return true;
        }
        if (typeof to.value === "object") {
          return false;
        }
        return to.value === "" || __vite_ssr_import_1__.hasProtocol(to.value, true);
      });
      return () => {
        if (!isExternal.value) {
          return __vite_ssr_import_0__.h(__vite_ssr_import_0__.resolveComponent("RouterLink"), {
            to: to.value,
            activeClass: props.activeClass || options.activeClass,
            exactActiveClass: props.exactActiveClass || options.exactActiveClass,
            replace: props.replace,
            ariaCurrentValue: props.ariaCurrentValue
          }, slots.default);
        }
        const href = typeof to.value === "object" ? router.resolve(to.value)?.href ?? null : to.value || null;
        const target = props.target || null;
        checkPropConflicts(props, "noRel", "rel");
        const rel = props.noRel ? null : firstNonUndefined(props.rel, options.externalRelAttribute, href ? DEFAULT_EXTERNAL_REL_ATTRIBUTE : "") || null;
        return __vite_ssr_import_0__.h("a", { href, rel, target }, slots.default?.());
      };
    }
  });
}
Object.defineProperty(__vite_ssr_exports__, "defineNuxtLink", { enumerable: true, configurable: true, get(){ return defineNuxtLink }});
__vite_ssr_exports__.default = defineNuxtLink({ componentName: "NuxtLink" });
;
}


// --------------------
// Request: /node_modules/nuxt/dist/head/runtime/index.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs ($id_fe38f457)
// Dependencies: 
// - /node_modules/nuxt/dist/head/runtime/composables.mjs ($id_04ea9504)
// --------------------
const $id_b7351483 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/nuxt/dist/head/runtime/composables.mjs");
__vite_ssr_exportAll__(__vite_ssr_import_0__);
;
}


// --------------------
// Request: /node_modules/nuxt/dist/head/runtime/composables.mjs
// Parents: 
// - /node_modules/nuxt/dist/head/runtime/index.mjs ($id_b7351483)
// - /node_modules/nuxt/dist/head/runtime/components.mjs ($id_b2a29d6f)
// - /node_modules/nuxt/dist/head/runtime/plugin.mjs ($id_a2650341)
// Dependencies: 
// - /node_modules/@vue/shared/dist/shared.cjs.js ($id_852b06a2)
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// --------------------
const $id_04ea9504 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/@vue/shared/dist/shared.cjs.js");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/index.mjs");

function useHead(meta) {
  const resolvedMeta = __vite_ssr_import_0__.isFunction(meta) ? __vite_ssr_import_1__.computed(meta) : meta;
  __vite_ssr_import_2__.useNuxtApp()._useHead(resolvedMeta);
}
Object.defineProperty(__vite_ssr_exports__, "useHead", { enumerable: true, configurable: true, get(){ return useHead }});
function useMeta(meta) {
  return useHead(meta);
}
Object.defineProperty(__vite_ssr_exports__, "useMeta", { enumerable: true, configurable: true, get(){ return useMeta }});
;
}


// --------------------
// Request: /node_modules/@vue/shared/dist/shared.cjs.js
// Parents: 
// - /node_modules/nuxt/dist/head/runtime/composables.mjs ($id_04ea9504)
// Dependencies: 

// --------------------
const $id_852b06a2 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/@vue/shared/dist/shared.cjs.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/@vue/shared/dist/shared.cjs.js\".")
  })


// --------------------
// Request: /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/css.mjs
// Parents: 
// - /Users/bonn/Documents/GitHub/next-truyen/node_modules/nuxt/dist/app/entry ($id_e3b1bc70)
// Dependencies: 
// - /assets/css/main.css ($id_f8b2993b)
// --------------------
const $id_a5c1c6ec = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/assets/css/main.css");
;
}


// --------------------
// Request: /assets/css/main.css
// Parents: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/css.mjs ($id_a5c1c6ec)
// Dependencies: 

// --------------------
const $id_f8b2993b = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
__vite_ssr_exports__.default = ".absolute-center{align-items:center;display:flex;justify-content:center}.slideLeftReturn{-webkit-animation-name:slideLeftReturn;animation-name:slideLeftReturn}.magictime{-webkit-animation-duration:.35s!important;animation-duration:.35s!important}.line-clamp-3{-webkit-line-clamp:3;-webkit-box-orient:vertical;display:-webkit-box;overflow:hidden}.object-center{-o-object-fit:cover;object-fit:cover}.aspect-h-4{--tw-aspect-h:4}.aspect-w-3{--tw-aspect-w:3;padding-bottom:calc(var(--tw-aspect-h)/var(--tw-aspect-w)*100%);position:relative}.aspect-w-3>*{bottom:0;height:100%;left:0;position:absolute;right:0;top:0;width:100%}.h-\\[35\\%\\]{height:35%}.aspect-h-5{--tw-aspect-h:5}.odd\\:bg-highlight\\/40:nth-child(odd){background-color:rgba(63,63,63,.4)}.line-clamp-1,.line-clamp-2{-webkit-box-orient:vertical;display:-webkit-box;overflow:hidden}.line-clamp-1{-webkit-line-clamp:1}\n/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */html{line-height:1.15}body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji}abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Consolas,Liberation Mono,Menlo,monospace}button,input,optgroup,select,textarea{line-height:1.15}::-moz-focus-inner{border-style:none;padding:0}:-moz-focusring{outline:1px dotted ButtonText}\n/*\n! tailwindcss v3.0.24 | MIT License | https://tailwindcss.com\n*/html{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}fieldset,legend{padding:0}[hidden]{display:none}body{background-color:rgb(31 31 31/var(--tw-bg-opacity))}html{-webkit-tap-highlight-color:rgba(0,0,0,0);font-size:62.5%;scroll-behavior:smooth;scroll-snap-type:y mandatory}body{overflow-x:hidden}.bg-secondary{--tw-bg-opacity:1;background-color:rgb(47 47 47/var(--tw-bg-opacity))}.bg-highlight{--tw-bg-opacity:1;background-color:rgb(63 63 63/var(--tw-bg-opacity))}.bg-background{--tw-bg-opacity:1;background-color:rgb(31 31 31/var(--tw-bg-opacity))}.bg-primary{--tw-bg-opacity:1;background-color:rgb(244 63 94/var(--tw-bg-opacity))}.bg-deep-black{--tw-bg-opacity:1;background-color:rgb(26 26 26/var(--tw-bg-opacity))}\n/*!\n * animate.css - https://animate.style/\n * Version - 4.1.1\n * Licensed under the MIT license - http://opensource.org/licenses/MIT\n *\n * Copyright (c) 2020 Animate.css\n */:root{--animate-duration:1s;--animate-delay:1s;--animate-repeat:1}.animate__animated{-webkit-animation-duration:1s;animation-duration:1s;-webkit-animation-duration:var(--animate-duration);animation-duration:var(--animate-duration);-webkit-animation-fill-mode:both;animation-fill-mode:both}.animate__animated.animate__infinite{-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite}.animate__animated.animate__repeat-1{-webkit-animation-iteration-count:1;animation-iteration-count:1;-webkit-animation-iteration-count:var(--animate-repeat);animation-iteration-count:var(--animate-repeat)}.animate__animated.animate__repeat-2{-webkit-animation-iteration-count:2;animation-iteration-count:2;-webkit-animation-iteration-count:calc(var(--animate-repeat)*2);animation-iteration-count:calc(var(--animate-repeat)*2)}.animate__animated.animate__repeat-3{-webkit-animation-iteration-count:3;animation-iteration-count:3;-webkit-animation-iteration-count:calc(var(--animate-repeat)*3);animation-iteration-count:calc(var(--animate-repeat)*3)}.animate__animated.animate__delay-1s{-webkit-animation-delay:1s;animation-delay:1s;-webkit-animation-delay:var(--animate-delay);animation-delay:var(--animate-delay)}.animate__animated.animate__delay-2s{-webkit-animation-delay:2s;animation-delay:2s;-webkit-animation-delay:calc(var(--animate-delay)*2);animation-delay:calc(var(--animate-delay)*2)}.animate__animated.animate__delay-3s{-webkit-animation-delay:3s;animation-delay:3s;-webkit-animation-delay:calc(var(--animate-delay)*3);animation-delay:calc(var(--animate-delay)*3)}.animate__animated.animate__delay-4s{-webkit-animation-delay:4s;animation-delay:4s;-webkit-animation-delay:calc(var(--animate-delay)*4);animation-delay:calc(var(--animate-delay)*4)}.animate__animated.animate__delay-5s{-webkit-animation-delay:5s;animation-delay:5s;-webkit-animation-delay:calc(var(--animate-delay)*5);animation-delay:calc(var(--animate-delay)*5)}.animate__animated.animate__faster{-webkit-animation-duration:.5s;animation-duration:.5s;-webkit-animation-duration:calc(var(--animate-duration)/2);animation-duration:calc(var(--animate-duration)/2)}.animate__animated.animate__fast{-webkit-animation-duration:.8s;animation-duration:.8s;-webkit-animation-duration:calc(var(--animate-duration)*.8);animation-duration:calc(var(--animate-duration)*.8)}.animate__animated.animate__slow{-webkit-animation-duration:2s;animation-duration:2s;-webkit-animation-duration:calc(var(--animate-duration)*2);animation-duration:calc(var(--animate-duration)*2)}.animate__animated.animate__slower{-webkit-animation-duration:3s;animation-duration:3s;-webkit-animation-duration:calc(var(--animate-duration)*3);animation-duration:calc(var(--animate-duration)*3)}@media (prefers-reduced-motion:reduce),print{.animate__animated{-webkit-animation-duration:1ms!important;animation-duration:1ms!important;-webkit-animation-iteration-count:1!important;animation-iteration-count:1!important;transition-duration:1ms!important}.animate__animated[class*=Out]{opacity:0}}@-webkit-keyframes bounce{0%,20%,53%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1);transform:translateZ(0)}40%,43%{-webkit-animation-timing-function:cubic-bezier(.755,.05,.855,.06);animation-timing-function:cubic-bezier(.755,.05,.855,.06);transform:translate3d(0,-30px,0) scaleY(1.1)}70%{-webkit-animation-timing-function:cubic-bezier(.755,.05,.855,.06);animation-timing-function:cubic-bezier(.755,.05,.855,.06);transform:translate3d(0,-15px,0) scaleY(1.05)}80%{transform:translateZ(0) scaleY(.95);transition-timing-function:cubic-bezier(.215,.61,.355,1)}90%{transform:translate3d(0,-4px,0) scaleY(1.02)}}@keyframes bounce{0%,20%,53%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1);transform:translateZ(0)}40%,43%{-webkit-animation-timing-function:cubic-bezier(.755,.05,.855,.06);animation-timing-function:cubic-bezier(.755,.05,.855,.06);transform:translate3d(0,-30px,0) scaleY(1.1)}70%{-webkit-animation-timing-function:cubic-bezier(.755,.05,.855,.06);animation-timing-function:cubic-bezier(.755,.05,.855,.06);transform:translate3d(0,-15px,0) scaleY(1.05)}80%{transform:translateZ(0) scaleY(.95);transition-timing-function:cubic-bezier(.215,.61,.355,1)}90%{transform:translate3d(0,-4px,0) scaleY(1.02)}}.animate__bounce{-webkit-animation-name:bounce;animation-name:bounce;transform-origin:center bottom}@-webkit-keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}@keyframes flash{0%,50%,to{opacity:1}25%,75%{opacity:0}}.animate__flash{-webkit-animation-name:flash;animation-name:flash}@-webkit-keyframes pulse{0%{transform:scaleX(1)}50%{transform:scale3d(1.05,1.05,1.05)}to{transform:scaleX(1)}}@keyframes pulse{0%{transform:scaleX(1)}50%{transform:scale3d(1.05,1.05,1.05)}to{transform:scaleX(1)}}.animate__pulse{-webkit-animation-name:pulse;animation-name:pulse;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}@-webkit-keyframes rubberBand{0%{transform:scaleX(1)}30%{transform:scale3d(1.25,.75,1)}40%{transform:scale3d(.75,1.25,1)}50%{transform:scale3d(1.15,.85,1)}65%{transform:scale3d(.95,1.05,1)}75%{transform:scale3d(1.05,.95,1)}to{transform:scaleX(1)}}@keyframes rubberBand{0%{transform:scaleX(1)}30%{transform:scale3d(1.25,.75,1)}40%{transform:scale3d(.75,1.25,1)}50%{transform:scale3d(1.15,.85,1)}65%{transform:scale3d(.95,1.05,1)}75%{transform:scale3d(1.05,.95,1)}to{transform:scaleX(1)}}.animate__rubberBand{-webkit-animation-name:rubberBand;animation-name:rubberBand}@-webkit-keyframes shakeX{0%,to{transform:translateZ(0)}10%,30%,50%,70%,90%{transform:translate3d(-10px,0,0)}20%,40%,60%,80%{transform:translate3d(10px,0,0)}}@keyframes shakeX{0%,to{transform:translateZ(0)}10%,30%,50%,70%,90%{transform:translate3d(-10px,0,0)}20%,40%,60%,80%{transform:translate3d(10px,0,0)}}.animate__shakeX{-webkit-animation-name:shakeX;animation-name:shakeX}@-webkit-keyframes shakeY{0%,to{transform:translateZ(0)}10%,30%,50%,70%,90%{transform:translate3d(0,-10px,0)}20%,40%,60%,80%{transform:translate3d(0,10px,0)}}@keyframes shakeY{0%,to{transform:translateZ(0)}10%,30%,50%,70%,90%{transform:translate3d(0,-10px,0)}20%,40%,60%,80%{transform:translate3d(0,10px,0)}}.animate__shakeY{-webkit-animation-name:shakeY;animation-name:shakeY}@-webkit-keyframes headShake{0%{transform:translateX(0)}6.5%{transform:translateX(-6px) rotateY(-9deg)}18.5%{transform:translateX(5px) rotateY(7deg)}31.5%{transform:translateX(-3px) rotateY(-5deg)}43.5%{transform:translateX(2px) rotateY(3deg)}50%{transform:translateX(0)}}@keyframes headShake{0%{transform:translateX(0)}6.5%{transform:translateX(-6px) rotateY(-9deg)}18.5%{transform:translateX(5px) rotateY(7deg)}31.5%{transform:translateX(-3px) rotateY(-5deg)}43.5%{transform:translateX(2px) rotateY(3deg)}50%{transform:translateX(0)}}.animate__headShake{-webkit-animation-name:headShake;animation-name:headShake;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}@-webkit-keyframes swing{20%{transform:rotate(15deg)}40%{transform:rotate(-10deg)}60%{transform:rotate(5deg)}80%{transform:rotate(-5deg)}to{transform:rotate(0deg)}}@keyframes swing{20%{transform:rotate(15deg)}40%{transform:rotate(-10deg)}60%{transform:rotate(5deg)}80%{transform:rotate(-5deg)}to{transform:rotate(0deg)}}.animate__swing{-webkit-animation-name:swing;animation-name:swing;transform-origin:top center}@-webkit-keyframes tada{0%{transform:scaleX(1)}10%,20%{transform:scale3d(.9,.9,.9) rotate(-3deg)}30%,50%,70%,90%{transform:scale3d(1.1,1.1,1.1) rotate(3deg)}40%,60%,80%{transform:scale3d(1.1,1.1,1.1) rotate(-3deg)}to{transform:scaleX(1)}}@keyframes tada{0%{transform:scaleX(1)}10%,20%{transform:scale3d(.9,.9,.9) rotate(-3deg)}30%,50%,70%,90%{transform:scale3d(1.1,1.1,1.1) rotate(3deg)}40%,60%,80%{transform:scale3d(1.1,1.1,1.1) rotate(-3deg)}to{transform:scaleX(1)}}.animate__tada{-webkit-animation-name:tada;animation-name:tada}@-webkit-keyframes wobble{0%{transform:translateZ(0)}15%{transform:translate3d(-25%,0,0) rotate(-5deg)}30%{transform:translate3d(20%,0,0) rotate(3deg)}45%{transform:translate3d(-15%,0,0) rotate(-3deg)}60%{transform:translate3d(10%,0,0) rotate(2deg)}75%{transform:translate3d(-5%,0,0) rotate(-1deg)}to{transform:translateZ(0)}}@keyframes wobble{0%{transform:translateZ(0)}15%{transform:translate3d(-25%,0,0) rotate(-5deg)}30%{transform:translate3d(20%,0,0) rotate(3deg)}45%{transform:translate3d(-15%,0,0) rotate(-3deg)}60%{transform:translate3d(10%,0,0) rotate(2deg)}75%{transform:translate3d(-5%,0,0) rotate(-1deg)}to{transform:translateZ(0)}}.animate__wobble{-webkit-animation-name:wobble;animation-name:wobble}@-webkit-keyframes jello{0%,11.1%,to{transform:translateZ(0)}22.2%{transform:skewX(-12.5deg) skewY(-12.5deg)}33.3%{transform:skewX(6.25deg) skewY(6.25deg)}44.4%{transform:skewX(-3.125deg) skewY(-3.125deg)}55.5%{transform:skewX(1.5625deg) skewY(1.5625deg)}66.6%{transform:skewX(-.78125deg) skewY(-.78125deg)}77.7%{transform:skewX(.390625deg) skewY(.390625deg)}88.8%{transform:skewX(-.1953125deg) skewY(-.1953125deg)}}@keyframes jello{0%,11.1%,to{transform:translateZ(0)}22.2%{transform:skewX(-12.5deg) skewY(-12.5deg)}33.3%{transform:skewX(6.25deg) skewY(6.25deg)}44.4%{transform:skewX(-3.125deg) skewY(-3.125deg)}55.5%{transform:skewX(1.5625deg) skewY(1.5625deg)}66.6%{transform:skewX(-.78125deg) skewY(-.78125deg)}77.7%{transform:skewX(.390625deg) skewY(.390625deg)}88.8%{transform:skewX(-.1953125deg) skewY(-.1953125deg)}}.animate__jello{-webkit-animation-name:jello;animation-name:jello;transform-origin:center}@-webkit-keyframes heartBeat{0%{transform:scale(1)}14%{transform:scale(1.3)}28%{transform:scale(1)}42%{transform:scale(1.3)}70%{transform:scale(1)}}@keyframes heartBeat{0%{transform:scale(1)}14%{transform:scale(1.3)}28%{transform:scale(1)}42%{transform:scale(1.3)}70%{transform:scale(1)}}.animate__heartBeat{-webkit-animation-duration:1.3s;animation-duration:1.3s;-webkit-animation-duration:calc(var(--animate-duration)*1.3);animation-duration:calc(var(--animate-duration)*1.3);-webkit-animation-name:heartBeat;animation-name:heartBeat;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}@-webkit-keyframes backInDown{0%{opacity:.7;transform:translateY(-1200px) scale(.7)}80%{opacity:.7;transform:translateY(0) scale(.7)}to{opacity:1;transform:scale(1)}}@keyframes backInDown{0%{opacity:.7;transform:translateY(-1200px) scale(.7)}80%{opacity:.7;transform:translateY(0) scale(.7)}to{opacity:1;transform:scale(1)}}.animate__backInDown{-webkit-animation-name:backInDown;animation-name:backInDown}@-webkit-keyframes backInLeft{0%{opacity:.7;transform:translateX(-2000px) scale(.7)}80%{opacity:.7;transform:translateX(0) scale(.7)}to{opacity:1;transform:scale(1)}}@keyframes backInLeft{0%{opacity:.7;transform:translateX(-2000px) scale(.7)}80%{opacity:.7;transform:translateX(0) scale(.7)}to{opacity:1;transform:scale(1)}}.animate__backInLeft{-webkit-animation-name:backInLeft;animation-name:backInLeft}@-webkit-keyframes backInRight{0%{opacity:.7;transform:translateX(2000px) scale(.7)}80%{opacity:.7;transform:translateX(0) scale(.7)}to{opacity:1;transform:scale(1)}}@keyframes backInRight{0%{opacity:.7;transform:translateX(2000px) scale(.7)}80%{opacity:.7;transform:translateX(0) scale(.7)}to{opacity:1;transform:scale(1)}}.animate__backInRight{-webkit-animation-name:backInRight;animation-name:backInRight}@-webkit-keyframes backInUp{0%{opacity:.7;transform:translateY(1200px) scale(.7)}80%{opacity:.7;transform:translateY(0) scale(.7)}to{opacity:1;transform:scale(1)}}@keyframes backInUp{0%{opacity:.7;transform:translateY(1200px) scale(.7)}80%{opacity:.7;transform:translateY(0) scale(.7)}to{opacity:1;transform:scale(1)}}.animate__backInUp{-webkit-animation-name:backInUp;animation-name:backInUp}@-webkit-keyframes backOutDown{0%{opacity:1;transform:scale(1)}20%{opacity:.7;transform:translateY(0) scale(.7)}to{opacity:.7;transform:translateY(700px) scale(.7)}}@keyframes backOutDown{0%{opacity:1;transform:scale(1)}20%{opacity:.7;transform:translateY(0) scale(.7)}to{opacity:.7;transform:translateY(700px) scale(.7)}}.animate__backOutDown{-webkit-animation-name:backOutDown;animation-name:backOutDown}@-webkit-keyframes backOutLeft{0%{opacity:1;transform:scale(1)}20%{opacity:.7;transform:translateX(0) scale(.7)}to{opacity:.7;transform:translateX(-2000px) scale(.7)}}@keyframes backOutLeft{0%{opacity:1;transform:scale(1)}20%{opacity:.7;transform:translateX(0) scale(.7)}to{opacity:.7;transform:translateX(-2000px) scale(.7)}}.animate__backOutLeft{-webkit-animation-name:backOutLeft;animation-name:backOutLeft}@-webkit-keyframes backOutRight{0%{opacity:1;transform:scale(1)}20%{opacity:.7;transform:translateX(0) scale(.7)}to{opacity:.7;transform:translateX(2000px) scale(.7)}}@keyframes backOutRight{0%{opacity:1;transform:scale(1)}20%{opacity:.7;transform:translateX(0) scale(.7)}to{opacity:.7;transform:translateX(2000px) scale(.7)}}.animate__backOutRight{-webkit-animation-name:backOutRight;animation-name:backOutRight}@-webkit-keyframes backOutUp{0%{opacity:1;transform:scale(1)}20%{opacity:.7;transform:translateY(0) scale(.7)}to{opacity:.7;transform:translateY(-700px) scale(.7)}}@keyframes backOutUp{0%{opacity:1;transform:scale(1)}20%{opacity:.7;transform:translateY(0) scale(.7)}to{opacity:.7;transform:translateY(-700px) scale(.7)}}.animate__backOutUp{-webkit-animation-name:backOutUp;animation-name:backOutUp}@-webkit-keyframes bounceIn{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:scale3d(.3,.3,.3)}20%{transform:scale3d(1.1,1.1,1.1)}40%{transform:scale3d(.9,.9,.9)}60%{opacity:1;transform:scale3d(1.03,1.03,1.03)}80%{transform:scale3d(.97,.97,.97)}to{opacity:1;transform:scaleX(1)}}@keyframes bounceIn{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:scale3d(.3,.3,.3)}20%{transform:scale3d(1.1,1.1,1.1)}40%{transform:scale3d(.9,.9,.9)}60%{opacity:1;transform:scale3d(1.03,1.03,1.03)}80%{transform:scale3d(.97,.97,.97)}to{opacity:1;transform:scaleX(1)}}.animate__bounceIn{-webkit-animation-duration:.75s;animation-duration:.75s;-webkit-animation-duration:calc(var(--animate-duration)*.75);animation-duration:calc(var(--animate-duration)*.75);-webkit-animation-name:bounceIn;animation-name:bounceIn}@-webkit-keyframes bounceInDown{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(0,-3000px,0) scaleY(3)}60%{opacity:1;transform:translate3d(0,25px,0) scaleY(.9)}75%{transform:translate3d(0,-10px,0) scaleY(.95)}90%{transform:translate3d(0,5px,0) scaleY(.985)}to{transform:translateZ(0)}}@keyframes bounceInDown{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(0,-3000px,0) scaleY(3)}60%{opacity:1;transform:translate3d(0,25px,0) scaleY(.9)}75%{transform:translate3d(0,-10px,0) scaleY(.95)}90%{transform:translate3d(0,5px,0) scaleY(.985)}to{transform:translateZ(0)}}.animate__bounceInDown{-webkit-animation-name:bounceInDown;animation-name:bounceInDown}@-webkit-keyframes bounceInLeft{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(-3000px,0,0) scaleX(3)}60%{opacity:1;transform:translate3d(25px,0,0) scaleX(1)}75%{transform:translate3d(-10px,0,0) scaleX(.98)}90%{transform:translate3d(5px,0,0) scaleX(.995)}to{transform:translateZ(0)}}@keyframes bounceInLeft{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(-3000px,0,0) scaleX(3)}60%{opacity:1;transform:translate3d(25px,0,0) scaleX(1)}75%{transform:translate3d(-10px,0,0) scaleX(.98)}90%{transform:translate3d(5px,0,0) scaleX(.995)}to{transform:translateZ(0)}}.animate__bounceInLeft{-webkit-animation-name:bounceInLeft;animation-name:bounceInLeft}@-webkit-keyframes bounceInRight{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(3000px,0,0) scaleX(3)}60%{opacity:1;transform:translate3d(-25px,0,0) scaleX(1)}75%{transform:translate3d(10px,0,0) scaleX(.98)}90%{transform:translate3d(-5px,0,0) scaleX(.995)}to{transform:translateZ(0)}}@keyframes bounceInRight{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(3000px,0,0) scaleX(3)}60%{opacity:1;transform:translate3d(-25px,0,0) scaleX(1)}75%{transform:translate3d(10px,0,0) scaleX(.98)}90%{transform:translate3d(-5px,0,0) scaleX(.995)}to{transform:translateZ(0)}}.animate__bounceInRight{-webkit-animation-name:bounceInRight;animation-name:bounceInRight}@-webkit-keyframes bounceInUp{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(0,3000px,0) scaleY(5)}60%{opacity:1;transform:translate3d(0,-20px,0) scaleY(.9)}75%{transform:translate3d(0,10px,0) scaleY(.95)}90%{transform:translate3d(0,-5px,0) scaleY(.985)}to{transform:translateZ(0)}}@keyframes bounceInUp{0%,60%,75%,90%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(0,3000px,0) scaleY(5)}60%{opacity:1;transform:translate3d(0,-20px,0) scaleY(.9)}75%{transform:translate3d(0,10px,0) scaleY(.95)}90%{transform:translate3d(0,-5px,0) scaleY(.985)}to{transform:translateZ(0)}}.animate__bounceInUp{-webkit-animation-name:bounceInUp;animation-name:bounceInUp}@-webkit-keyframes bounceOut{20%{transform:scale3d(.9,.9,.9)}50%,55%{opacity:1;transform:scale3d(1.1,1.1,1.1)}to{opacity:0;transform:scale3d(.3,.3,.3)}}@keyframes bounceOut{20%{transform:scale3d(.9,.9,.9)}50%,55%{opacity:1;transform:scale3d(1.1,1.1,1.1)}to{opacity:0;transform:scale3d(.3,.3,.3)}}.animate__bounceOut{-webkit-animation-duration:.75s;animation-duration:.75s;-webkit-animation-duration:calc(var(--animate-duration)*.75);animation-duration:calc(var(--animate-duration)*.75);-webkit-animation-name:bounceOut;animation-name:bounceOut}@-webkit-keyframes bounceOutDown{20%{transform:translate3d(0,10px,0) scaleY(.985)}40%,45%{opacity:1;transform:translate3d(0,-20px,0) scaleY(.9)}to{opacity:0;transform:translate3d(0,2000px,0) scaleY(3)}}@keyframes bounceOutDown{20%{transform:translate3d(0,10px,0) scaleY(.985)}40%,45%{opacity:1;transform:translate3d(0,-20px,0) scaleY(.9)}to{opacity:0;transform:translate3d(0,2000px,0) scaleY(3)}}.animate__bounceOutDown{-webkit-animation-name:bounceOutDown;animation-name:bounceOutDown}@-webkit-keyframes bounceOutLeft{20%{opacity:1;transform:translate3d(20px,0,0) scaleX(.9)}to{opacity:0;transform:translate3d(-2000px,0,0) scaleX(2)}}@keyframes bounceOutLeft{20%{opacity:1;transform:translate3d(20px,0,0) scaleX(.9)}to{opacity:0;transform:translate3d(-2000px,0,0) scaleX(2)}}.animate__bounceOutLeft{-webkit-animation-name:bounceOutLeft;animation-name:bounceOutLeft}@-webkit-keyframes bounceOutRight{20%{opacity:1;transform:translate3d(-20px,0,0) scaleX(.9)}to{opacity:0;transform:translate3d(2000px,0,0) scaleX(2)}}@keyframes bounceOutRight{20%{opacity:1;transform:translate3d(-20px,0,0) scaleX(.9)}to{opacity:0;transform:translate3d(2000px,0,0) scaleX(2)}}.animate__bounceOutRight{-webkit-animation-name:bounceOutRight;animation-name:bounceOutRight}@-webkit-keyframes bounceOutUp{20%{transform:translate3d(0,-10px,0) scaleY(.985)}40%,45%{opacity:1;transform:translate3d(0,20px,0) scaleY(.9)}to{opacity:0;transform:translate3d(0,-2000px,0) scaleY(3)}}@keyframes bounceOutUp{20%{transform:translate3d(0,-10px,0) scaleY(.985)}40%,45%{opacity:1;transform:translate3d(0,20px,0) scaleY(.9)}to{opacity:0;transform:translate3d(0,-2000px,0) scaleY(3)}}.animate__bounceOutUp{-webkit-animation-name:bounceOutUp;animation-name:bounceOutUp}@-webkit-keyframes fadeIn{0%{opacity:0}to{opacity:1}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}.animate__fadeIn{-webkit-animation-name:fadeIn;animation-name:fadeIn}@-webkit-keyframes fadeInDown{0%{opacity:0;transform:translate3d(0,-100%,0)}to{opacity:1;transform:translateZ(0)}}@keyframes fadeInDown{0%{opacity:0;transform:translate3d(0,-100%,0)}to{opacity:1;transform:translateZ(0)}}.animate__fadeInDown{-webkit-animation-name:fadeInDown;animation-name:fadeInDown}@-webkit-keyframes fadeInDownBig{0%{opacity:0;transform:translate3d(0,-2000px,0)}to{opacity:1;transform:translateZ(0)}}@keyframes fadeInDownBig{0%{opacity:0;transform:translate3d(0,-2000px,0)}to{opacity:1;transform:translateZ(0)}}.animate__fadeInDownBig{-webkit-animation-name:fadeInDownBig;animation-name:fadeInDownBig}@-webkit-keyframes fadeInLeft{0%{opacity:0;transform:translate3d(-100%,0,0)}to{opacity:1;transform:translateZ(0)}}@keyframes fadeInLeft{0%{opacity:0;transform:translate3d(-100%,0,0)}to{opacity:1;transform:translateZ(0)}}.animate__fadeInLeft{-webkit-animation-name:fadeInLeft;animation-name:fadeInLeft}@-webkit-keyframes fadeInLeftBig{0%{opacity:0;transform:translate3d(-2000px,0,0)}to{opacity:1;transform:translateZ(0)}}@keyframes fadeInLeftBig{0%{opacity:0;transform:translate3d(-2000px,0,0)}to{opacity:1;transform:translateZ(0)}}.animate__fadeInLeftBig{-webkit-animation-name:fadeInLeftBig;animation-name:fadeInLeftBig}@-webkit-keyframes fadeInRight{0%{opacity:0;transform:translate3d(100%,0,0)}to{opacity:1;transform:translateZ(0)}}@keyframes fadeInRight{0%{opacity:0;transform:translate3d(100%,0,0)}to{opacity:1;transform:translateZ(0)}}.animate__fadeInRight{-webkit-animation-name:fadeInRight;animation-name:fadeInRight}@-webkit-keyframes fadeInRightBig{0%{opacity:0;transform:translate3d(2000px,0,0)}to{opacity:1;transform:translateZ(0)}}@keyframes fadeInRightBig{0%{opacity:0;transform:translate3d(2000px,0,0)}to{opacity:1;transform:translateZ(0)}}.animate__fadeInRightBig{-webkit-animation-name:fadeInRightBig;animation-name:fadeInRightBig}@-webkit-keyframes fadeInUp{0%{opacity:0;transform:translate3d(0,100%,0)}to{opacity:1;transform:translateZ(0)}}@keyframes fadeInUp{0%{opacity:0;transform:translate3d(0,100%,0)}to{opacity:1;transform:translateZ(0)}}.animate__fadeInUp{-webkit-animation-name:fadeInUp;animation-name:fadeInUp}@-webkit-keyframes fadeInUpBig{0%{opacity:0;transform:translate3d(0,2000px,0)}to{opacity:1;transform:translateZ(0)}}@keyframes fadeInUpBig{0%{opacity:0;transform:translate3d(0,2000px,0)}to{opacity:1;transform:translateZ(0)}}.animate__fadeInUpBig{-webkit-animation-name:fadeInUpBig;animation-name:fadeInUpBig}@-webkit-keyframes fadeInTopLeft{0%{opacity:0;transform:translate3d(-100%,-100%,0)}to{opacity:1;transform:translateZ(0)}}@keyframes fadeInTopLeft{0%{opacity:0;transform:translate3d(-100%,-100%,0)}to{opacity:1;transform:translateZ(0)}}.animate__fadeInTopLeft{-webkit-animation-name:fadeInTopLeft;animation-name:fadeInTopLeft}@-webkit-keyframes fadeInTopRight{0%{opacity:0;transform:translate3d(100%,-100%,0)}to{opacity:1;transform:translateZ(0)}}@keyframes fadeInTopRight{0%{opacity:0;transform:translate3d(100%,-100%,0)}to{opacity:1;transform:translateZ(0)}}.animate__fadeInTopRight{-webkit-animation-name:fadeInTopRight;animation-name:fadeInTopRight}@-webkit-keyframes fadeInBottomLeft{0%{opacity:0;transform:translate3d(-100%,100%,0)}to{opacity:1;transform:translateZ(0)}}@keyframes fadeInBottomLeft{0%{opacity:0;transform:translate3d(-100%,100%,0)}to{opacity:1;transform:translateZ(0)}}.animate__fadeInBottomLeft{-webkit-animation-name:fadeInBottomLeft;animation-name:fadeInBottomLeft}@-webkit-keyframes fadeInBottomRight{0%{opacity:0;transform:translate3d(100%,100%,0)}to{opacity:1;transform:translateZ(0)}}@keyframes fadeInBottomRight{0%{opacity:0;transform:translate3d(100%,100%,0)}to{opacity:1;transform:translateZ(0)}}.animate__fadeInBottomRight{-webkit-animation-name:fadeInBottomRight;animation-name:fadeInBottomRight}@-webkit-keyframes fadeOut{0%{opacity:1}to{opacity:0}}@keyframes fadeOut{0%{opacity:1}to{opacity:0}}.animate__fadeOut{-webkit-animation-name:fadeOut;animation-name:fadeOut}@-webkit-keyframes fadeOutDown{0%{opacity:1}to{opacity:0;transform:translate3d(0,100%,0)}}@keyframes fadeOutDown{0%{opacity:1}to{opacity:0;transform:translate3d(0,100%,0)}}.animate__fadeOutDown{-webkit-animation-name:fadeOutDown;animation-name:fadeOutDown}@-webkit-keyframes fadeOutDownBig{0%{opacity:1}to{opacity:0;transform:translate3d(0,2000px,0)}}@keyframes fadeOutDownBig{0%{opacity:1}to{opacity:0;transform:translate3d(0,2000px,0)}}.animate__fadeOutDownBig{-webkit-animation-name:fadeOutDownBig;animation-name:fadeOutDownBig}@-webkit-keyframes fadeOutLeft{0%{opacity:1}to{opacity:0;transform:translate3d(-100%,0,0)}}@keyframes fadeOutLeft{0%{opacity:1}to{opacity:0;transform:translate3d(-100%,0,0)}}.animate__fadeOutLeft{-webkit-animation-name:fadeOutLeft;animation-name:fadeOutLeft}@-webkit-keyframes fadeOutLeftBig{0%{opacity:1}to{opacity:0;transform:translate3d(-2000px,0,0)}}@keyframes fadeOutLeftBig{0%{opacity:1}to{opacity:0;transform:translate3d(-2000px,0,0)}}.animate__fadeOutLeftBig{-webkit-animation-name:fadeOutLeftBig;animation-name:fadeOutLeftBig}@-webkit-keyframes fadeOutRight{0%{opacity:1}to{opacity:0;transform:translate3d(100%,0,0)}}@keyframes fadeOutRight{0%{opacity:1}to{opacity:0;transform:translate3d(100%,0,0)}}.animate__fadeOutRight{-webkit-animation-name:fadeOutRight;animation-name:fadeOutRight}@-webkit-keyframes fadeOutRightBig{0%{opacity:1}to{opacity:0;transform:translate3d(2000px,0,0)}}@keyframes fadeOutRightBig{0%{opacity:1}to{opacity:0;transform:translate3d(2000px,0,0)}}.animate__fadeOutRightBig{-webkit-animation-name:fadeOutRightBig;animation-name:fadeOutRightBig}@-webkit-keyframes fadeOutUp{0%{opacity:1}to{opacity:0;transform:translate3d(0,-100%,0)}}@keyframes fadeOutUp{0%{opacity:1}to{opacity:0;transform:translate3d(0,-100%,0)}}.animate__fadeOutUp{-webkit-animation-name:fadeOutUp;animation-name:fadeOutUp}@-webkit-keyframes fadeOutUpBig{0%{opacity:1}to{opacity:0;transform:translate3d(0,-2000px,0)}}@keyframes fadeOutUpBig{0%{opacity:1}to{opacity:0;transform:translate3d(0,-2000px,0)}}.animate__fadeOutUpBig{-webkit-animation-name:fadeOutUpBig;animation-name:fadeOutUpBig}@-webkit-keyframes fadeOutTopLeft{0%{opacity:1;transform:translateZ(0)}to{opacity:0;transform:translate3d(-100%,-100%,0)}}@keyframes fadeOutTopLeft{0%{opacity:1;transform:translateZ(0)}to{opacity:0;transform:translate3d(-100%,-100%,0)}}.animate__fadeOutTopLeft{-webkit-animation-name:fadeOutTopLeft;animation-name:fadeOutTopLeft}@-webkit-keyframes fadeOutTopRight{0%{opacity:1;transform:translateZ(0)}to{opacity:0;transform:translate3d(100%,-100%,0)}}@keyframes fadeOutTopRight{0%{opacity:1;transform:translateZ(0)}to{opacity:0;transform:translate3d(100%,-100%,0)}}.animate__fadeOutTopRight{-webkit-animation-name:fadeOutTopRight;animation-name:fadeOutTopRight}@-webkit-keyframes fadeOutBottomRight{0%{opacity:1;transform:translateZ(0)}to{opacity:0;transform:translate3d(100%,100%,0)}}@keyframes fadeOutBottomRight{0%{opacity:1;transform:translateZ(0)}to{opacity:0;transform:translate3d(100%,100%,0)}}.animate__fadeOutBottomRight{-webkit-animation-name:fadeOutBottomRight;animation-name:fadeOutBottomRight}@-webkit-keyframes fadeOutBottomLeft{0%{opacity:1;transform:translateZ(0)}to{opacity:0;transform:translate3d(-100%,100%,0)}}@keyframes fadeOutBottomLeft{0%{opacity:1;transform:translateZ(0)}to{opacity:0;transform:translate3d(-100%,100%,0)}}.animate__fadeOutBottomLeft{-webkit-animation-name:fadeOutBottomLeft;animation-name:fadeOutBottomLeft}@-webkit-keyframes flip{0%{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;transform:perspective(400px) scaleX(1) translateZ(0) rotateY(-1turn)}40%{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;transform:perspective(400px) scaleX(1) translateZ(150px) rotateY(-190deg)}50%{-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;transform:perspective(400px) scaleX(1) translateZ(150px) rotateY(-170deg)}80%{-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;transform:perspective(400px) scale3d(.95,.95,.95) translateZ(0) rotateY(0deg)}to{-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;transform:perspective(400px) scaleX(1) translateZ(0) rotateY(0deg)}}@keyframes flip{0%{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;transform:perspective(400px) scaleX(1) translateZ(0) rotateY(-1turn)}40%{-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out;transform:perspective(400px) scaleX(1) translateZ(150px) rotateY(-190deg)}50%{-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;transform:perspective(400px) scaleX(1) translateZ(150px) rotateY(-170deg)}80%{-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;transform:perspective(400px) scale3d(.95,.95,.95) translateZ(0) rotateY(0deg)}to{-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;transform:perspective(400px) scaleX(1) translateZ(0) rotateY(0deg)}}.animate__animated.animate__flip{-webkit-animation-name:flip;animation-name:flip;-webkit-backface-visibility:visible;backface-visibility:visible}@-webkit-keyframes flipInX{0%{-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;opacity:0;transform:perspective(400px) rotateX(90deg)}40%{-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;transform:perspective(400px) rotateX(-20deg)}60%{opacity:1;transform:perspective(400px) rotateX(10deg)}80%{transform:perspective(400px) rotateX(-5deg)}to{transform:perspective(400px)}}@keyframes flipInX{0%{-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;opacity:0;transform:perspective(400px) rotateX(90deg)}40%{-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;transform:perspective(400px) rotateX(-20deg)}60%{opacity:1;transform:perspective(400px) rotateX(10deg)}80%{transform:perspective(400px) rotateX(-5deg)}to{transform:perspective(400px)}}.animate__flipInX{-webkit-animation-name:flipInX;animation-name:flipInX;-webkit-backface-visibility:visible!important;backface-visibility:visible!important}@-webkit-keyframes flipInY{0%{-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;opacity:0;transform:perspective(400px) rotateY(90deg)}40%{-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;transform:perspective(400px) rotateY(-20deg)}60%{opacity:1;transform:perspective(400px) rotateY(10deg)}80%{transform:perspective(400px) rotateY(-5deg)}to{transform:perspective(400px)}}@keyframes flipInY{0%{-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;opacity:0;transform:perspective(400px) rotateY(90deg)}40%{-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in;transform:perspective(400px) rotateY(-20deg)}60%{opacity:1;transform:perspective(400px) rotateY(10deg)}80%{transform:perspective(400px) rotateY(-5deg)}to{transform:perspective(400px)}}.animate__flipInY{-webkit-animation-name:flipInY;animation-name:flipInY;-webkit-backface-visibility:visible!important;backface-visibility:visible!important}@-webkit-keyframes flipOutX{0%{transform:perspective(400px)}30%{opacity:1;transform:perspective(400px) rotateX(-20deg)}to{opacity:0;transform:perspective(400px) rotateX(90deg)}}@keyframes flipOutX{0%{transform:perspective(400px)}30%{opacity:1;transform:perspective(400px) rotateX(-20deg)}to{opacity:0;transform:perspective(400px) rotateX(90deg)}}.animate__flipOutX{-webkit-animation-duration:.75s;animation-duration:.75s;-webkit-animation-duration:calc(var(--animate-duration)*.75);animation-duration:calc(var(--animate-duration)*.75);-webkit-animation-name:flipOutX;animation-name:flipOutX;-webkit-backface-visibility:visible!important;backface-visibility:visible!important}@-webkit-keyframes flipOutY{0%{transform:perspective(400px)}30%{opacity:1;transform:perspective(400px) rotateY(-15deg)}to{opacity:0;transform:perspective(400px) rotateY(90deg)}}@keyframes flipOutY{0%{transform:perspective(400px)}30%{opacity:1;transform:perspective(400px) rotateY(-15deg)}to{opacity:0;transform:perspective(400px) rotateY(90deg)}}.animate__flipOutY{-webkit-animation-duration:.75s;animation-duration:.75s;-webkit-animation-duration:calc(var(--animate-duration)*.75);animation-duration:calc(var(--animate-duration)*.75);-webkit-animation-name:flipOutY;animation-name:flipOutY;-webkit-backface-visibility:visible!important;backface-visibility:visible!important}@-webkit-keyframes lightSpeedInRight{0%{opacity:0;transform:translate3d(100%,0,0) skewX(-30deg)}60%{opacity:1;transform:skewX(20deg)}80%{transform:skewX(-5deg)}to{transform:translateZ(0)}}@keyframes lightSpeedInRight{0%{opacity:0;transform:translate3d(100%,0,0) skewX(-30deg)}60%{opacity:1;transform:skewX(20deg)}80%{transform:skewX(-5deg)}to{transform:translateZ(0)}}.animate__lightSpeedInRight{-webkit-animation-name:lightSpeedInRight;animation-name:lightSpeedInRight;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}@-webkit-keyframes lightSpeedInLeft{0%{opacity:0;transform:translate3d(-100%,0,0) skewX(30deg)}60%{opacity:1;transform:skewX(-20deg)}80%{transform:skewX(5deg)}to{transform:translateZ(0)}}@keyframes lightSpeedInLeft{0%{opacity:0;transform:translate3d(-100%,0,0) skewX(30deg)}60%{opacity:1;transform:skewX(-20deg)}80%{transform:skewX(5deg)}to{transform:translateZ(0)}}.animate__lightSpeedInLeft{-webkit-animation-name:lightSpeedInLeft;animation-name:lightSpeedInLeft;-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}@-webkit-keyframes lightSpeedOutRight{0%{opacity:1}to{opacity:0;transform:translate3d(100%,0,0) skewX(30deg)}}@keyframes lightSpeedOutRight{0%{opacity:1}to{opacity:0;transform:translate3d(100%,0,0) skewX(30deg)}}.animate__lightSpeedOutRight{-webkit-animation-name:lightSpeedOutRight;animation-name:lightSpeedOutRight;-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}@-webkit-keyframes lightSpeedOutLeft{0%{opacity:1}to{opacity:0;transform:translate3d(-100%,0,0) skewX(-30deg)}}@keyframes lightSpeedOutLeft{0%{opacity:1}to{opacity:0;transform:translate3d(-100%,0,0) skewX(-30deg)}}.animate__lightSpeedOutLeft{-webkit-animation-name:lightSpeedOutLeft;animation-name:lightSpeedOutLeft;-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}@-webkit-keyframes rotateIn{0%{opacity:0;transform:rotate(-200deg)}to{opacity:1;transform:translateZ(0)}}@keyframes rotateIn{0%{opacity:0;transform:rotate(-200deg)}to{opacity:1;transform:translateZ(0)}}.animate__rotateIn{-webkit-animation-name:rotateIn;animation-name:rotateIn;transform-origin:center}@-webkit-keyframes rotateInDownLeft{0%{opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:translateZ(0)}}@keyframes rotateInDownLeft{0%{opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:translateZ(0)}}.animate__rotateInDownLeft{-webkit-animation-name:rotateInDownLeft;animation-name:rotateInDownLeft;transform-origin:left bottom}@-webkit-keyframes rotateInDownRight{0%{opacity:0;transform:rotate(45deg)}to{opacity:1;transform:translateZ(0)}}@keyframes rotateInDownRight{0%{opacity:0;transform:rotate(45deg)}to{opacity:1;transform:translateZ(0)}}.animate__rotateInDownRight{-webkit-animation-name:rotateInDownRight;animation-name:rotateInDownRight;transform-origin:right bottom}@-webkit-keyframes rotateInUpLeft{0%{opacity:0;transform:rotate(45deg)}to{opacity:1;transform:translateZ(0)}}@keyframes rotateInUpLeft{0%{opacity:0;transform:rotate(45deg)}to{opacity:1;transform:translateZ(0)}}.animate__rotateInUpLeft{-webkit-animation-name:rotateInUpLeft;animation-name:rotateInUpLeft;transform-origin:left bottom}@-webkit-keyframes rotateInUpRight{0%{opacity:0;transform:rotate(-90deg)}to{opacity:1;transform:translateZ(0)}}@keyframes rotateInUpRight{0%{opacity:0;transform:rotate(-90deg)}to{opacity:1;transform:translateZ(0)}}.animate__rotateInUpRight{-webkit-animation-name:rotateInUpRight;animation-name:rotateInUpRight;transform-origin:right bottom}@-webkit-keyframes rotateOut{0%{opacity:1}to{opacity:0;transform:rotate(200deg)}}@keyframes rotateOut{0%{opacity:1}to{opacity:0;transform:rotate(200deg)}}.animate__rotateOut{-webkit-animation-name:rotateOut;animation-name:rotateOut;transform-origin:center}@-webkit-keyframes rotateOutDownLeft{0%{opacity:1}to{opacity:0;transform:rotate(45deg)}}@keyframes rotateOutDownLeft{0%{opacity:1}to{opacity:0;transform:rotate(45deg)}}.animate__rotateOutDownLeft{-webkit-animation-name:rotateOutDownLeft;animation-name:rotateOutDownLeft;transform-origin:left bottom}@-webkit-keyframes rotateOutDownRight{0%{opacity:1}to{opacity:0;transform:rotate(-45deg)}}@keyframes rotateOutDownRight{0%{opacity:1}to{opacity:0;transform:rotate(-45deg)}}.animate__rotateOutDownRight{-webkit-animation-name:rotateOutDownRight;animation-name:rotateOutDownRight;transform-origin:right bottom}@-webkit-keyframes rotateOutUpLeft{0%{opacity:1}to{opacity:0;transform:rotate(-45deg)}}@keyframes rotateOutUpLeft{0%{opacity:1}to{opacity:0;transform:rotate(-45deg)}}.animate__rotateOutUpLeft{-webkit-animation-name:rotateOutUpLeft;animation-name:rotateOutUpLeft;transform-origin:left bottom}@-webkit-keyframes rotateOutUpRight{0%{opacity:1}to{opacity:0;transform:rotate(90deg)}}@keyframes rotateOutUpRight{0%{opacity:1}to{opacity:0;transform:rotate(90deg)}}.animate__rotateOutUpRight{-webkit-animation-name:rotateOutUpRight;animation-name:rotateOutUpRight;transform-origin:right bottom}@-webkit-keyframes hinge{0%{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}20%,60%{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;transform:rotate(80deg)}40%,80%{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;opacity:1;transform:rotate(60deg)}to{opacity:0;transform:translate3d(0,700px,0)}}@keyframes hinge{0%{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out}20%,60%{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;transform:rotate(80deg)}40%,80%{-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;opacity:1;transform:rotate(60deg)}to{opacity:0;transform:translate3d(0,700px,0)}}.animate__hinge{-webkit-animation-duration:2s;animation-duration:2s;-webkit-animation-duration:calc(var(--animate-duration)*2);animation-duration:calc(var(--animate-duration)*2);-webkit-animation-name:hinge;animation-name:hinge;transform-origin:top left}@-webkit-keyframes jackInTheBox{0%{opacity:0;transform:scale(.1) rotate(30deg);transform-origin:center bottom}50%{transform:rotate(-10deg)}70%{transform:rotate(3deg)}to{opacity:1;transform:scale(1)}}@keyframes jackInTheBox{0%{opacity:0;transform:scale(.1) rotate(30deg);transform-origin:center bottom}50%{transform:rotate(-10deg)}70%{transform:rotate(3deg)}to{opacity:1;transform:scale(1)}}.animate__jackInTheBox{-webkit-animation-name:jackInTheBox;animation-name:jackInTheBox}@-webkit-keyframes rollIn{0%{opacity:0;transform:translate3d(-100%,0,0) rotate(-120deg)}to{opacity:1;transform:translateZ(0)}}@keyframes rollIn{0%{opacity:0;transform:translate3d(-100%,0,0) rotate(-120deg)}to{opacity:1;transform:translateZ(0)}}.animate__rollIn{-webkit-animation-name:rollIn;animation-name:rollIn}@-webkit-keyframes rollOut{0%{opacity:1}to{opacity:0;transform:translate3d(100%,0,0) rotate(120deg)}}@keyframes rollOut{0%{opacity:1}to{opacity:0;transform:translate3d(100%,0,0) rotate(120deg)}}.animate__rollOut{-webkit-animation-name:rollOut;animation-name:rollOut}@-webkit-keyframes zoomIn{0%{opacity:0;transform:scale3d(.3,.3,.3)}50%{opacity:1}}@keyframes zoomIn{0%{opacity:0;transform:scale3d(.3,.3,.3)}50%{opacity:1}}.animate__zoomIn{-webkit-animation-name:zoomIn;animation-name:zoomIn}@-webkit-keyframes zoomInDown{0%{-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19);opacity:0;transform:scale3d(.1,.1,.1) translate3d(0,-1000px,0)}60%{-webkit-animation-timing-function:cubic-bezier(.175,.885,.32,1);animation-timing-function:cubic-bezier(.175,.885,.32,1);opacity:1;transform:scale3d(.475,.475,.475) translate3d(0,60px,0)}}@keyframes zoomInDown{0%{-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19);opacity:0;transform:scale3d(.1,.1,.1) translate3d(0,-1000px,0)}60%{-webkit-animation-timing-function:cubic-bezier(.175,.885,.32,1);animation-timing-function:cubic-bezier(.175,.885,.32,1);opacity:1;transform:scale3d(.475,.475,.475) translate3d(0,60px,0)}}.animate__zoomInDown{-webkit-animation-name:zoomInDown;animation-name:zoomInDown}@-webkit-keyframes zoomInLeft{0%{-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19);opacity:0;transform:scale3d(.1,.1,.1) translate3d(-1000px,0,0)}60%{-webkit-animation-timing-function:cubic-bezier(.175,.885,.32,1);animation-timing-function:cubic-bezier(.175,.885,.32,1);opacity:1;transform:scale3d(.475,.475,.475) translate3d(10px,0,0)}}@keyframes zoomInLeft{0%{-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19);opacity:0;transform:scale3d(.1,.1,.1) translate3d(-1000px,0,0)}60%{-webkit-animation-timing-function:cubic-bezier(.175,.885,.32,1);animation-timing-function:cubic-bezier(.175,.885,.32,1);opacity:1;transform:scale3d(.475,.475,.475) translate3d(10px,0,0)}}.animate__zoomInLeft{-webkit-animation-name:zoomInLeft;animation-name:zoomInLeft}@-webkit-keyframes zoomInRight{0%{-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19);opacity:0;transform:scale3d(.1,.1,.1) translate3d(1000px,0,0)}60%{-webkit-animation-timing-function:cubic-bezier(.175,.885,.32,1);animation-timing-function:cubic-bezier(.175,.885,.32,1);opacity:1;transform:scale3d(.475,.475,.475) translate3d(-10px,0,0)}}@keyframes zoomInRight{0%{-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19);opacity:0;transform:scale3d(.1,.1,.1) translate3d(1000px,0,0)}60%{-webkit-animation-timing-function:cubic-bezier(.175,.885,.32,1);animation-timing-function:cubic-bezier(.175,.885,.32,1);opacity:1;transform:scale3d(.475,.475,.475) translate3d(-10px,0,0)}}.animate__zoomInRight{-webkit-animation-name:zoomInRight;animation-name:zoomInRight}@-webkit-keyframes zoomInUp{0%{-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19);opacity:0;transform:scale3d(.1,.1,.1) translate3d(0,1000px,0)}60%{-webkit-animation-timing-function:cubic-bezier(.175,.885,.32,1);animation-timing-function:cubic-bezier(.175,.885,.32,1);opacity:1;transform:scale3d(.475,.475,.475) translate3d(0,-60px,0)}}@keyframes zoomInUp{0%{-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19);opacity:0;transform:scale3d(.1,.1,.1) translate3d(0,1000px,0)}60%{-webkit-animation-timing-function:cubic-bezier(.175,.885,.32,1);animation-timing-function:cubic-bezier(.175,.885,.32,1);opacity:1;transform:scale3d(.475,.475,.475) translate3d(0,-60px,0)}}.animate__zoomInUp{-webkit-animation-name:zoomInUp;animation-name:zoomInUp}@-webkit-keyframes zoomOut{0%{opacity:1}50%{opacity:0;transform:scale3d(.3,.3,.3)}to{opacity:0}}@keyframes zoomOut{0%{opacity:1}50%{opacity:0;transform:scale3d(.3,.3,.3)}to{opacity:0}}.animate__zoomOut{-webkit-animation-name:zoomOut;animation-name:zoomOut}@-webkit-keyframes zoomOutDown{40%{-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19);opacity:1;transform:scale3d(.475,.475,.475) translate3d(0,-60px,0)}to{-webkit-animation-timing-function:cubic-bezier(.175,.885,.32,1);animation-timing-function:cubic-bezier(.175,.885,.32,1);opacity:0;transform:scale3d(.1,.1,.1) translate3d(0,2000px,0)}}@keyframes zoomOutDown{40%{-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19);opacity:1;transform:scale3d(.475,.475,.475) translate3d(0,-60px,0)}to{-webkit-animation-timing-function:cubic-bezier(.175,.885,.32,1);animation-timing-function:cubic-bezier(.175,.885,.32,1);opacity:0;transform:scale3d(.1,.1,.1) translate3d(0,2000px,0)}}.animate__zoomOutDown{-webkit-animation-name:zoomOutDown;animation-name:zoomOutDown;transform-origin:center bottom}@-webkit-keyframes zoomOutLeft{40%{opacity:1;transform:scale3d(.475,.475,.475) translate3d(42px,0,0)}to{opacity:0;transform:scale(.1) translate3d(-2000px,0,0)}}@keyframes zoomOutLeft{40%{opacity:1;transform:scale3d(.475,.475,.475) translate3d(42px,0,0)}to{opacity:0;transform:scale(.1) translate3d(-2000px,0,0)}}.animate__zoomOutLeft{-webkit-animation-name:zoomOutLeft;animation-name:zoomOutLeft;transform-origin:left center}@-webkit-keyframes zoomOutRight{40%{opacity:1;transform:scale3d(.475,.475,.475) translate3d(-42px,0,0)}to{opacity:0;transform:scale(.1) translate3d(2000px,0,0)}}@keyframes zoomOutRight{40%{opacity:1;transform:scale3d(.475,.475,.475) translate3d(-42px,0,0)}to{opacity:0;transform:scale(.1) translate3d(2000px,0,0)}}.animate__zoomOutRight{-webkit-animation-name:zoomOutRight;animation-name:zoomOutRight;transform-origin:right center}@-webkit-keyframes zoomOutUp{40%{-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19);opacity:1;transform:scale3d(.475,.475,.475) translate3d(0,60px,0)}to{-webkit-animation-timing-function:cubic-bezier(.175,.885,.32,1);animation-timing-function:cubic-bezier(.175,.885,.32,1);opacity:0;transform:scale3d(.1,.1,.1) translate3d(0,-2000px,0)}}@keyframes zoomOutUp{40%{-webkit-animation-timing-function:cubic-bezier(.55,.055,.675,.19);animation-timing-function:cubic-bezier(.55,.055,.675,.19);opacity:1;transform:scale3d(.475,.475,.475) translate3d(0,60px,0)}to{-webkit-animation-timing-function:cubic-bezier(.175,.885,.32,1);animation-timing-function:cubic-bezier(.175,.885,.32,1);opacity:0;transform:scale3d(.1,.1,.1) translate3d(0,-2000px,0)}}.animate__zoomOutUp{-webkit-animation-name:zoomOutUp;animation-name:zoomOutUp;transform-origin:center bottom}@-webkit-keyframes slideInDown{0%{transform:translate3d(0,-100%,0);visibility:visible}to{transform:translateZ(0)}}@keyframes slideInDown{0%{transform:translate3d(0,-100%,0);visibility:visible}to{transform:translateZ(0)}}.animate__slideInDown{-webkit-animation-name:slideInDown;animation-name:slideInDown}@-webkit-keyframes slideInLeft{0%{transform:translate3d(-100%,0,0);visibility:visible}to{transform:translateZ(0)}}@keyframes slideInLeft{0%{transform:translate3d(-100%,0,0);visibility:visible}to{transform:translateZ(0)}}.animate__slideInLeft{-webkit-animation-name:slideInLeft;animation-name:slideInLeft}@-webkit-keyframes slideInRight{0%{transform:translate3d(100%,0,0);visibility:visible}to{transform:translateZ(0)}}@keyframes slideInRight{0%{transform:translate3d(100%,0,0);visibility:visible}to{transform:translateZ(0)}}.animate__slideInRight{-webkit-animation-name:slideInRight;animation-name:slideInRight}@-webkit-keyframes slideInUp{0%{transform:translate3d(0,100%,0);visibility:visible}to{transform:translateZ(0)}}@keyframes slideInUp{0%{transform:translate3d(0,100%,0);visibility:visible}to{transform:translateZ(0)}}.animate__slideInUp{-webkit-animation-name:slideInUp;animation-name:slideInUp}@-webkit-keyframes slideOutDown{0%{transform:translateZ(0)}to{transform:translate3d(0,100%,0);visibility:hidden}}@keyframes slideOutDown{0%{transform:translateZ(0)}to{transform:translate3d(0,100%,0);visibility:hidden}}.animate__slideOutDown{-webkit-animation-name:slideOutDown;animation-name:slideOutDown}@-webkit-keyframes slideOutLeft{0%{transform:translateZ(0)}to{transform:translate3d(-100%,0,0);visibility:hidden}}@keyframes slideOutLeft{0%{transform:translateZ(0)}to{transform:translate3d(-100%,0,0);visibility:hidden}}.animate__slideOutLeft{-webkit-animation-name:slideOutLeft;animation-name:slideOutLeft}@-webkit-keyframes slideOutRight{0%{transform:translateZ(0)}to{transform:translate3d(100%,0,0);visibility:hidden}}@keyframes slideOutRight{0%{transform:translateZ(0)}to{transform:translate3d(100%,0,0);visibility:hidden}}.animate__slideOutRight{-webkit-animation-name:slideOutRight;animation-name:slideOutRight}@-webkit-keyframes slideOutUp{0%{transform:translateZ(0)}to{transform:translate3d(0,-100%,0);visibility:hidden}}@keyframes slideOutUp{0%{transform:translateZ(0)}to{transform:translate3d(0,-100%,0);visibility:hidden}}.animate__slideOutUp{-webkit-animation-name:slideOutUp;animation-name:slideOutUp}\n/*! tailwindcss v3.1.4 | MIT License | https://tailwindcss.com*/*,:after,:before{border:0 solid #e5e7eb;box-sizing:border-box}:after,:before{--tw-content:\"\"}html{-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{line-height:inherit;margin:0}hr{border-top-width:1px;color:inherit;height:0}abbr:where([title]){-webkit-text-decoration:underline dotted;text-decoration:underline dotted}h1,h2,h3,h4,h5,h6{font-size:inherit;font-weight:inherit}a{color:inherit;text-decoration:inherit}b,strong{font-weight:bolder}code,kbd,pre,samp{font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}table{border-collapse:collapse;border-color:inherit;text-indent:0}button,input,optgroup,select,textarea{color:inherit;font-family:inherit;font-size:100%;font-weight:inherit;line-height:inherit;margin:0;padding:0}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button;background-color:transparent;background-image:none}:-moz-focusring{outline:auto}:-moz-ui-invalid{box-shadow:none}progress{vertical-align:baseline}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}blockquote,dd,dl,figure,h1,h2,h3,h4,h5,h6,hr,p,pre{margin:0}fieldset{margin:0}fieldset,legend{padding:0}menu,ol,ul{list-style:none;margin:0;padding:0}textarea{resize:vertical}input::-moz-placeholder,textarea::-moz-placeholder{color:#9ca3af;opacity:1}input::placeholder,textarea::placeholder{color:#9ca3af;opacity:1}[role=button],button{cursor:pointer}:disabled{cursor:default}audio,canvas,embed,iframe,img,object,svg,video{display:block;vertical-align:middle}img,video{height:auto;max-width:100%}*,:after,:before{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::-webkit-backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }::backdrop{--tw-border-spacing-x:0;--tw-border-spacing-y:0;--tw-translate-x:0;--tw-translate-y:0;--tw-rotate:0;--tw-skew-x:0;--tw-skew-y:0;--tw-scale-x:1;--tw-scale-y:1;--tw-pan-x: ;--tw-pan-y: ;--tw-pinch-zoom: ;--tw-scroll-snap-strictness:proximity;--tw-ordinal: ;--tw-slashed-zero: ;--tw-numeric-figure: ;--tw-numeric-spacing: ;--tw-numeric-fraction: ;--tw-ring-inset: ;--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(59,130,246,.5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000;--tw-shadow-colored:0 0 #0000;--tw-blur: ;--tw-brightness: ;--tw-contrast: ;--tw-grayscale: ;--tw-hue-rotate: ;--tw-invert: ;--tw-saturate: ;--tw-sepia: ;--tw-drop-shadow: ;--tw-backdrop-blur: ;--tw-backdrop-brightness: ;--tw-backdrop-contrast: ;--tw-backdrop-grayscale: ;--tw-backdrop-hue-rotate: ;--tw-backdrop-invert: ;--tw-backdrop-opacity: ;--tw-backdrop-saturate: ;--tw-backdrop-sepia: }.fixed{position:fixed}.absolute{position:absolute}.relative{position:relative}.inset-0{bottom:0;left:0;right:0;top:0}.top-\\[-10px\\]{top:-10px}.left-1\\/2{left:50%}.left-10{left:2.5rem}.top-auto{top:auto}.top-1\\/2{top:50%}.top-2{top:.5rem}.left-2{left:.5rem}.right-\\[5\\%\\]{right:5%}.top-12{top:3rem}.left-5{left:1.25rem}.top-0{top:0}.left-0{left:0}.right-0{right:0}.z-10{z-index:10}.z-0{z-index:0}.z-50{z-index:50}.z-\\[100\\]{z-index:100}.z-\\[999\\]{z-index:999}.z-40{z-index:40}.z-\\[699\\]{z-index:699}.z-\\[888\\]{z-index:888}.z-\\[700\\]{z-index:700}.m-2{margin:.5rem}.my-6{margin-bottom:1.5rem;margin-top:1.5rem}.mx-auto{margin-left:auto;margin-right:auto}.my-4{margin-bottom:1rem;margin-top:1rem}.mx-6{margin-left:1.5rem;margin-right:1.5rem}.mx-4{margin-left:1rem;margin-right:1rem}.my-2{margin-bottom:.5rem;margin-top:.5rem}.my-1{margin-bottom:.25rem;margin-top:.25rem}.my-0{margin-bottom:0;margin-top:0}.ml-10{margin-left:2.5rem}.ml-16{margin-left:4rem}.ml-32{margin-left:8rem}.mt-6{margin-top:1.5rem}.ml-4{margin-left:1rem}.mt-4{margin-top:1rem}.mr-2{margin-right:.5rem}.ml-2{margin-left:.5rem}.block{display:block}.inline-block{display:inline-block}.inline{display:inline}.flex{display:flex}.grid{display:grid}.hidden{display:none}.aspect-\\[3\\/4\\]{aspect-ratio:3/4}.h-\\[40px\\]{height:40px}.h-40{height:10rem}.h-full{height:100%}.h-\\[40\\%\\]{height:40%}.h-8{height:2rem}.h-20{height:5rem}.h-16{height:4rem}.h-fit{height:-webkit-fit-content;height:-moz-fit-content;height:fit-content}.h-6{height:1.5rem}.h-\\[80px\\]{height:80px}.h-\\[250px\\]{height:250px}.h-\\[80\\%\\]{height:80%}.h-\\[70\\%\\]{height:70%}.h-\\[32px\\]{height:32px}.h-\\[30px\\]{height:30px}.h-4{height:1rem}.h-\\[35\\%\\]{height:35%}.h-3{height:.75rem}.h-\\[150px\\]{height:150px}.h-\\[50px\\]{height:50px}.h-\\[60px\\]{height:60px}.h-\\[60\\%\\]{height:60%}.h-auto{height:auto}.h-\\[200px\\]{height:200px}.min-h-\\[150px\\]{min-height:150px}.min-h-\\[80px\\]{min-height:80px}.min-h-\\[40px\\]{min-height:40px}.min-h-screen{min-height:100vh}.min-h-\\[50px\\]{min-height:50px}.w-full{width:100%}.w-\\[130px\\]{width:130px}.w-\\[70\\%\\]{width:70%}.w-56{width:14rem}.w-fit{width:-webkit-fit-content;width:-moz-fit-content;width:fit-content}.w-8{width:2rem}.w-\\[80\\%\\]{width:80%}.w-40{width:10rem}.w-20{width:5rem}.w-16{width:4rem}.w-\\[250px\\]{width:250px}.w-6{width:1.5rem}.w-\\[90\\%\\]{width:90%}.w-\\[60px\\]{width:60px}.w-\\[150px\\]{width:150px}.w-\\[50\\%\\]{width:50%}.w-\\[30\\%\\]{width:30%}.w-4{width:1rem}.w-\\[85\\%\\]{width:85%}.w-3{width:.75rem}.w-\\[50px\\]{width:50px}.w-\\[75px\\]{width:75px}.w-\\[25\\%\\]{width:25%}.w-auto{width:auto}.w-\\[20\\%\\]{width:20%}.min-w-\\[230px\\]{min-width:230px}.min-w-\\[333px\\]{min-width:333px}.min-w-\\[60px\\]{min-width:60px}.min-w-max{min-width:-webkit-max-content;min-width:-moz-max-content;min-width:max-content}.max-w-\\[1400px\\]{max-width:1400px}.max-w-\\[100px\\]{max-width:100px}.max-w-\\[200px\\]{max-width:200px}.max-w-\\[80px\\]{max-width:80px}.flex-1{flex:1 1 0%}.translate-y-1{--tw-translate-y:0.25rem}.translate-y-0,.translate-y-1{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.translate-y-0{--tw-translate-y:0px}.-translate-x-1\\/2{--tw-translate-x:-50%}.-translate-x-1\\/2,.-translate-y-1\\/2{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.-translate-y-1\\/2{--tw-translate-y:-50%}.rotate-180{--tw-rotate:180deg}.rotate-180,.scale-100{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.scale-100{--tw-scale-x:1;--tw-scale-y:1}.transform{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.cursor-pointer{cursor:pointer}.select-none{-webkit-user-select:none;-moz-user-select:none;user-select:none}.grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}.flex-col{flex-direction:column}.flex-col-reverse{flex-direction:column-reverse}.flex-wrap{flex-wrap:wrap}.items-center{align-items:center}.justify-end{justify-content:flex-end}.justify-center{justify-content:center}.justify-between{justify-content:space-between}.justify-evenly{justify-content:space-evenly}.gap-4{gap:1rem}.gap-6{gap:1.5rem}.gap-1{gap:.25rem}.gap-2{gap:.5rem}.gap-3{gap:.75rem}.space-y-4>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(1rem*var(--tw-space-y-reverse));margin-top:calc(1rem*(1 - var(--tw-space-y-reverse)))}.space-x-10>:not([hidden])~:not([hidden]){--tw-space-x-reverse:0;margin-left:calc(2.5rem*(1 - var(--tw-space-x-reverse)));margin-right:calc(2.5rem*var(--tw-space-x-reverse))}.space-y-2>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(.5rem*var(--tw-space-y-reverse));margin-top:calc(.5rem*(1 - var(--tw-space-y-reverse)))}.space-x-4>:not([hidden])~:not([hidden]){--tw-space-x-reverse:0;margin-left:calc(1rem*(1 - var(--tw-space-x-reverse)));margin-right:calc(1rem*var(--tw-space-x-reverse))}.space-x-6>:not([hidden])~:not([hidden]){--tw-space-x-reverse:0;margin-left:calc(1.5rem*(1 - var(--tw-space-x-reverse)));margin-right:calc(1.5rem*var(--tw-space-x-reverse))}.overflow-hidden{overflow:hidden}.overflow-x-hidden{overflow-x:hidden}.whitespace-nowrap{white-space:nowrap}.rounded-full{border-radius:9999px}.rounded-2xl{border-radius:1rem}.rounded-xl{border-radius:.75rem}.rounded-lg{border-radius:.5rem}.border,.border-\\[1px\\]{border-width:1px}.border-2{border-width:2px}.border-t-\\[2px\\]{border-top-width:2px}.border-dashed{border-style:dashed}.border-white{--tw-border-opacity:1;border-color:rgb(255 255 255/var(--tw-border-opacity))}.border-white\\/40{border-color:hsla(0,0%,100%,.4)}.bg-transparent{background-color:transparent}.bg-white{--tw-bg-opacity:1;background-color:rgb(255 255 255/var(--tw-bg-opacity))}.bg-rose-300{--tw-bg-opacity:1;background-color:rgb(253 164 175/var(--tw-bg-opacity))}.bg-black\\/30{background-color:rgba(0,0,0,.3)}.bg-\\[\\#5f5f5f\\]{--tw-bg-opacity:1;background-color:rgb(95 95 95/var(--tw-bg-opacity))}.bg-cyan-300\\/0{background-color:rgba(103,232,249,0)}.bg-green-500{--tw-bg-opacity:1;background-color:rgb(34 197 94/var(--tw-bg-opacity))}.bg-black{--tw-bg-opacity:1;background-color:rgb(0 0 0/var(--tw-bg-opacity))}.bg-\\[\\#141313\\]{--tw-bg-opacity:1;background-color:rgb(20 19 19/var(--tw-bg-opacity))}.bg-opacity-40{--tw-bg-opacity:0.4}.bg-cover{background-size:cover}.bg-center{background-position:50%}.bg-top{background-position:top}.bg-no-repeat{background-repeat:no-repeat}.fill-white{fill:#fff}.object-cover{-o-object-fit:cover;object-fit:cover}.object-center{-o-object-position:center;object-position:center}.p-4{padding:1rem}.p-2{padding:.5rem}.px-2{padding-left:.5rem;padding-right:.5rem}.py-1{padding-bottom:.25rem;padding-top:.25rem}.py-2{padding-bottom:.5rem;padding-top:.5rem}.px-4{padding-left:1rem;padding-right:1rem}.py-4{padding-bottom:1rem;padding-top:1rem}.py-3{padding-bottom:.75rem;padding-top:.75rem}.px-5{padding-left:1.25rem;padding-right:1.25rem}.px-24{padding-left:6rem;padding-right:6rem}.pb-6{padding-bottom:1.5rem}.pt-4{padding-top:1rem}.pb-4{padding-bottom:1rem}.pl-4{padding-left:1rem}.pt-32{padding-top:8rem}.pr-2{padding-right:.5rem}.pt-24{padding-top:6rem}.text-left{text-align:left}.text-center{text-align:center}.text-lg{font-size:1.125rem;line-height:1.75rem}.text-2xl{font-size:1.5rem;line-height:2rem}.text-4xl{font-size:2.25rem;line-height:2.5rem}.text-3xl{font-size:1.875rem;line-height:2.25rem}.text-xl{font-size:1.25rem;line-height:1.75rem}.text-base{font-size:1rem;line-height:1.5rem}.text-sm{font-size:.875rem;line-height:1.25rem}.text-\\[6\\.5vw\\]{font-size:6.5vw}.text-\\[3vw\\]{font-size:3vw}.font-bold{font-weight:700}.font-semibold{font-weight:600}.font-extralight{font-weight:200}.capitalize{text-transform:capitalize}.leading-none{line-height:1}.text-white{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.text-white\\/40{color:hsla(0,0%,100%,.4)}.text-rose-600{--tw-text-opacity:1;color:rgb(225 29 72/var(--tw-text-opacity))}.text-gray-800{--tw-text-opacity:1;color:rgb(31 41 55/var(--tw-text-opacity))}.text-gray-300{--tw-text-opacity:1;color:rgb(209 213 219/var(--tw-text-opacity))}.text-white\\/75{color:hsla(0,0%,100%,.75)}.opacity-0{opacity:0}.opacity-100{opacity:1}.shadow-xl{--tw-shadow:0 20px 25px -5px rgba(0,0,0,.1),0 8px 10px -6px rgba(0,0,0,.1);--tw-shadow-colored:0 20px 25px -5px var(--tw-shadow-color),0 8px 10px -6px var(--tw-shadow-color);box-shadow:var(--tw-ring-offset-shadow,0 0 #0000),var(--tw-ring-shadow,0 0 #0000),var(--tw-shadow)}.shadow-white\\/20{--tw-shadow-color:hsla(0,0%,100%,.2);--tw-shadow:var(--tw-shadow-colored)}.outline{outline-style:solid}.outline-0{outline-width:0}.blur{--tw-blur:blur(8px);filter:var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow)}.backdrop-blur-md{--tw-backdrop-blur:blur(12px);-webkit-backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);backdrop-filter:var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia)}.transition{transition-duration:.15s;transition-property:color,background-color,border-color,fill,stroke,opacity,box-shadow,transform,filter,-webkit-text-decoration-color,-webkit-backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter;transition-property:color,background-color,border-color,text-decoration-color,fill,stroke,opacity,box-shadow,transform,filter,backdrop-filter,-webkit-text-decoration-color,-webkit-backdrop-filter;transition-timing-function:cubic-bezier(.4,0,.2,1)}.transition-all{transition-duration:.15s;transition-property:all;transition-timing-function:cubic-bezier(.4,0,.2,1)}.duration-200{transition-duration:.2s}.duration-150{transition-duration:.15s}.ease-out{transition-timing-function:cubic-bezier(0,0,.2,1)}.ease-in{transition-timing-function:cubic-bezier(.4,0,1,1)}body{text-rendering:optimizeSpeed;--tw-bg-opacity:1;font-family:Nunito,sans-serif;font-size:1.6rem;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;transition-duration:.35s}.dark-mode body{background-color:rgb(31 31 31/var(--tw-bg-opacity))}.sepia-mode body{background-color:#f1e7d0;color:#433422}.hover\\:scale-110:hover{--tw-scale-x:1.1;--tw-scale-y:1.1}.hover\\:scale-110:hover,.hover\\:scale-\\[110\\%\\]:hover{transform:translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y))}.hover\\:scale-\\[110\\%\\]:hover{--tw-scale-x:110%;--tw-scale-y:110%}.hover\\:cursor-pointer:hover{cursor:pointer}.hover\\:cursor-grab:hover{cursor:-webkit-grab;cursor:grab}.hover\\:border-white:hover{--tw-border-opacity:1;border-color:rgb(255 255 255/var(--tw-border-opacity))}.hover\\:bg-rose-500:hover{--tw-bg-opacity:1;background-color:rgb(244 63 94/var(--tw-bg-opacity))}.hover\\:bg-white\\/10:hover{background-color:hsla(0,0%,100%,.1)}.hover\\:bg-white\\/25:hover{background-color:hsla(0,0%,100%,.25)}.hover\\:text-white\\/80:hover{color:hsla(0,0%,100%,.8)}.hover\\:text-white:hover{--tw-text-opacity:1;color:rgb(255 255 255/var(--tw-text-opacity))}.hover\\:opacity-60:hover{opacity:.6}@media (min-width:768px){.md\\:right-\\[10\\%\\]{right:10%}.md\\:left-\\[5\\%\\]{left:5%}.md\\:m-0{margin:0}.md\\:my-2{margin-bottom:.5rem;margin-top:.5rem}.md\\:mx-6{margin-left:1.5rem;margin-right:1.5rem}.md\\:mt-8{margin-top:2rem}.md\\:mt-6{margin-top:1.5rem}.md\\:ml-2{margin-left:.5rem}.md\\:block{display:block}.md\\:flex{display:flex}.md\\:h-\\[50px\\]{height:50px}.md\\:h-10{height:2.5rem}.md\\:h-\\[350px\\]{height:350px}.md\\:min-h-\\[30px\\]{min-height:30px}.md\\:min-h-\\[60px\\]{min-height:60px}.md\\:min-h-\\[430px\\]{min-height:430px}.md\\:min-h-\\[28px\\]{min-height:28px}.md\\:w-\\[200px\\]{width:200px}.md\\:w-80{width:20rem}.md\\:w-\\[40\\%\\]{width:40%}.md\\:w-10{width:2.5rem}.md\\:w-\\[55\\%\\]{width:55%}.md\\:w-\\[100px\\]{width:100px}.md\\:w-\\[30\\%\\]{width:30%}.md\\:w-\\[250px\\]{width:250px}.md\\:w-1\\/2{width:50%}.md\\:min-w-\\[250px\\]{min-width:250px}.md\\:max-w-\\[644px\\]{max-width:644px}.md\\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}.md\\:flex-row{flex-direction:row}.md\\:flex-col{flex-direction:column}.md\\:items-start{align-items:flex-start}.md\\:justify-start{justify-content:flex-start}.md\\:justify-between{justify-content:space-between}.md\\:gap-10{gap:2.5rem}.md\\:gap-2{gap:.5rem}.md\\:space-x-8>:not([hidden])~:not([hidden]){--tw-space-x-reverse:0;margin-left:calc(2rem*(1 - var(--tw-space-x-reverse)));margin-right:calc(2rem*var(--tw-space-x-reverse))}.md\\:space-x-4>:not([hidden])~:not([hidden]){--tw-space-x-reverse:0;margin-left:calc(1rem*(1 - var(--tw-space-x-reverse)));margin-right:calc(1rem*var(--tw-space-x-reverse))}.md\\:p-5{padding:1.25rem}.md\\:p-4{padding:1rem}.md\\:px-6{padding-left:1.5rem;padding-right:1.5rem}.md\\:py-4{padding-bottom:1rem;padding-top:1rem}.md\\:px-4{padding-left:1rem;padding-right:1rem}.md\\:text-left{text-align:left}.md\\:text-2xl{font-size:1.5rem;line-height:2rem}.md\\:text-4xl{font-size:2.25rem;line-height:2.5rem}.md\\:text-5xl{font-size:3rem;line-height:1}.md\\:text-3xl{font-size:1.875rem;line-height:2.25rem}.md\\:text-xl{font-size:1.25rem;line-height:1.75rem}.md\\:text-6xl{font-size:3.75rem;line-height:1}.md\\:text-\\[5\\.5vw\\]{font-size:5.5vw}.md\\:text-\\[2vw\\]{font-size:2vw}.md\\:text-lg{font-size:1.125rem;line-height:1.75rem}}@media (min-width:1024px){.lg\\:my-4{margin-bottom:1rem;margin-top:1rem}.lg\\:ml-0{margin-left:0}.lg\\:mt-6{margin-top:1.5rem}.lg\\:ml-4{margin-left:1rem}.lg\\:flex{display:flex}.lg\\:hidden{display:none}.lg\\:h-10{height:2.5rem}.lg\\:h-\\[450px\\]{height:450px}.lg\\:h-\\[45\\%\\]{height:45%}.lg\\:w-1\\/2{width:50%}.lg\\:w-\\[68\\%\\]{width:68%}.lg\\:w-10{width:2.5rem}.lg\\:w-\\[250px\\]{width:250px}.lg\\:w-\\[20\\%\\]{width:20%}.lg\\:w-\\[80\\%\\]{width:80%}.lg\\:w-\\[60\\%\\]{width:60%}.lg\\:max-w-\\[1200px\\]{max-width:1200px}.lg\\:grid-cols-4{grid-template-columns:repeat(4,minmax(0,1fr))}.lg\\:space-y-6>:not([hidden])~:not([hidden]){--tw-space-y-reverse:0;margin-bottom:calc(1.5rem*var(--tw-space-y-reverse));margin-top:calc(1.5rem*(1 - var(--tw-space-y-reverse)))}.lg\\:px-0{padding-left:0;padding-right:0}.lg\\:pl-6{padding-left:1.5rem}.lg\\:pt-6{padding-top:1.5rem}.lg\\:text-\\[160\\%\\]{font-size:160%}.lg\\:text-xl{font-size:1.25rem;line-height:1.75rem}.lg\\:text-3xl{font-size:1.875rem;line-height:2.25rem}.lg\\:text-5xl{font-size:3rem;line-height:1}.lg\\:text-\\[3\\.5vw\\]{font-size:3.5vw}.lg\\:text-\\[1\\.2vw\\]{font-size:1.2vw}.lg\\:text-\\[1\\.1vw\\]{font-size:1.1vw}}";
}


// --------------------
// Request: /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/plugins/server.mjs
// Parents: 
// - /Users/bonn/Documents/GitHub/next-truyen/node_modules/nuxt/dist/app/entry ($id_e3b1bc70)
// Dependencies: 
// - /node_modules/nuxt/dist/app/plugins/preload.server.mjs ($id_9871bba0)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/components.plugin.mjs ($id_2078c34e)
// - /node_modules/nuxt/dist/head/runtime/lib/vueuse-head.plugin.mjs ($id_e6f12003)
// - /node_modules/nuxt/dist/head/runtime/plugin.mjs ($id_a2650341)
// - /node_modules/nuxt/dist/pages/runtime/router.mjs ($id_a090977b)
// - /node_modules/@nuxtjs/color-mode/dist/runtime/plugin.server.mjs ($id_a217e6ae)
// --------------------
const $id_54c812eb = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/plugins/preload.server.mjs");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/components.plugin.mjs");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/nuxt/dist/head/runtime/lib/vueuse-head.plugin.mjs");

const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/nuxt/dist/head/runtime/plugin.mjs");

const __vite_ssr_import_4__ = await __vite_ssr_import__("/node_modules/nuxt/dist/pages/runtime/router.mjs");

const __vite_ssr_import_5__ = await __vite_ssr_import__("/node_modules/@nuxtjs/color-mode/dist/runtime/plugin.server.mjs");

__vite_ssr_exports__.default = [
  __vite_ssr_import_0__.default,
  __vite_ssr_import_1__.default,
  __vite_ssr_import_2__.default,
  __vite_ssr_import_3__.default,
  __vite_ssr_import_4__.default,
  __vite_ssr_import_5__.default
];
}


// --------------------
// Request: /node_modules/nuxt/dist/app/plugins/preload.server.mjs
// Parents: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/plugins/server.mjs ($id_54c812eb)
// Dependencies: 
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// --------------------
const $id_9871bba0 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/index.mjs");

__vite_ssr_exports__.default = __vite_ssr_import_0__.defineNuxtPlugin((nuxtApp) => {
  nuxtApp.vueApp.mixin({
    beforeCreate() {
      const { _registeredComponents } = this.$nuxt.ssrContext;
      const { __moduleIdentifier } = this.$options;
      _registeredComponents.add(__moduleIdentifier);
    }
  });
});
;
}


// --------------------
// Request: /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/components.plugin.mjs
// Parents: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/plugins/server.mjs ($id_54c812eb)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// --------------------
const $id_2078c34e = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");


const components = {}

__vite_ssr_exports__.default = function (nuxtApp) {
  for (const name in components) {
    nuxtApp.vueApp.component(name, components[name])
    nuxtApp.vueApp.component('Lazy' + name, components[name])
  }
}
;
}


// --------------------
// Request: /node_modules/nuxt/dist/head/runtime/lib/vueuse-head.plugin.mjs
// Parents: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/plugins/server.mjs ($id_54c812eb)
// Dependencies: 
// - /node_modules/@vueuse/head/dist/index.mjs ($id_c032264e)
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/defu/dist/defu.mjs ($id_d7afab65)
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// --------------------
const $id_e6f12003 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/@vueuse/head/dist/index.mjs");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/defu/dist/defu.mjs");

const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/index.mjs");

__vite_ssr_exports__.default = __vite_ssr_import_3__.defineNuxtPlugin((nuxtApp) => {
  const head = __vite_ssr_import_0__.createHead();
  nuxtApp.vueApp.use(head);
  let headReady = false;
  nuxtApp.hooks.hookOnce("app:mounted", () => {
    __vite_ssr_import_1__.watchEffect(() => {
      head.updateDOM();
    });
    headReady = true;
  });
  const titleTemplate = __vite_ssr_import_1__.ref();
  nuxtApp._useHead = (_meta) => {
    const meta = __vite_ssr_import_1__.ref(_meta);
    if ("titleTemplate" in meta.value) {
      titleTemplate.value = meta.value.titleTemplate;
    }
    const headObj = __vite_ssr_import_1__.computed(() => {
      const overrides = { meta: [] };
      if (titleTemplate.value && "title" in meta.value) {
        overrides.title = typeof titleTemplate.value === "function" ? titleTemplate.value(meta.value.title) : titleTemplate.value.replace(/%s/g, meta.value.title);
      }
      if (meta.value.charset) {
        overrides.meta.push({ key: "charset", charset: meta.value.charset });
      }
      if (meta.value.viewport) {
        overrides.meta.push({ name: "viewport", content: meta.value.viewport });
      }
      return __vite_ssr_import_2__.default(overrides, meta.value);
    });
    head.addHeadObjs(headObj);
    if (true) {
      return;
    }
    if (headReady) {
      __vite_ssr_import_1__.watchEffect(() => {
        head.updateDOM();
      });
    }
    const vm = __vite_ssr_import_1__.getCurrentInstance();
    if (!vm) {
      return;
    }
    __vite_ssr_import_1__.onBeforeUnmount(() => {
      head.removeHeadObjs(headObj);
      head.updateDOM();
    });
  };
  if (true) {
    nuxtApp.ssrContext.renderMeta = () => __vite_ssr_import_0__.renderHeadToString(head);
  }
});
;
}


// --------------------
// Request: /node_modules/@vueuse/head/dist/index.mjs
// Parents: 
// - /node_modules/nuxt/dist/head/runtime/lib/vueuse-head.plugin.mjs ($id_e6f12003)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// --------------------
const $id_c032264e = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));

// src/index.ts
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");


// src/constants.ts
var PROVIDE_KEY = `usehead`;
var HEAD_COUNT_KEY = `head:count`;
var HEAD_ATTRS_KEY = `data-head-attrs`;
var SELF_CLOSING_TAGS = ["meta", "link", "base"];

// src/create-element.ts
var createElement = (tag, attrs, document) => {
  const el = document.createElement(tag);
  for (const key of Object.keys(attrs)) {
    let value = attrs[key];
    if (key === "key" || value === false) {
      continue;
    }
    if (key === "children") {
      el.textContent = value;
    } else {
      el.setAttribute(key, value);
    }
  }
  return el;
};

// src/stringify-attrs.ts
var htmlEscape = (str) => str.replace(/&/g, "&amp;").replace(/"/g, "&quot;").replace(/'/g, "&#39;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
var stringifyAttrs = (attributes) => {
  const handledAttributes = [];
  for (let [key, value] of Object.entries(attributes)) {
    if (key === "children" || key === "key") {
      continue;
    }
    if (value === false || value == null) {
      continue;
    }
    let attribute = htmlEscape(key);
    if (value !== true) {
      attribute += `="${htmlEscape(String(value))}"`;
    }
    handledAttributes.push(attribute);
  }
  return handledAttributes.length > 0 ? " " + handledAttributes.join(" ") : "";
};

// src/utils.ts
function isEqualNode(oldTag, newTag) {
  if (oldTag instanceof HTMLElement && newTag instanceof HTMLElement) {
    const nonce = newTag.getAttribute("nonce");
    if (nonce && !oldTag.getAttribute("nonce")) {
      const cloneTag = newTag.cloneNode(true);
      cloneTag.setAttribute("nonce", "");
      cloneTag.nonce = nonce;
      return nonce === oldTag.nonce && oldTag.isEqualNode(cloneTag);
    }
  }
  return oldTag.isEqualNode(newTag);
}

// src/index.ts
var getTagKey = (props) => {
  const names = ["key", "id", "name", "property"];
  for (const n of names) {
    const value = typeof props.getAttribute === "function" ? props.hasAttribute(n) ? props.getAttribute(n) : void 0 : props[n];
    if (value !== void 0) {
      return { name: n, value };
    }
  }
};
var injectHead = () => {
  const head = __vite_ssr_import_0__.inject(PROVIDE_KEY);
  if (!head) {
    throw new Error(`You may forget to apply app.use(head)`);
  }
  return head;
};
var acceptFields = [
  "title",
  "meta",
  "link",
  "base",
  "style",
  "script",
  "htmlAttrs",
  "bodyAttrs"
];
var headObjToTags = (obj) => {
  const tags = [];
  for (const key of Object.keys(obj)) {
    if (obj[key] == null)
      continue;
    if (key === "title") {
      tags.push({ tag: key, props: { children: obj[key] } });
    } else if (key === "base") {
      tags.push({ tag: key, props: __spreadValues({ key: "default" }, obj[key]) });
    } else if (acceptFields.includes(key)) {
      const value = obj[key];
      if (Array.isArray(value)) {
        value.forEach((item) => {
          tags.push({ tag: key, props: item });
        });
      } else if (value) {
        tags.push({ tag: key, props: value });
      }
    }
  }
  return tags;
};
var setAttrs = (el, attrs) => {
  const existingAttrs = el.getAttribute(HEAD_ATTRS_KEY);
  if (existingAttrs) {
    for (const key of existingAttrs.split(",")) {
      if (!(key in attrs)) {
        el.removeAttribute(key);
      }
    }
  }
  const keys = [];
  for (const key in attrs) {
    const value = attrs[key];
    if (value == null)
      continue;
    if (value === false) {
      el.removeAttribute(key);
    } else {
      el.setAttribute(key, value);
    }
    keys.push(key);
  }
  if (keys.length) {
    el.setAttribute(HEAD_ATTRS_KEY, keys.join(","));
  } else {
    el.removeAttribute(HEAD_ATTRS_KEY);
  }
};
var updateElements = (document = window.document, type, tags) => {
  var _a;
  const head = document.head;
  let headCountEl = head.querySelector(`meta[name="${HEAD_COUNT_KEY}"]`);
  const headCount = headCountEl ? Number(headCountEl.getAttribute("content")) : 0;
  const oldElements = [];
  if (headCountEl) {
    for (let i = 0, j = headCountEl.previousElementSibling; i < headCount; i++, j = (j == null ? void 0 : j.previousElementSibling) || null) {
      if (((_a = j == null ? void 0 : j.tagName) == null ? void 0 : _a.toLowerCase()) === type) {
        oldElements.push(j);
      }
    }
  } else {
    headCountEl = document.createElement("meta");
    headCountEl.setAttribute("name", HEAD_COUNT_KEY);
    headCountEl.setAttribute("content", "0");
    head.append(headCountEl);
  }
  let newElements = tags.map((tag) => createElement(tag.tag, tag.props, document));
  newElements = newElements.filter((newEl) => {
    for (let i = 0; i < oldElements.length; i++) {
      const oldEl = oldElements[i];
      if (isEqualNode(oldEl, newEl)) {
        oldElements.splice(i, 1);
        return false;
      }
    }
    return true;
  });
  oldElements.forEach((t) => {
    var _a2;
    return (_a2 = t.parentNode) == null ? void 0 : _a2.removeChild(t);
  });
  newElements.forEach((t) => {
    head.insertBefore(t, headCountEl);
  });
  headCountEl.setAttribute("content", "" + (headCount - oldElements.length + newElements.length));
};
var createHead = () => {
  let allHeadObjs = [];
  let previousTags = /* @__PURE__ */ new Set();
  const head = {
    install(app) {
      app.config.globalProperties.$head = head;
      app.provide(PROVIDE_KEY, head);
    },
    get headTags() {
      const deduped = [];
      allHeadObjs.forEach((objs) => {
        const tags = headObjToTags(objs.value);
        tags.forEach((tag) => {
          if (tag.tag === "meta" || tag.tag === "base" || tag.tag === "script") {
            const key = getTagKey(tag.props);
            if (key) {
              let index = -1;
              for (let i = 0; i < deduped.length; i++) {
                const prev = deduped[i];
                const prevValue = prev.props[key.name];
                const nextValue = tag.props[key.name];
                if (prev.tag === tag.tag && prevValue === nextValue) {
                  index = i;
                  break;
                }
              }
              if (index !== -1) {
                deduped.splice(index, 1);
              }
            }
          }
          deduped.push(tag);
        });
      });
      return deduped;
    },
    addHeadObjs(objs) {
      allHeadObjs.push(objs);
    },
    removeHeadObjs(objs) {
      allHeadObjs = allHeadObjs.filter((_objs) => _objs !== objs);
    },
    updateDOM(document = window.document) {
      let title;
      let htmlAttrs = {};
      let bodyAttrs = {};
      const actualTags = {};
      for (const tag of head.headTags) {
        if (tag.tag === "title") {
          title = tag.props.children;
          continue;
        }
        if (tag.tag === "htmlAttrs") {
          Object.assign(htmlAttrs, tag.props);
          continue;
        }
        if (tag.tag === "bodyAttrs") {
          Object.assign(bodyAttrs, tag.props);
          continue;
        }
        actualTags[tag.tag] = actualTags[tag.tag] || [];
        actualTags[tag.tag].push(tag);
      }
      if (title !== void 0) {
        document.title = title;
      }
      setAttrs(document.documentElement, htmlAttrs);
      setAttrs(document.body, bodyAttrs);
      const tags = /* @__PURE__ */ new Set([...Object.keys(actualTags), ...previousTags]);
      for (const tag of tags) {
        updateElements(document, tag, actualTags[tag] || []);
      }
      previousTags.clear();
      Object.keys(actualTags).forEach((i) => previousTags.add(i));
    }
  };
  return head;
};
var IS_BROWSER = "undefined" !== "undefined";
var useHead = (obj) => {
  const headObj = __vite_ssr_import_0__.ref(obj);
  const head = injectHead();
  head.addHeadObjs(headObj);
  if (IS_BROWSER) {
    __vite_ssr_import_0__.watchEffect(() => {
      head.updateDOM();
    });
    __vite_ssr_import_0__.onBeforeUnmount(() => {
      head.removeHeadObjs(headObj);
      head.updateDOM();
    });
  }
};
var tagToString = (tag) => {
  let attrs = stringifyAttrs(tag.props);
  if (SELF_CLOSING_TAGS.includes(tag.tag)) {
    return `<${tag.tag}${attrs}>`;
  }
  return `<${tag.tag}${attrs}>${tag.props.children || ""}</${tag.tag}>`;
};
var renderHeadToString = (head) => {
  const tags = [];
  let titleTag = "";
  let htmlAttrs = {};
  let bodyAttrs = {};
  for (const tag of head.headTags) {
    if (tag.tag === "title") {
      titleTag = tagToString(tag);
    } else if (tag.tag === "htmlAttrs") {
      Object.assign(htmlAttrs, tag.props);
    } else if (tag.tag === "bodyAttrs") {
      Object.assign(bodyAttrs, tag.props);
    } else {
      tags.push(tagToString(tag));
    }
  }
  tags.push(`<meta name="${HEAD_COUNT_KEY}" content="${tags.length}">`);
  return {
    get headTags() {
      return titleTag + tags.join("");
    },
    get htmlAttrs() {
      return stringifyAttrs(__spreadProps(__spreadValues({}, htmlAttrs), {
        [HEAD_ATTRS_KEY]: Object.keys(htmlAttrs).join(",")
      }));
    },
    get bodyAttrs() {
      return stringifyAttrs(__spreadProps(__spreadValues({}, bodyAttrs), {
        [HEAD_ATTRS_KEY]: Object.keys(bodyAttrs).join(",")
      }));
    }
  };
};
var vnodesToHeadObj = (nodes) => {
  const obj = {
    title: void 0,
    htmlAttrs: void 0,
    bodyAttrs: void 0,
    base: void 0,
    meta: [],
    link: [],
    style: [],
    script: []
  };
  for (const node of nodes) {
    const type = node.type === "html" ? "htmlAttrs" : node.type === "body" ? "bodyAttrs" : node.type;
    if (typeof type !== "string" || !(type in obj))
      continue;
    const props = __spreadProps(__spreadValues({}, node.props), {
      children: Array.isArray(node.children) ? node.children[0].children : node.children
    });
    if (Array.isArray(obj[type])) {
      ;
      obj[type].push(props);
    } else if (type === "title") {
      obj.title = props.children;
    } else {
      ;
      obj[type] = props;
    }
  }
  return obj;
};
var Head = /* @__PURE__ */ __vite_ssr_import_0__.defineComponent({
  name: "Head",
  setup(_, { slots }) {
    const head = injectHead();
    let obj;
    __vite_ssr_import_0__.onBeforeUnmount(() => {
      if (obj) {
        head.removeHeadObjs(obj);
        head.updateDOM();
      }
    });
    return () => {
      __vite_ssr_import_0__.watchEffect(() => {
        if (!slots.default)
          return;
        if (obj) {
          head.removeHeadObjs(obj);
        }
        obj = __vite_ssr_import_0__.ref(vnodesToHeadObj(slots.default()));
        head.addHeadObjs(obj);
        if (IS_BROWSER) {
          head.updateDOM();
        }
      });
      return null;
    };
  }
});

Object.defineProperty(__vite_ssr_exports__, "Head", { enumerable: true, configurable: true, get(){ return Head }});
Object.defineProperty(__vite_ssr_exports__, "createHead", { enumerable: true, configurable: true, get(){ return createHead }});
Object.defineProperty(__vite_ssr_exports__, "injectHead", { enumerable: true, configurable: true, get(){ return injectHead }});
Object.defineProperty(__vite_ssr_exports__, "renderHeadToString", { enumerable: true, configurable: true, get(){ return renderHeadToString }});
Object.defineProperty(__vite_ssr_exports__, "useHead", { enumerable: true, configurable: true, get(){ return useHead }});
;
}


// --------------------
// Request: /node_modules/defu/dist/defu.mjs
// Parents: 
// - /node_modules/nuxt/dist/head/runtime/lib/vueuse-head.plugin.mjs ($id_e6f12003)
// Dependencies: 

// --------------------
const $id_d7afab65 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/defu/dist/defu.mjs")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/defu/dist/defu.mjs\".")
  })


// --------------------
// Request: /node_modules/nuxt/dist/head/runtime/plugin.mjs
// Parents: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/plugins/server.mjs ($id_54c812eb)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/nuxt/dist/head/runtime/components.mjs ($id_b2a29d6f)
// - /node_modules/nuxt/dist/head/runtime/composables.mjs ($id_04ea9504)
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/meta.config.mjs ($id_b6985a47)
// --------------------
const $id_a2650341 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/nuxt/dist/head/runtime/components.mjs");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/nuxt/dist/head/runtime/composables.mjs");

const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/index.mjs");

const __vite_ssr_import_4__ = await __vite_ssr_import__("/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/meta.config.mjs");

const metaMixin = {
  created() {
    const instance = __vite_ssr_import_0__.getCurrentInstance();
    if (!instance) {
      return;
    }
    const options = instance.type;
    if (!options || !("head" in options)) {
      return;
    }
    const nuxtApp = __vite_ssr_import_3__.useNuxtApp();
    const source = typeof options.head === "function" ? __vite_ssr_import_0__.computed(() => options.head(nuxtApp)) : options.head;
    __vite_ssr_import_2__.useHead(source);
  }
};
__vite_ssr_exports__.default = __vite_ssr_import_3__.defineNuxtPlugin((nuxtApp) => {
  __vite_ssr_import_2__.useHead(__vite_ssr_import_0__.markRaw({ title: "", ...__vite_ssr_import_4__.default.globalMeta }));
  nuxtApp.vueApp.mixin(metaMixin);
  for (const name in __vite_ssr_import_1__) {
    nuxtApp.vueApp.component(name, __vite_ssr_import_1__[name]);
  }
});
;
}


// --------------------
// Request: /node_modules/nuxt/dist/head/runtime/components.mjs
// Parents: 
// - /node_modules/nuxt/dist/head/runtime/plugin.mjs ($id_a2650341)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/nuxt/dist/head/runtime/composables.mjs ($id_04ea9504)
// --------------------
const $id_b2a29d6f = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/nuxt/dist/head/runtime/composables.mjs");

const removeUndefinedProps = (props) => Object.fromEntries(Object.entries(props).filter(([, value]) => value !== void 0));
const setupForUseMeta = (metaFactory, renderChild) => (props, ctx) => {
  __vite_ssr_import_1__.useHead(() => metaFactory({ ...removeUndefinedProps(props), ...ctx.attrs }, ctx));
  return () => renderChild ? ctx.slots.default?.() : null;
};
const globalProps = {
  accesskey: String,
  autocapitalize: String,
  autofocus: {
    type: Boolean,
    default: void 0
  },
  class: String,
  contenteditable: {
    type: Boolean,
    default: void 0
  },
  contextmenu: String,
  dir: String,
  draggable: {
    type: Boolean,
    default: void 0
  },
  enterkeyhint: String,
  exportparts: String,
  hidden: {
    type: Boolean,
    default: void 0
  },
  id: String,
  inputmode: String,
  is: String,
  itemid: String,
  itemprop: String,
  itemref: String,
  itemscope: String,
  itemtype: String,
  lang: String,
  nonce: String,
  part: String,
  slot: String,
  spellcheck: {
    type: Boolean,
    default: void 0
  },
  style: String,
  tabindex: String,
  title: String,
  translate: String
};
const Script = __vite_ssr_import_0__.defineComponent({
  name: "Script",
  inheritAttrs: false,
  props: {
    ...globalProps,
    async: Boolean,
    crossorigin: {
      type: [Boolean, String],
      default: void 0
    },
    defer: Boolean,
    integrity: String,
    nomodule: Boolean,
    nonce: String,
    referrerpolicy: String,
    src: String,
    type: String,
    charset: String,
    language: String
  },
  setup: setupForUseMeta((script) => ({
    script: [script]
  }))
});
Object.defineProperty(__vite_ssr_exports__, "Script", { enumerable: true, configurable: true, get(){ return Script }});
const Link = __vite_ssr_import_0__.defineComponent({
  name: "Link",
  inheritAttrs: false,
  props: {
    ...globalProps,
    as: String,
    crossorigin: String,
    disabled: Boolean,
    href: String,
    hreflang: String,
    imagesizes: String,
    imagesrcset: String,
    integrity: String,
    media: String,
    prefetch: {
      type: Boolean,
      default: void 0
    },
    referrerpolicy: String,
    rel: String,
    sizes: String,
    title: String,
    type: String,
    methods: String,
    target: String
  },
  setup: setupForUseMeta((link) => ({
    link: [link]
  }))
});
Object.defineProperty(__vite_ssr_exports__, "Link", { enumerable: true, configurable: true, get(){ return Link }});
const Base = __vite_ssr_import_0__.defineComponent({
  name: "Base",
  inheritAttrs: false,
  props: {
    ...globalProps,
    href: String,
    target: String
  },
  setup: setupForUseMeta((base) => ({
    base
  }))
});
Object.defineProperty(__vite_ssr_exports__, "Base", { enumerable: true, configurable: true, get(){ return Base }});
const Title = __vite_ssr_import_0__.defineComponent({
  name: "Title",
  inheritAttrs: false,
  setup: setupForUseMeta((_, { slots }) => {
    const title = slots.default?.()?.[0]?.children || null;
    if (true && title && typeof title !== "string") {
      console.error("<Title> can only take a string in its default slot.");
    }
    return {
      title
    };
  })
});
Object.defineProperty(__vite_ssr_exports__, "Title", { enumerable: true, configurable: true, get(){ return Title }});
const Meta = __vite_ssr_import_0__.defineComponent({
  name: "Meta",
  inheritAttrs: false,
  props: {
    ...globalProps,
    charset: String,
    content: String,
    httpEquiv: String,
    name: String
  },
  setup: setupForUseMeta((meta) => ({
    meta: [meta]
  }))
});
Object.defineProperty(__vite_ssr_exports__, "Meta", { enumerable: true, configurable: true, get(){ return Meta }});
const Style = __vite_ssr_import_0__.defineComponent({
  name: "Style",
  inheritAttrs: false,
  props: {
    ...globalProps,
    type: String,
    media: String,
    nonce: String,
    title: String,
    scoped: {
      type: Boolean,
      default: void 0
    }
  },
  setup: setupForUseMeta((props, { slots }) => {
    const style = { ...props };
    const textContent = slots.default?.()?.[0]?.children;
    if (textContent) {
      if (true && typeof textContent !== "string") {
        console.error("<Style> can only take a string in its default slot.");
      }
      style.children = textContent;
    }
    return {
      style: [style]
    };
  })
});
Object.defineProperty(__vite_ssr_exports__, "Style", { enumerable: true, configurable: true, get(){ return Style }});
const Head = __vite_ssr_import_0__.defineComponent({
  name: "Head",
  inheritAttrs: false,
  setup: (_props, ctx) => () => ctx.slots.default?.()
});
Object.defineProperty(__vite_ssr_exports__, "Head", { enumerable: true, configurable: true, get(){ return Head }});
const Html = __vite_ssr_import_0__.defineComponent({
  name: "Html",
  inheritAttrs: false,
  props: {
    ...globalProps,
    manifest: String,
    version: String,
    xmlns: String
  },
  setup: setupForUseMeta((htmlAttrs) => ({ htmlAttrs }), true)
});
Object.defineProperty(__vite_ssr_exports__, "Html", { enumerable: true, configurable: true, get(){ return Html }});
const Body = __vite_ssr_import_0__.defineComponent({
  name: "Body",
  inheritAttrs: false,
  props: globalProps,
  setup: setupForUseMeta((bodyAttrs) => ({ bodyAttrs }), true)
});
Object.defineProperty(__vite_ssr_exports__, "Body", { enumerable: true, configurable: true, get(){ return Body }});
;
}


// --------------------
// Request: /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/meta.config.mjs
// Parents: 
// - /node_modules/nuxt/dist/head/runtime/plugin.mjs ($id_a2650341)
// Dependencies: 

// --------------------
const $id_b6985a47 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
__vite_ssr_exports__.default = {"globalMeta":{"charset":"utf-8","viewport":"width=device-width, initial-scale=1","meta":[],"link":[],"style":[],"script":[],"title":"Truyện tranh online free"}};
}


// --------------------
// Request: /node_modules/nuxt/dist/pages/runtime/router.mjs
// Parents: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/plugins/server.mjs ($id_54c812eb)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/vue-router/dist/vue-router.cjs.js ($id_f9a4a698)
// - /node_modules/h3/dist/index.mjs ($id_57d7ded6)
// - /node_modules/ufo/dist/index.mjs ($id_614de060)
// - /node_modules/nuxt/dist/pages/runtime/page.mjs ($id_5fc14cdc)
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/routes.mjs ($id_d2568f6b)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/router.options.mjs ($id_6fc2687f)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/middleware.mjs ($id_215201b3)
// --------------------
const $id_a090977b = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/vue-router/dist/vue-router.cjs.js");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/h3/dist/index.mjs");

const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/ufo/dist/index.mjs");

const __vite_ssr_import_4__ = await __vite_ssr_import__("/node_modules/nuxt/dist/pages/runtime/page.mjs");

const __vite_ssr_import_5__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/index.mjs");

const __vite_ssr_import_6__ = await __vite_ssr_import__("/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/routes.mjs");

const __vite_ssr_import_7__ = await __vite_ssr_import__("/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/router.options.mjs");

const __vite_ssr_import_8__ = await __vite_ssr_import__("/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/middleware.mjs");

function createCurrentLocation(base, location) {
  const { pathname, search, hash } = location;
  const hashPos = base.indexOf("#");
  if (hashPos > -1) {
    const slicePos = hash.includes(base.slice(hashPos)) ? base.slice(hashPos).length : 1;
    let pathFromHash = hash.slice(slicePos);
    if (pathFromHash[0] !== "/") {
      pathFromHash = "/" + pathFromHash;
    }
    return __vite_ssr_import_3__.withoutBase(pathFromHash, "");
  }
  const path = __vite_ssr_import_3__.withoutBase(pathname, base);
  return path + search + hash;
}
__vite_ssr_exports__.default = __vite_ssr_import_5__.defineNuxtPlugin(async (nuxtApp) => {
  nuxtApp.vueApp.component("NuxtPage", __vite_ssr_import_4__.default);
  nuxtApp.vueApp.component("NuxtNestedPage", __vite_ssr_import_4__.default);
  nuxtApp.vueApp.component("NuxtChild", __vite_ssr_import_4__.default);
  const baseURL = __vite_ssr_import_5__.useRuntimeConfig().app.baseURL;
  const routerHistory = false ? __vite_ssr_import_1__.createWebHistory(baseURL) : __vite_ssr_import_1__.createMemoryHistory(baseURL);
  const initialURL = true ? nuxtApp.ssrContext.url : createCurrentLocation(baseURL, window.location);
  const router = __vite_ssr_import_1__.createRouter({
    ...__vite_ssr_import_7__.default,
    history: routerHistory,
    routes: __vite_ssr_import_6__.default
  });
  nuxtApp.vueApp.use(router);
  const previousRoute = __vite_ssr_import_0__.shallowRef(router.currentRoute.value);
  router.afterEach((_to, from) => {
    previousRoute.value = from;
  });
  Object.defineProperty(nuxtApp.vueApp.config.globalProperties, "previousRoute", {
    get: () => previousRoute.value
  });
  const route = {};
  for (const key in router.currentRoute.value) {
    route[key] = __vite_ssr_import_0__.computed(() => router.currentRoute.value[key]);
  }
  const _activeRoute = __vite_ssr_import_0__.shallowRef(router.resolve(initialURL));
  const syncCurrentRoute = () => {
    _activeRoute.value = router.currentRoute.value;
  };
  nuxtApp.hook("page:finish", syncCurrentRoute);
  router.afterEach((to, from) => {
    if (to.matched[0]?.components?.default === from.matched[0]?.components?.default) {
      syncCurrentRoute();
    }
  });
  const activeRoute = {};
  for (const key in _activeRoute.value) {
    activeRoute[key] = __vite_ssr_import_0__.computed(() => _activeRoute.value[key]);
  }
  nuxtApp._route = __vite_ssr_import_0__.reactive(route);
  nuxtApp._activeRoute = __vite_ssr_import_0__.reactive(activeRoute);
  nuxtApp._middleware = nuxtApp._middleware || {
    global: [],
    named: {}
  };
  const error = __vite_ssr_import_5__.useError();
  try {
    if (true) {
      await router.push(initialURL);
    }
    await router.isReady();
  } catch (error2) {
    __vite_ssr_import_5__.callWithNuxt(nuxtApp, __vite_ssr_import_5__.throwError, [error2]);
  }
  router.beforeEach(async (to, from) => {
    to.meta = __vite_ssr_import_0__.reactive(to.meta);
    nuxtApp._processingMiddleware = true;
    const middlewareEntries = new Set([...__vite_ssr_import_8__.globalMiddleware, ...nuxtApp._middleware.global]);
    for (const component of to.matched) {
      const componentMiddleware = component.meta.middleware;
      if (!componentMiddleware) {
        continue;
      }
      if (Array.isArray(componentMiddleware)) {
        for (const entry of componentMiddleware) {
          middlewareEntries.add(entry);
        }
      } else {
        middlewareEntries.add(componentMiddleware);
      }
    }
    for (const entry of middlewareEntries) {
      const middleware = typeof entry === "string" ? nuxtApp._middleware.named[entry] || await __vite_ssr_import_8__.namedMiddleware[entry]?.().then((r) => r.default || r) : entry;
      if (!middleware) {
        if (true) {
          throw new Error(`Unknown route middleware: '${entry}'. Valid middleware: ${Object.keys(__vite_ssr_import_8__.namedMiddleware).map((mw) => `'${mw}'`).join(", ")}.`);
        }
        throw new Error(`Unknown route middleware: '${entry}'.`);
      }
      const result = await __vite_ssr_import_5__.callWithNuxt(nuxtApp, middleware, [to, from]);
      if (true) {
        if (result === false || result instanceof Error) {
          const error2 = result || __vite_ssr_import_2__.createError({
            statusMessage: `Route navigation aborted: ${initialURL}`
          });
          return __vite_ssr_import_5__.callWithNuxt(nuxtApp, __vite_ssr_import_5__.throwError, [error2]);
        }
      }
      if (result || result === false) {
        return result;
      }
    }
  });
  router.afterEach(async (to) => {
    delete nuxtApp._processingMiddleware;
    if (false && !nuxtApp.isHydrating && error.value) {
      await __vite_ssr_import_5__.callWithNuxt(nuxtApp, __vite_ssr_import_5__.clearError);
    }
    if (to.matched.length === 0) {
      __vite_ssr_import_5__.callWithNuxt(nuxtApp, __vite_ssr_import_5__.throwError, [__vite_ssr_import_2__.createError({
        statusCode: 404,
        statusMessage: `Page not found: ${to.fullPath}`
      })]);
    } else if (true && to.matched[0].name === "404" && nuxtApp.ssrContext) {
      nuxtApp.ssrContext.res.statusCode = 404;
    } else if (true) {
      const currentURL = to.fullPath || "/";
      if (!__vite_ssr_import_3__.isEqual(currentURL, initialURL)) {
        await __vite_ssr_import_5__.callWithNuxt(nuxtApp, __vite_ssr_import_5__.navigateTo, [currentURL]);
      }
    }
  });
  nuxtApp.hooks.hookOnce("app:created", async () => {
    try {
      await router.replace({
        ...router.resolve(initialURL),
        name: void 0,
        force: true
      });
    } catch (error2) {
      __vite_ssr_import_5__.callWithNuxt(nuxtApp, __vite_ssr_import_5__.throwError, [error2]);
    }
  });
  return { provide: { router } };
});
;
}


// --------------------
// Request: /node_modules/nuxt/dist/pages/runtime/page.mjs
// Parents: 
// - /node_modules/nuxt/dist/pages/runtime/router.mjs ($id_a090977b)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/vue-router/dist/vue-router.cjs.js ($id_f9a4a698)
// - /node_modules/nuxt/dist/pages/runtime/utils.mjs ($id_80f433aa)
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// - /node_modules/nuxt/dist/app/components/utils.mjs ($id_69c52686)
// --------------------
const $id_5fc14cdc = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/vue-router/dist/vue-router.cjs.js");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/nuxt/dist/pages/runtime/utils.mjs");

const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/index.mjs");

const __vite_ssr_import_4__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/components/utils.mjs");

const isNestedKey = Symbol("isNested");
__vite_ssr_exports__.default = __vite_ssr_import_0__.defineComponent({
  name: "NuxtPage",
  inheritAttrs: false,
  props: {
    name: {
      type: String
    },
    route: {
      type: Object
    },
    pageKey: {
      type: [Function, String],
      default: null
    }
  },
  setup(props, { attrs }) {
    const nuxtApp = __vite_ssr_import_3__.useNuxtApp();
    const isNested = __vite_ssr_import_0__.inject(isNestedKey, false);
    __vite_ssr_import_0__.provide(isNestedKey, true);
    return () => {
      return __vite_ssr_import_0__.h(__vite_ssr_import_1__.RouterView, { name: props.name, route: props.route, ...attrs }, {
        default: (routeProps) => routeProps.Component && __vite_ssr_import_4__._wrapIf(__vite_ssr_import_0__.Transition, routeProps.route.meta.pageTransition ?? defaultPageTransition, __vite_ssr_import_2__.wrapInKeepAlive(routeProps.route.meta.keepalive, isNested && nuxtApp.isHydrating ? __vite_ssr_import_0__.h(routeProps.Component, { key: __vite_ssr_import_2__.generateRouteKey(props.pageKey, routeProps) }) : __vite_ssr_import_0__.h(__vite_ssr_import_0__.Suspense, {
          onPending: () => nuxtApp.callHook("page:start", routeProps.Component),
          onResolve: () => nuxtApp.callHook("page:finish", routeProps.Component)
        }, { default: () => __vite_ssr_import_0__.h(routeProps.Component, { key: __vite_ssr_import_2__.generateRouteKey(props.pageKey, routeProps) }) }))).default()
      });
    };
  }
});
const defaultPageTransition = { name: "page", mode: "out-in" };
;
}


// --------------------
// Request: /node_modules/nuxt/dist/pages/runtime/utils.mjs
// Parents: 
// - /node_modules/nuxt/dist/pages/runtime/page.mjs ($id_5fc14cdc)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// --------------------
const $id_80f433aa = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const interpolatePath = (route, match) => {
  return match.path.replace(/(:\w+)\([^)]+\)/g, "$1").replace(/(:\w+)[?+*]/g, "$1").replace(/:\w+/g, (r) => route.params[r.slice(1)]?.toString() || "");
};
const generateRouteKey = (override, routeProps) => {
  const matchedRoute = routeProps.route.matched.find((m) => m.components.default === routeProps.Component.type);
  const source = override ?? matchedRoute?.meta.key ?? interpolatePath(routeProps.route, matchedRoute);
  return typeof source === "function" ? source(routeProps.route) : source;
};
Object.defineProperty(__vite_ssr_exports__, "generateRouteKey", { enumerable: true, configurable: true, get(){ return generateRouteKey }});
const wrapInKeepAlive = (props, children) => {
  return { default: () => false && props ? __vite_ssr_import_0__.h(__vite_ssr_import_0__.KeepAlive, props === true ? {} : props, children) : children };
};
Object.defineProperty(__vite_ssr_exports__, "wrapInKeepAlive", { enumerable: true, configurable: true, get(){ return wrapInKeepAlive }});
;
}


// --------------------
// Request: /node_modules/nuxt/dist/app/components/utils.mjs
// Parents: 
// - /node_modules/nuxt/dist/pages/runtime/page.mjs ($id_5fc14cdc)
// - /node_modules/nuxt/dist/app/components/layout.mjs ($id_39003883)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// --------------------
const $id_69c52686 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const Fragment = {
  setup(_props, { slots }) {
    return () => slots.default?.();
  }
};
const _wrapIf = (component, props, slots) => {
  return { default: () => props ? __vite_ssr_import_0__.h(component, props === true ? {} : props, slots) : __vite_ssr_import_0__.h(Fragment, {}, slots) };
};
Object.defineProperty(__vite_ssr_exports__, "_wrapIf", { enumerable: true, configurable: true, get(){ return _wrapIf }});
;
}


// --------------------
// Request: /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/routes.mjs
// Parents: 
// - /node_modules/nuxt/dist/pages/runtime/router.mjs ($id_a090977b)
// Dependencies: 
// - /pages/index.vue?macro=true ($id_5dd70240)
// - /pages/manga/index.vue?macro=true ($id_811fac0c)
// - /pages/manga/read/[slug]/[chapter]/[id].vue?macro=true ($id_6e06068f)
// - /pages/index.vue ($id_cca58e97)
// - /pages/manga/index.vue ($id_f3f97c4e)
// - /pages/manga/read/[slug]/[chapter]/[id].vue ($id_b9cb4a69)
// --------------------
const $id_d2568f6b = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/pages/index.vue?macro=true");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/pages/manga/index.vue?macro=true");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/pages/manga/read/[slug]/[chapter]/[id].vue?macro=true");

__vite_ssr_exports__.default = [
  {
    name: "index",
    path: "/",
    file: "/Users/bonn/Documents/GitHub/next-truyen/pages/index.vue",
    children: [],
    meta: __vite_ssr_import_0__.meta,
    alias: __vite_ssr_import_0__.meta?.alias || [],
    component: () => __vite_ssr_dynamic_import__('/pages/index.vue')
  },
  {
    name: "manga",
    path: "/manga",
    file: "/Users/bonn/Documents/GitHub/next-truyen/pages/manga/index.vue",
    children: [],
    meta: __vite_ssr_import_1__.meta,
    alias: __vite_ssr_import_1__.meta?.alias || [],
    component: () => __vite_ssr_dynamic_import__('/pages/manga/index.vue')
  },
  {
    name: "manga-read-slug-chapter-id",
    path: "/manga/read/:slug/:chapter/:id",
    file: "/Users/bonn/Documents/GitHub/next-truyen/pages/manga/read/[slug]/[chapter]/[id].vue",
    children: [],
    meta: __vite_ssr_import_2__.meta,
    alias: __vite_ssr_import_2__.meta?.alias || [],
    component: () => __vite_ssr_dynamic_import__('/pages/manga/read/[slug]/[chapter]/[id].vue')
  }
];
}


// --------------------
// Request: /pages/index.vue?macro=true
// Parents: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/routes.mjs ($id_d2568f6b)
// Dependencies: 
// - /node_modules/nuxt/dist/app/components/layout.mjs ($id_39003883)
// - /components/TheHome.vue ($id_370723ed)
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/vue/server-renderer/index.js ($id_b215fa1c)
// - /@id/plugin-vue:export-helper ($id_bbb863c1)
// --------------------
const $id_5dd70240 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/components/layout.mjs");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/components/TheHome.vue");

const _sfc_main = {}
const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/vue/server-renderer/index.js");


function _sfc_ssrRender(_ctx, _push, _parent, _attrs) {
  const _component_NuxtLayout = __vite_ssr_import_0__.default
  const _component_TheHome = __vite_ssr_import_1__.default

  _push(__vite_ssr_import_3__.ssrRenderComponent(_component_NuxtLayout, _attrs, {
    default: __vite_ssr_import_2__.withCtx((_, _push, _parent, _scopeId) => {
      if (_push) {
        _push(__vite_ssr_import_3__.ssrRenderComponent(_component_TheHome, null, null, _parent, _scopeId))
      } else {
        return [
          __vite_ssr_import_2__.createVNode(_component_TheHome)
        ]
      }
    }),
    _: 1 /* STABLE */
  }, _parent))
}


const __vite_ssr_import_4__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_setup = _sfc_main.setup
_sfc_main.setup = (props, ctx) => {
  const ssrContext = __vite_ssr_import_4__.useSSRContext()
  ;(ssrContext.modules || (ssrContext.modules = new Set())).add("pages/index.vue")
  return _sfc_setup ? _sfc_setup(props, ctx) : undefined
}
const __vite_ssr_import_5__ = await __vite_ssr_import__("/@id/plugin-vue:export-helper");

__vite_ssr_exports__.default = /*#__PURE__*/__vite_ssr_import_5__.default(_sfc_main, [['ssrRender',_sfc_ssrRender],['__file',"/Users/bonn/Documents/GitHub/next-truyen/pages/index.vue"]])
const meta = undefined
Object.defineProperty(__vite_ssr_exports__, "meta", { enumerable: true, configurable: true, get(){ return meta }});;
}


// --------------------
// Request: /node_modules/nuxt/dist/app/components/layout.mjs
// Parents: 
// - /pages/index.vue?macro=true ($id_5dd70240)
// - /pages/manga/index.vue?macro=true ($id_811fac0c)
// - /pages/index.vue ($id_cca58e97)
// - /pages/manga/index.vue ($id_f3f97c4e)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/nuxt/dist/app/components/utils.mjs ($id_69c52686)
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/layouts.mjs ($id_5e3529c5)
// --------------------
const $id_39003883 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/components/utils.mjs");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/index.mjs");

const __vite_ssr_import_3__ = await __vite_ssr_import__("/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/layouts.mjs");

const defaultLayoutTransition = { name: "layout", mode: "out-in" };
__vite_ssr_exports__.default = __vite_ssr_import_0__.defineComponent({
  props: {
    name: {
      type: [String, Boolean, Object],
      default: null
    }
  },
  setup(props, context) {
    const route = __vite_ssr_import_2__.useRoute();
    return () => {
      const layout = (__vite_ssr_import_0__.isRef(props.name) ? props.name.value : props.name) ?? route.meta.layout ?? "default";
      const hasLayout = layout && layout in __vite_ssr_import_3__.default;
      if (true && layout && !hasLayout && layout !== "default") {
        console.warn(`Invalid layout \`${layout}\` selected.`);
      }
      return __vite_ssr_import_1__._wrapIf(__vite_ssr_import_0__.Transition, hasLayout && (route.meta.layoutTransition ?? defaultLayoutTransition), __vite_ssr_import_1__._wrapIf(__vite_ssr_import_3__.default[layout], hasLayout, context.slots)).default();
    };
  }
});
;
}


// --------------------
// Request: /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/layouts.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/components/layout.mjs ($id_39003883)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /layouts/default.vue ($id_7689e89d)
// --------------------
const $id_5e3529c5 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

__vite_ssr_exports__.default = {
  default: __vite_ssr_import_0__.defineAsyncComponent(() => __vite_ssr_dynamic_import__('/layouts/default.vue'))
};
}


// --------------------
// Request: /layouts/default.vue
// Parents: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/layouts.mjs ($id_5e3529c5)
// Dependencies: 
// - /components/TheHeader.vue ($id_d18d7003)
// - /components/TheFooter.vue ($id_cdfd5170)
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/vue/server-renderer/index.js ($id_b215fa1c)
// - /@id/plugin-vue:export-helper ($id_bbb863c1)
// --------------------
const $id_7689e89d = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/components/TheHeader.vue");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/components/TheFooter.vue");

const _sfc_main = {}
const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/vue/server-renderer/index.js");


function _sfc_ssrRender(_ctx, _push, _parent, _attrs) {
  const _component_TheHeader = __vite_ssr_import_0__.default
  const _component_TheFooter = __vite_ssr_import_1__.default

  _push(`<!--[-->`)
  _push(__vite_ssr_import_3__.ssrRenderComponent(_component_TheHeader, null, null, _parent))
  _push(`<main class="overflow-x-hidden">`)
  __vite_ssr_import_3__.ssrRenderSlot(_ctx.$slots, "default", {}, null, _push, _parent)
  _push(`</main>`)
  _push(__vite_ssr_import_3__.ssrRenderComponent(_component_TheFooter, null, null, _parent))
  _push(`<!--]-->`)
}


const __vite_ssr_import_4__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_setup = _sfc_main.setup
_sfc_main.setup = (props, ctx) => {
  const ssrContext = __vite_ssr_import_4__.useSSRContext()
  ;(ssrContext.modules || (ssrContext.modules = new Set())).add("layouts/default.vue")
  return _sfc_setup ? _sfc_setup(props, ctx) : undefined
}
const __vite_ssr_import_5__ = await __vite_ssr_import__("/@id/plugin-vue:export-helper");

__vite_ssr_exports__.default = /*#__PURE__*/__vite_ssr_import_5__.default(_sfc_main, [['ssrRender',_sfc_ssrRender],['__file',"/Users/bonn/Documents/GitHub/next-truyen/layouts/default.vue"]]);
}


// --------------------
// Request: /components/TheHeader.vue
// Parents: 
// - /layouts/default.vue ($id_7689e89d)
// Dependencies: 
// - /components/TheSidebar.vue ($id_a452c5e5)
// - /components/TheNav.vue ($id_0ec40bd1)
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/@headlessui/vue/dist/headlessui.esm.js ($id_2c13895f)
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs ($id_fe38f457)
// - /node_modules/vue/server-renderer/index.js ($id_b215fa1c)
// - /components/TheHeader.vue?vue&type=style&index=0&scoped=true&lang.scss ($id_aa6519fd)
// - /@id/plugin-vue:export-helper ($id_bbb863c1)
// --------------------
const $id_d18d7003 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/components/TheSidebar.vue");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/components/TheNav.vue");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/@headlessui/vue/dist/headlessui.esm.js");

const __vite_ssr_import_4__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/index.mjs");

const __vite_ssr_import_5__ = await __vite_ssr_import__("/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs");

const _sfc_main = /* @__PURE__ */ __vite_ssr_import_2__.defineComponent({
  __name: "TheHeader",
  setup(__props, { expose }) {
    expose();
    const route = __vite_ssr_import_4__.useRoute();
    const hasIndexPage = __vite_ssr_import_5__.computed(() => {
      return route.name.startsWith("index");
    });
    const __returned__ = { route, hasIndexPage, Popover: __vite_ssr_import_3__.Popover, PopoverButton: __vite_ssr_import_3__.PopoverButton, PopoverPanel: __vite_ssr_import_3__.PopoverPanel };
    Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
    return __returned__;
  }
});
const __vite_ssr_import_6__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_7__ = await __vite_ssr_import__("/node_modules/vue/server-renderer/index.js");

function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_TheSidebar = __vite_ssr_import_0__.default;
  const _component_TheNav = __vite_ssr_import_1__.default;
  _push(__vite_ssr_import_7__.ssrRenderComponent($setup["Popover"], __vite_ssr_import_6__.mergeProps({ class: "relative" }, _attrs), {
    default: __vite_ssr_import_6__.withCtx(({ close }, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(``);
        _push2(__vite_ssr_import_7__.ssrRenderComponent($setup["PopoverPanel"], null, {
          default: __vite_ssr_import_6__.withCtx((_, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(__vite_ssr_import_7__.ssrRenderComponent(_component_TheSidebar, { close }, null, _parent3, _scopeId2));
            } else {
              return [
                __vite_ssr_import_6__.createVNode(_component_TheSidebar, { close }, null, 8, ["close"])
              ];
            }
          }),
          _: 2
        }, _parent2, _scopeId));
        _push2(`<header class="${__vite_ssr_import_7__.ssrRenderClass($setup.hasIndexPage ? "h-40 bg-background" : "w-full max-w-[1400px] h-40 absolute top-[-10px] z-50 left-1/2 -translate-x-1/2 bg-transparent")}" data-v-72292c93${_scopeId}><div class="header-content mx-auto flex h-full w-full items-center md:max-w-[644px] lg:max-w-[1200px]" data-v-72292c93${_scopeId}>`);
        _push2(__vite_ssr_import_7__.ssrRenderComponent($setup["PopoverButton"], { class: "outline-0 button mx-6 rounded-full p-4 md:m-0 lg:hidden" }, {
          default: __vite_ssr_import_6__.withCtx((_, _push3, _parent3, _scopeId2) => {
            if (_push3) {
              _push3(`<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 20 20" class="text-4xl text-white" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg" data-v-72292c93${_scopeId2}><path fill-rule="evenodd" d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h6a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd" data-v-72292c93${_scopeId2}></path></svg>`);
            } else {
              return [
                (__vite_ssr_import_6__.openBlock(), __vite_ssr_import_6__.createBlock("svg", {
                  stroke: "currentColor",
                  fill: "currentColor",
                  "stroke-width": "0",
                  viewBox: "0 0 20 20",
                  class: "text-4xl text-white",
                  height: "1em",
                  width: "1em",
                  xmlns: "http://www.w3.org/2000/svg"
                }, [
                  __vite_ssr_import_6__.createVNode("path", {
                    "fill-rule": "evenodd",
                    d: "M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h6a1 1 0 110 2H4a1 1 0 01-1-1z",
                    "clip-rule": "evenodd"
                  })
                ]))
              ];
            }
          }),
          _: 2
        }, _parent2, _scopeId));
        _push2(`<div class="relative flex h-full w-56 items-center md:w-80 md:px-6 lg:px-0 lg:pl-6" data-v-72292c93${_scopeId}><figure class="absolute z-10 text-4xl font-semibold text-white md:text-5xl" data-v-72292c93${_scopeId}><a href="/" data-v-72292c93${_scopeId}> Next Truyen </a></figure><div class="absolute left-10 top-auto z-0" data-v-72292c93${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" style="${__vite_ssr_import_7__.ssrRenderStyle({ "enable-background": "new 0 0 512 512" })}" xml:space="preserve" width="50" height="50" data-v-72292c93${_scopeId}><path style="${__vite_ssr_import_7__.ssrRenderStyle({ "fill": "#88888f" })}" d="M133.818 116.364h34.909v116.364h-34.909z" data-v-72292c93${_scopeId}></path><path style="${__vite_ssr_import_7__.ssrRenderStyle({ "fill": "#797781" })}" d="M343.273 116.364h34.909v116.364h-34.909z" data-v-72292c93${_scopeId}></path><path style="${__vite_ssr_import_7__.ssrRenderStyle({ "fill": "#e02753" })}" d="M512 23.273C473.659 36.83 377.594 69.818 256 69.818S38.341 36.83 0 23.273l15.914 93.091C54.255 129.921 134.407 139.636 256 139.636s201.745-9.715 240.086-23.273L512 23.273z" data-v-72292c93${_scopeId}></path><path style="${__vite_ssr_import_7__.ssrRenderStyle({ "fill": "#c5142c" })}" d="M256 69.818v69.818c121.594 0 201.745-9.715 240.086-23.273L512 23.273C473.659 36.83 377.594 69.818 256 69.818z" data-v-72292c93${_scopeId}></path><path style="${__vite_ssr_import_7__.ssrRenderStyle({ "fill": "#e07188" })}" d="M116.364 267.636h69.818v221.091h-69.818z" data-v-72292c93${_scopeId}></path><path style="${__vite_ssr_import_7__.ssrRenderStyle({ "fill": "#e02753" })}" d="M325.818 267.636h69.818v221.091h-69.818z" data-v-72292c93${_scopeId}></path><path style="${__vite_ssr_import_7__.ssrRenderStyle({ "fill": "#e02753" })}" d="m494.547 219.093-11.639-32.911C454.173 196.343 391.48 208.456 256 208.456S57.827 196.343 29.092 186.182l-11.639 32.911c10.358 3.662 22.529 6.91 36.451 9.748v50.432h404.191v-50.432c13.922-2.838 26.094-6.085 36.452-9.748z" data-v-72292c93${_scopeId}></path><path style="${__vite_ssr_import_7__.ssrRenderStyle({ "fill": "#c5142c" })}" d="M482.908 186.182C454.173 196.343 391.48 208.456 256 208.456v70.817h202.096v-50.432c13.922-2.838 26.093-6.086 36.451-9.748l-11.639-32.911z" data-v-72292c93${_scopeId}></path><path style="${__vite_ssr_import_7__.ssrRenderStyle({ "fill": "#88888f" })}" d="M221.091 128h69.818v93.089h-69.818z" data-v-72292c93${_scopeId}></path><path style="${__vite_ssr_import_7__.ssrRenderStyle({ "fill": "#797781" })}" d="M256 128h34.909v93.089H256z" data-v-72292c93${_scopeId}></path></svg></div></div>`);
        _push2(__vite_ssr_import_7__.ssrRenderComponent(_component_TheNav, null, null, _parent2, _scopeId));
        _push2(`<div class="ml-10 flex h-full flex-1 items-center justify-end md:justify-between lg:ml-0" data-v-72292c93${_scopeId}><form class="undefined ml-16 flex h-[40%] w-fit items-center justify-between rounded-2xl bg-white shadow-xl shadow-white/20 lg:w-[68%]" data-v-72292c93${_scopeId}><button class="mx-4 hidden rounded-xl bg-rose-300 px-2 py-1 text-rose-600 transition-all hover:bg-rose-500 hover:text-white/80 md:block" data-v-72292c93${_scopeId}><a href="/browse" data-v-72292c93${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="h-8 w-8" data-v-72292c93${_scopeId}><path d="M5 4a1 1 0 00-2 0v7.268a2 2 0 000 3.464V16a1 1 0 102 0v-1.268a2 2 0 000-3.464V4zM11 4a1 1 0 10-2 0v1.268a2 2 0 000 3.464V16a1 1 0 102 0V8.732a2 2 0 000-3.464V4zM16 3a1 1 0 011 1v7.268a2 2 0 010 3.464V16a1 1 0 11-2 0v-1.268a2 2 0 010-3.464V4a1 1 0 011-1z" data-v-72292c93${_scopeId}></path></svg></a></button><input readonly="" class="hidden w-[80%] bg-transparent md:block" placeholder="T\xECm manga..." data-v-72292c93${_scopeId}><div class="h-full w-fit rounded-2xl p-4 hover:cursor-pointer hover:opacity-60 lg:text-background" data-v-72292c93${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="h-8 w-8" data-v-72292c93${_scopeId}><path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd" data-v-72292c93${_scopeId}></path></svg></div></form><div class="absolute-center h-full w-40" data-v-72292c93${_scopeId}><div class="relative" data-v-72292c93${_scopeId}><button class="absolute-center h-20 w-20 overflow-hidden rounded-full bg-secondary bg-cover bg-no-repeat text-white hover:bg-white/10" data-v-72292c93${_scopeId}><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 24 24" class="h-16 w-16" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg" data-v-72292c93${_scopeId}><path d="M12 2a5 5 0 1 0 5 5 5 5 0 0 0-5-5zm0 8a3 3 0 1 1 3-3 3 3 0 0 1-3 3zm9 11v-1a7 7 0 0 0-7-7h-4a7 7 0 0 0-7 7v1h2v-1a5 5 0 0 1 5-5h4a5 5 0 0 1 5 5v1z" data-v-72292c93${_scopeId}></path></svg></button></div></div></div></div></header>`);
      } else {
        return [
          __vite_ssr_import_6__.createVNode(__vite_ssr_import_6__.Transition, {
            "enter-active-class": "transition duration-200 ease-out",
            "enter-from-class": "translate-y-1 opacity-0",
            "enter-to-class": "translate-y-0 opacity-100",
            "leave-active-class": "transition duration-150 ease-in",
            "leave-from-class": "translate-y-0 opacity-100",
            "leave-to-class": "translate-y-1 opacity-0"
          }, {
            default: __vite_ssr_import_6__.withCtx(() => [
              __vite_ssr_import_6__.createVNode($setup["PopoverPanel"], null, {
                default: __vite_ssr_import_6__.withCtx(() => [
                  __vite_ssr_import_6__.createVNode(_component_TheSidebar, { close }, null, 8, ["close"])
                ]),
                _: 2
              }, 1024)
            ]),
            _: 2
          }, 1024),
          __vite_ssr_import_6__.createVNode("header", {
            class: $setup.hasIndexPage ? "h-40 bg-background" : "w-full max-w-[1400px] h-40 absolute top-[-10px] z-50 left-1/2 -translate-x-1/2 bg-transparent"
          }, [
            __vite_ssr_import_6__.createVNode("div", { class: "header-content mx-auto flex h-full w-full items-center md:max-w-[644px] lg:max-w-[1200px]" }, [
              __vite_ssr_import_6__.createVNode($setup["PopoverButton"], { class: "outline-0 button mx-6 rounded-full p-4 md:m-0 lg:hidden" }, {
                default: __vite_ssr_import_6__.withCtx(() => [
                  (__vite_ssr_import_6__.openBlock(), __vite_ssr_import_6__.createBlock("svg", {
                    stroke: "currentColor",
                    fill: "currentColor",
                    "stroke-width": "0",
                    viewBox: "0 0 20 20",
                    class: "text-4xl text-white",
                    height: "1em",
                    width: "1em",
                    xmlns: "http://www.w3.org/2000/svg"
                  }, [
                    __vite_ssr_import_6__.createVNode("path", {
                      "fill-rule": "evenodd",
                      d: "M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h6a1 1 0 110 2H4a1 1 0 01-1-1z",
                      "clip-rule": "evenodd"
                    })
                  ]))
                ]),
                _: 1
              }),
              __vite_ssr_import_6__.createVNode("div", { class: "relative flex h-full w-56 items-center md:w-80 md:px-6 lg:px-0 lg:pl-6" }, [
                __vite_ssr_import_6__.createVNode("figure", { class: "absolute z-10 text-4xl font-semibold text-white md:text-5xl" }, [
                  __vite_ssr_import_6__.createVNode("a", { href: "/" }, " Next Truyen ")
                ]),
                __vite_ssr_import_6__.createVNode("div", { class: "absolute left-10 top-auto z-0" }, [
                  (__vite_ssr_import_6__.openBlock(), __vite_ssr_import_6__.createBlock("svg", {
                    xmlns: "http://www.w3.org/2000/svg",
                    viewBox: "0 0 512 512",
                    style: { "enable-background": "new 0 0 512 512" },
                    "xml:space": "preserve",
                    width: "50",
                    height: "50"
                  }, [
                    __vite_ssr_import_6__.createVNode("path", {
                      style: { "fill": "#88888f" },
                      d: "M133.818 116.364h34.909v116.364h-34.909z"
                    }),
                    __vite_ssr_import_6__.createVNode("path", {
                      style: { "fill": "#797781" },
                      d: "M343.273 116.364h34.909v116.364h-34.909z"
                    }),
                    __vite_ssr_import_6__.createVNode("path", {
                      style: { "fill": "#e02753" },
                      d: "M512 23.273C473.659 36.83 377.594 69.818 256 69.818S38.341 36.83 0 23.273l15.914 93.091C54.255 129.921 134.407 139.636 256 139.636s201.745-9.715 240.086-23.273L512 23.273z"
                    }),
                    __vite_ssr_import_6__.createVNode("path", {
                      style: { "fill": "#c5142c" },
                      d: "M256 69.818v69.818c121.594 0 201.745-9.715 240.086-23.273L512 23.273C473.659 36.83 377.594 69.818 256 69.818z"
                    }),
                    __vite_ssr_import_6__.createVNode("path", {
                      style: { "fill": "#e07188" },
                      d: "M116.364 267.636h69.818v221.091h-69.818z"
                    }),
                    __vite_ssr_import_6__.createVNode("path", {
                      style: { "fill": "#e02753" },
                      d: "M325.818 267.636h69.818v221.091h-69.818z"
                    }),
                    __vite_ssr_import_6__.createVNode("path", {
                      style: { "fill": "#e02753" },
                      d: "m494.547 219.093-11.639-32.911C454.173 196.343 391.48 208.456 256 208.456S57.827 196.343 29.092 186.182l-11.639 32.911c10.358 3.662 22.529 6.91 36.451 9.748v50.432h404.191v-50.432c13.922-2.838 26.094-6.085 36.452-9.748z"
                    }),
                    __vite_ssr_import_6__.createVNode("path", {
                      style: { "fill": "#c5142c" },
                      d: "M482.908 186.182C454.173 196.343 391.48 208.456 256 208.456v70.817h202.096v-50.432c13.922-2.838 26.093-6.086 36.451-9.748l-11.639-32.911z"
                    }),
                    __vite_ssr_import_6__.createVNode("path", {
                      style: { "fill": "#88888f" },
                      d: "M221.091 128h69.818v93.089h-69.818z"
                    }),
                    __vite_ssr_import_6__.createVNode("path", {
                      style: { "fill": "#797781" },
                      d: "M256 128h34.909v93.089H256z"
                    })
                  ]))
                ])
              ]),
              __vite_ssr_import_6__.createVNode(_component_TheNav),
              __vite_ssr_import_6__.createVNode("div", { class: "ml-10 flex h-full flex-1 items-center justify-end md:justify-between lg:ml-0" }, [
                __vite_ssr_import_6__.createVNode("form", { class: "undefined ml-16 flex h-[40%] w-fit items-center justify-between rounded-2xl bg-white shadow-xl shadow-white/20 lg:w-[68%]" }, [
                  __vite_ssr_import_6__.createVNode("button", { class: "mx-4 hidden rounded-xl bg-rose-300 px-2 py-1 text-rose-600 transition-all hover:bg-rose-500 hover:text-white/80 md:block" }, [
                    __vite_ssr_import_6__.createVNode("a", { href: "/browse" }, [
                      (__vite_ssr_import_6__.openBlock(), __vite_ssr_import_6__.createBlock("svg", {
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        class: "h-8 w-8"
                      }, [
                        __vite_ssr_import_6__.createVNode("path", { d: "M5 4a1 1 0 00-2 0v7.268a2 2 0 000 3.464V16a1 1 0 102 0v-1.268a2 2 0 000-3.464V4zM11 4a1 1 0 10-2 0v1.268a2 2 0 000 3.464V16a1 1 0 102 0V8.732a2 2 0 000-3.464V4zM16 3a1 1 0 011 1v7.268a2 2 0 010 3.464V16a1 1 0 11-2 0v-1.268a2 2 0 010-3.464V4a1 1 0 011-1z" })
                      ]))
                    ])
                  ]),
                  __vite_ssr_import_6__.createVNode("input", {
                    readonly: "",
                    class: "hidden w-[80%] bg-transparent md:block",
                    placeholder: "T\xECm manga..."
                  }),
                  __vite_ssr_import_6__.createVNode("div", { class: "h-full w-fit rounded-2xl p-4 hover:cursor-pointer hover:opacity-60 lg:text-background" }, [
                    (__vite_ssr_import_6__.openBlock(), __vite_ssr_import_6__.createBlock("svg", {
                      xmlns: "http://www.w3.org/2000/svg",
                      viewBox: "0 0 20 20",
                      fill: "currentColor",
                      "aria-hidden": "true",
                      class: "h-8 w-8"
                    }, [
                      __vite_ssr_import_6__.createVNode("path", {
                        "fill-rule": "evenodd",
                        d: "M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z",
                        "clip-rule": "evenodd"
                      })
                    ]))
                  ])
                ]),
                __vite_ssr_import_6__.createVNode("div", { class: "absolute-center h-full w-40" }, [
                  __vite_ssr_import_6__.createVNode("div", { class: "relative" }, [
                    __vite_ssr_import_6__.createVNode("button", { class: "absolute-center h-20 w-20 overflow-hidden rounded-full bg-secondary bg-cover bg-no-repeat text-white hover:bg-white/10" }, [
                      (__vite_ssr_import_6__.openBlock(), __vite_ssr_import_6__.createBlock("svg", {
                        stroke: "currentColor",
                        fill: "currentColor",
                        "stroke-width": "0",
                        viewBox: "0 0 24 24",
                        class: "h-16 w-16",
                        height: "1em",
                        width: "1em",
                        xmlns: "http://www.w3.org/2000/svg"
                      }, [
                        __vite_ssr_import_6__.createVNode("path", { d: "M12 2a5 5 0 1 0 5 5 5 5 0 0 0-5-5zm0 8a3 3 0 1 1 3-3 3 3 0 0 1-3 3zm9 11v-1a7 7 0 0 0-7-7h-4a7 7 0 0 0-7 7v1h2v-1a5 5 0 0 1 5-5h4a5 5 0 0 1 5 5v1z" })
                      ]))
                    ])
                  ])
                ])
              ])
            ])
          ], 2)
        ];
      }
    }),
    _: 1
  }, _parent));
}
const __vite_ssr_import_8__ = await __vite_ssr_import__("/components/TheHeader.vue?vue&type=style&index=0&scoped=true&lang.scss");

const __vite_ssr_import_9__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = __vite_ssr_import_9__.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/TheHeader.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const __vite_ssr_import_10__ = await __vite_ssr_import__("/@id/plugin-vue:export-helper");

__vite_ssr_exports__.default = /* @__PURE__ */ __vite_ssr_import_10__.default(_sfc_main, [["ssrRender", _sfc_ssrRender], ["__scopeId", "data-v-72292c93"], ["__file", "/Users/bonn/Documents/GitHub/next-truyen/components/TheHeader.vue"]]);
;
}


// --------------------
// Request: /components/TheSidebar.vue
// Parents: 
// - /components/TheHeader.vue ($id_d18d7003)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/vue/server-renderer/index.js ($id_b215fa1c)
// - /@id/plugin-vue:export-helper ($id_bbb863c1)
// --------------------
const $id_a452c5e5 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_main = /* @__PURE__ */ __vite_ssr_import_0__.defineComponent({
  __name: "TheSidebar",
  props: {
    close: {
      type: Function
    }
  },
  setup(__props, { expose }) {
    expose();
    const __returned__ = {};
    Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
    return __returned__;
  }
});
const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/vue/server-renderer/index.js");

function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<!--[--><div class="animate__fadeIn animate__animated animate__faster fixed inset-0 z-[100] bg-black/30" aria-hidden="true"></div><aside class="slideLeftReturn magictime absolute-center fixed inset-0 z-[999] w-[250px] min-w-[230px] bg-secondary p-4 md:w-[40%]"><div class="flex h-full w-full flex-col"><div class="absolute-center mt-6 flex h-fit w-full items-center justify-between"><button class="absolute-center bg-hight-light ml-4 rounded-full p-4 text-white md:p-5" tabindex="0"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="h-8 w-8 md:h-10 md:w-10"><path stroke-linecap="round" stroke-linejoin="round" d="M15 19l-7-7 7-7"></path></svg></button><div class="absolute-center relative flex-1"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" xml:space="preserve" class="md:width-[100px] absolute" width="50" height="50"><path d="M133.818 116.364h34.909v116.364h-34.909z" style="${__vite_ssr_import_1__.ssrRenderStyle({ "fill": "rgb(136, 136, 143)" })}"></path><path d="M343.273 116.364h34.909v116.364h-34.909z" style="${__vite_ssr_import_1__.ssrRenderStyle({ "fill": "rgb(121, 119, 129)" })}"></path><path d="M512 23.273C473.659 36.83 377.594 69.818 256 69.818S38.341 36.83 0 23.273l15.914 93.091C54.255 129.921 134.407 139.636 256 139.636s201.745-9.715 240.086-23.273L512 23.273z" style="${__vite_ssr_import_1__.ssrRenderStyle({ "fill": "rgb(224, 39, 83)" })}"></path><path d="M256 69.818v69.818c121.594 0 201.745-9.715 240.086-23.273L512 23.273C473.659 36.83 377.594 69.818 256 69.818z" style="${__vite_ssr_import_1__.ssrRenderStyle({ "fill": "rgb(197, 20, 44)" })}"></path><path d="M116.364 267.636h69.818v221.091h-69.818z" style="${__vite_ssr_import_1__.ssrRenderStyle({ "fill": "rgb(224, 113, 136)" })}"></path><path d="M325.818 267.636h69.818v221.091h-69.818z" style="${__vite_ssr_import_1__.ssrRenderStyle({ "fill": "rgb(224, 39, 83)" })}"></path><path d="m494.547 219.093-11.639-32.911C454.173 196.343 391.48 208.456 256 208.456S57.827 196.343 29.092 186.182l-11.639 32.911c10.358 3.662 22.529 6.91 36.451 9.748v50.432h404.191v-50.432c13.922-2.838 26.094-6.085 36.452-9.748z" style="${__vite_ssr_import_1__.ssrRenderStyle({ "fill": "rgb(224, 39, 83)" })}"></path><path d="M482.908 186.182C454.173 196.343 391.48 208.456 256 208.456v70.817h202.096v-50.432c13.922-2.838 26.093-6.086 36.451-9.748l-11.639-32.911z" style="${__vite_ssr_import_1__.ssrRenderStyle({ "fill": "rgb(197, 20, 44)" })}"></path><path d="M221.091 128h69.818v93.089h-69.818z" style="${__vite_ssr_import_1__.ssrRenderStyle({ "fill": "rgb(136, 136, 143)" })}"></path><path d="M256 128h34.909v93.089H256z" style="${__vite_ssr_import_1__.ssrRenderStyle({ "fill": "rgb(121, 119, 129)" })}"></path></svg><figure class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2"><svg viewBox="0 0 494.011 82.093" xmlns="http://www.w3.org/2000/svg" class="left-1/2 h-[40px] w-[130px] md:h-[50px] md:w-[200px]"><g id="svgGroup" stroke-linecap="round" fill-rule="evenodd" font-size="9pt" stroke="#ffffff" stroke-width="0.25mm" fill="#ffffff"><path d="M 14.142 61.944 C 14.12 61.935 14.095 61.926 14.064 61.922 A 0.278 0.278 0 0 0 14.026 61.919 A 0.037 0.037 0 0 1 14.024 61.919 C 13.976 61.917 13.928 61.82 13.928 61.626 C 13.928 61.431 13.928 61.187 13.977 60.894 A 4.229 4.229 0 0 0 13.99 60.813 C 14.046 60.427 14.036 60.108 13.96 59.873 A 0.781 0.781 0 0 0 13.831 59.624 C 13.66 59.411 13.489 59.421 13.253 59.656 A 1.965 1.965 0 0 0 13.147 59.771 A 1.155 1.155 0 0 1 13.094 59.855 C 12.943 60.073 12.821 60.033 12.702 59.707 A 2.365 2.365 0 0 1 12.659 59.576 C 12.512 59.087 12.463 58.55 12.561 58.013 A 3.462 3.462 0 0 1 12.588 57.881 C 12.692 57.411 12.879 57.061 13.147 56.792 C 13.44 56.548 13.538 56.353 13.538 56.255 A 0.237 0.237 0 0 0 13.535 56.224 C 13.521 56.114 13.432 55.98 13.268 55.821 A 3.003 3.003 0 0 0 13.098 55.669 A 6.57 6.57 0 0 1 12.916 55.438 C 12.469 54.843 12.431 54.526 12.826 54.461 A 1.087 1.087 0 0 1 13 54.449 A 0.45 0.45 0 0 0 13.01 54.449 C 13.231 54.444 13.368 54.276 13.311 53.907 A 1.458 1.458 0 0 0 13.293 53.814 C 13.245 53.667 13.196 53.521 13.147 53.423 A 0.926 0.926 0 0 1 13.13 53.415 C 13.052 53.373 13.005 53.336 12.928 53.363 A 0.228 0.228 0 0 0 12.903 53.374 A 0.442 0.442 0 0 1 12.824 53.424 C 12.494 53.583 12.319 52.985 12.247 51.655 A 24.884 24.884 0 0 1 12.219 50.933 A 272.374 272.374 0 0 1 12.219 50.573 C 12.22 50.063 12.224 49.722 12.245 49.538 A 0.628 0.628 0 0 1 12.268 49.419 A 0.267 0.267 0 0 1 12.277 49.395 C 12.329 49.279 12.426 49.339 12.61 49.615 C 12.683 49.712 12.744 49.786 12.805 49.847 A 1.233 1.233 0 0 0 13 50.005 A 0.387 0.387 0 0 0 13.02 50.024 C 13.111 50.103 13.199 50.1 13.245 50.054 A 0.829 0.829 0 0 0 13.343 49.86 C 13.375 49.766 13.391 49.658 13.391 49.517 A 6.039 6.039 0 0 0 13.359 49.363 A 2.061 2.061 0 0 0 13.196 48.882 A 1.019 1.019 0 0 0 13.185 48.862 C 13.102 48.705 13.018 48.652 12.902 48.674 A 0.375 0.375 0 0 0 12.854 48.687 A 0.26 0.26 0 0 1 12.839 48.694 C 12.649 48.774 12.461 48.574 12.366 48.003 C 12.289 47.584 12.273 47.045 12.316 46.387 A 14.691 14.691 0 0 1 12.366 45.806 C 12.448 45.311 12.461 44.921 12.434 44.664 A 1.432 1.432 0 0 0 12.415 44.537 A 0.782 0.782 0 0 0 12.412 44.476 C 12.397 44.276 12.3 44.195 12.122 44.195 A 1.01 1.01 0 0 0 11.675 44.305 A 1.464 1.464 0 0 0 11.292 44.585 A 1.978 1.978 0 0 0 10.972 45.097 A 1.773 1.773 0 0 0 10.852 45.562 C 10.852 45.789 10.823 45.927 10.787 45.979 A 0.043 0.043 0 0 1 10.754 46.001 A 0.05 0.05 0 0 1 10.723 45.982 C 10.668 45.925 10.581 45.744 10.461 45.464 A 3.813 3.813 0 0 0 10.372 45.286 C 10.068 44.719 9.867 44.785 9.797 45.456 A 4.654 4.654 0 0 0 9.778 45.708 A 7.651 7.651 0 0 0 9.753 46.031 C 9.702 46.931 9.728 48.501 9.812 50.74 A 298.464 298.464 0 0 0 9.875 52.3 L 9.875 52.788 A 153.286 153.286 0 0 0 9.934 53.786 C 9.951 54.063 9.968 54.322 9.985 54.56 A 42.824 42.824 0 0 0 10.022 55.035 C 10.022 55.483 10.051 55.846 10.064 56.145 A 5.785 5.785 0 0 1 10.071 56.402 A 3.674 3.674 0 0 0 10.073 56.518 C 10.079 56.721 10.101 56.888 10.112 57.029 A 1.91 1.91 0 0 1 10.12 57.183 C 10.12 57.302 10.152 57.421 10.164 57.514 A 0.47 0.47 0 0 1 10.168 57.574 A 0.336 0.336 0 0 0 10.18 57.659 C 10.19 57.698 10.207 57.735 10.226 57.766 A 0.29 0.29 0 0 0 10.266 57.818 L 10.266 57.867 A 0.734 0.734 0 0 1 10.277 57.902 C 10.31 58.02 10.341 58.224 10.355 58.485 A 5.6 5.6 0 0 1 10.364 58.794 C 10.413 59.283 10.461 59.771 10.461 60.357 A 23.974 23.974 0 0 1 10.467 60.445 C 10.549 61.747 10.469 62.233 10.264 61.906 A 1.02 1.02 0 0 1 10.217 61.822 C 10.12 61.627 10.071 61.287 9.926 60.705 A 16.055 16.055 0 0 0 9.924 60.699 C 9.827 60.162 9.729 59.527 9.68 58.843 A 19.358 19.358 0 0 1 9.646 58.591 C 9.614 58.344 9.589 58.109 9.57 57.885 A 10.413 10.413 0 0 1 9.534 57.037 A 10.003 10.003 0 0 0 9.522 57.012 C 9.477 56.923 9.428 56.833 9.338 56.744 A 0.145 0.145 0 0 0 9.271 56.679 C 9.22 56.653 9.153 56.648 9.094 56.646 A 2.212 2.212 0 0 0 9.045 56.646 C 8.645 56.646 8.609 56.565 8.902 56.403 A 2.516 2.516 0 0 1 8.997 56.353 A 1.663 1.663 0 0 0 9.137 56.2 A 0.629 0.629 0 0 0 9.241 56.011 A 1.439 1.439 0 0 0 9.274 55.894 C 9.298 55.795 9.319 55.669 9.33 55.517 A 3.275 3.275 0 0 0 9.338 55.279 C 9.298 54.994 9.291 54.641 9.233 54.164 A 9.381 9.381 0 0 0 9.192 53.863 A 332.436 332.436 0 0 1 9.118 52.883 A 139.354 139.354 0 0 1 9.045 51.861 L 9.045 50.152 A 8.487 8.487 0 0 0 9.07 49.785 C 9.092 49.332 9.084 48.82 9.045 48.247 A 15.874 15.874 0 0 0 9.024 47.969 C 8.972 47.351 8.893 46.798 8.85 46.246 C 8.775 45.797 8.701 45.491 8.626 45.307 A 0.769 0.769 0 0 0 8.557 45.171 C 8.514 45.129 8.397 45.123 8.205 45.155 A 2.749 2.749 0 0 0 8.118 45.171 A 12.144 12.144 0 0 0 7.6 45.265 A 5.928 5.928 0 0 0 7.19 45.367 C 6.799 45.464 6.506 45.513 6.213 45.513 A 1.075 1.075 0 0 1 6.191 45.517 C 5.997 45.552 5.837 45.525 5.761 45.488 A 0.135 0.135 0 0 1 5.725 45.464 A 0.971 0.971 0 0 0 5.65 45.394 C 5.632 45.38 5.613 45.366 5.591 45.352 A 0.709 0.709 0 0 0 5.53 45.318 A 0.117 0.117 0 0 0 5.508 45.301 C 5.456 45.269 5.377 45.269 5.334 45.269 A 2.411 2.411 0 0 1 4.892 45.179 C 4.098 44.94 3.269 44.28 2.405 43.169 A 14.706 14.706 0 0 1 1.239 41.235 A 16.842 16.842 0 0 1 0.11 38.335 C -0.037 37.945 -0.037 37.603 0.11 37.408 A 0.361 0.361 0 0 1 0.161 37.321 C 0.281 37.166 0.551 37.032 0.955 36.921 A 6.139 6.139 0 0 1 1.379 36.822 C 1.892 36.675 2.679 36.529 3.741 36.341 A 8188.696 8188.696 0 0 1 4.895 36.138 C 5.872 35.943 6.75 35.796 7.434 35.601 C 8.029 35.442 8.399 35.316 8.569 35.248 A 1.221 1.221 0 0 0 8.655 35.21 A 1.084 1.084 0 0 0 8.705 35.037 C 8.754 34.804 8.785 34.438 8.796 33.938 A 21.305 21.305 0 0 0 8.801 33.453 A 34.979 34.979 0 0 0 8.792 32.687 A 99.677 99.677 0 0 0 8.704 30.376 A 75.883 75.883 0 0 0 8.698 30.31 C 8.602 29.268 8.505 28.459 8.362 27.837 C 8.265 27.546 8.168 26.966 8.023 26.145 A 206.795 206.795 0 0 0 8.02 26.128 C 7.874 25.249 7.825 24.371 7.776 23.492 A 2.027 2.027 0 0 0 7.772 23.376 C 7.76 23.155 7.712 22.888 7.629 22.515 A 11.933 11.933 0 0 1 7.434 21.85 C 7.404 21.737 7.373 21.622 7.341 21.506 A 15.73 15.73 0 0 0 7.239 21.148 C 7.093 20.712 6.996 20.324 6.899 19.984 A 13.774 13.774 0 0 0 6.897 19.976 A 8.382 8.382 0 0 0 6.835 19.744 C 6.762 19.483 6.702 19.299 6.702 19.146 C 6.702 19.057 6.742 19.009 6.749 19.001 A 0.04 0.04 0 0 1 6.75 18.999 A 0.094 0.094 0 0 1 6.785 19.007 C 6.824 19.022 6.87 19.059 6.944 19.096 A 0.852 0.852 0 0 0 6.946 19.097 L 7.141 19.292 C 7.239 19.39 7.288 19.439 7.385 19.488 C 7.434 19.585 7.483 19.585 7.532 19.585 C 7.532 19.585 7.581 19.537 7.581 19.488 A 11.431 11.431 0 0 0 7.549 19.224 C 7.509 18.927 7.462 18.713 7.385 18.56 A 3.553 3.553 0 0 0 7.357 18.455 A 1.288 1.288 0 0 0 7.19 18.072 A 1.056 1.056 0 0 1 7.167 18.023 C 7.15 17.984 7.133 17.941 7.117 17.895 A 8.585 8.585 0 0 1 7.043 17.681 C 7.043 17.535 6.995 17.339 7.043 17.095 C 7.043 16.9 7.031 16.717 7.007 16.546 A 2.721 2.721 0 0 0 6.897 16.07 L 6.311 14.947 L 7.239 14.556 A 13.902 13.902 0 0 0 7.492 14.48 C 7.571 14.456 7.645 14.434 7.715 14.415 A 1.381 1.381 0 0 1 8.069 14.361 A 1.073 1.073 0 0 1 8.263 14.38 A 2.913 2.913 0 0 1 8.801 14.556 A 10.38 10.38 0 0 0 8.984 14.646 A 2.196 2.196 0 0 0 9.387 14.8 C 9.631 14.8 9.778 14.8 9.924 14.751 A 0.801 0.801 0 0 1 10.019 14.726 C 10.09 14.712 10.162 14.706 10.242 14.704 A 6.187 6.187 0 0 1 10.413 14.703 A 7.661 7.661 0 0 0 10.53 14.74 C 10.571 14.753 10.614 14.767 10.657 14.782 A 1.122 1.122 0 0 1 10.901 14.898 C 11.011 14.934 11.176 14.999 11.395 15.07 A 7.295 7.295 0 0 0 11.633 15.142 A 2.843 2.843 0 0 0 11.861 15.207 A 8.076 8.076 0 0 0 12.61 15.337 C 12.903 15.402 13.152 15.424 13.402 15.431 A 13.106 13.106 0 0 0 13.782 15.435 A 3.161 3.161 0 0 1 13.823 15.431 C 14 15.413 14.169 15.412 14.33 15.427 A 2.05 2.05 0 0 1 14.954 15.581 A 0.603 0.603 0 0 1 15.203 15.75 C 15.381 15.942 15.52 16.276 15.588 16.753 A 1.724 1.724 0 0 1 15.596 16.788 C 15.679 17.202 15.724 18.137 15.698 19.527 A 50.324 50.324 0 0 1 15.686 20.025 A 95.915 95.915 0 0 1 15.686 20.201 C 15.683 21.913 15.634 23.809 15.54 25.933 A 941.918 941.918 0 0 1 15.536 26.092 C 15.501 27.675 15.465 29.077 15.43 30.279 A 304.325 304.325 0 0 1 15.393 31.451 A 940.617 940.617 0 0 0 15.393 31.989 C 15.394 32.984 15.398 33.573 15.426 33.774 A 0.253 0.253 0 0 0 15.442 33.843 A 0.22 0.22 0 0 0 15.498 33.882 C 15.604 33.935 15.803 33.969 16.071 33.983 A 5.902 5.902 0 0 0 16.37 33.99 A 8.046 8.046 0 0 0 17.126 33.953 A 7.527 7.527 0 0 0 17.883 33.843 C 18.228 33.774 18.475 33.705 18.642 33.619 A 0.669 0.669 0 0 0 18.811 33.501 A 1.253 1.253 0 0 1 18.821 33.481 C 18.865 33.398 18.956 33.239 19.058 33.004 A 4.98 4.98 0 0 0 19.153 32.769 C 19.244 32.525 19.355 32.262 19.461 31.979 A 8.285 8.285 0 0 0 19.641 31.451 A 17.517 17.517 0 0 0 19.712 31.27 C 19.781 31.091 19.846 30.918 19.91 30.749 A 12.614 12.614 0 0 1 20.178 30.083 C 20.29 29.784 20.403 29.542 20.493 29.38 A 1.846 1.846 0 0 1 20.569 29.253 C 20.618 29.107 20.764 28.863 20.959 28.472 A 70.864 70.864 0 0 0 21.179 28.03 A 22.106 22.106 0 0 0 21.545 27.251 A 34.359 34.359 0 0 1 22.636 25.185 A 43.528 43.528 0 0 1 24.231 22.613 C 25.305 21.05 26.282 19.781 27.209 18.853 A 0.893 0.893 0 0 0 27.22 18.842 C 27.293 18.767 27.391 18.64 27.516 18.463 A 10.87 10.87 0 0 0 27.649 18.267 A 4.323 4.323 0 0 0 27.901 17.919 A 3.54 3.54 0 0 0 28.186 17.388 A 15.668 15.668 0 0 1 28.331 17.174 C 28.417 17.051 28.509 16.92 28.609 16.782 A 31.132 31.132 0 0 1 28.918 16.363 C 29.163 16.021 29.456 15.679 29.7 15.386 C 32.488 12.504 34.087 11.085 34.497 11.085 A 0.135 0.135 0 0 1 34.534 11.089 L 34.485 11.089 A 0.559 0.559 0 0 1 34.491 11.091 C 34.783 11.193 35.266 11.626 36.034 12.25 A 46.621 46.621 0 0 0 36.047 12.261 A 43.577 43.577 0 0 1 38.196 14.361 A 39.14 39.14 0 0 1 38.31 14.488 C 38.686 14.91 38.941 15.221 39.075 15.533 A 1.426 1.426 0 0 1 39.148 15.706 C 39.235 15.958 39.251 16.242 39.172 16.558 A 1.408 1.408 0 0 1 39.124 16.928 A 1.526 1.526 0 0 1 38.831 17.486 A 2.037 2.037 0 0 1 38.687 17.616 C 38.442 17.818 38.092 18.026 37.61 18.267 C 37.199 18.491 36.587 18.945 35.775 19.627 A 46.598 46.598 0 0 0 34.973 20.318 A 61.235 61.235 0 0 0 33.901 21.247 A 92.666 92.666 0 0 0 31.116 23.833 C 30.243 24.706 29.486 25.487 28.859 26.175 A 27.118 27.118 0 0 0 28.088 27.056 A 39.343 39.343 0 0 1 27.679 27.536 C 26.892 28.443 26.394 28.912 26.184 28.912 C 26.105 28.912 26.025 28.976 25.92 29.105 A 3.002 3.002 0 0 0 25.842 29.204 A 1.997 1.997 0 0 0 25.821 29.226 C 25.753 29.296 25.676 29.386 25.598 29.485 A 3.633 3.633 0 0 0 25.354 29.839 A 3.402 3.402 0 0 1 25.324 29.883 C 25.139 30.152 24.953 30.337 24.768 30.523 C 24.661 30.63 24.569 30.693 24.483 30.728 A 0.521 0.521 0 0 1 24.28 30.767 A 0.159 0.159 0 0 0 24.245 30.772 C 24.132 30.798 23.906 30.932 23.602 31.105 A 53.335 53.335 0 0 1 23.596 31.109 A 4.867 4.867 0 0 0 23.019 31.493 A 4.793 4.793 0 0 0 22.571 31.89 C 22.229 32.183 21.887 32.427 21.594 32.671 A 32.546 32.546 0 0 1 21.459 32.761 C 21.317 32.855 21.218 32.916 21.144 32.945 A 0.243 0.243 0 0 1 21.057 32.964 A 0.189 0.189 0 0 1 21.036 32.963 C 20.923 32.95 20.914 32.83 20.947 32.602 A 4.026 4.026 0 0 1 20.959 32.525 C 21.024 32.333 21.109 32.098 21.229 31.836 A 6.181 6.181 0 0 1 21.448 31.402 A 17.658 17.658 0 0 1 21.796 30.865 A 13.683 13.683 0 0 1 22.327 30.132 A 28.612 28.612 0 0 1 22.357 30.089 C 22.595 29.758 22.872 29.384 23.059 29.009 C 23.303 28.57 23.45 28.228 23.547 27.984 C 23.596 27.691 23.694 27.496 23.792 27.3 A 1.593 1.593 0 0 1 23.834 27.24 C 23.916 27.128 23.994 27.056 24.036 27.056 A 0.11 0.11 0 0 0 24.066 27.051 C 24.107 27.039 24.164 27.004 24.225 26.933 A 0.744 0.744 0 0 0 24.28 26.861 C 24.377 26.763 24.426 26.617 24.475 26.421 A 3.256 3.256 0 0 0 24.487 26.386 C 24.611 25.999 24.572 25.854 24.37 25.878 A 0.505 0.505 0 0 0 24.329 25.884 A 0.528 0.528 0 0 0 24.234 25.947 C 24.055 26.092 23.825 26.409 23.457 26.899 A 93.465 93.465 0 0 1 23.45 26.91 A 22.443 22.443 0 0 0 22.327 28.716 A 11.646 11.646 0 0 0 22.125 29.056 C 21.934 29.391 21.81 29.652 21.743 29.83 A 1.422 1.422 0 0 0 21.692 29.986 A 0.633 0.633 0 0 1 21.692 30.004 C 21.688 30.117 21.655 30.203 21.59 30.335 A 10.557 10.557 0 0 1 21.545 30.425 A 1.633 1.633 0 0 1 21.53 30.449 C 21.437 30.582 21.342 30.675 21.204 30.767 A 1.922 1.922 0 0 0 21.079 30.904 A 3.585 3.585 0 0 0 20.862 31.206 A 14.183 14.183 0 0 0 20.827 31.259 C 20.766 31.351 20.71 31.44 20.683 31.515 A 0.247 0.247 0 0 0 20.667 31.597 C 20.667 31.702 20.641 31.782 20.609 31.837 A 0.265 0.265 0 0 1 20.569 31.89 A 37.593 37.593 0 0 1 20.563 31.896 C 20.488 31.971 20.442 32.016 20.377 32.031 A 0.23 0.23 0 0 1 20.325 32.037 A 0.269 0.269 0 0 0 20.299 32.038 C 20.218 32.045 20.174 32.09 20.129 32.134 A 1.946 1.946 0 0 0 20.129 32.149 C 20.13 32.201 20.134 32.285 20.178 32.329 C 20.219 32.532 20.158 32.634 19.997 32.663 A 0.643 0.643 0 0 1 19.885 32.671 C 19.788 32.671 19.641 32.72 19.495 32.769 A 1.663 1.663 0 0 0 19.354 32.922 A 0.629 0.629 0 0 0 19.25 33.111 A 0.355 0.355 0 0 0 19.238 33.138 C 19.208 33.214 19.213 33.29 19.299 33.366 A 0.458 0.458 0 0 0 19.348 33.404 A 1.042 1.042 0 0 0 19.429 33.427 C 19.556 33.458 19.749 33.486 20.021 33.497 A 6.402 6.402 0 0 0 20.276 33.501 A 6.522 6.522 0 0 0 20.694 33.532 C 20.953 33.544 21.259 33.548 21.615 33.549 A 156.98 156.98 0 0 0 22.229 33.55 A 37.448 37.448 0 0 1 23.621 33.581 A 198.983 198.983 0 0 1 25.159 33.648 C 26.001 33.684 26.733 33.721 27.356 33.758 A 75.367 75.367 0 0 1 27.942 33.794 A 37.652 37.652 0 0 0 28.015 33.8 C 29.724 33.939 30.578 33.889 30.53 33.648 A 0.346 0.346 0 0 0 30.529 33.631 C 30.519 33.424 30.319 33.367 29.929 33.429 A 3.248 3.248 0 0 0 29.797 33.453 A 2.264 2.264 0 0 1 29.755 33.465 C 29.319 33.587 29.09 33.501 29.109 33.209 A 0.622 0.622 0 0 1 29.114 33.16 C 29.114 33.083 29.144 33.005 29.229 32.952 A 0.372 0.372 0 0 1 29.309 32.915 A 0.861 0.861 0 0 1 29.327 32.91 C 29.439 32.875 29.624 32.84 29.865 32.806 A 14.79 14.79 0 0 1 30.139 32.769 C 30.469 32.732 30.881 32.723 31.396 32.721 A 126.622 126.622 0 0 1 31.946 32.72 C 32.564 32.72 33.336 32.69 34.236 32.701 A 27.044 27.044 0 0 1 34.973 32.72 C 38.831 32.72 40.686 32.818 40.637 33.013 C 40.6 33.088 40.448 33.134 40.225 33.173 A 6.843 6.843 0 0 1 40.002 33.208 C 39.661 33.257 39.27 33.306 38.831 33.257 L 37.268 33.257 L 35.852 33.257 C 34.68 33.306 34.485 33.404 35.168 33.599 C 35.313 33.628 35.476 33.657 35.655 33.676 A 3.761 3.761 0 0 0 36.047 33.697 A 2.65 2.65 0 0 0 36.156 33.708 C 36.438 33.731 36.693 33.709 36.922 33.7 A 3.831 3.831 0 0 1 37.073 33.697 A 4.459 4.459 0 0 1 37.305 33.67 C 37.43 33.659 37.547 33.653 37.656 33.65 A 11.823 11.823 0 0 1 37.952 33.648 A 1.347 1.347 0 0 1 38.048 33.671 C 38.234 33.722 38.354 33.8 38.438 33.842 A 0.884 0.884 0 0 0 38.44 33.843 A 0.354 0.354 0 0 0 38.518 33.934 C 38.716 34.098 39.141 34.123 39.856 34.038 A 6.73 6.73 0 0 1 39.86 34.038 C 40.541 33.941 40.979 33.99 41.077 34.136 A 0.102 0.102 0 0 1 41.095 34.194 C 41.095 34.307 40.897 34.442 40.52 34.581 A 5.283 5.283 0 0 1 40.247 34.673 C 40.114 34.706 39.981 34.74 39.879 34.788 A 0.431 0.431 0 0 0 39.758 34.869 A 0.767 0.767 0 0 0 39.725 34.892 C 39.605 34.982 39.567 35.072 39.612 35.162 A 0.083 0.083 0 0 1 39.615 35.168 C 39.652 35.261 39.457 35.31 39.075 35.406 A 11.214 11.214 0 0 1 38.904 35.429 C 38.772 35.445 38.626 35.462 38.47 35.479 A 91.912 91.912 0 0 1 37.756 35.552 A 52.025 52.025 0 0 1 37.269 35.551 C 36.924 35.547 36.609 35.537 36.34 35.503 A 7.161 7.161 0 0 0 36.194 35.484 C 35.152 35.357 33.44 35.359 31.018 35.406 A 180.858 180.858 0 0 0 23.547 35.845 C 21.678 35.998 20.316 36.15 19.483 36.303 A 6.272 6.272 0 0 0 18.909 36.431 A 1.165 1.165 0 0 1 18.754 36.494 C 18.576 36.552 18.363 36.589 18.178 36.626 A 12.073 12.073 0 0 0 18.176 36.626 C 17.883 36.675 17.639 36.724 17.395 36.724 A 30.696 30.696 0 0 0 17.35 36.724 C 17.246 36.724 17.143 36.725 17.049 36.735 A 0.899 0.899 0 0 0 16.858 36.773 A 2.919 2.919 0 0 0 16.834 36.789 C 16.706 36.876 16.66 36.925 16.614 37.017 A 0.216 0.216 0 0 1 16.608 37.071 C 16.592 37.133 16.545 37.163 16.467 37.163 A 1.373 1.373 0 0 1 16.322 37.158 C 16.29 37.155 16.257 37.15 16.221 37.142 A 1.002 1.002 0 0 1 16.125 37.115 A 1.253 1.253 0 0 0 16.069 37.092 C 15.788 36.987 15.66 37.069 15.719 37.305 A 0.722 0.722 0 0 0 15.735 37.359 C 15.735 37.456 15.784 37.505 15.881 37.554 C 15.971 37.644 16.101 37.651 16.311 37.689 A 3.607 3.607 0 0 1 16.37 37.701 C 16.614 37.701 16.956 37.749 17.395 37.701 C 17.883 37.701 18.518 37.652 19.299 37.603 A 306.511 306.511 0 0 1 20.2 37.549 C 20.568 37.527 20.969 37.503 21.407 37.472 A 81.479 81.479 0 0 0 22.278 37.408 A 107.73 107.73 0 0 0 22.584 37.382 C 23.701 37.285 25.056 37.155 26.575 37.066 A 21.821 21.821 0 0 1 27.122 37.019 C 27.753 36.971 28.503 36.938 29.39 36.908 A 214.882 214.882 0 0 1 30.627 36.871 A 1592.408 1592.408 0 0 1 30.708 36.868 A 3578.276 3578.276 0 0 1 35.95 36.724 L 40.588 36.724 C 41.699 36.724 42.287 36.761 42.416 36.803 A 0.034 0.034 0 0 1 42.444 36.822 A 0.249 0.249 0 0 1 42.433 36.832 C 42.375 36.883 42.229 36.971 41.956 37.017 A 1.87 1.87 0 0 1 41.769 37.079 C 41.658 37.11 41.535 37.138 41.407 37.167 A 7.19 7.19 0 0 0 41.028 37.261 A 10.296 10.296 0 0 0 40.87 37.302 C 40.187 37.484 39.804 37.672 39.758 37.945 A 0.308 0.308 0 0 1 39.682 38.151 C 39.552 38.303 39.257 38.4 38.809 38.471 A 9.232 9.232 0 0 1 38.342 38.531 C 38.054 38.531 37.787 38.573 37.554 38.629 A 4.181 4.181 0 0 0 37.219 38.726 A 2.366 2.366 0 0 0 37.055 38.779 C 36.799 38.873 36.617 38.995 36.536 39.117 A 0.856 0.856 0 0 1 36.528 39.124 C 36.49 39.161 36.445 39.198 36.396 39.236 A 5.326 5.326 0 0 1 36.145 39.41 A 22.466 22.466 0 0 0 36.143 39.41 C 36.023 39.45 35.808 39.521 35.524 39.573 A 3.879 3.879 0 0 1 35.315 39.605 A 13.283 13.283 0 0 1 35.008 39.639 C 34.759 39.664 34.459 39.69 34.106 39.715 A 62.143 62.143 0 0 1 33.557 39.751 A 49.522 49.522 0 0 0 33.116 39.783 C 32.617 39.821 32.017 39.87 31.327 39.909 A 44.405 44.405 0 0 1 30.53 39.947 C 29.797 39.996 29.163 40.044 28.625 40.093 A 16.154 16.154 0 0 0 28.411 40.114 C 28.097 40.147 27.894 40.179 27.8 40.212 A 0.148 0.148 0 0 0 27.747 40.24 A 0.062 0.062 0 0 0 27.731 40.27 C 27.714 40.337 27.762 40.473 27.844 40.679 C 27.954 40.862 28.064 41.045 28.194 41.27 A 35.989 35.989 0 0 1 28.333 41.509 A 2.991 2.991 0 0 1 28.519 41.758 A 5.522 5.522 0 0 1 28.87 42.388 A 8.038 8.038 0 0 1 28.906 42.499 C 28.961 42.672 28.995 42.805 29.009 42.896 A 0.533 0.533 0 0 1 29.016 42.974 A 0.836 0.836 0 0 0 29.01 43.031 C 28.983 43.402 29.129 44.206 29.407 45.318 A 23.089 23.089 0 0 0 29.465 45.556 C 29.606 46.115 29.775 46.704 29.963 47.323 A 138.09 138.09 0 0 0 30.627 49.419 A 182.723 182.723 0 0 0 30.761 49.806 C 30.982 50.444 31.196 51.049 31.415 51.629 A 29.994 29.994 0 0 0 32.239 53.619 C 32.434 54.156 32.629 54.595 32.776 55.035 C 32.886 55.328 32.941 55.538 32.961 55.687 A 0.948 0.948 0 0 1 32.971 55.816 A 0.306 0.306 0 0 0 32.973 55.845 C 32.994 56.065 33.235 56.641 33.655 57.574 C 33.948 58.306 34.351 59.176 34.843 60.183 A 129.233 129.233 0 0 0 35.364 61.236 C 35.791 62.06 36.295 62.998 36.886 64.039 A 83.962 83.962 0 0 0 38.049 66.021 C 38.855 67.376 39.578 68.511 40.178 69.385 A 28.675 28.675 0 0 0 40.735 70.171 A 23.057 23.057 0 0 0 40.925 70.421 C 41.32 70.933 41.767 71.47 42.255 72.021 A 44.79 44.79 0 0 0 44.104 73.98 A 63.845 63.845 0 0 0 45.022 74.881 C 45.654 75.488 46.209 75.989 46.686 76.376 A 10.153 10.153 0 0 0 47.327 76.861 C 47.668 77.056 47.961 77.3 48.157 77.496 C 48.336 77.639 48.436 77.756 48.496 77.847 A 0.842 0.842 0 0 1 48.547 77.935 C 48.547 78.081 48.694 78.277 49.036 78.521 A 4.247 4.247 0 0 0 49.417 78.857 A 7.305 7.305 0 0 0 50.061 79.302 A 4.061 4.061 0 0 0 50.209 79.39 C 50.526 79.57 50.764 79.644 50.891 79.644 C 50.926 79.644 51.012 79.694 51.111 79.777 A 1.788 1.788 0 0 1 51.233 79.888 C 51.282 79.961 51.343 80.047 51.41 80.138 A 34.107 34.107 0 0 0 51.624 80.425 A 2.111 2.111 0 0 0 51.706 80.553 A 1.74 1.74 0 0 0 52.112 80.962 C 52.252 81.103 52.367 81.167 52.457 81.193 A 0.347 0.347 0 0 0 52.551 81.206 A 1.702 1.702 0 0 1 52.591 81.207 C 52.745 81.21 52.833 81.235 52.871 81.266 A 0.05 0.05 0 0 1 52.893 81.304 A 0.03 0.03 0 0 1 52.893 81.309 C 52.886 81.349 52.802 81.441 52.679 81.566 A 23.508 23.508 0 0 1 52.551 81.695 A 1.193 1.193 0 0 1 52.202 81.935 C 51.906 82.071 51.509 82.125 50.99 82.074 A 4.988 4.988 0 0 1 50.696 82.037 A 87.554 87.554 0 0 1 49.646 81.884 A 18.794 18.794 0 0 1 48.596 81.695 A 28.623 28.623 0 0 1 47.957 81.551 C 47.544 81.452 47.182 81.354 46.887 81.255 A 4.928 4.928 0 0 1 46.814 81.23 C 46.512 81.124 46.314 81.02 46.238 80.935 A 0.112 0.112 0 0 1 46.204 80.865 A 0.269 0.269 0 0 0 46.202 80.839 C 46.195 80.758 46.15 80.714 46.106 80.669 C 46.057 80.621 45.959 80.572 45.862 80.572 C 45.823 80.572 45.754 80.602 45.727 80.639 A 0.052 0.052 0 0 0 45.715 80.669 A 0.12 0.12 0 0 0 45.686 80.72 C 45.675 80.757 45.676 80.802 45.69 80.85 A 0.375 0.375 0 0 0 45.715 80.913 C 45.764 81.011 45.764 81.06 45.764 81.109 A 0.383 0.383 0 0 1 45.76 81.117 C 45.713 81.206 45.664 81.206 45.569 81.206 A 0.471 0.471 0 0 1 45.504 81.202 C 45.408 81.189 45.374 81.141 45.374 81.06 A 0.092 0.092 0 0 1 45.357 81.036 C 45.335 80.993 45.331 80.922 45.345 80.854 A 0.347 0.347 0 0 1 45.374 80.767 C 45.499 80.473 45.373 80.216 45.025 79.932 A 3.239 3.239 0 0 0 44.836 79.79 A 2.79 2.79 0 0 1 44.733 79.709 C 44.663 79.651 44.601 79.594 44.547 79.536 A 1.4 1.4 0 0 1 44.397 79.351 C 44.34 79.237 44.316 79.156 44.316 79.089 A 0.278 0.278 0 0 1 44.348 78.96 A 1.026 1.026 0 0 0 44.355 78.946 C 44.437 78.777 44.399 78.727 44.243 78.833 A 1.071 1.071 0 0 0 44.202 78.863 A 0.387 0.387 0 0 1 44.128 78.884 C 43.927 78.92 43.612 78.841 43.216 78.662 A 6.189 6.189 0 0 1 42.834 78.472 C 42.151 78.081 41.516 77.642 40.93 77.105 A 1.646 1.646 0 0 0 40.916 77.091 C 40.848 77.024 40.779 76.969 40.71 76.921 A 2.844 2.844 0 0 0 40.344 76.714 A 37.423 37.423 0 0 0 40.238 76.687 C 40.165 76.669 40.099 76.656 40.043 76.658 A 0.195 0.195 0 0 0 39.905 76.714 A 0.275 0.275 0 0 0 39.803 76.803 C 39.766 76.855 39.738 76.923 39.709 77.007 C 39.709 77.065 39.717 77.115 39.729 77.161 A 0.979 0.979 0 0 0 39.807 77.349 A 0.371 0.371 0 0 0 39.834 77.373 C 39.923 77.446 40.011 77.442 40.1 77.398 A 0.115 0.115 0 0 1 40.153 77.385 C 40.235 77.385 40.329 77.472 40.488 77.591 A 5.161 5.161 0 0 0 40.491 77.593 A 2.841 2.841 0 0 1 40.648 77.721 C 40.725 77.788 40.805 77.863 40.889 77.945 A 25.194 25.194 0 0 1 41.125 78.179 A 11.548 11.548 0 0 1 41.139 78.194 C 41.77 78.872 41.891 79.167 41.581 79.039 A 0.998 0.998 0 0 1 41.516 79.009 A 7.269 7.269 0 0 1 41.418 78.947 C 41.016 78.686 40.369 78.219 39.514 77.544 A 36.279 36.279 0 0 1 38.643 76.785 A 96.949 96.949 0 0 1 36.682 74.956 A 39.921 39.921 0 0 1 35.628 73.791 C 34.104 72.034 33.395 70.818 33.557 70.171 A 1.131 1.131 0 0 0 33.561 70.16 C 33.606 70.02 33.606 69.923 33.606 69.781 A 0.284 0.284 0 0 0 33.57 69.642 A 0.259 0.259 0 0 0 33.459 69.537 C 33.362 69.488 33.313 69.488 33.215 69.585 A 0.131 0.131 0 0 0 33.204 69.598 C 33.181 69.629 33.158 69.681 33.142 69.743 A 0.742 0.742 0 0 0 33.118 69.927 A 4.586 4.586 0 0 1 33.106 70.024 C 33.065 70.332 33.021 70.341 32.947 70.107 A 2.894 2.894 0 0 1 32.922 70.025 C 32.874 69.878 32.727 69.585 32.483 69.146 A 15.174 15.174 0 0 1 32.38 68.979 C 32.169 68.63 31.947 68.241 31.653 67.779 A 16.283 16.283 0 0 1 31.54 67.593 C 31.214 67.048 31.003 66.617 30.872 66.265 C 30.811 66.024 30.77 65.819 30.77 65.63 A 1.061 1.061 0 0 1 30.823 65.288 C 30.905 65.001 30.952 64.852 30.936 64.782 A 0.062 0.062 0 0 0 30.92 64.751 A 0.039 0.039 0 0 0 30.912 64.745 C 30.862 64.717 30.741 64.793 30.519 64.973 A 9.011 9.011 0 0 0 30.432 65.044 C 30.11 65.275 29.961 65.331 30.068 65.132 A 0.949 0.949 0 0 1 30.09 65.093 A 0.945 0.945 0 0 0 30.111 65.057 C 30.231 64.835 30.176 64.703 29.944 64.703 C 29.651 64.703 29.651 64.605 29.993 64.41 C 30.163 64.324 30.222 64.201 30.202 64.041 A 0.621 0.621 0 0 0 30.188 63.97 A 1.296 1.296 0 0 0 30.161 63.919 C 30.049 63.718 29.81 63.397 29.407 62.994 A 11.395 11.395 0 0 1 29.364 62.945 C 28.84 62.338 28.588 61.915 28.611 61.698 A 0.164 0.164 0 0 1 28.674 61.578 A 0.617 0.617 0 0 0 28.843 61.413 A 0.406 0.406 0 0 0 28.918 61.187 A 3.152 3.152 0 0 1 28.885 61.117 C 28.855 61.052 28.817 60.977 28.755 60.913 A 0.484 0.484 0 0 0 28.674 60.845 A 0.696 0.696 0 0 0 28.611 60.808 C 28.517 60.758 28.407 60.728 28.293 60.728 A 0.643 0.643 0 0 0 28.137 60.747 A 0.506 0.506 0 0 1 28.129 60.749 C 27.888 60.793 27.696 60.646 27.551 60.308 A 1.091 1.091 0 0 1 27.528 60.265 C 27.348 59.915 27.252 59.296 27.112 58.453 A 1.975 1.975 0 0 0 27.033 58.147 C 26.957 57.934 26.845 57.763 26.687 57.634 A 1.164 1.164 0 0 0 26.282 57.427 A 0.256 0.256 0 0 1 26.172 57.4 C 26.037 57.336 25.877 57.16 25.683 56.899 A 10.525 10.525 0 0 1 25.5 56.646 A 17.509 17.509 0 0 1 25.427 56.511 C 25.136 55.965 24.721 55.125 24.182 53.912 C 23.779 52.959 23.239 51.678 22.603 50.087 A 171.558 171.558 0 0 1 21.936 48.394 A 43.865 43.865 0 0 1 21.865 48.23 C 21.553 47.51 21.284 46.836 21.057 46.246 C 20.813 45.611 20.618 45.22 20.52 45.025 C 20.081 44.146 19.885 43.56 19.934 43.218 C 20.032 42.876 20.422 42.583 21.155 42.339 A 14.057 14.057 0 0 1 21.205 42.314 C 21.575 42.131 21.9 41.989 22.18 41.802 A 3.387 3.387 0 0 0 22.388 41.689 C 22.568 41.583 22.694 41.484 22.766 41.412 C 22.892 41.202 22.802 41.064 22.495 40.967 A 2.03 2.03 0 0 0 22.327 40.923 C 21.99 40.886 21.597 40.906 21.102 40.983 A 11.522 11.522 0 0 0 20.618 41.07 A 14.783 14.783 0 0 1 20.585 41.079 C 20.381 41.137 20.16 41.195 19.943 41.253 A 25.221 25.221 0 0 0 19.543 41.363 A 20.798 20.798 0 0 0 19.312 41.397 C 19.149 41.422 19.002 41.447 18.877 41.473 A 3.767 3.767 0 0 0 18.713 41.509 A 13.171 13.171 0 0 0 17.395 41.79 A 19.349 19.349 0 0 0 16.223 42.144 C 15.65 42.335 15.286 42.496 15.131 42.628 A 0.249 0.249 0 0 0 15.051 42.73 A 7.179 7.179 0 0 0 15.03 42.904 C 14.947 43.675 14.905 45.03 14.905 46.929 C 14.856 48.98 14.905 51.324 14.954 54.009 A 199.232 199.232 0 0 1 14.953 54.606 C 14.952 55.078 14.947 55.626 14.933 56.241 A 67.255 67.255 0 0 1 14.905 57.183 C 14.905 58.501 14.856 59.722 14.807 60.894 A 25.688 25.688 0 0 0 14.794 61.063 C 14.732 61.872 14.715 62.584 14.711 63.201 A 88.05 88.05 0 0 0 14.709 63.824 A 268.557 268.557 0 0 0 14.71 64.126 C 14.71 64.749 14.716 65.044 14.758 65.044 C 14.807 65.044 14.856 65.093 14.856 65.191 A 1.348 1.348 0 0 1 14.905 65.417 C 14.912 65.466 14.92 65.518 14.931 65.574 A 1.869 1.869 0 0 0 14.954 65.679 A 0.702 0.702 0 0 1 14.905 65.933 A 0.953 0.953 0 0 1 14.807 66.119 A 0.729 0.729 0 0 1 14.757 66.165 C 14.725 66.191 14.693 66.212 14.661 66.228 A 0.325 0.325 0 0 1 14.514 66.265 C 14.319 66.265 14.221 66.119 14.172 65.826 C 14.13 65.615 14.088 65.186 14.109 64.602 A 9.28 9.28 0 0 1 14.124 64.312 C 14.124 63.775 14.172 63.287 14.172 62.896 A 10.595 10.595 0 0 0 14.18 62.824 C 14.221 62.43 14.221 62.21 14.221 62.163 A 0.69 0.69 0 0 0 14.231 62.142 C 14.262 62.075 14.266 62.033 14.243 61.996 A 0.148 0.148 0 0 0 14.221 61.968 C 14.198 61.968 14.175 61.957 14.147 61.946 M 376.672 19.537 L 375.891 23.394 A 1.55 1.55 0 0 1 375.537 23.349 C 375.472 23.333 375.411 23.315 375.357 23.297 A 2.439 2.439 0 0 1 375.354 23.296 A 3.823 3.823 0 0 0 374.473 23.124 A 6.755 6.755 0 0 0 373.889 23.101 C 373.421 23.101 372.805 23.249 372.041 23.545 A 13.198 13.198 0 0 0 371.692 23.687 A 42.608 42.608 0 0 0 369.922 24.134 C 368.159 24.625 366.933 25.128 366.223 25.689 A 2.733 2.733 0 0 0 365.954 25.913 C 365.394 26.449 365.491 26.948 366.272 27.359 A 3.62 3.62 0 0 0 366.565 27.496 A 3.189 3.189 0 0 1 366.859 27.643 C 367.191 27.828 367.639 28.13 368.225 28.57 A 55.434 55.434 0 0 1 369.458 29.443 A 52.233 52.233 0 0 1 370.764 30.425 C 373.206 32.329 374.329 33.599 374.133 34.283 A 44.24 44.24 0 0 1 374.096 34.504 C 374.026 34.907 373.892 35.671 373.694 36.822 C 373.453 38.173 373.259 39.667 373.019 41.304 A 159.469 159.469 0 0 1 373.01 41.363 A 61.405 61.405 0 0 1 372.868 42.608 C 372.724 43.744 372.575 44.575 372.401 45.098 A 3.519 3.519 0 0 1 372.375 45.171 A 10.001 10.001 0 0 0 372.131 46.343 C 372.088 46.691 372.044 47.116 372.07 47.618 A 5.826 5.826 0 0 0 372.083 47.808 C 372.083 47.852 372.083 48.017 372.046 48.229 A 2.467 2.467 0 0 1 372.034 48.296 C 372.034 48.737 371.954 49.336 371.867 50.059 A 78.398 78.398 0 0 0 371.838 50.298 A 29.276 29.276 0 0 1 371.656 51.706 A 12.257 12.257 0 0 1 371.448 52.74 A 2.89 2.89 0 0 1 371.416 52.922 C 371.374 53.122 371.319 53.28 371.279 53.396 A 6.099 6.099 0 0 0 371.252 53.472 A 3.968 3.968 0 0 1 371.145 53.577 C 371.105 53.614 371.069 53.643 371.04 53.658 A 0.074 0.074 0 0 1 371.008 53.667 A 0.565 0.565 0 0 1 370.97 53.685 C 370.896 53.715 370.848 53.709 370.764 53.667 L 370.618 53.667 A 0.081 0.081 0 0 0 370.561 53.692 C 370.542 53.711 370.527 53.74 370.522 53.781 A 0.26 0.26 0 0 0 370.52 53.814 A 0.396 0.396 0 0 0 370.492 53.893 C 370.472 53.972 370.462 54.071 370.437 54.19 A 1.82 1.82 0 0 1 370.422 54.253 C 370.227 55.669 370.032 56.841 369.934 57.72 C 369.852 58.416 369.805 59.01 369.791 59.442 A 7.616 7.616 0 0 0 369.788 59.673 A 4.65 4.65 0 0 0 369.797 59.977 C 369.813 60.224 369.851 60.418 369.91 60.586 A 1.644 1.644 0 0 0 369.934 60.65 A 1.255 1.255 0 0 0 370.358 61.037 A 1.165 1.165 0 0 0 370.471 61.089 C 370.764 61.187 371.008 61.236 371.204 61.236 A 1.869 1.869 0 0 1 371.309 61.213 C 371.364 61.202 371.416 61.195 371.466 61.187 A 1.348 1.348 0 0 0 371.692 61.138 C 371.736 61.094 371.82 61.09 371.872 61.089 A 1.946 1.946 0 0 1 371.887 61.089 A 0.131 0.131 0 0 1 371.961 61.054 C 371.999 61.049 372.039 61.057 372.069 61.078 A 0.109 0.109 0 0 1 372.083 61.089 A 0.573 0.573 0 0 0 372.143 61.115 C 372.219 61.142 372.288 61.158 372.327 61.236 A 0.95 0.95 0 0 1 372.399 61.314 C 372.413 61.331 372.427 61.35 372.441 61.373 A 0.713 0.713 0 0 1 372.473 61.431 A 0.326 0.326 0 0 1 372.501 61.463 C 372.54 61.514 372.579 61.584 372.618 61.624 A 0.215 0.215 0 0 0 372.62 61.626 A 0.29 0.29 0 0 0 372.671 61.666 C 372.702 61.686 372.739 61.702 372.779 61.713 A 0.336 0.336 0 0 0 372.864 61.724 A 10.524 10.524 0 0 0 373.612 61.753 A 5.583 5.583 0 0 0 374.866 61.626 C 375.383 61.547 375.739 61.402 375.958 61.193 A 0.902 0.902 0 0 0 376.086 61.04 A 0.374 0.374 0 0 1 376.12 60.987 C 376.188 60.894 376.323 60.78 376.526 60.699 A 1.712 1.712 0 0 1 377.209 60.406 A 11.962 11.962 0 0 0 377.504 60.329 C 377.561 60.314 377.62 60.296 377.684 60.277 A 8.202 8.202 0 0 0 377.893 60.21 A 3.375 3.375 0 0 0 378.442 60.039 A 18.223 18.223 0 0 0 378.625 59.966 A 11.939 11.939 0 0 1 378.628 59.965 C 378.837 59.882 378.974 59.834 379.039 59.76 A 0.177 0.177 0 0 0 379.065 59.722 A 11.288 11.288 0 0 0 379.135 59.505 C 379.246 59.146 379.43 58.504 379.644 57.537 A 37.897 37.897 0 0 0 379.7 57.281 A 158.477 158.477 0 0 0 380.139 55.157 A 192.098 192.098 0 0 0 380.579 52.886 A 335.871 335.871 0 0 1 380.585 52.848 C 380.825 51.531 381.032 50.443 381.151 49.586 A 15.558 15.558 0 0 0 381.213 49.078 A 13.14 13.14 0 0 1 381.304 48.247 C 381.372 47.751 381.464 47.198 381.555 46.587 A 44.53 44.53 0 0 0 381.736 45.573 C 381.841 44.942 381.934 44.311 382.025 43.645 A 126.626 126.626 0 0 0 382.043 43.511 C 382.181 42.55 382.232 41.674 382.198 40.925 A 8.921 8.921 0 0 0 382.19 40.777 L 382.385 39.849 L 382.971 40.044 A 12.784 12.784 0 0 0 383.415 40.324 C 383.595 40.433 383.789 40.549 383.997 40.679 C 384.345 40.834 384.631 40.988 384.905 41.119 A 5.984 5.984 0 0 0 385.12 41.216 A 5.926 5.926 0 0 1 385.47 41.382 C 385.75 41.525 386.084 41.714 386.487 41.949 A 17.925 17.925 0 0 1 387.915 42.878 A 20.142 20.142 0 0 1 388.245 43.121 A 28.408 28.408 0 0 0 389.409 43.975 C 389.798 44.244 390.168 44.487 390.518 44.706 A 26.736 26.736 0 0 0 391.125 45.074 A 25.909 25.909 0 0 0 392.619 45.889 A 23.251 23.251 0 0 0 393.909 46.49 C 395.374 47.124 396.497 47.613 397.131 48.003 C 397.815 48.394 398.254 48.785 398.499 49.273 C 398.661 49.638 398.823 50.173 398.958 50.876 A 14.136 14.136 0 0 1 399.036 51.324 A 65.421 65.421 0 0 0 400.617 58.024 A 111.115 111.115 0 0 0 400.94 59.136 A 92.654 92.654 0 0 0 401.818 61.842 C 402.107 62.684 402.392 63.461 402.675 64.176 A 32.689 32.689 0 0 0 403.333 65.728 C 404.112 67.433 404.648 68.166 404.99 67.878 A 0.333 0.333 0 0 0 404.993 67.876 A 0.302 0.302 0 0 0 405.02 67.794 C 405.033 67.717 405.021 67.625 404.971 67.531 A 0.544 0.544 0 0 0 404.944 67.486 A 2.947 2.947 0 0 0 404.873 67.384 C 404.78 67.256 404.657 67.112 404.504 66.997 A 3.313 3.313 0 0 1 404.382 66.868 C 404.263 66.736 404.189 66.633 404.114 66.558 C 404.027 66.427 404.017 66.335 404.086 66.317 A 0.109 0.109 0 0 1 404.114 66.314 C 404.158 66.314 404.162 66.192 404.126 66.023 A 1.621 1.621 0 0 0 404.114 65.972 A 1.232 1.232 0 0 0 404.043 65.775 C 403.974 65.62 403.873 65.441 403.772 65.24 C 403.577 64.996 403.479 64.703 403.381 64.458 C 403.296 64.245 403.248 64.106 403.237 64.009 A 0.356 0.356 0 0 1 403.235 63.97 C 403.276 63.848 403.248 63.658 403.181 63.371 A 12.038 12.038 0 0 0 403.137 63.189 A 52.43 52.43 0 0 1 403.009 62.887 C 402.878 62.576 402.703 62.154 402.484 61.623 A 424.756 424.756 0 0 1 402.405 61.431 A 2.221 2.221 0 0 1 402.315 61.222 C 402.251 61.053 402.194 60.851 402.161 60.65 A 1.512 1.512 0 0 1 402.065 60.123 A 6.512 6.512 0 0 1 402.063 59.917 A 1.247 1.247 0 0 0 401.977 59.469 A 1.531 1.531 0 0 0 401.917 59.331 C 401.822 59.142 401.727 58.952 401.587 58.852 A 0.438 0.438 0 0 0 401.575 58.843 C 401.453 58.722 401.366 58.467 401.256 58.105 A 75.222 75.222 0 0 1 401.184 57.867 A 10.232 10.232 0 0 1 401.08 57.11 C 401.048 56.808 401.023 56.488 400.999 56.155 A 131.08 131.08 0 0 1 400.989 56.011 C 400.948 55.434 400.906 54.927 400.865 54.46 A 95.673 95.673 0 0 0 400.842 54.204 C 400.793 53.716 400.696 53.423 400.647 53.277 A 2.576 2.576 0 0 1 400.621 53.223 C 400.569 53.113 400.493 52.923 400.452 52.593 A 81.568 81.568 0 0 1 400.378 51.995 C 400.36 51.839 400.342 51.677 400.323 51.502 A 36.89 36.89 0 0 1 400.305 51.324 A 21.154 21.154 0 0 1 400.289 51.081 C 400.258 50.56 400.262 50.243 400.302 50.069 A 0.682 0.682 0 0 1 400.305 50.054 A 0.528 0.528 0 0 1 400.33 49.978 C 400.383 49.851 400.475 49.825 400.634 49.901 A 0.782 0.782 0 0 1 400.647 49.908 A 0.389 0.389 0 0 1 400.754 50.025 C 400.815 50.12 400.867 50.255 400.916 50.419 A 6.201 6.201 0 0 1 400.989 50.689 A 3.665 3.665 0 0 1 401.141 51.409 A 6.766 6.766 0 0 1 401.184 52.203 A 66.845 66.845 0 0 0 401.221 52.753 C 401.252 53.19 401.283 53.558 401.313 53.882 A 37.714 37.714 0 0 0 401.331 54.058 A 9.09 9.09 0 0 0 401.409 54.646 C 401.448 54.884 401.5 55.137 401.569 55.401 A 8.454 8.454 0 0 0 401.672 55.767 C 401.793 56.29 401.98 57.012 402.261 57.906 A 35.904 35.904 0 0 0 402.454 58.501 A 65.877 65.877 0 0 0 404.158 63.653 A 50.101 50.101 0 0 0 405.676 67.242 C 405.954 67.891 406.056 68.407 406.024 68.751 A 1.11 1.11 0 0 1 406.018 68.804 A 0.478 0.478 0 0 1 406.012 68.887 C 405.975 69.092 405.787 69.051 405.481 68.658 A 2.314 2.314 0 0 0 405.421 68.588 C 405.243 68.391 405.156 68.381 405.107 68.506 A 0.452 0.452 0 0 0 405.09 68.56 C 405.09 68.658 405.188 68.902 405.383 69.195 A 7.922 7.922 0 0 0 405.858 69.956 A 4.263 4.263 0 0 0 406.067 70.22 A 20.115 20.115 0 0 0 406.246 70.455 C 406.443 70.711 406.587 70.876 406.702 70.953 A 1.423 1.423 0 0 0 406.738 70.987 C 406.855 71.097 406.892 71.082 406.849 70.909 A 1.241 1.241 0 0 0 406.848 70.904 C 406.459 69.882 406.361 69.442 406.505 69.68 A 0.824 0.824 0 0 1 406.506 69.683 A 0.29 0.29 0 0 0 406.558 69.723 C 406.589 69.742 406.626 69.759 406.665 69.769 A 0.336 0.336 0 0 0 406.75 69.781 A 0.869 0.869 0 0 0 406.827 69.803 C 406.931 69.827 407.016 69.821 407.13 69.784 A 1.11 1.11 0 0 0 407.141 69.781 A 0.825 0.825 0 0 1 407.326 69.804 C 407.506 69.846 407.735 69.945 408.016 70.12 A 4.218 4.218 0 0 1 408.02 70.122 A 14.777 14.777 0 0 1 408.352 70.366 C 408.601 70.554 408.859 70.766 409.094 71.001 A 3.291 3.291 0 0 1 409.396 71.348 C 409.563 71.57 409.681 71.785 409.778 71.978 C 409.827 72.124 409.924 72.271 410.022 72.369 A 0.28 0.28 0 0 0 410.063 72.429 C 410.114 72.486 410.18 72.515 410.217 72.515 A 0.031 0.031 0 0 0 410.247 72.493 C 410.26 72.463 410.255 72.402 410.233 72.323 A 1.021 1.021 0 0 0 410.217 72.271 C 410.217 72.099 410.179 71.927 410.104 71.721 A 3.371 3.371 0 0 0 410.071 71.636 C 409.991 71.437 409.912 71.271 409.885 71.11 A 0.661 0.661 0 0 1 409.875 71.001 C 409.843 70.872 409.832 70.764 409.857 70.678 A 0.262 0.262 0 0 1 409.924 70.562 C 409.973 70.513 409.875 70.22 409.68 69.732 A 14.926 14.926 0 0 0 409.392 69.059 C 409.253 68.755 409.091 68.429 408.899 68.072 C 408.487 67.33 408.214 66.693 408.051 66.219 A 6.5 6.5 0 0 1 407.971 65.972 A 3.352 3.352 0 0 1 407.854 65.085 A 4.045 4.045 0 0 1 407.922 64.361 A 11.636 11.636 0 0 0 408.044 63.695 C 408.081 63.47 408.118 63.238 408.167 62.994 A 34.252 34.252 0 0 1 408.203 62.645 C 408.221 62.479 408.24 62.325 408.258 62.181 A 25.883 25.883 0 0 1 408.313 61.773 C 408.313 61.285 408.264 60.552 408.118 59.673 A 20.324 20.324 0 0 0 407.766 57.924 A 15.038 15.038 0 0 0 407.532 57.085 A 9.212 9.212 0 0 0 407.422 56.682 C 407.263 56.151 407.104 55.846 406.946 55.767 A 1.28 1.28 0 0 1 406.92 55.74 C 406.869 55.687 406.796 55.595 406.754 55.438 A 0.847 0.847 0 0 1 406.75 55.425 A 0.899 0.899 0 0 1 406.713 55.234 C 406.703 55.14 406.702 55.037 406.702 54.933 A 30.696 30.696 0 0 1 406.702 54.888 A 10.089 10.089 0 0 0 406.698 54.544 A 3.723 3.723 0 0 0 406.653 54.058 A 28.493 28.493 0 0 0 406.584 53.605 A 64.935 64.935 0 0 0 406.506 53.13 C 406.421 52.917 406.41 52.666 406.409 52.443 A 15.553 15.553 0 0 1 406.409 52.349 A 3.115 3.115 0 0 1 406.441 52.202 C 406.47 52.088 406.502 52.002 406.546 51.934 A 0.435 0.435 0 0 1 406.604 51.861 A 0.533 0.533 0 0 1 406.746 51.798 C 406.933 51.742 407.246 51.714 407.727 51.714 A 33.615 33.615 0 0 1 408.616 51.722 C 409.021 51.733 409.457 51.757 409.924 51.812 A 34.408 34.408 0 0 0 412.371 51.92 C 412.491 51.921 412.611 51.922 412.732 51.922 A 40.562 40.562 0 0 0 415.686 51.812 C 417.629 51.673 419.134 51.49 420.283 51.139 A 7.784 7.784 0 0 0 420.471 51.079 L 422.034 50.64 L 420.081 50.591 C 419.493 50.591 418.834 50.519 418.102 50.406 A 31.93 31.93 0 0 1 417.737 50.347 C 416.87 50.203 416.051 50.011 415.372 49.818 A 19.12 19.12 0 0 1 415.344 49.81 A 7.807 7.807 0 0 1 414.939 49.691 C 414.521 49.555 414.255 49.419 414.091 49.283 A 0.931 0.931 0 0 1 414.026 49.224 C 413.977 49.127 413.832 49.078 413.589 49.029 A 5.164 5.164 0 0 0 413.586 49.029 A 92.293 92.293 0 0 0 413.583 49.028 A 19.9 19.9 0 0 1 413.581 49.028 C 413.363 48.991 413.172 48.955 412.948 48.939 A 3.39 3.39 0 0 0 412.708 48.931 A 2.982 2.982 0 0 1 412.379 48.912 C 412.235 48.896 412.081 48.869 411.923 48.828 A 2.982 2.982 0 0 1 411.633 48.736 A 7.077 7.077 0 0 1 411.14 48.494 A 5.86 5.86 0 0 1 410.51 48.101 A 10.036 10.036 0 0 0 410.205 47.905 C 409.959 47.753 409.659 47.585 409.29 47.417 A 10.84 10.84 0 0 0 408.386 47.017 A 10.853 10.853 0 0 0 407.874 46.831 A 30.807 30.807 0 0 1 407.073 46.557 A 8.345 8.345 0 0 1 406.653 46.392 C 406.262 46.246 406.018 46.099 405.92 46.001 C 405.823 45.855 405.676 45.415 405.579 44.683 A 55.323 55.323 0 0 1 405.469 43.8 C 405.408 43.278 405.347 42.705 405.286 42.095 A 43.15 43.15 0 0 0 405.114 39.87 A 121.026 121.026 0 0 0 405.042 39.165 C 404.993 38.287 404.895 37.603 404.846 37.261 A 5.782 5.782 0 0 1 404.757 36.842 C 404.719 36.621 404.7 36.419 404.7 36.236 C 404.664 36.02 404.654 35.857 404.652 35.728 A 6.385 6.385 0 0 1 404.651 35.601 A 0.629 0.629 0 0 0 404.674 35.483 C 404.7 35.259 404.7 34.811 404.7 34.136 C 404.7 33.306 404.7 32.281 404.651 31.06 C 404.504 24.273 404.7 20.171 405.139 18.853 A 8.052 8.052 0 0 0 405.288 18.218 C 405.426 17.487 405.419 16.877 405.269 16.38 A 2.058 2.058 0 0 0 404.163 15.093 A 8.541 8.541 0 0 0 402.994 14.794 C 402.485 14.701 401.93 14.646 401.327 14.646 A 10.063 10.063 0 0 0 400.94 14.654 C 399.709 14.699 398.607 14.872 397.671 15.173 A 8.151 8.151 0 0 0 397.473 15.24 L 395.764 15.923 L 395.667 18.218 A 11.758 11.758 0 0 0 395.645 18.623 C 395.621 19.281 395.635 20.157 395.715 21.197 A 57.266 57.266 0 0 0 396.008 25.201 A 51.507 51.507 0 0 0 396.089 26.163 C 396.176 27.099 396.277 27.959 396.35 28.765 C 396.448 29.888 396.497 30.621 396.545 30.962 A 194.564 194.564 0 0 0 396.832 34.315 A 77.564 77.564 0 0 0 397.034 36.187 A 37.799 37.799 0 0 0 397.091 36.766 C 397.223 38.004 397.38 38.86 397.506 39.305 A 3.568 3.568 0 0 0 397.522 39.361 C 397.62 39.654 397.62 39.996 397.668 40.337 A 3.761 3.761 0 0 1 397.648 40.73 C 397.629 40.909 397.6 41.071 397.571 41.216 A 1.241 1.241 0 0 1 397.512 41.345 C 397.434 41.489 397.345 41.552 397.201 41.558 A 0.55 0.55 0 0 1 397.18 41.558 A 0.187 0.187 0 0 1 397.132 41.567 C 396.994 41.575 396.765 41.465 396.444 41.261 A 8.534 8.534 0 0 1 396.301 41.167 A 6.916 6.916 0 0 1 395.936 40.948 C 395.66 40.771 395.336 40.543 394.97 40.263 A 22.959 22.959 0 0 1 394.446 39.849 A 100.376 100.376 0 0 1 389.989 36.306 A 97.594 97.594 0 0 1 388.489 35.015 C 386.943 33.69 385.757 32.614 384.912 31.768 A 19.253 19.253 0 0 1 384.192 31.011 A 2.639 2.639 0 0 1 383.775 30.538 C 383.602 30.289 383.48 30.026 383.39 29.776 A 4.068 4.068 0 0 1 383.362 29.693 C 383.167 29.204 383.118 28.521 383.167 27.642 C 383.241 27.006 383.345 26.113 383.499 25.006 A 89.045 89.045 0 0 1 383.655 23.931 A 18.212 18.212 0 0 0 383.687 23.645 C 383.789 22.66 383.735 22.261 383.524 22.451 A 0.414 0.414 0 0 0 383.508 22.466 A 0.183 0.183 0 0 1 383.469 22.481 C 383.308 22.519 383.224 22.251 383.216 21.678 A 6.631 6.631 0 0 1 383.215 21.587 C 383.215 21.117 383.238 20.578 383.285 19.97 A 36.645 36.645 0 0 1 383.362 19.097 C 383.508 18.121 383.655 17.193 383.899 16.314 A 7.656 7.656 0 0 0 383.972 15.931 C 384.045 15.496 384.119 14.91 384.192 14.214 A 24.845 24.845 0 0 0 384.387 11.48 C 384.436 10.503 384.485 9.527 384.534 8.501 A 164.406 164.406 0 0 1 384.57 7.733 C 384.595 7.231 384.621 6.784 384.646 6.399 A 42.779 42.779 0 0 1 384.68 5.913 C 384.763 4.921 384.741 4.139 384.643 3.537 A 4.791 4.791 0 0 0 384.583 3.228 A 2.857 2.857 0 0 0 384.5 2.994 C 384.319 2.548 384.097 2.431 383.801 2.642 A 0.76 0.76 0 0 0 383.769 2.723 C 383.724 2.849 383.657 3.083 383.569 3.427 A 38.345 38.345 0 0 0 383.508 3.667 A 30.578 30.578 0 0 0 383.368 4.668 C 383.325 5.022 383.289 5.401 383.264 5.816 A 33.178 33.178 0 0 1 383.11 7.162 C 382.975 8.181 382.781 9.396 382.542 10.805 A 418.125 418.125 0 0 1 382.19 12.847 A 221.002 221.002 0 0 1 381.435 16.953 C 381.167 18.33 380.9 19.629 380.632 20.855 A 150.204 150.204 0 0 1 380.579 21.099 A 86.884 86.884 0 0 0 380.263 22.504 A 46.014 46.014 0 0 0 380.139 23.101 A 45.208 45.208 0 0 0 380.136 23.118 C 380.039 23.605 379.963 24.026 379.895 24.382 A 17.227 17.227 0 0 1 379.797 24.859 C 379.718 25.375 379.639 25.729 379.559 25.923 A 0.627 0.627 0 0 1 379.504 26.031 A 0.088 0.088 0 0 1 379.476 26.065 C 379.419 26.104 379.316 26.057 379.207 25.903 A 1.065 1.065 0 0 1 379.163 25.835 A 0.48 0.48 0 0 1 379.133 25.752 C 379.094 25.612 379.056 25.35 379.017 24.966 A 18.524 18.524 0 0 1 379.016 24.956 A 16.118 16.118 0 0 0 379.005 24.454 C 378.994 24.11 378.984 23.752 379.016 23.394 A 47.887 47.887 0 0 1 379.019 22.773 C 379.022 22.55 379.028 22.342 379.042 22.144 A 6.285 6.285 0 0 1 379.065 21.88 A 8.615 8.615 0 0 1 379.088 21.692 C 379.122 21.432 379.157 21.288 379.192 21.224 A 0.121 0.121 0 0 1 379.211 21.197 A 0.196 0.196 0 0 0 379.244 21.143 C 379.287 21.048 379.347 20.839 379.411 20.487 A 10.207 10.207 0 0 0 379.456 20.22 C 379.553 19.634 379.7 18.902 379.797 18.023 A 126.615 126.615 0 0 1 380.249 14.825 A 56.7 56.7 0 0 1 380.774 11.919 A 47.552 47.552 0 0 0 380.92 11.071 C 380.963 10.809 381.006 10.534 381.049 10.24 A 51.244 51.244 0 0 0 381.067 10.113 C 381.165 9.38 381.262 8.794 381.311 8.208 C 381.353 7.743 381.469 7.24 381.595 6.669 A 51.512 51.512 0 0 0 381.653 6.402 A 7.365 7.365 0 0 1 381.787 5.712 C 381.883 5.315 381.998 4.959 382.092 4.644 A 14.936 14.936 0 0 0 382.322 3.6 A 8.465 8.465 0 0 0 382.434 2.691 C 382.532 1.958 382.581 1.324 382.532 0.787 C 382.532 0.249 382.434 -0.044 382.336 0.005 C 382.291 0.005 382.288 0.005 382.249 0.044 A 4.558 4.558 0 0 0 382.239 0.054 A 0.948 0.948 0 0 0 382.165 0.193 C 382.106 0.326 382.042 0.517 381.965 0.787 A 19.78 19.78 0 0 0 381.897 1.031 A 5.815 5.815 0 0 0 381.758 1.423 C 381.634 1.813 381.521 2.264 381.387 2.741 A 24.402 24.402 0 0 1 381.36 2.837 A 443.946 443.946 0 0 1 380.962 4.453 C 380.161 7.673 379.668 9.458 379.459 9.808 A 0.161 0.161 0 0 1 379.407 9.869 C 379.324 9.951 379.276 9.929 379.264 9.861 A 0.226 0.226 0 0 1 379.26 9.82 A 2.82 2.82 0 0 1 379.263 9.667 C 379.268 9.572 379.281 9.46 379.317 9.324 A 2.117 2.117 0 0 1 379.358 9.185 A 19.044 19.044 0 0 0 379.628 7.633 A 76.833 76.833 0 0 0 379.749 6.695 A 29.966 29.966 0 0 0 379.813 6.144 C 379.859 5.707 379.886 5.339 379.893 5.015 A 7.877 7.877 0 0 0 379.895 4.839 A 2.524 2.524 0 0 0 379.89 4.681 C 379.871 4.379 379.797 4.239 379.719 4.286 A 0.104 0.104 0 0 0 379.7 4.302 C 379.577 4.384 379.489 4.568 379.378 4.826 A 74.971 74.971 0 0 0 379.309 4.986 C 379.211 5.328 379.114 5.718 379.016 6.109 C 378.967 6.548 378.87 7.085 378.723 7.671 A 24.66 24.66 0 0 1 378.531 8.392 A 52.308 52.308 0 0 1 378.284 9.234 A 18.485 18.485 0 0 0 378.119 9.822 C 378.05 10.082 377.982 10.359 377.913 10.649 A 51.864 51.864 0 0 0 377.844 10.943 C 377.698 11.626 377.6 12.212 377.502 12.749 C 377.47 13.202 377.438 13.59 377.42 13.928 A 9.055 9.055 0 0 0 377.405 14.41 A 24.41 24.41 0 0 1 377.402 14.863 C 377.399 15.044 377.392 15.24 377.377 15.45 A 9.176 9.176 0 0 1 377.307 16.119 A 26.444 26.444 0 0 1 377.215 16.749 C 377.103 17.458 376.929 18.401 376.672 19.537 Z M 317.566 59.643 C 317.557 59.621 317.548 59.596 317.544 59.565 A 0.278 0.278 0 0 1 317.542 59.527 A 13.487 13.487 0 0 0 317.513 59.402 C 317.455 59.154 317.398 58.939 317.34 58.759 A 3.888 3.888 0 0 0 317.249 58.501 A 4.753 4.753 0 0 0 317.244 58.477 C 317.219 58.359 317.195 58.264 317.171 58.18 A 5.618 5.618 0 0 0 317.102 57.964 A 0.836 0.836 0 0 1 317.056 57.885 C 317.015 57.806 316.982 57.718 316.945 57.627 A 2.574 2.574 0 0 0 316.858 57.427 A 4.558 4.558 0 0 1 316.848 57.417 C 316.809 57.378 316.809 57.375 316.809 57.329 A 2.558 2.558 0 0 1 316.687 57.03 C 316.65 56.927 316.614 56.817 316.565 56.695 A 1.721 1.721 0 0 1 316.535 56.633 C 316.457 56.459 316.413 56.289 316.37 56.158 C 316.37 55.962 316.223 55.572 316.028 54.937 C 315.833 54.351 315.588 53.619 315.344 52.837 A 2193.943 2193.943 0 0 1 315.298 52.691 A 137.914 137.914 0 0 1 314.612 50.445 C 314.478 49.84 314.366 49.352 314.294 48.946 A 6.69 6.69 0 0 1 314.221 48.443 C 314.172 48.199 314.136 47.967 314.099 47.741 A 11.636 11.636 0 0 0 313.977 47.076 C 313.904 46.746 313.858 46.499 313.819 46.313 A 4.531 4.531 0 0 0 313.782 46.148 C 313.504 45.315 313.194 43.515 312.878 40.747 A 136.948 136.948 0 0 1 312.659 38.677 C 312.54 37.447 312.453 36.411 312.346 35.62 A 12.854 12.854 0 0 0 312.268 35.113 C 312.195 34.49 312.094 33.977 311.987 33.616 A 2.89 2.89 0 0 0 311.877 33.306 A 1.677 1.677 0 0 0 311.784 33.119 C 311.735 33.036 311.683 32.966 311.626 32.908 A 0.64 0.64 0 0 0 311.292 32.72 A 1.887 1.887 0 0 0 311.023 32.645 C 310.605 32.556 309.986 32.525 309.241 32.525 A 21.911 21.911 0 0 0 308.202 32.548 A 13.164 13.164 0 0 0 306.555 32.72 C 305.725 32.818 305.237 32.964 305.09 33.111 A 0.9 0.9 0 0 0 305.048 33.275 C 304.989 33.596 304.955 34.251 304.946 35.275 A 66.944 66.944 0 0 0 304.944 35.845 A 99.722 99.722 0 0 0 304.958 37.489 C 304.979 38.759 305.023 40.176 305.09 41.753 C 305.214 45.049 305.233 47.441 305.148 48.93 A 14.985 14.985 0 0 1 305.09 49.663 A 8.887 8.887 0 0 1 305.07 49.899 C 304.998 50.637 304.846 51.151 304.624 51.45 A 0.707 0.707 0 0 1 304.114 51.763 A 0.349 0.349 0 0 0 304.09 51.764 C 303.987 51.771 303.803 51.823 303.577 51.958 A 8.813 8.813 0 0 0 303.462 52.046 C 303.292 52.178 303.101 52.337 302.942 52.496 C 302.707 52.73 302.403 52.919 302.013 53.062 A 4.349 4.349 0 0 1 301.428 53.228 C 300.793 53.423 300.159 53.472 299.524 53.472 A 3.811 3.811 0 0 1 299.333 53.467 C 299.004 53.451 298.736 53.391 298.527 53.297 A 1.077 1.077 0 0 1 298.206 53.081 A 1.613 1.613 0 0 1 297.872 52.394 C 297.486 51.104 297.197 48.177 297.021 43.646 A 210.239 210.239 0 0 1 296.936 41.021 L 296.741 33.746 L 294.983 33.794 A 6.909 6.909 0 0 0 294.818 33.805 C 294.024 33.869 293.444 34.06 293.079 34.38 A 1.341 1.341 0 0 0 292.98 34.476 C 292.749 34.724 292.577 35.087 292.463 35.553 A 5.406 5.406 0 0 0 292.346 36.236 A 10.551 10.551 0 0 0 292.3 36.604 C 292.286 36.737 292.273 36.881 292.264 37.035 A 8.784 8.784 0 0 0 292.249 37.554 A 11.872 11.872 0 0 1 292.245 37.832 A 30.236 30.236 0 0 1 292.151 39.41 A 17.497 17.497 0 0 0 292.133 39.474 C 292.041 39.8 291.946 40.163 291.809 40.484 C 291.711 40.728 291.614 41.021 291.565 41.265 A 7.033 7.033 0 0 0 291.488 41.664 A 5.08 5.08 0 0 0 291.418 42.486 A 18.379 18.379 0 0 1 291.387 42.749 C 291.364 42.939 291.337 43.114 291.304 43.29 A 6.565 6.565 0 0 1 291.223 43.658 A 32.103 32.103 0 0 1 290.94 44.836 C 290.845 45.2 290.748 45.535 290.647 45.843 A 10.269 10.269 0 0 1 290.295 46.783 A 13.802 13.802 0 0 1 290.218 46.972 C 289.96 47.591 289.75 47.959 289.661 48.003 C 289.563 48.052 289.465 48.247 289.417 48.589 A 1.476 1.476 0 0 0 289.365 48.799 C 289.319 49.059 289.319 49.371 289.319 49.712 C 289.319 50.152 289.319 50.542 289.27 50.835 A 2.758 2.758 0 0 1 289.222 50.988 C 289.169 51.14 289.115 51.237 289.062 51.286 A 0.126 0.126 0 0 1 288.977 51.324 C 288.9 51.324 288.823 51.354 288.77 51.439 A 0.372 0.372 0 0 0 288.733 51.519 A 0.389 0.389 0 0 0 288.636 51.679 C 288.617 51.739 288.611 51.807 288.621 51.885 A 0.665 0.665 0 0 0 288.635 51.958 C 288.635 52.105 288.586 52.251 288.44 52.398 C 288.342 52.496 288.196 52.544 288.049 52.593 A 1.072 1.072 0 0 0 287.978 52.595 A 0.814 0.814 0 0 0 287.561 52.74 A 1.611 1.611 0 0 0 287.351 52.996 A 2.213 2.213 0 0 0 287.219 53.228 C 287.17 53.374 287.073 53.521 286.975 53.667 A 2.767 2.767 0 0 1 286.944 53.688 C 286.814 53.772 286.72 53.814 286.584 53.814 A 0.141 0.141 0 0 0 286.563 53.823 C 286.44 53.889 286.235 54.182 285.99 54.68 A 10.061 10.061 0 0 0 285.803 55.083 A 32.106 32.106 0 0 0 285.423 55.873 C 285.291 56.155 285.155 56.457 285.014 56.777 A 67.028 67.028 0 0 0 284.485 58.013 L 283.167 61.529 C 282.629 62.896 282.19 63.579 281.848 63.579 A 0.252 0.252 0 0 1 281.664 63.471 C 281.517 63.259 281.564 62.744 281.775 61.895 A 18.807 18.807 0 0 1 281.897 61.431 C 282.043 60.894 282.19 60.406 282.288 59.917 C 282.369 59.511 282.416 59.206 282.402 58.974 A 0.983 0.983 0 0 0 282.385 58.843 A 4.265 4.265 0 0 1 282.415 58.374 C 282.513 57.503 282.852 56.082 283.459 54.058 A 3.398 3.398 0 0 1 283.463 54.035 C 283.513 53.747 283.609 53.413 283.704 53.033 A 36.962 36.962 0 0 1 283.817 52.631 C 283.917 52.278 283.997 51.992 283.997 51.812 A 3.509 3.509 0 0 0 284.014 51.697 C 284.044 51.466 284.039 51.304 283.997 51.177 A 0.402 0.402 0 0 0 283.966 51.126 C 283.911 51.047 283.816 50.973 283.655 50.933 C 283.528 50.87 283.402 50.868 283.289 50.914 A 0.524 0.524 0 0 0 283.118 51.031 A 0.897 0.897 0 0 0 283.098 51.046 C 283.003 51.121 282.932 51.209 282.887 51.31 A 0.736 0.736 0 0 0 282.825 51.617 C 282.793 51.775 282.802 51.933 282.853 52.092 A 1.223 1.223 0 0 0 282.971 52.349 A 0.419 0.419 0 0 1 282.975 52.357 C 283.016 52.444 283.054 52.6 283.002 52.825 A 1.21 1.21 0 0 1 282.971 52.935 A 2.051 2.051 0 0 1 282.936 53.082 C 282.881 53.279 282.795 53.482 282.678 53.716 A 4.038 4.038 0 0 0 282.635 53.805 C 282.539 54.009 282.407 54.327 282.239 54.79 C 282.043 55.279 281.897 55.816 281.75 56.353 C 281.61 56.739 281.52 57.075 281.463 57.342 A 6.047 6.047 0 0 0 281.409 57.622 C 281.381 57.842 281.338 58.046 281.289 58.235 A 6.649 6.649 0 0 1 281.165 58.648 C 281.018 58.941 280.92 59.087 280.823 59.087 A 0.554 0.554 0 0 1 280.786 59.086 C 280.668 59.078 280.623 59.03 280.579 58.941 A 0.331 0.331 0 0 1 280.542 58.788 C 280.542 58.733 280.554 58.672 280.579 58.599 A 67.445 67.445 0 0 0 280.581 58.592 C 280.621 58.472 280.692 58.257 280.794 57.899 A 24.327 24.327 0 0 0 280.872 57.622 A 40.969 40.969 0 0 0 281.091 56.78 A 51.845 51.845 0 0 0 281.311 55.865 A 23.689 23.689 0 0 0 281.458 55.174 C 281.53 54.817 281.59 54.491 281.649 54.22 A 9.729 9.729 0 0 1 281.653 54.204 C 281.702 53.838 281.763 53.496 281.83 53.173 A 23.232 23.232 0 0 1 282.043 52.251 A 296.18 296.18 0 0 1 282.075 52.126 C 282.204 51.609 282.295 51.26 282.385 51.079 A 2.376 2.376 0 0 0 282.415 50.996 C 282.564 50.548 282.798 49.508 283.118 47.954 A 875.533 875.533 0 0 1 283.516 45.735 C 283.696 44.729 283.879 43.688 284.045 42.632 C 284.338 40.777 284.534 39.361 284.583 38.384 A 13.671 13.671 0 0 1 284.655 37.722 A 56.444 56.444 0 0 1 284.827 36.578 C 284.888 36.15 284.949 35.799 285.01 35.489 A 21.529 21.529 0 0 1 285.12 34.966 A 5.676 5.676 0 0 0 285.189 34.713 C 285.252 34.462 285.287 34.244 285.304 34.068 A 2.467 2.467 0 0 0 285.315 33.843 C 285.266 33.599 285.168 33.404 284.924 33.257 A 1.163 1.163 0 0 0 284.859 33.221 C 284.613 33.094 284.248 33.005 283.801 32.915 A 7.265 7.265 0 0 0 283.577 32.896 C 283.179 32.869 282.82 32.882 282.532 32.964 C 282.378 32.964 282.135 32.934 281.801 32.803 A 3.605 3.605 0 0 1 281.506 32.671 A 9.547 9.547 0 0 1 281.388 32.623 C 280.939 32.436 280.483 32.208 279.944 31.939 C 279.541 31.719 279.166 31.472 278.838 31.238 A 16.087 16.087 0 0 1 278.528 31.011 A 5.888 5.888 0 0 1 278.328 30.872 C 278.124 30.724 277.996 30.604 277.935 30.504 A 0.249 0.249 0 0 1 277.893 30.376 A 0.534 0.534 0 0 0 277.885 30.288 C 277.863 30.162 277.801 29.976 277.7 29.729 A 9.441 9.441 0 0 0 277.6 29.497 A 8.428 8.428 0 0 0 277.539 29.303 A 9.289 9.289 0 0 0 277.014 28.033 C 276.736 27.538 276.556 27.103 276.448 26.713 A 3.613 3.613 0 0 1 276.331 26.079 C 276.282 25.591 276.331 24.81 276.526 23.785 C 276.649 22.961 276.808 22.38 276.942 22.043 A 2.129 2.129 0 0 1 277.014 21.88 A 0.932 0.932 0 0 1 277.049 21.808 C 277.115 21.684 277.204 21.589 277.308 21.522 A 0.891 0.891 0 0 1 277.795 21.392 C 277.975 21.392 278.128 21.392 278.293 21.411 A 2.315 2.315 0 0 1 278.479 21.441 C 278.584 21.467 278.675 21.493 278.752 21.527 A 0.536 0.536 0 0 1 278.918 21.636 C 279.139 21.82 279.58 22.003 280.2 22.208 A 26.65 26.65 0 0 0 280.872 22.417 A 16.805 16.805 0 0 0 283.997 23.003 L 285.999 23.247 L 285.706 21.685 C 285.654 21.451 285.602 21.177 285.557 20.875 A 12.291 12.291 0 0 1 285.461 20.025 A 274.826 274.826 0 0 0 285.379 18.971 A 76.755 76.755 0 0 0 285.315 18.218 C 285.281 17.378 285.155 16.699 284.936 16.215 A 1.793 1.793 0 0 0 284.583 15.679 A 3.881 3.881 0 0 1 284.261 15.317 C 284.158 15.184 284.071 15.052 284.003 14.924 A 1.869 1.869 0 0 1 283.85 14.556 C 283.763 14.324 283.745 14.127 283.785 13.974 A 0.443 0.443 0 0 1 283.948 13.726 A 0.435 0.435 0 0 1 283.993 13.707 C 284.111 13.664 284.346 13.616 284.729 13.531 C 285.168 13.433 285.657 13.335 286.243 13.238 C 287.578 13.053 288.262 13.086 288.213 13.378 A 0.246 0.246 0 0 1 288.196 13.433 C 288.196 13.579 288.245 13.726 288.44 13.824 C 288.546 13.895 288.679 13.966 288.855 14.018 A 1.84 1.84 0 0 0 289.075 14.068 C 289.514 14.117 290.002 14.312 290.637 14.605 A 12.519 12.519 0 0 1 292.346 15.679 A 8.087 8.087 0 0 1 292.537 15.822 C 292.813 16.036 293.029 16.233 293.193 16.416 A 2.536 2.536 0 0 1 293.42 16.704 A 3.079 3.079 0 0 1 293.474 16.851 C 293.547 17.063 293.636 17.383 293.729 17.835 A 15.84 15.84 0 0 1 293.811 18.267 A 44.258 44.258 0 0 1 293.884 18.664 C 294.005 19.344 294.12 20.097 294.202 20.953 L 294.592 24.468 L 296.057 24.419 A 7.979 7.979 0 0 0 296.367 24.414 C 296.785 24.398 297.08 24.343 297.278 24.224 C 297.522 24.126 297.668 23.833 297.815 23.394 A 11.163 11.163 0 0 0 297.899 22.915 C 297.944 22.621 297.989 22.272 298.035 21.863 A 47.036 47.036 0 0 0 298.108 21.148 A 11.469 11.469 0 0 1 298.14 20.841 A 30.483 30.483 0 0 1 298.352 19.439 C 298.45 18.804 298.596 18.267 298.694 17.876 A 1.178 1.178 0 0 0 298.708 17.832 C 298.723 17.778 298.733 17.73 298.743 17.687 A 0.637 0.637 0 0 1 298.792 17.535 A 11.49 11.49 0 0 0 298.914 17.143 C 298.994 16.871 299.051 16.644 299.084 16.509 A 28.787 28.787 0 0 1 299.176 16.063 A 7.893 7.893 0 0 1 299.231 15.826 A 5.202 5.202 0 0 0 299.272 15.642 C 299.297 15.524 299.325 15.384 299.361 15.221 A 11.083 11.083 0 0 1 299.426 14.947 C 299.426 14.913 299.426 14.858 299.442 14.795 A 0.437 0.437 0 0 1 299.475 14.703 A 3.475 3.475 0 0 1 299.502 14.524 C 299.524 14.398 299.553 14.283 299.587 14.177 A 1.927 1.927 0 0 1 299.768 13.775 A 1.956 1.956 0 0 1 299.799 13.687 C 299.887 13.462 299.974 13.384 300.061 13.384 A 0.216 0.216 0 0 1 300.115 13.39 C 300.177 13.406 300.208 13.453 300.208 13.531 C 300.256 13.628 300.256 13.775 300.208 13.921 A 0.628 0.628 0 0 0 300.194 13.967 C 300.159 14.107 300.164 14.278 300.208 14.41 C 300.256 14.556 300.305 14.703 300.452 14.751 A 1.139 1.139 0 0 0 300.562 14.82 C 300.929 15.019 301.198 14.854 301.296 14.349 A 2.211 2.211 0 0 0 301.331 14.068 A 2.545 2.545 0 0 0 301.341 14.037 C 301.359 13.981 301.377 13.918 301.395 13.852 A 16.923 16.923 0 0 0 301.477 13.531 A 1.125 1.125 0 0 1 301.509 13.426 C 301.541 13.336 301.58 13.257 301.615 13.181 A 1.367 1.367 0 0 0 301.672 13.042 A 0.716 0.716 0 0 0 301.701 12.995 C 301.758 12.893 301.797 12.769 301.83 12.61 A 4.97 4.97 0 0 0 301.868 12.408 A 1.532 1.532 0 0 0 301.869 12.403 C 301.933 12.209 301.955 12.015 301.976 11.822 A 5.408 5.408 0 0 1 302.014 11.529 A 3.043 3.043 0 0 1 302.029 11.236 C 302.039 11.129 302.055 11.026 302.072 10.933 A 3.11 3.11 0 0 1 302.112 10.747 A 12.512 12.512 0 0 1 302.143 10.685 C 302.221 10.531 302.269 10.454 302.356 10.454 A 0.015 0.015 0 0 1 302.358 10.455 C 302.4 10.46 302.442 10.646 302.484 10.983 A 11.272 11.272 0 0 1 302.502 11.138 C 302.551 11.626 302.551 12.212 302.502 12.896 A 29.605 29.605 0 0 0 302.496 13.141 C 302.472 14.254 302.525 14.926 302.657 15.176 A 0.168 0.168 0 0 0 302.795 15.288 C 302.872 15.288 302.95 15.258 303.027 15.173 A 0.678 0.678 0 0 0 303.088 15.093 C 303.186 14.947 303.186 14.8 303.235 14.556 A 2.347 2.347 0 0 1 303.236 14.481 C 303.246 14.165 303.326 14.234 303.476 14.687 A 8.083 8.083 0 0 1 303.528 14.849 A 2.502 2.502 0 0 0 303.609 15.06 C 303.675 15.21 303.748 15.34 303.812 15.442 A 3.359 3.359 0 0 0 303.87 15.533 A 0.99 0.99 0 0 0 303.883 15.55 C 303.984 15.679 304.084 15.739 304.167 15.763 A 0.334 0.334 0 0 0 304.26 15.777 A 0.181 0.181 0 0 1 304.358 15.804 C 304.432 15.85 304.488 15.958 304.527 16.148 A 2.24 2.24 0 0 1 304.553 16.314 C 304.614 16.527 304.656 16.817 304.691 17.148 A 29.627 29.627 0 0 1 304.749 17.779 A 75.256 75.256 0 0 0 304.809 19.429 C 304.834 19.947 304.864 20.432 304.899 20.886 A 34.55 34.55 0 0 0 305.042 22.369 C 305.121 23.321 305.232 23.951 305.35 24.206 A 0.281 0.281 0 0 0 305.432 24.322 C 305.53 24.419 305.579 24.517 305.579 24.761 A 1.168 1.168 0 0 1 305.605 24.907 C 305.618 25.021 305.619 25.148 305.605 25.289 A 2.869 2.869 0 0 1 305.579 25.494 A 1.969 1.969 0 0 0 305.563 25.56 C 305.487 25.917 305.538 26.186 305.676 26.324 C 305.823 26.47 306.165 26.617 306.75 26.665 A 6.467 6.467 0 0 1 306.89 26.688 C 307.675 26.823 307.908 27.029 307.588 27.24 A 1.013 1.013 0 0 1 307.483 27.3 A 1.965 1.965 0 0 1 307.227 27.464 A 1.455 1.455 0 0 1 306.897 27.593 A 3.371 3.371 0 0 1 306.812 27.626 C 306.606 27.702 306.434 27.74 306.262 27.74 A 0.682 0.682 0 0 0 305.959 27.846 C 305.776 27.966 305.641 28.182 305.539 28.494 A 3.678 3.678 0 0 0 305.432 28.912 A 3.426 3.426 0 0 0 305.409 29.076 C 305.382 29.311 305.374 29.534 305.334 29.693 L 305.334 30.083 A 0.084 0.084 0 0 1 305.336 30.083 C 305.382 30.084 305.648 30.121 306.103 30.13 A 10.218 10.218 0 0 0 306.311 30.132 C 306.897 30.132 307.629 30.181 308.508 30.181 L 311.633 30.23 L 311.731 28.912 A 5.115 5.115 0 0 0 311.732 28.898 C 311.769 28.478 311.746 28.148 311.687 27.934 A 0.805 0.805 0 0 0 311.633 27.788 A 0.729 0.729 0 0 0 311.445 27.522 C 311.316 27.403 311.135 27.31 310.901 27.251 C 310.544 27.132 310.316 27.046 310.243 26.991 A 0.05 0.05 0 0 1 310.217 26.958 A 0.074 0.074 0 0 1 310.218 26.946 C 310.231 26.869 310.365 26.791 310.619 26.688 A 7.557 7.557 0 0 1 310.803 26.617 A 1.238 1.238 0 0 0 310.997 26.563 A 0.597 0.597 0 0 0 311.34 26.275 C 311.414 26.165 311.459 26 311.498 25.78 A 7.3 7.3 0 0 0 311.536 25.542 A 34.756 34.756 0 0 0 311.535 25.218 C 311.533 25.017 311.528 24.782 311.515 24.506 A 19.309 19.309 0 0 0 311.487 24.029 C 311.389 22.369 311.438 20.611 311.584 18.706 C 311.722 17.402 311.883 16.29 312.086 15.406 A 9.391 9.391 0 0 1 312.366 14.41 C 312.476 14.117 312.585 13.824 312.675 13.592 A 19.018 19.018 0 0 1 312.756 13.384 A 6.532 6.532 0 0 0 312.759 13.38 C 312.871 13.155 312.925 13.018 312.966 12.967 A 0.048 0.048 0 0 1 313 12.945 C 314.076 12.687 314.924 12.58 315.544 12.592 A 4.138 4.138 0 0 1 315.784 12.603 A 4.061 4.061 0 0 1 316.087 12.662 C 316.494 12.757 316.958 12.924 317.5 13.173 A 15.711 15.711 0 0 1 318.225 13.531 C 320.276 14.507 321.448 15.288 321.79 15.923 A 1.343 1.343 0 0 1 321.884 16.17 C 322.029 16.702 321.889 17.4 321.463 18.264 A 9.554 9.554 0 0 1 321.057 18.999 A 8.11 8.11 0 0 0 321.025 19.064 C 320.697 19.735 320.416 20.542 320.227 21.441 C 320.081 22.137 319.989 23.107 319.952 24.352 A 45.622 45.622 0 0 0 319.934 25.689 C 319.885 27.642 319.934 30.376 320.032 33.941 C 320.142 40.052 320.419 44.691 320.842 47.902 A 30.466 30.466 0 0 0 321.301 50.591 A 5.312 5.312 0 0 0 321.305 50.614 C 321.354 50.953 321.451 51.384 321.594 51.91 A 34.42 34.42 0 0 0 321.704 52.533 A 66.912 66.912 0 0 0 321.887 53.472 A 6.717 6.717 0 0 0 321.926 53.653 A 12.556 12.556 0 0 0 322.278 54.839 A 7.14 7.14 0 0 0 322.32 54.95 C 322.407 55.169 322.493 55.355 322.58 55.506 A 2.042 2.042 0 0 0 322.717 55.718 C 322.794 55.833 322.929 56.156 323.102 56.641 A 24.363 24.363 0 0 1 323.254 57.085 A 1511.17 1511.17 0 0 0 323.409 57.661 C 323.489 57.96 323.572 58.277 323.654 58.606 A 28.845 28.845 0 0 1 323.889 59.624 A 176.485 176.485 0 0 1 324.052 60.283 C 324.126 60.584 324.196 60.869 324.263 61.142 A 58.893 58.893 0 0 0 324.524 62.163 A 51.543 51.543 0 0 0 324.568 62.295 C 324.735 62.792 324.853 63.115 324.941 63.301 A 1.054 1.054 0 0 0 325.012 63.433 A 0.977 0.977 0 0 1 325.099 63.591 A 0.712 0.712 0 0 1 325.159 63.872 C 325.159 64.027 325.128 64.15 325.067 64.292 A 2.281 2.281 0 0 1 325.012 64.41 C 324.836 64.762 324.659 64.797 324.519 64.44 A 1.624 1.624 0 0 1 324.475 64.312 A 3.015 3.015 0 0 0 324.452 64.267 A 1.706 1.706 0 0 0 324.133 63.824 C 323.993 63.753 323.878 63.708 323.752 63.689 A 0.998 0.998 0 0 0 323.596 63.677 A 0.724 0.724 0 0 1 323.512 63.672 C 323.44 63.664 323.371 63.646 323.31 63.624 A 0.948 0.948 0 0 1 323.206 63.579 A 0.801 0.801 0 0 1 323.18 63.562 C 323.115 63.515 323.072 63.468 323.046 63.421 A 0.268 0.268 0 0 1 323.01 63.287 C 323.01 63.208 323.024 63.158 323.045 63.12 A 0.337 0.337 0 0 1 323.108 63.042 A 0.366 0.366 0 0 1 323.138 63.029 C 323.21 63.001 323.281 63.002 323.353 63.051 A 0.34 0.34 0 0 1 323.401 63.091 A 0.41 0.41 0 0 0 323.456 63.114 A 0.739 0.739 0 0 0 323.694 63.14 C 323.743 63.091 323.792 62.994 323.792 62.896 A 0.615 0.615 0 0 0 323.791 62.866 C 323.789 62.828 323.783 62.793 323.774 62.762 A 0.248 0.248 0 0 0 323.645 62.603 A 0.239 0.239 0 0 0 323.564 62.51 C 323.534 62.49 323.499 62.475 323.458 62.467 A 0.507 0.507 0 0 0 323.352 62.456 A 1.738 1.738 0 0 1 323.26 62.455 C 323.23 62.453 323.202 62.45 323.177 62.444 A 0.148 0.148 0 0 1 323.108 62.408 A 0.987 0.987 0 0 0 323.086 62.366 C 323.075 62.347 323.065 62.329 323.055 62.313 A 0.773 0.773 0 0 1 323.055 62.312 A 1.021 1.021 0 0 1 323.054 62.311 M 342.981 36.578 L 343.958 34.478 L 344.446 35.992 A 11.542 11.542 0 0 1 344.611 36.467 A 41.333 41.333 0 0 1 344.885 37.359 C 344.952 37.692 345.018 38.002 345.07 38.274 A 8.319 8.319 0 0 1 345.129 38.628 C 345.177 38.958 345.315 39.561 345.587 40.349 A 15.735 15.735 0 0 0 345.618 40.435 C 345.862 41.265 346.155 42.144 346.497 43.072 A 93.243 93.243 0 0 1 347.015 44.53 A 130.444 130.444 0 0 0 347.571 46.099 C 347.913 47.222 348.206 48.15 348.45 48.882 C 348.694 49.663 348.987 50.542 349.329 51.568 A 157.562 157.562 0 0 1 349.846 52.877 C 350.006 53.288 350.156 53.678 350.295 54.048 A 93.748 93.748 0 0 1 350.354 54.204 A 47.68 47.68 0 0 1 350.842 55.376 A 47.68 47.68 0 0 0 351.331 56.548 A 207.965 207.965 0 0 0 351.54 57.105 C 351.735 57.619 351.897 58.042 352.006 58.334 A 49.529 49.529 0 0 1 352.014 58.355 A 43.661 43.661 0 0 0 352.591 59.702 C 353.068 60.77 353.668 62.008 354.407 63.384 A 105.921 105.921 0 0 0 355.579 65.568 C 356.213 66.712 356.824 67.742 357.434 68.658 A 26.633 26.633 0 0 0 357.87 69.308 C 358.292 69.918 358.632 70.342 358.89 70.602 A 3.413 3.413 0 0 0 358.899 70.611 A 2.093 2.093 0 0 0 359.066 70.782 C 359.337 71.029 359.574 71.083 359.778 71.001 A 3.598 3.598 0 0 1 360.446 70.757 C 360.962 70.618 361.595 70.53 362.317 70.464 A 0.519 0.519 0 0 0 362.428 70.407 C 362.589 70.304 362.828 70.079 363.098 69.732 C 363.391 69.366 363.657 68.999 363.936 68.592 A 39.712 39.712 0 0 0 364.221 68.169 A 14.363 14.363 0 0 0 364.539 67.598 C 364.719 67.253 364.857 66.944 364.954 66.656 A 0.772 0.772 0 0 0 365.006 66.403 C 365.013 66.251 364.987 66.081 364.942 65.884 A 7.043 7.043 0 0 0 364.905 65.728 A 5.231 5.231 0 0 0 364.736 65.295 C 364.623 65.037 364.476 64.737 364.294 64.385 A 53.668 53.668 0 0 0 364.026 63.872 C 363.689 63.237 363.21 62.43 362.587 61.429 A 143.604 143.604 0 0 0 361.975 60.454 A 15.611 15.611 0 0 1 361.533 59.681 C 361.409 59.451 361.283 59.208 361.154 58.953 A 128.432 128.432 0 0 1 360.754 58.16 A 81.946 81.946 0 0 0 360.744 58.138 C 360.309 57.22 359.922 56.445 359.631 55.718 A 32.132 32.132 0 0 0 359.167 54.571 A 32.132 32.132 0 0 1 358.704 53.423 C 358.444 52.868 358.241 52.368 358.073 51.968 A 18.849 18.849 0 0 0 357.922 51.617 A 7.033 7.033 0 0 1 357.521 50.723 C 357.489 50.642 357.458 50.559 357.425 50.475 A 21.852 21.852 0 0 0 357.336 50.249 A 8.107 8.107 0 0 1 357.186 49.84 C 357.098 49.58 357.034 49.356 356.975 49.167 A 5.954 5.954 0 0 0 356.946 49.078 A 2.243 2.243 0 0 0 356.765 48.532 A 9.543 9.543 0 0 0 356.604 48.199 A 3.177 3.177 0 0 0 356.48 47.974 C 356.377 47.803 356.274 47.674 356.17 47.569 A 1.859 1.859 0 0 0 356.165 47.564 A 1.176 1.176 0 0 1 355.964 47.394 C 355.894 47.321 355.83 47.234 355.779 47.134 A 1.093 1.093 0 0 1 355.774 47.124 C 355.677 46.979 355.628 46.785 355.627 46.687 A 0.29 0.29 0 0 1 355.627 46.685 A 0.817 0.817 0 0 0 355.613 46.539 C 355.59 46.41 355.535 46.242 355.432 46.001 A 3.951 3.951 0 0 0 355.32 45.67 C 355.256 45.503 355.183 45.336 355.109 45.149 A 8.823 8.823 0 0 1 355.042 44.976 A 4.903 4.903 0 0 1 354.728 44.297 A 11.791 11.791 0 0 1 354.553 43.804 A 22.76 22.76 0 0 1 354.452 43.455 C 354.373 43.178 354.309 42.935 354.248 42.713 A 17.614 17.614 0 0 0 354.211 42.583 A 5.536 5.536 0 0 0 354.052 41.801 A 8.473 8.473 0 0 0 353.918 41.363 A 6.638 6.638 0 0 0 353.738 40.889 C 353.648 40.674 353.554 40.473 353.472 40.286 A 10.091 10.091 0 0 1 353.43 40.191 C 352.9 39.171 352.302 37.743 351.635 35.906 A 85.772 85.772 0 0 1 351.233 34.771 A 117.798 117.798 0 0 1 349.245 28.122 A 73.56 73.56 0 0 1 349.133 27.691 C 348.662 25.988 348.379 24.634 348.245 23.63 A 10.924 10.924 0 0 1 348.157 22.71 A 5.285 5.285 0 0 1 348.445 21.062 A 9.384 9.384 0 0 1 348.792 20.171 A 11.508 11.508 0 0 1 349.119 19.528 C 349.343 19.12 349.558 18.791 349.744 18.531 A 9.141 9.141 0 0 1 349.866 18.365 A 2.63 2.63 0 0 0 350.089 18.037 C 350.183 17.873 350.267 17.687 350.327 17.487 A 2.323 2.323 0 0 0 350.354 17.388 A 3.879 3.879 0 0 0 350.431 16.877 C 350.452 16.639 350.452 16.419 350.452 16.216 C 350.418 15.977 350.336 15.834 350.223 15.769 A 0.32 0.32 0 0 0 350.061 15.728 C 349.984 15.728 349.907 15.667 349.807 15.57 A 7.196 7.196 0 0 1 349.719 15.484 A 1.206 1.206 0 0 1 349.511 15.193 C 349.47 15.115 349.431 15.03 349.394 14.938 A 5.202 5.202 0 0 1 349.377 14.898 A 3.322 3.322 0 0 0 349.085 14.417 C 348.988 14.284 348.875 14.152 348.743 14.019 A 1.353 1.353 0 0 0 348.368 13.762 C 348.158 13.662 347.906 13.588 347.62 13.531 A 6.832 6.832 0 0 1 345.202 12.794 A 8.577 8.577 0 0 1 344.934 12.652 C 344.149 12.19 343.626 11.684 343.365 11.217 A 1.95 1.95 0 0 1 343.323 11.138 C 343.222 10.802 343.029 10.582 342.791 10.477 A 0.856 0.856 0 0 0 342.444 10.406 A 1.112 1.112 0 0 0 341.946 10.513 C 341.794 10.588 341.664 10.704 341.561 10.864 A 1.318 1.318 0 0 0 341.467 11.04 C 341.388 11.238 341.31 11.626 341.256 12.283 A 16.821 16.821 0 0 0 341.223 12.798 C 341.125 13.726 341.077 14.8 341.077 16.021 A 1.576 1.576 0 0 0 341.045 16.183 C 341.035 16.251 341.031 16.313 341.029 16.373 A 4.423 4.423 0 0 0 341.028 16.509 L 341.028 16.753 L 341.028 16.9 L 341.077 16.949 L 341.125 16.997 L 341.125 17.046 C 341.125 17.046 341.125 17.095 341.077 17.095 L 341.077 17.242 A 0.322 0.322 0 0 1 341.061 17.27 C 341.017 17.339 340.974 17.334 340.93 17.29 A 0.387 0.387 0 0 1 340.812 17.191 C 340.774 17.148 340.737 17.098 340.688 17.048 A 0.855 0.855 0 0 0 340.686 17.046 A 0.765 0.765 0 0 0 340.622 16.909 C 340.576 16.827 340.523 16.752 340.491 16.656 L 340.198 16.216 C 340.151 16.123 340.06 16.03 340.01 16.022 A 0.043 0.043 0 0 0 340.002 16.021 A 0.081 0.081 0 0 0 339.989 16.01 C 339.945 15.982 339.905 16.034 339.905 16.167 A 9.865 9.865 0 0 0 339.828 16.832 C 339.792 17.252 339.77 17.749 339.762 18.336 A 39.924 39.924 0 0 0 339.758 18.902 A 854.933 854.933 0 0 0 339.832 20.69 A 504.962 504.962 0 0 0 339.905 22.369 A 43.738 43.738 0 0 0 339.969 23.049 C 340.029 23.637 340.09 24.071 340.15 24.34 A 1.871 1.871 0 0 0 340.198 24.517 C 340.392 25.051 339.958 27.179 338.945 30.852 A 150.646 150.646 0 0 1 338.928 30.913 A 95.499 95.499 0 0 0 338.918 30.951 C 338.651 31.931 338.42 32.838 338.203 33.662 A 58.278 58.278 0 0 1 337.805 35.113 A 116.475 116.475 0 0 0 337.702 35.545 C 337.525 36.297 337.418 36.791 337.38 37.029 A 1.003 1.003 0 0 0 337.366 37.163 C 337.366 37.31 337.366 37.456 337.268 37.554 A 0.841 0.841 0 0 1 337.2 37.674 C 337.167 37.718 337.128 37.749 337.073 37.749 C 336.926 37.749 336.78 38.189 336.487 39.068 A 27.561 27.561 0 0 0 336.256 40.022 C 336.085 40.782 335.907 41.674 335.706 42.681 C 335.665 42.804 335.624 42.96 335.583 43.122 A 62.233 62.233 0 0 0 335.559 43.218 A 4.053 4.053 0 0 0 335.484 43.423 C 335.44 43.553 335.408 43.665 335.378 43.759 A 2.977 2.977 0 0 1 335.364 43.804 C 335.168 44.244 334.778 45.415 334.143 47.369 A 413.823 413.823 0 0 1 333.167 50.31 A 146.227 146.227 0 0 0 332.19 53.326 A 190.771 190.771 0 0 0 331.75 54.662 C 331.39 55.767 331.128 56.614 330.964 57.192 A 20.336 20.336 0 0 0 330.872 57.525 C 330.872 57.569 330.832 57.651 330.824 57.703 A 0.109 0.109 0 0 0 330.823 57.72 A 18.834 18.834 0 0 0 330.697 58.113 C 330.623 58.352 330.566 58.552 330.515 58.723 A 8.484 8.484 0 0 1 330.432 58.99 C 330.39 59.199 330.312 59.409 330.26 59.557 A 4.244 4.244 0 0 0 330.237 59.624 C 330.193 59.755 330.15 59.925 330.071 60.099 A 1.721 1.721 0 0 1 330.042 60.162 L 330.042 60.259 C 329.785 60.9 329.641 61.317 329.609 61.607 A 1.068 1.068 0 0 0 329.602 61.724 C 329.563 61.917 329.617 62.049 329.762 62.145 A 0.753 0.753 0 0 0 329.895 62.212 A 0.63 0.63 0 0 1 329.946 62.235 C 330.11 62.318 330.025 62.396 329.72 62.407 A 2.096 2.096 0 0 1 329.651 62.408 C 329.407 62.408 329.211 62.554 329.114 62.847 A 4.155 4.155 0 0 0 329.082 63.088 C 329.052 63.371 329.027 63.792 329.019 64.337 A 24.788 24.788 0 0 0 329.016 64.703 A 18.047 18.047 0 0 1 329.001 65.396 C 328.989 65.695 328.975 65.982 328.969 66.257 A 10.484 10.484 0 0 0 328.967 66.46 A 25.479 25.479 0 0 1 328.935 66.817 C 328.904 67.139 328.872 67.38 328.841 67.541 A 1.845 1.845 0 0 1 328.821 67.632 A 1.628 1.628 0 0 0 328.807 67.685 C 328.743 67.941 328.882 67.749 329.224 67.071 A 24.656 24.656 0 0 0 329.26 66.997 A 18.926 18.926 0 0 1 329.414 66.733 C 329.575 66.463 329.749 66.18 329.895 65.923 C 330.066 65.624 330.237 65.4 330.375 65.251 A 2.097 2.097 0 0 1 330.432 65.191 C 330.568 65.054 330.663 64.834 330.793 64.567 A 8.537 8.537 0 0 1 330.823 64.507 A 2.404 2.404 0 0 0 331.116 63.677 A 38.974 38.974 0 0 1 331.236 63.247 C 331.348 62.853 331.485 62.399 331.661 61.884 A 26.7 26.7 0 0 1 331.75 61.626 A 54.864 54.864 0 0 1 332.3 60.219 A 46.133 46.133 0 0 1 332.629 59.429 C 332.971 58.794 333.167 58.404 333.264 58.306 A 0.133 0.133 0 0 0 333.319 58.295 C 333.38 58.268 333.411 58.198 333.411 58.16 C 333.445 58.091 333.431 58.023 333.403 57.954 A 1.326 1.326 0 0 0 333.362 57.867 C 333.321 57.703 333.383 57.298 333.549 56.594 A 32.386 32.386 0 0 1 333.655 56.158 A 86.818 86.818 0 0 1 334.044 54.723 A 51.109 51.109 0 0 1 334.534 53.081 A 54.999 54.999 0 0 1 334.782 52.286 C 335.022 51.537 335.242 50.933 335.461 50.494 C 335.608 50.201 335.754 49.761 335.95 49.126 C 336.145 48.492 336.34 47.857 336.487 47.271 C 336.628 46.66 336.724 46.23 336.774 45.937 A 5.852 5.852 0 0 0 336.78 45.904 C 336.78 45.806 336.877 45.562 337.024 45.22 A 6.269 6.269 0 0 1 337.18 44.748 A 6.751 6.751 0 0 1 337.463 44.097 C 337.659 43.658 337.805 43.218 337.952 42.828 C 338.072 42.465 338.16 42.169 338.214 41.94 A 4.012 4.012 0 0 0 338.245 41.802 A 1.672 1.672 0 0 1 338.327 41.273 A 1.22 1.22 0 0 1 338.391 41.119 A 4.164 4.164 0 0 1 338.438 40.908 C 338.475 40.763 338.519 40.649 338.586 40.581 C 338.627 40.5 338.702 40.35 338.754 40.132 A 2.017 2.017 0 0 0 338.782 39.996 A 4.975 4.975 0 0 0 338.922 39.599 A 3.446 3.446 0 0 0 339.026 39.165 C 339.101 38.941 339.175 38.745 339.25 38.578 A 3.759 3.759 0 0 1 339.319 38.433 C 339.435 38.239 339.521 38.137 339.6 38.104 A 0.154 0.154 0 0 1 339.661 38.091 A 0.075 0.075 0 0 1 339.734 38.151 C 339.753 38.204 339.757 38.292 339.758 38.415 A 15.263 15.263 0 0 1 339.758 38.531 A 5.321 5.321 0 0 1 339.698 38.832 C 339.671 38.952 339.638 39.082 339.599 39.22 A 9.75 9.75 0 0 1 339.465 39.654 A 85.525 85.525 0 0 0 339.252 40.227 C 339.218 40.319 339.186 40.407 339.156 40.491 A 13.331 13.331 0 0 0 339.075 40.728 A 8.256 8.256 0 0 0 339.025 40.882 C 338.965 41.076 338.932 41.208 338.929 41.256 A 0.112 0.112 0 0 0 338.928 41.265 A 2.969 2.969 0 0 1 338.928 41.335 C 338.925 41.455 338.911 41.666 338.838 41.966 A 4.057 4.057 0 0 1 338.831 41.997 A 12.613 12.613 0 0 1 338.66 42.589 C 338.606 42.766 338.553 42.947 338.508 43.136 A 5.449 5.449 0 0 0 338.489 43.218 A 81.433 81.433 0 0 1 338.486 43.225 C 338.352 43.583 338.259 43.817 338.208 43.965 A 2.808 2.808 0 0 0 338.196 43.999 A 0.431 0.431 0 0 0 338.115 44.12 C 338.067 44.222 338.034 44.355 338 44.488 C 337.952 44.732 337.952 44.976 337.952 45.22 A 5.104 5.104 0 0 0 337.95 45.227 C 337.912 45.381 337.873 45.565 337.81 45.78 A 4.828 4.828 0 0 1 337.756 45.953 A 3.859 3.859 0 0 1 337.498 46.511 A 1.496 1.496 0 0 1 337.415 46.636 C 337.073 47.027 336.975 47.808 337.122 48.98 C 337.172 49.295 337.196 49.601 337.196 49.899 A 5.818 5.818 0 0 1 336.633 52.349 C 336.445 52.773 336.256 53.288 336.112 53.85 A 9.289 9.289 0 0 0 336.096 53.912 C 335.901 54.546 335.803 55.132 335.706 55.621 A 37.786 37.786 0 0 0 335.688 55.796 C 335.61 56.619 335.614 56.903 335.7 56.57 A 2.636 2.636 0 0 0 335.706 56.548 A 3.253 3.253 0 0 0 335.709 56.541 C 335.803 56.352 335.898 56.116 336.037 55.836 A 7.369 7.369 0 0 1 336.047 55.816 A 3.06 3.06 0 0 1 336.302 55.265 A 11.684 11.684 0 0 1 336.438 55.035 A 2.227 2.227 0 0 0 336.619 54.767 C 336.734 54.569 336.85 54.32 336.965 54.02 A 9.096 9.096 0 0 0 337.024 53.863 C 337.268 53.326 337.512 52.74 337.708 52.154 A 14.546 14.546 0 0 0 337.901 51.661 C 338.044 51.278 338.203 50.822 338.387 50.305 A 105.107 105.107 0 0 1 338.635 49.615 A 216.548 216.548 0 0 1 339.807 46.49 A 46.952 46.952 0 0 0 340.604 44.244 A 35.122 35.122 0 0 0 340.833 43.511 A 22.474 22.474 0 0 0 341.02 42.887 C 341.132 42.494 341.211 42.167 341.262 41.894 A 5.204 5.204 0 0 0 341.321 41.509 A 12.568 12.568 0 0 1 341.466 40.465 A 4.753 4.753 0 0 1 341.516 40.24 C 341.59 39.943 341.692 39.619 341.844 39.245 A 9.801 9.801 0 0 1 342.004 38.872 A 13.602 13.602 0 0 1 342.178 38.425 C 342.377 37.933 342.651 37.31 342.981 36.578 Z M 471.985 36.578 L 472.961 34.478 L 473.45 35.992 A 11.542 11.542 0 0 1 473.615 36.467 A 41.333 41.333 0 0 1 473.889 37.359 C 473.956 37.692 474.022 38.002 474.073 38.274 A 8.319 8.319 0 0 1 474.133 38.628 C 474.18 38.958 474.318 39.561 474.591 40.349 A 15.735 15.735 0 0 0 474.622 40.435 C 474.866 41.265 475.159 42.144 475.5 43.072 A 93.243 93.243 0 0 1 476.019 44.53 A 130.444 130.444 0 0 0 476.575 46.099 C 476.917 47.222 477.209 48.15 477.454 48.882 C 477.698 49.663 477.991 50.542 478.333 51.568 A 157.562 157.562 0 0 1 478.85 52.877 C 479.01 53.288 479.16 53.678 479.299 54.048 A 93.748 93.748 0 0 1 479.358 54.204 A 47.68 47.68 0 0 1 479.846 55.376 A 47.68 47.68 0 0 0 480.334 56.548 A 207.965 207.965 0 0 0 480.544 57.105 C 480.739 57.619 480.901 58.042 481.01 58.334 A 49.529 49.529 0 0 1 481.018 58.355 A 43.661 43.661 0 0 0 481.595 59.702 C 482.072 60.77 482.672 62.008 483.411 63.384 A 105.921 105.921 0 0 0 484.583 65.568 C 485.217 66.712 485.828 67.742 486.438 68.658 A 26.633 26.633 0 0 0 486.873 69.308 C 487.296 69.918 487.636 70.342 487.894 70.602 A 3.413 3.413 0 0 0 487.903 70.611 A 2.093 2.093 0 0 0 488.07 70.782 C 488.341 71.029 488.578 71.083 488.782 71.001 A 3.598 3.598 0 0 1 489.45 70.757 C 489.965 70.618 490.599 70.53 491.321 70.464 A 0.519 0.519 0 0 0 491.432 70.407 C 491.593 70.304 491.832 70.079 492.102 69.732 C 492.395 69.366 492.661 68.999 492.94 68.592 A 39.712 39.712 0 0 0 493.225 68.169 A 14.363 14.363 0 0 0 493.543 67.598 C 493.723 67.253 493.861 66.944 493.958 66.656 A 0.772 0.772 0 0 0 494.01 66.403 C 494.017 66.251 493.99 66.081 493.946 65.884 A 7.043 7.043 0 0 0 493.909 65.728 A 5.231 5.231 0 0 0 493.739 65.295 C 493.627 65.037 493.48 64.737 493.298 64.385 A 53.668 53.668 0 0 0 493.03 63.872 C 492.693 63.237 492.214 62.43 491.591 61.429 A 143.604 143.604 0 0 0 490.979 60.454 A 15.611 15.611 0 0 1 490.537 59.681 C 490.413 59.451 490.287 59.208 490.157 58.953 A 128.432 128.432 0 0 1 489.758 58.16 A 81.946 81.946 0 0 0 489.748 58.138 C 489.313 57.22 488.926 56.445 488.635 55.718 A 32.132 32.132 0 0 0 488.171 54.571 A 32.132 32.132 0 0 1 487.708 53.423 C 487.448 52.868 487.245 52.368 487.077 51.968 A 18.849 18.849 0 0 0 486.926 51.617 A 7.033 7.033 0 0 1 486.525 50.723 C 486.493 50.642 486.461 50.559 486.429 50.475 A 21.852 21.852 0 0 0 486.34 50.249 A 8.107 8.107 0 0 1 486.19 49.84 C 486.101 49.58 486.038 49.356 485.979 49.167 A 5.954 5.954 0 0 0 485.95 49.078 A 2.243 2.243 0 0 0 485.769 48.532 A 9.543 9.543 0 0 0 485.608 48.199 A 3.177 3.177 0 0 0 485.484 47.974 C 485.381 47.803 485.277 47.674 485.174 47.569 A 1.859 1.859 0 0 0 485.168 47.564 A 1.176 1.176 0 0 1 484.967 47.394 C 484.898 47.321 484.834 47.234 484.783 47.134 A 1.093 1.093 0 0 1 484.778 47.124 C 484.681 46.979 484.632 46.785 484.631 46.687 A 0.29 0.29 0 0 1 484.631 46.685 A 0.817 0.817 0 0 0 484.617 46.539 C 484.594 46.41 484.539 46.242 484.436 46.001 A 3.951 3.951 0 0 0 484.324 45.67 C 484.26 45.503 484.187 45.336 484.113 45.149 A 8.823 8.823 0 0 1 484.045 44.976 A 4.903 4.903 0 0 1 483.732 44.297 A 11.791 11.791 0 0 1 483.557 43.804 A 22.76 22.76 0 0 1 483.456 43.455 C 483.377 43.178 483.313 42.935 483.252 42.713 A 17.614 17.614 0 0 0 483.215 42.583 A 5.536 5.536 0 0 0 483.056 41.801 A 8.473 8.473 0 0 0 482.922 41.363 A 6.638 6.638 0 0 0 482.742 40.889 C 482.652 40.674 482.558 40.473 482.475 40.286 A 10.091 10.091 0 0 1 482.434 40.191 C 481.904 39.171 481.306 37.743 480.639 35.906 A 85.772 85.772 0 0 1 480.237 34.771 A 117.798 117.798 0 0 1 478.249 28.122 A 73.56 73.56 0 0 1 478.137 27.691 C 477.666 25.988 477.383 24.634 477.249 23.63 A 10.924 10.924 0 0 1 477.161 22.71 A 5.285 5.285 0 0 1 477.448 21.062 A 9.384 9.384 0 0 1 477.795 20.171 A 11.508 11.508 0 0 1 478.123 19.528 C 478.347 19.12 478.562 18.791 478.747 18.531 A 9.141 9.141 0 0 1 478.87 18.365 A 2.63 2.63 0 0 0 479.093 18.037 C 479.187 17.873 479.271 17.687 479.331 17.487 A 2.323 2.323 0 0 0 479.358 17.388 A 3.879 3.879 0 0 0 479.435 16.877 C 479.456 16.639 479.456 16.419 479.456 16.216 C 479.421 15.977 479.34 15.834 479.227 15.769 A 0.32 0.32 0 0 0 479.065 15.728 C 478.988 15.728 478.911 15.667 478.81 15.57 A 7.196 7.196 0 0 1 478.723 15.484 A 1.206 1.206 0 0 1 478.515 15.193 C 478.473 15.115 478.435 15.03 478.398 14.938 A 5.202 5.202 0 0 1 478.381 14.898 A 3.322 3.322 0 0 0 478.089 14.417 C 477.992 14.284 477.879 14.152 477.747 14.019 A 1.353 1.353 0 0 0 477.371 13.762 C 477.162 13.662 476.91 13.588 476.624 13.531 A 6.832 6.832 0 0 1 474.206 12.794 A 8.577 8.577 0 0 1 473.938 12.652 C 473.153 12.19 472.629 11.684 472.369 11.217 A 1.95 1.95 0 0 1 472.327 11.138 C 472.226 10.802 472.033 10.582 471.795 10.477 A 0.856 0.856 0 0 0 471.448 10.406 A 1.112 1.112 0 0 0 470.949 10.513 C 470.798 10.588 470.668 10.704 470.565 10.864 A 1.318 1.318 0 0 0 470.471 11.04 C 470.392 11.238 470.313 11.626 470.26 12.283 A 16.821 16.821 0 0 0 470.227 12.798 C 470.129 13.726 470.081 14.8 470.081 16.021 A 1.576 1.576 0 0 0 470.049 16.183 C 470.039 16.251 470.035 16.313 470.033 16.373 A 4.423 4.423 0 0 0 470.032 16.509 L 470.032 16.753 L 470.032 16.9 L 470.081 16.949 L 470.129 16.997 L 470.129 17.046 C 470.129 17.046 470.129 17.095 470.081 17.095 L 470.081 17.242 A 0.322 0.322 0 0 1 470.064 17.27 C 470.021 17.339 469.978 17.334 469.934 17.29 A 0.387 0.387 0 0 1 469.815 17.191 C 469.778 17.148 469.741 17.098 469.692 17.048 A 0.855 0.855 0 0 0 469.69 17.046 A 0.765 0.765 0 0 0 469.626 16.909 C 469.58 16.827 469.527 16.752 469.495 16.656 L 469.202 16.216 C 469.155 16.123 469.064 16.03 469.014 16.022 A 0.043 0.043 0 0 0 469.006 16.021 A 0.081 0.081 0 0 0 468.993 16.01 C 468.949 15.982 468.909 16.034 468.909 16.167 A 9.865 9.865 0 0 0 468.832 16.832 C 468.796 17.252 468.774 17.749 468.766 18.336 A 39.924 39.924 0 0 0 468.762 18.902 A 854.933 854.933 0 0 0 468.835 20.69 A 504.962 504.962 0 0 0 468.909 22.369 A 43.738 43.738 0 0 0 468.973 23.049 C 469.033 23.637 469.094 24.071 469.154 24.34 A 1.871 1.871 0 0 0 469.202 24.517 C 469.396 25.051 468.962 27.179 467.949 30.852 A 150.646 150.646 0 0 1 467.932 30.913 A 95.499 95.499 0 0 0 467.922 30.951 C 467.655 31.931 467.424 32.838 467.207 33.662 A 58.278 58.278 0 0 1 466.809 35.113 A 116.475 116.475 0 0 0 466.706 35.545 C 466.529 36.297 466.422 36.791 466.384 37.029 A 1.003 1.003 0 0 0 466.37 37.163 C 466.37 37.31 466.37 37.456 466.272 37.554 A 0.841 0.841 0 0 1 466.204 37.674 C 466.171 37.718 466.132 37.749 466.077 37.749 C 465.93 37.749 465.784 38.189 465.491 39.068 A 27.561 27.561 0 0 0 465.26 40.022 C 465.089 40.782 464.911 41.674 464.709 42.681 C 464.669 42.804 464.628 42.96 464.587 43.122 A 62.233 62.233 0 0 0 464.563 43.218 A 4.053 4.053 0 0 0 464.488 43.423 C 464.444 43.553 464.412 43.665 464.382 43.759 A 2.977 2.977 0 0 1 464.368 43.804 C 464.172 44.244 463.782 45.415 463.147 47.369 A 413.823 413.823 0 0 1 462.17 50.31 A 146.227 146.227 0 0 0 461.194 53.326 A 190.771 190.771 0 0 0 460.753 54.662 C 460.394 55.767 460.132 56.614 459.968 57.192 A 20.336 20.336 0 0 0 459.875 57.525 C 459.875 57.569 459.836 57.651 459.828 57.703 A 0.109 0.109 0 0 0 459.827 57.72 A 18.834 18.834 0 0 0 459.701 58.113 C 459.626 58.352 459.57 58.552 459.519 58.723 A 8.484 8.484 0 0 1 459.436 58.99 C 459.394 59.199 459.316 59.409 459.264 59.557 A 4.244 4.244 0 0 0 459.241 59.624 C 459.197 59.755 459.153 59.925 459.075 60.099 A 1.721 1.721 0 0 1 459.045 60.162 L 459.045 60.259 C 458.789 60.9 458.645 61.317 458.613 61.607 A 1.068 1.068 0 0 0 458.606 61.724 C 458.567 61.917 458.62 62.049 458.766 62.145 A 0.753 0.753 0 0 0 458.899 62.212 A 0.63 0.63 0 0 1 458.949 62.235 C 459.114 62.318 459.029 62.396 458.724 62.407 A 2.096 2.096 0 0 1 458.655 62.408 C 458.411 62.408 458.215 62.554 458.118 62.847 A 4.155 4.155 0 0 0 458.086 63.088 C 458.056 63.371 458.031 63.792 458.023 64.337 A 24.788 24.788 0 0 0 458.02 64.703 A 18.047 18.047 0 0 1 458.005 65.396 C 457.993 65.695 457.979 65.982 457.973 66.257 A 10.484 10.484 0 0 0 457.971 66.46 A 25.479 25.479 0 0 1 457.939 66.817 C 457.908 67.139 457.876 67.38 457.845 67.541 A 1.845 1.845 0 0 1 457.825 67.632 A 1.628 1.628 0 0 0 457.811 67.685 C 457.747 67.941 457.886 67.749 458.227 67.071 A 24.656 24.656 0 0 0 458.264 66.997 A 18.926 18.926 0 0 1 458.418 66.733 C 458.578 66.463 458.752 66.18 458.899 65.923 C 459.07 65.624 459.24 65.4 459.379 65.251 A 2.097 2.097 0 0 1 459.436 65.191 C 459.572 65.054 459.666 64.834 459.797 64.567 A 8.537 8.537 0 0 1 459.827 64.507 A 2.404 2.404 0 0 0 460.12 63.677 A 38.974 38.974 0 0 1 460.239 63.247 C 460.352 62.853 460.489 62.399 460.665 61.884 A 26.7 26.7 0 0 1 460.754 61.626 A 54.864 54.864 0 0 1 461.304 60.219 A 46.133 46.133 0 0 1 461.633 59.429 C 461.975 58.794 462.17 58.404 462.268 58.306 A 0.133 0.133 0 0 0 462.323 58.295 C 462.384 58.268 462.415 58.198 462.415 58.16 C 462.449 58.091 462.435 58.023 462.407 57.954 A 1.326 1.326 0 0 0 462.366 57.867 C 462.325 57.703 462.387 57.298 462.553 56.594 A 32.386 32.386 0 0 1 462.659 56.158 A 86.818 86.818 0 0 1 463.048 54.723 A 51.109 51.109 0 0 1 463.538 53.081 A 54.999 54.999 0 0 1 463.786 52.286 C 464.026 51.537 464.246 50.933 464.465 50.494 C 464.612 50.201 464.758 49.761 464.954 49.126 C 465.149 48.492 465.344 47.857 465.491 47.271 C 465.632 46.66 465.727 46.23 465.778 45.937 A 5.852 5.852 0 0 0 465.784 45.904 C 465.784 45.806 465.881 45.562 466.028 45.22 A 6.269 6.269 0 0 1 466.184 44.748 A 6.751 6.751 0 0 1 466.467 44.097 C 466.663 43.658 466.809 43.218 466.956 42.828 C 467.076 42.465 467.164 42.169 467.218 41.94 A 4.012 4.012 0 0 0 467.249 41.802 A 1.672 1.672 0 0 1 467.331 41.273 A 1.22 1.22 0 0 1 467.395 41.119 A 4.164 4.164 0 0 1 467.442 40.908 C 467.479 40.763 467.523 40.649 467.59 40.581 C 467.631 40.5 467.706 40.35 467.758 40.132 A 2.017 2.017 0 0 0 467.786 39.996 A 4.975 4.975 0 0 0 467.926 39.599 A 3.446 3.446 0 0 0 468.03 39.165 C 468.105 38.941 468.179 38.745 468.254 38.578 A 3.759 3.759 0 0 1 468.323 38.433 C 468.439 38.239 468.525 38.137 468.604 38.104 A 0.154 0.154 0 0 1 468.665 38.091 A 0.075 0.075 0 0 1 468.738 38.151 C 468.757 38.204 468.761 38.292 468.762 38.415 A 15.263 15.263 0 0 1 468.762 38.531 A 5.321 5.321 0 0 1 468.702 38.832 C 468.675 38.952 468.642 39.082 468.603 39.22 A 9.75 9.75 0 0 1 468.469 39.654 A 85.525 85.525 0 0 0 468.256 40.227 C 468.222 40.319 468.19 40.407 468.16 40.491 A 13.331 13.331 0 0 0 468.079 40.728 A 8.256 8.256 0 0 0 468.029 40.882 C 467.968 41.076 467.936 41.208 467.933 41.256 A 0.112 0.112 0 0 0 467.932 41.265 A 2.969 2.969 0 0 1 467.931 41.335 C 467.929 41.455 467.915 41.666 467.842 41.966 A 4.057 4.057 0 0 1 467.834 41.997 A 12.613 12.613 0 0 1 467.664 42.589 C 467.61 42.766 467.557 42.947 467.512 43.136 A 5.449 5.449 0 0 0 467.493 43.218 A 81.433 81.433 0 0 1 467.49 43.225 C 467.356 43.583 467.263 43.817 467.211 43.965 A 2.808 2.808 0 0 0 467.2 43.999 A 0.431 0.431 0 0 0 467.119 44.12 C 467.071 44.222 467.038 44.355 467.004 44.488 C 466.956 44.732 466.956 44.976 466.956 45.22 A 5.104 5.104 0 0 0 466.954 45.227 C 466.916 45.381 466.877 45.565 466.814 45.78 A 4.828 4.828 0 0 1 466.76 45.953 A 3.859 3.859 0 0 1 466.502 46.511 A 1.496 1.496 0 0 1 466.418 46.636 C 466.077 47.027 465.979 47.808 466.125 48.98 C 466.176 49.295 466.2 49.601 466.2 49.899 A 5.818 5.818 0 0 1 465.637 52.349 C 465.449 52.773 465.26 53.288 465.116 53.85 A 9.289 9.289 0 0 0 465.1 53.912 C 464.905 54.546 464.807 55.132 464.709 55.621 A 37.786 37.786 0 0 0 464.692 55.796 C 464.614 56.619 464.618 56.903 464.704 56.57 A 2.636 2.636 0 0 0 464.709 56.548 A 3.253 3.253 0 0 0 464.713 56.541 C 464.807 56.352 464.902 56.116 465.041 55.836 A 7.369 7.369 0 0 1 465.051 55.816 A 3.06 3.06 0 0 1 465.306 55.265 A 11.684 11.684 0 0 1 465.442 55.035 A 2.227 2.227 0 0 0 465.623 54.767 C 465.738 54.569 465.854 54.32 465.969 54.02 A 9.096 9.096 0 0 0 466.028 53.863 C 466.272 53.326 466.516 52.74 466.711 52.154 A 14.546 14.546 0 0 0 466.904 51.661 C 467.047 51.278 467.207 50.822 467.391 50.305 A 105.107 105.107 0 0 1 467.639 49.615 A 216.548 216.548 0 0 1 468.811 46.49 A 46.952 46.952 0 0 0 469.608 44.244 A 35.122 35.122 0 0 0 469.836 43.511 A 22.474 22.474 0 0 0 470.024 42.887 C 470.136 42.494 470.215 42.167 470.266 41.894 A 5.204 5.204 0 0 0 470.325 41.509 A 12.568 12.568 0 0 1 470.47 40.465 A 4.753 4.753 0 0 1 470.52 40.24 C 470.594 39.943 470.696 39.619 470.848 39.245 A 9.801 9.801 0 0 1 471.008 38.872 A 13.602 13.602 0 0 1 471.181 38.425 C 471.381 37.933 471.655 37.31 471.985 36.578 Z M 113.359 65.771 A 4.111 4.111 0 0 1 113.356 65.772 A 3.307 3.307 0 0 1 113.353 65.773 A 2.931 2.931 0 0 1 113.349 65.774 A 2.777 2.777 0 0 1 113.346 65.776 A 0.991 0.991 0 0 1 113.155 65.863 C 112.967 65.928 112.735 65.953 112.444 65.937 A 3.869 3.869 0 0 1 112.268 65.923 C 111.78 65.826 111.292 65.728 110.803 65.533 A 2.01 2.01 0 0 0 110.663 65.47 C 110.535 65.417 110.376 65.365 110.178 65.313 A 7.836 7.836 0 0 0 109.875 65.24 C 109.68 65.191 109.473 65.13 109.259 65.069 A 11.377 11.377 0 0 0 108.606 64.898 A 9.314 9.314 0 0 1 108.237 64.807 C 107.815 64.695 107.255 64.521 106.555 64.263 C 105.627 63.921 104.749 63.531 103.772 63.091 A 26.972 26.972 0 0 1 102.236 62.342 A 22.758 22.758 0 0 1 95.422 56.939 A 16.134 16.134 0 0 0 95.294 56.776 A 30.323 30.323 0 0 0 94.397 55.718 C 94.159 55.44 93.953 55.227 93.832 55.105 A 16.45 16.45 0 0 0 93.762 55.035 A 3.762 3.762 0 0 1 93.748 55.021 C 93.459 54.728 93.123 54.294 92.834 53.765 C 92.578 53.326 92.267 52.666 91.88 51.767 A 77.705 77.705 0 0 1 91.467 50.787 C 91.123 50.036 90.859 49.385 90.675 48.809 A 7.586 7.586 0 0 1 90.442 47.906 A 7.948 7.948 0 0 1 90.438 47.886 C 90.31 47.236 90.22 46.36 90.236 45.222 A 20.003 20.003 0 0 1 90.247 44.781 L 90.247 41.753 C 90.283 41.204 90.32 40.792 90.356 40.497 A 6.301 6.301 0 0 1 90.393 40.24 C 90.42 40.077 90.462 39.96 90.519 39.887 A 0.206 0.206 0 0 1 90.686 39.8 A 0.209 0.209 0 0 1 90.688 39.798 C 90.728 39.76 90.767 39.752 90.807 39.724 A 0.199 0.199 0 0 0 90.833 39.703 A 1.946 1.946 0 0 0 90.832 39.688 C 90.832 39.636 90.828 39.551 90.784 39.507 A 0.455 0.455 0 0 1 90.742 39.436 C 90.559 39.047 90.72 38.143 91.223 36.724 A 12.506 12.506 0 0 1 91.297 36.51 C 91.416 36.172 91.524 35.902 91.565 35.699 A 2.407 2.407 0 0 0 91.572 35.662 C 91.588 35.577 91.597 35.498 91.604 35.422 A 4.311 4.311 0 0 0 91.614 35.064 A 2.571 2.571 0 0 0 91.609 35.048 C 91.571 34.939 91.51 34.78 91.442 34.59 A 10.794 10.794 0 0 1 91.37 34.38 A 0.806 0.806 0 0 1 91.354 34.356 C 91.272 34.223 91.272 34.131 91.272 34.038 A 0.761 0.761 0 0 1 91.277 34.029 C 91.312 33.962 91.347 33.919 91.401 33.902 A 0.21 0.21 0 0 1 91.467 33.892 A 1.048 1.048 0 0 0 91.573 33.913 C 91.83 33.95 92.016 33.865 92.149 33.658 A 1.09 1.09 0 0 0 92.249 33.453 A 1.099 1.099 0 0 0 92.262 33.421 C 92.369 33.146 92.387 32.783 92.315 32.329 A 4.969 4.969 0 0 0 92.249 31.988 A 0.079 0.079 0 0 1 92.238 31.975 C 92.213 31.937 92.248 31.895 92.343 31.828 A 2.259 2.259 0 0 1 92.395 31.792 A 0.592 0.592 0 0 1 92.436 31.774 C 92.541 31.731 92.706 31.689 92.834 31.646 A 2.039 2.039 0 0 0 92.874 31.638 C 93.281 31.548 93.392 31.385 93.24 31.181 A 0.673 0.673 0 0 0 93.176 31.109 A 0.178 0.178 0 0 1 93.133 31.037 C 93.085 30.889 93.178 30.627 93.396 30.285 A 4.909 4.909 0 0 1 93.567 30.035 A 7.857 7.857 0 0 1 93.769 29.769 C 93.951 29.54 94.159 29.303 94.391 29.063 A 11.756 11.756 0 0 1 95.178 28.326 C 95.862 27.74 96.545 27.251 97.18 26.91 C 97.803 26.58 98.315 26.333 98.718 26.147 A 30.492 30.492 0 0 1 99.084 25.982 A 7.741 7.741 0 0 1 99.49 25.792 C 99.797 25.66 100.064 25.577 100.305 25.542 C 100.696 25.494 101.135 25.445 101.624 25.542 A 5.341 5.341 0 0 1 103.577 26.128 A 5.324 5.324 0 0 1 104.026 26.421 C 104.39 26.685 104.669 26.968 104.846 27.251 A 1.382 1.382 0 0 1 104.909 27.363 C 105.046 27.635 105.026 27.857 104.85 28.049 A 0.963 0.963 0 0 1 104.7 28.179 C 104.607 28.241 104.534 28.303 104.48 28.364 A 0.522 0.522 0 0 0 104.407 28.472 A 1.009 1.009 0 0 0 104.381 28.563 C 104.372 28.599 104.367 28.633 104.364 28.664 A 1.343 1.343 0 0 0 104.358 28.814 A 0.221 0.221 0 0 1 104.364 28.835 C 104.391 28.955 104.331 29.133 104.184 29.369 A 3.394 3.394 0 0 1 104.065 29.546 C 103.897 29.781 103.706 29.993 103.492 30.214 A 29.163 29.163 0 0 1 103.186 30.523 A 6.434 6.434 0 0 1 103.087 30.606 C 102.787 30.853 102.527 31.016 102.307 31.06 A 0.284 0.284 0 0 0 102.169 31.095 A 0.259 0.259 0 0 0 102.063 31.206 A 0.117 0.117 0 0 0 102.046 31.228 C 102.014 31.28 102.014 31.359 102.014 31.402 C 102.051 31.475 102.033 31.548 102.001 31.6 A 0.243 0.243 0 0 1 101.965 31.646 A 0.765 0.765 0 0 1 101.946 31.664 C 101.885 31.721 101.822 31.76 101.747 31.778 A 0.506 0.506 0 0 1 101.624 31.792 C 101.425 31.872 101.13 32.177 100.738 32.76 A 12.395 12.395 0 0 0 100.452 33.208 A 11.622 11.622 0 0 0 100.203 33.611 C 99.761 34.36 99.342 35.232 98.889 36.138 A 40.01 40.01 0 0 0 98.689 36.606 C 98.495 37.068 98.32 37.513 98.167 37.941 A 15.477 15.477 0 0 0 97.766 39.214 A 20.075 20.075 0 0 0 97.141 44.17 A 20.408 20.408 0 0 0 97.62 48.54 A 22.329 22.329 0 0 0 97.922 49.708 A 17.517 17.517 0 0 0 101.672 56.646 A 11.977 11.977 0 0 0 101.714 56.696 C 101.92 56.945 102.125 57.173 102.319 57.391 A 13.051 13.051 0 0 1 102.893 58.062 A 150.432 150.432 0 0 0 103.062 58.286 C 103.209 58.481 103.314 58.625 103.358 58.718 A 0.192 0.192 0 0 1 103.381 58.794 A 0.514 0.514 0 0 0 103.435 58.921 C 103.524 59.077 103.712 59.29 104.01 59.561 A 9.476 9.476 0 0 0 104.309 59.82 A 3362.468 3362.468 0 0 0 104.877 60.286 C 105.275 60.612 105.709 60.959 106.165 61.285 C 106.592 61.59 106.962 61.838 107.298 62.04 A 8.399 8.399 0 0 0 107.874 62.359 A 8.414 8.414 0 0 0 108.418 62.551 C 109.058 62.75 109.6 62.816 110.022 62.701 A 5.006 5.006 0 0 0 110.49 62.566 C 110.894 62.43 111.378 62.223 111.945 61.938 A 21.941 21.941 0 0 0 112.805 61.48 C 113.977 60.796 114.856 60.21 115.344 59.673 A 18.289 18.289 0 0 1 115.52 59.499 C 115.576 59.444 115.631 59.392 115.686 59.344 A 2.271 2.271 0 0 1 116.028 59.087 A 9.851 9.851 0 0 0 116.188 58.989 C 116.359 58.881 116.501 58.794 116.614 58.794 A 1.97 1.97 0 0 0 116.667 58.776 C 116.76 58.742 116.837 58.704 116.928 58.648 A 2.593 2.593 0 0 0 117.004 58.599 A 0.427 0.427 0 0 0 117.158 58.471 A 0.204 0.204 0 0 0 117.2 58.355 A 0.816 0.816 0 0 1 117.222 58.314 C 117.265 58.239 117.337 58.141 117.468 58.02 A 2.36 2.36 0 0 1 117.59 57.915 A 3.425 3.425 0 0 1 117.643 57.864 C 117.829 57.686 118.056 57.508 118.323 57.329 A 4.143 4.143 0 0 0 118.497 57.166 C 118.792 56.877 119.188 56.422 119.685 55.79 A 39.138 39.138 0 0 0 120.227 55.083 A 144.605 144.605 0 0 0 121.533 53.216 A 69.083 69.083 0 0 0 122.913 51.128 A 187.914 187.914 0 0 0 123.274 50.555 C 123.629 49.991 123.96 49.456 124.267 48.944 A 44.636 44.636 0 0 0 125.256 47.222 A 30.544 30.544 0 0 1 125.273 47.188 C 125.995 45.75 126.38 45.274 126.428 45.855 C 126.428 45.992 126.404 46.178 126.339 46.395 A 2.746 2.746 0 0 1 126.233 46.685 A 4.594 4.594 0 0 1 125.983 47.173 C 125.96 47.213 125.937 47.253 125.913 47.292 A 28.647 28.647 0 0 0 125.696 47.662 C 125.543 47.845 125.41 48.028 125.295 48.199 A 7.098 7.098 0 0 0 125.11 48.492 A 3.809 3.809 0 0 0 125.1 48.516 C 125.025 48.708 124.981 48.866 124.968 48.942 A 0.241 0.241 0 0 0 124.963 48.98 A 1.131 1.131 0 0 1 124.967 48.991 C 125.012 49.131 125.012 49.228 125.012 49.371 A 1.747 1.747 0 0 1 124.998 49.425 C 124.961 49.553 124.904 49.701 124.813 49.867 A 3.05 3.05 0 0 1 124.67 50.103 A 155.477 155.477 0 0 0 124.518 50.332 C 124.395 50.518 124.249 50.739 124.087 50.989 A 56.32 56.32 0 0 0 123.84 51.372 C 123.45 51.91 122.913 52.642 122.278 53.521 L 120.715 55.718 L 121.936 55.083 A 5.537 5.537 0 0 0 121.954 55.073 C 122.14 54.966 122.327 54.844 122.522 54.707 A 18.763 18.763 0 0 0 123.01 54.351 C 123.186 54.175 123.337 54.011 123.468 53.855 A 4.988 4.988 0 0 0 123.792 53.423 A 6.7 6.7 0 0 1 123.833 53.362 C 123.923 53.23 124.013 53.109 124.103 52.998 A 3.949 3.949 0 0 1 124.377 52.691 A 3.265 3.265 0 0 1 124.465 52.606 C 124.616 52.466 124.727 52.39 124.768 52.349 C 124.837 52.349 124.93 52.301 125.013 52.221 A 0.7 0.7 0 0 0 125.11 52.105 L 125.403 51.519 A 1.394 1.394 0 0 1 125.457 51.328 C 125.507 51.186 125.584 51.024 125.687 50.828 A 15.092 15.092 0 0 1 125.842 50.542 A 8.041 8.041 0 0 1 126.008 50.192 A 9.232 9.232 0 0 1 126.575 49.224 C 126.817 48.788 127.011 48.352 127.205 47.964 A 12.763 12.763 0 0 1 127.209 47.954 A 77.144 77.144 0 0 0 127.297 47.722 C 127.355 47.565 127.4 47.436 127.426 47.325 A 0.866 0.866 0 0 0 127.454 47.124 C 127.454 46.978 127.502 46.831 127.649 46.685 A 0.687 0.687 0 0 1 127.67 46.655 C 127.767 46.525 127.907 46.434 128.088 46.343 C 128.235 46.246 128.381 46.148 128.479 46.001 A 0.728 0.728 0 0 0 128.505 45.96 C 128.576 45.836 128.572 45.743 128.528 45.611 C 128.479 45.513 128.479 45.367 128.528 45.22 A 0.524 0.524 0 0 1 128.602 45.112 C 128.63 45.08 128.662 45.048 128.701 45.016 A 1.384 1.384 0 0 1 128.821 44.927 C 129.096 44.744 129.199 44.819 129.17 45.112 A 1.389 1.389 0 0 1 129.163 45.171 C 129.114 45.513 128.87 46.001 128.528 46.636 C 128.45 46.766 128.372 46.882 128.302 46.991 A 3.022 3.022 0 0 0 128.137 47.271 A 3.148 3.148 0 0 0 128.133 47.278 C 128.038 47.47 127.991 47.613 128.04 47.662 A 1.83 1.83 0 0 1 128.045 47.716 C 128.08 48.153 127.979 48.771 127.698 49.615 C 127.454 50.445 127.112 51.275 126.672 52.056 C 126.395 52.611 126.142 53.019 125.896 53.278 A 1.324 1.324 0 0 1 125.598 53.521 A 0.556 0.556 0 0 0 125.515 53.556 C 125.414 53.61 125.344 53.687 125.305 53.765 A 0.27 0.27 0 0 0 125.301 53.769 C 125.209 53.866 125.257 53.961 125.305 54.009 A 0.348 0.348 0 0 1 125.329 54.026 C 125.451 54.124 125.446 54.267 125.354 54.497 A 3.357 3.357 0 0 1 125.122 54.839 C 125.069 54.908 125.01 54.977 124.945 55.048 A 4.429 4.429 0 0 1 124.817 55.181 C 124.652 55.291 124.503 55.385 124.36 55.456 A 1.325 1.325 0 0 1 124.036 55.572 A 1.749 1.749 0 0 0 123.947 55.594 C 123.598 55.691 123.625 55.826 123.987 55.962 A 0.441 0.441 0 0 0 124.209 56.021 C 124.528 56.021 124.934 55.708 125.403 55.083 C 125.586 54.9 125.731 54.717 125.85 54.546 A 5.237 5.237 0 0 0 126.038 54.253 C 126.184 54.009 126.282 53.863 126.233 53.814 C 126.233 53.716 126.233 53.667 126.331 53.619 C 126.356 53.593 126.394 53.568 126.438 53.543 A 3.074 3.074 0 0 1 126.575 53.472 A 0.183 0.183 0 0 0 126.654 53.451 C 126.791 53.385 126.972 53.165 127.252 52.844 A 28.916 28.916 0 0 1 127.258 52.837 C 127.441 52.563 127.644 52.269 127.865 51.944 A 73.429 73.429 0 0 0 128.284 51.324 C 128.625 50.787 128.918 50.249 129.163 49.761 A 5.091 5.091 0 0 0 129.223 49.657 C 129.469 49.224 129.557 48.917 129.602 48.736 A 0.653 0.653 0 0 1 129.609 48.64 A 0.524 0.524 0 0 1 129.749 48.345 A 1.326 1.326 0 0 1 129.836 48.304 C 129.904 48.276 129.973 48.262 130.042 48.296 A 0.525 0.525 0 0 0 130.106 48.293 C 130.186 48.283 130.248 48.252 130.292 48.189 A 0.342 0.342 0 0 0 130.334 48.101 A 0.535 0.535 0 0 0 130.346 48.06 C 130.369 47.968 130.376 47.846 130.368 47.714 A 1.91 1.91 0 0 0 130.334 47.466 A 1.936 1.936 0 0 1 130.322 47.398 C 130.286 47.177 130.29 46.96 130.334 46.783 C 130.334 46.653 130.411 46.523 130.463 46.495 A 0.039 0.039 0 0 1 130.481 46.49 C 130.579 46.49 130.627 46.441 130.676 46.343 A 1.176 1.176 0 0 0 130.67 46.197 A 0.445 0.445 0 0 0 130.627 46.05 C 130.579 45.855 130.627 45.708 130.725 45.562 A 1.611 1.611 0 0 1 130.981 45.352 A 2.213 2.213 0 0 1 131.213 45.22 A 1.246 1.246 0 0 1 131.338 45.177 C 131.474 45.139 131.599 45.132 131.733 45.146 A 1.757 1.757 0 0 1 131.897 45.171 C 132.141 45.22 132.141 45.025 131.799 44.683 C 131.409 44.292 131.409 44.146 131.75 44.195 A 0.383 0.383 0 0 0 131.785 44.21 C 131.844 44.232 131.902 44.237 131.961 44.224 A 0.353 0.353 0 0 0 132.043 44.195 C 132.092 44.146 132.092 44.097 132.092 43.999 A 0.109 0.109 0 0 1 132.081 43.986 C 132.06 43.956 132.052 43.916 132.057 43.878 A 0.131 0.131 0 0 1 132.092 43.804 A 0.761 0.761 0 0 1 132.097 43.794 C 132.132 43.727 132.167 43.685 132.221 43.667 A 0.21 0.21 0 0 1 132.288 43.658 A 0.157 0.157 0 0 1 132.292 43.655 C 132.367 43.621 132.413 43.674 132.452 43.77 A 1.241 1.241 0 0 1 132.483 43.853 A 5.929 5.929 0 0 1 132.479 44.115 C 132.476 44.183 132.471 44.254 132.462 44.334 A 3.66 3.66 0 0 1 132.434 44.537 A 6.678 6.678 0 0 1 132.36 44.875 A 1.734 1.734 0 0 1 132.239 45.22 A 1.544 1.544 0 0 1 132.2 45.294 C 132.137 45.404 132.077 45.475 132.033 45.522 A 1.586 1.586 0 0 1 131.995 45.562 A 0.124 0.124 0 0 0 131.939 45.574 C 131.896 45.596 131.864 45.643 131.835 45.709 A 1.237 1.237 0 0 0 131.799 45.806 A 1.204 1.204 0 0 0 131.763 46.099 A 1.204 1.204 0 0 0 131.799 46.392 C 131.799 46.56 131.776 46.751 131.714 46.965 A 2.65 2.65 0 0 1 131.604 47.271 A 4.274 4.274 0 0 1 131.116 48.345 C 130.629 49.058 130.294 49.729 130.094 50.327 A 4.46 4.46 0 0 0 129.895 51.177 A 2.37 2.37 0 0 1 129.89 51.193 C 129.839 51.341 129.742 51.58 129.553 51.91 A 2.338 2.338 0 0 1 129.546 51.926 C 129.399 52.262 129.159 52.599 128.918 52.984 A 18.462 18.462 0 0 0 128.755 53.25 C 128.668 53.394 128.589 53.53 128.518 53.659 A 9.153 9.153 0 0 0 128.333 54.009 A 1.702 1.702 0 0 0 128.298 54.054 C 128.164 54.233 128.11 54.381 128.094 54.456 A 0.212 0.212 0 0 0 128.088 54.497 A 0.175 0.175 0 0 1 128.108 54.578 C 128.108 54.638 128.08 54.706 128.034 54.801 A 8.239 8.239 0 0 1 127.991 54.888 A 2.21 2.21 0 0 0 127.954 54.944 C 127.905 55.024 127.854 55.114 127.796 55.208 A 2.935 2.935 0 0 1 127.649 55.425 C 127.161 56.011 127.161 56.109 127.649 55.816 A 3.266 3.266 0 0 1 127.713 55.779 C 127.919 55.661 128.048 55.621 128.137 55.621 C 128.235 55.669 128.235 55.767 128.235 56.011 L 128.235 56.402 L 128.235 56.646 A 0.094 0.094 0 0 1 128.24 56.651 C 128.267 56.683 128.254 56.715 128.228 56.747 A 0.609 0.609 0 0 1 128.186 56.792 A 0.373 0.373 0 0 0 128.081 56.809 A 1.184 1.184 0 0 0 127.893 56.89 A 0.176 0.176 0 0 0 127.814 56.914 C 127.72 56.963 127.591 57.083 127.405 57.232 A 60.139 60.139 0 0 0 127.358 57.291 C 127.248 57.428 127.139 57.567 127.029 57.727 A 4.742 4.742 0 0 0 126.819 58.062 A 10.366 10.366 0 0 1 126.705 58.23 C 126.617 58.356 126.52 58.489 126.409 58.625 A 5.319 5.319 0 0 1 126.038 59.038 C 125.83 59.194 125.636 59.35 125.449 59.491 A 4.705 4.705 0 0 1 124.963 59.82 A 243.645 243.645 0 0 0 124.923 59.843 C 124.595 60.03 124.27 60.218 124.036 60.406 A 2.531 2.531 0 0 0 123.849 60.573 C 123.664 60.753 123.473 60.981 123.254 61.236 A 3.274 3.274 0 0 0 123.095 61.408 C 122.838 61.705 122.542 62.129 122.18 62.652 C 121.741 63.189 121.106 63.579 120.178 63.824 A 2.251 2.251 0 0 0 120.048 63.846 C 119.74 63.909 119.403 64.037 119.104 64.165 A 2.484 2.484 0 0 0 119.051 64.189 C 118.799 64.304 118.603 64.444 118.464 64.567 A 2.019 2.019 0 0 0 118.372 64.654 A 6.697 6.697 0 0 1 118.138 64.88 A 1.805 1.805 0 0 1 117.932 65.044 C 117.857 65.157 117.782 65.212 117.729 65.231 A 0.122 0.122 0 0 1 117.688 65.24 A 7.907 7.907 0 0 0 117.662 65.24 C 117.578 65.24 117.455 65.243 117.221 65.272 A 7.553 7.553 0 0 0 117.102 65.288 A 5.722 5.722 0 0 1 116.791 65.317 C 116.571 65.333 116.327 65.342 116.058 65.357 A 15.925 15.925 0 0 0 115.637 65.386 A 23.219 23.219 0 0 0 114.868 65.465 A 7.514 7.514 0 0 0 114.172 65.581 A 4.084 4.084 0 0 0 114.11 65.589 C 113.734 65.636 113.511 65.719 113.369 65.768 A 5.401 5.401 0 0 1 113.366 65.769 M 217.363 65.771 A 4.111 4.111 0 0 1 217.36 65.772 A 3.307 3.307 0 0 1 217.356 65.773 A 2.931 2.931 0 0 1 217.353 65.774 A 2.777 2.777 0 0 1 217.35 65.776 A 0.991 0.991 0 0 1 217.158 65.863 C 216.971 65.928 216.738 65.953 216.448 65.937 A 3.869 3.869 0 0 1 216.272 65.923 C 215.784 65.826 215.295 65.728 214.807 65.533 A 2.01 2.01 0 0 0 214.667 65.47 C 214.539 65.417 214.38 65.365 214.182 65.313 A 7.836 7.836 0 0 0 213.879 65.24 C 213.684 65.191 213.477 65.13 213.263 65.069 A 11.377 11.377 0 0 0 212.61 64.898 A 9.314 9.314 0 0 1 212.241 64.807 C 211.819 64.695 211.259 64.521 210.559 64.263 C 209.631 63.921 208.752 63.531 207.776 63.091 A 26.972 26.972 0 0 1 206.24 62.342 A 22.758 22.758 0 0 1 199.426 56.939 A 16.134 16.134 0 0 0 199.298 56.776 A 30.323 30.323 0 0 0 198.401 55.718 C 198.163 55.44 197.957 55.227 197.836 55.105 A 16.45 16.45 0 0 0 197.766 55.035 A 3.762 3.762 0 0 1 197.752 55.021 C 197.462 54.728 197.127 54.294 196.838 53.765 C 196.582 53.326 196.271 52.666 195.884 51.767 A 77.705 77.705 0 0 1 195.471 50.787 C 195.127 50.036 194.863 49.385 194.679 48.809 A 7.586 7.586 0 0 1 194.446 47.906 A 7.948 7.948 0 0 1 194.442 47.886 C 194.314 47.236 194.224 46.36 194.24 45.222 A 20.003 20.003 0 0 1 194.25 44.781 L 194.25 41.753 C 194.287 41.204 194.324 40.792 194.36 40.497 A 6.301 6.301 0 0 1 194.397 40.24 C 194.424 40.077 194.466 39.96 194.523 39.887 A 0.206 0.206 0 0 1 194.69 39.8 A 0.209 0.209 0 0 1 194.692 39.798 C 194.732 39.76 194.771 39.752 194.811 39.724 A 0.199 0.199 0 0 0 194.836 39.703 A 1.946 1.946 0 0 0 194.836 39.688 C 194.836 39.636 194.832 39.551 194.788 39.507 A 0.455 0.455 0 0 1 194.746 39.436 C 194.563 39.047 194.724 38.143 195.227 36.724 A 12.506 12.506 0 0 1 195.301 36.51 C 195.42 36.172 195.528 35.902 195.569 35.699 A 2.407 2.407 0 0 0 195.576 35.662 C 195.592 35.577 195.601 35.498 195.607 35.422 A 4.311 4.311 0 0 0 195.618 35.064 A 2.571 2.571 0 0 0 195.612 35.048 C 195.575 34.939 195.514 34.78 195.446 34.59 A 10.794 10.794 0 0 1 195.374 34.38 A 0.806 0.806 0 0 1 195.358 34.356 C 195.276 34.223 195.276 34.131 195.276 34.038 A 0.761 0.761 0 0 1 195.281 34.029 C 195.316 33.962 195.351 33.919 195.405 33.902 A 0.21 0.21 0 0 1 195.471 33.892 A 1.048 1.048 0 0 0 195.577 33.913 C 195.834 33.95 196.02 33.865 196.152 33.658 A 1.09 1.09 0 0 0 196.252 33.453 A 1.099 1.099 0 0 0 196.266 33.421 C 196.373 33.146 196.391 32.783 196.319 32.329 A 4.969 4.969 0 0 0 196.252 31.988 A 0.079 0.079 0 0 1 196.242 31.975 C 196.217 31.937 196.252 31.895 196.347 31.828 A 2.259 2.259 0 0 1 196.399 31.792 A 0.592 0.592 0 0 1 196.44 31.774 C 196.545 31.731 196.71 31.689 196.838 31.646 A 2.039 2.039 0 0 0 196.878 31.638 C 197.285 31.548 197.396 31.385 197.243 31.181 A 0.673 0.673 0 0 0 197.18 31.109 A 0.178 0.178 0 0 1 197.137 31.037 C 197.088 30.889 197.182 30.627 197.4 30.285 A 4.909 4.909 0 0 1 197.571 30.035 A 7.857 7.857 0 0 1 197.773 29.769 C 197.955 29.54 198.162 29.303 198.395 29.063 A 11.756 11.756 0 0 1 199.182 28.326 C 199.866 27.74 200.549 27.251 201.184 26.91 C 201.807 26.58 202.319 26.333 202.722 26.147 A 30.492 30.492 0 0 1 203.088 25.982 A 7.741 7.741 0 0 1 203.494 25.792 C 203.801 25.66 204.067 25.577 204.309 25.542 C 204.7 25.494 205.139 25.445 205.627 25.542 A 5.341 5.341 0 0 1 207.581 26.128 A 5.324 5.324 0 0 1 208.03 26.421 C 208.394 26.685 208.673 26.968 208.85 27.251 A 1.382 1.382 0 0 1 208.913 27.363 C 209.05 27.635 209.03 27.857 208.854 28.049 A 0.963 0.963 0 0 1 208.704 28.179 C 208.611 28.241 208.538 28.303 208.484 28.364 A 0.522 0.522 0 0 0 208.411 28.472 A 1.009 1.009 0 0 0 208.385 28.563 C 208.376 28.599 208.371 28.633 208.368 28.664 A 1.343 1.343 0 0 0 208.362 28.814 A 0.221 0.221 0 0 1 208.368 28.835 C 208.395 28.955 208.335 29.133 208.188 29.369 A 3.394 3.394 0 0 1 208.069 29.546 C 207.901 29.781 207.71 29.993 207.496 30.214 A 29.163 29.163 0 0 1 207.19 30.523 A 6.434 6.434 0 0 1 207.091 30.606 C 206.791 30.853 206.531 31.016 206.311 31.06 A 0.284 0.284 0 0 0 206.173 31.095 A 0.259 0.259 0 0 0 206.067 31.206 A 0.117 0.117 0 0 0 206.05 31.228 C 206.018 31.28 206.018 31.359 206.018 31.402 C 206.055 31.475 206.037 31.548 206.005 31.6 A 0.243 0.243 0 0 1 205.969 31.646 A 0.765 0.765 0 0 1 205.95 31.664 C 205.889 31.721 205.826 31.76 205.751 31.778 A 0.506 0.506 0 0 1 205.627 31.792 C 205.429 31.872 205.134 32.177 204.742 32.76 A 12.395 12.395 0 0 0 204.456 33.208 A 11.622 11.622 0 0 0 204.207 33.611 C 203.765 34.36 203.346 35.232 202.893 36.138 A 40.01 40.01 0 0 0 202.693 36.606 C 202.499 37.068 202.324 37.513 202.17 37.941 A 15.477 15.477 0 0 0 201.77 39.214 A 20.075 20.075 0 0 0 201.145 44.17 A 20.408 20.408 0 0 0 201.624 48.54 A 22.329 22.329 0 0 0 201.926 49.708 A 17.517 17.517 0 0 0 205.676 56.646 A 11.977 11.977 0 0 0 205.717 56.696 C 205.923 56.945 206.129 57.173 206.323 57.391 A 13.051 13.051 0 0 1 206.897 58.062 A 150.432 150.432 0 0 0 207.066 58.286 C 207.213 58.481 207.318 58.625 207.362 58.718 A 0.192 0.192 0 0 1 207.385 58.794 A 0.514 0.514 0 0 0 207.439 58.921 C 207.528 59.077 207.716 59.29 208.014 59.561 A 9.476 9.476 0 0 0 208.313 59.82 A 3362.468 3362.468 0 0 0 208.881 60.286 C 209.279 60.612 209.713 60.959 210.168 61.285 C 210.596 61.59 210.966 61.838 211.302 62.04 A 8.399 8.399 0 0 0 211.877 62.359 A 8.414 8.414 0 0 0 212.422 62.551 C 213.061 62.75 213.604 62.816 214.026 62.701 A 5.006 5.006 0 0 0 214.494 62.566 C 214.898 62.43 215.382 62.223 215.948 61.938 A 21.941 21.941 0 0 0 216.809 61.48 C 217.981 60.796 218.86 60.21 219.348 59.673 A 18.289 18.289 0 0 1 219.524 59.499 C 219.58 59.444 219.635 59.392 219.69 59.344 A 2.271 2.271 0 0 1 220.032 59.087 A 9.851 9.851 0 0 0 220.192 58.989 C 220.363 58.881 220.505 58.794 220.618 58.794 A 1.97 1.97 0 0 0 220.671 58.776 C 220.764 58.742 220.841 58.704 220.932 58.648 A 2.593 2.593 0 0 0 221.008 58.599 A 0.427 0.427 0 0 0 221.162 58.471 A 0.204 0.204 0 0 0 221.204 58.355 A 0.816 0.816 0 0 1 221.226 58.314 C 221.269 58.239 221.34 58.141 221.472 58.02 A 2.36 2.36 0 0 1 221.594 57.915 A 3.425 3.425 0 0 1 221.647 57.864 C 221.833 57.686 222.059 57.508 222.327 57.329 A 4.143 4.143 0 0 0 222.501 57.166 C 222.796 56.877 223.192 56.422 223.689 55.79 A 39.138 39.138 0 0 0 224.231 55.083 A 144.605 144.605 0 0 0 225.537 53.216 A 69.083 69.083 0 0 0 226.917 51.128 A 187.914 187.914 0 0 0 227.278 50.555 C 227.633 49.991 227.963 49.456 228.271 48.944 A 44.636 44.636 0 0 0 229.26 47.222 A 30.544 30.544 0 0 1 229.277 47.188 C 229.999 45.75 230.384 45.274 230.432 45.855 C 230.432 45.992 230.408 46.178 230.343 46.395 A 2.746 2.746 0 0 1 230.237 46.685 A 4.594 4.594 0 0 1 229.987 47.173 C 229.964 47.213 229.94 47.253 229.917 47.292 A 28.647 28.647 0 0 0 229.7 47.662 C 229.547 47.845 229.414 48.028 229.299 48.199 A 7.098 7.098 0 0 0 229.114 48.492 A 3.809 3.809 0 0 0 229.104 48.516 C 229.029 48.708 228.985 48.866 228.972 48.942 A 0.241 0.241 0 0 0 228.967 48.98 A 1.131 1.131 0 0 1 228.971 48.991 C 229.016 49.131 229.016 49.228 229.016 49.371 A 1.747 1.747 0 0 1 229.002 49.425 C 228.965 49.553 228.908 49.701 228.817 49.867 A 3.05 3.05 0 0 1 228.674 50.103 A 155.477 155.477 0 0 0 228.522 50.332 C 228.399 50.518 228.253 50.739 228.091 50.989 A 56.32 56.32 0 0 0 227.844 51.372 C 227.454 51.91 226.917 52.642 226.282 53.521 L 224.719 55.718 L 225.94 55.083 A 5.537 5.537 0 0 0 225.958 55.073 C 226.144 54.966 226.331 54.844 226.525 54.707 A 18.763 18.763 0 0 0 227.014 54.351 C 227.19 54.175 227.341 54.011 227.472 53.855 A 4.988 4.988 0 0 0 227.795 53.423 A 6.7 6.7 0 0 1 227.837 53.362 C 227.927 53.23 228.017 53.109 228.107 52.998 A 3.949 3.949 0 0 1 228.381 52.691 A 3.265 3.265 0 0 1 228.469 52.606 C 228.62 52.466 228.731 52.39 228.772 52.349 C 228.841 52.349 228.933 52.301 229.016 52.221 A 0.7 0.7 0 0 0 229.114 52.105 L 229.407 51.519 A 1.394 1.394 0 0 1 229.461 51.328 C 229.511 51.186 229.588 51.024 229.691 50.828 A 15.092 15.092 0 0 1 229.846 50.542 A 8.041 8.041 0 0 1 230.012 50.192 A 9.232 9.232 0 0 1 230.579 49.224 C 230.821 48.788 231.015 48.352 231.209 47.964 A 12.763 12.763 0 0 1 231.213 47.954 A 77.144 77.144 0 0 0 231.301 47.722 C 231.359 47.565 231.404 47.436 231.43 47.325 A 0.866 0.866 0 0 0 231.458 47.124 C 231.458 46.978 231.506 46.831 231.653 46.685 A 0.687 0.687 0 0 1 231.674 46.655 C 231.771 46.525 231.911 46.434 232.092 46.343 C 232.239 46.246 232.385 46.148 232.483 46.001 A 0.728 0.728 0 0 0 232.509 45.96 C 232.58 45.836 232.576 45.743 232.532 45.611 C 232.483 45.513 232.483 45.367 232.532 45.22 A 0.524 0.524 0 0 1 232.606 45.112 C 232.634 45.08 232.666 45.048 232.704 45.016 A 1.384 1.384 0 0 1 232.825 44.927 C 233.1 44.744 233.203 44.819 233.174 45.112 A 1.389 1.389 0 0 1 233.167 45.171 C 233.118 45.513 232.874 46.001 232.532 46.636 C 232.454 46.766 232.376 46.882 232.306 46.991 A 3.022 3.022 0 0 0 232.141 47.271 A 3.148 3.148 0 0 0 232.137 47.278 C 232.042 47.47 231.995 47.613 232.043 47.662 A 1.83 1.83 0 0 1 232.049 47.716 C 232.084 48.153 231.983 48.771 231.702 49.615 C 231.458 50.445 231.116 51.275 230.676 52.056 C 230.399 52.611 230.146 53.019 229.9 53.278 A 1.324 1.324 0 0 1 229.602 53.521 A 0.556 0.556 0 0 0 229.518 53.556 C 229.418 53.61 229.348 53.687 229.309 53.765 A 0.27 0.27 0 0 0 229.305 53.769 C 229.213 53.866 229.261 53.961 229.309 54.009 A 0.348 0.348 0 0 1 229.333 54.026 C 229.455 54.124 229.45 54.267 229.358 54.497 A 3.357 3.357 0 0 1 229.126 54.839 C 229.073 54.908 229.014 54.977 228.948 55.048 A 4.429 4.429 0 0 1 228.821 55.181 C 228.656 55.291 228.507 55.385 228.364 55.456 A 1.325 1.325 0 0 1 228.04 55.572 A 1.749 1.749 0 0 0 227.951 55.594 C 227.602 55.691 227.629 55.826 227.991 55.962 A 0.441 0.441 0 0 0 228.213 56.021 C 228.532 56.021 228.938 55.708 229.407 55.083 C 229.59 54.9 229.735 54.717 229.854 54.546 A 5.237 5.237 0 0 0 230.042 54.253 C 230.188 54.009 230.286 53.863 230.237 53.814 C 230.237 53.716 230.237 53.667 230.334 53.619 C 230.36 53.593 230.398 53.568 230.442 53.543 A 3.074 3.074 0 0 1 230.579 53.472 A 0.183 0.183 0 0 0 230.658 53.451 C 230.795 53.385 230.976 53.165 231.256 52.844 A 28.916 28.916 0 0 1 231.262 52.837 C 231.445 52.563 231.647 52.269 231.869 51.944 A 73.429 73.429 0 0 0 232.288 51.324 C 232.629 50.787 232.922 50.249 233.167 49.761 A 5.091 5.091 0 0 0 233.227 49.657 C 233.473 49.224 233.561 48.917 233.606 48.736 A 0.653 0.653 0 0 1 233.613 48.64 A 0.524 0.524 0 0 1 233.752 48.345 A 1.326 1.326 0 0 1 233.84 48.304 C 233.908 48.276 233.977 48.262 234.045 48.296 A 0.525 0.525 0 0 0 234.11 48.293 C 234.19 48.283 234.252 48.252 234.296 48.189 A 0.342 0.342 0 0 0 234.338 48.101 A 0.535 0.535 0 0 0 234.35 48.06 C 234.373 47.968 234.38 47.846 234.371 47.714 A 1.91 1.91 0 0 0 234.338 47.466 A 1.936 1.936 0 0 1 234.326 47.398 C 234.29 47.177 234.294 46.96 234.338 46.783 C 234.338 46.653 234.415 46.523 234.466 46.495 A 0.039 0.039 0 0 1 234.485 46.49 C 234.583 46.49 234.631 46.441 234.68 46.343 A 1.176 1.176 0 0 0 234.674 46.197 A 0.445 0.445 0 0 0 234.631 46.05 C 234.583 45.855 234.631 45.708 234.729 45.562 A 1.611 1.611 0 0 1 234.985 45.352 A 2.213 2.213 0 0 1 235.217 45.22 A 1.246 1.246 0 0 1 235.342 45.177 C 235.478 45.139 235.603 45.132 235.737 45.146 A 1.757 1.757 0 0 1 235.901 45.171 C 236.145 45.22 236.145 45.025 235.803 44.683 C 235.413 44.292 235.413 44.146 235.754 44.195 A 0.383 0.383 0 0 0 235.789 44.21 C 235.847 44.232 235.906 44.237 235.965 44.224 A 0.353 0.353 0 0 0 236.047 44.195 C 236.096 44.146 236.096 44.097 236.096 43.999 A 0.109 0.109 0 0 1 236.085 43.986 C 236.064 43.956 236.056 43.916 236.061 43.878 A 0.131 0.131 0 0 1 236.096 43.804 A 0.761 0.761 0 0 1 236.101 43.794 C 236.136 43.727 236.171 43.685 236.225 43.667 A 0.21 0.21 0 0 1 236.292 43.658 A 0.157 0.157 0 0 1 236.296 43.655 C 236.371 43.621 236.417 43.674 236.456 43.77 A 1.241 1.241 0 0 1 236.487 43.853 A 5.929 5.929 0 0 1 236.483 44.115 C 236.48 44.183 236.475 44.254 236.466 44.334 A 3.66 3.66 0 0 1 236.438 44.537 A 6.678 6.678 0 0 1 236.364 44.875 A 1.734 1.734 0 0 1 236.243 45.22 A 1.544 1.544 0 0 1 236.203 45.294 C 236.141 45.404 236.081 45.475 236.037 45.522 A 1.586 1.586 0 0 1 235.999 45.562 A 0.124 0.124 0 0 0 235.943 45.574 C 235.9 45.596 235.868 45.643 235.839 45.709 A 1.237 1.237 0 0 0 235.803 45.806 A 1.204 1.204 0 0 0 235.767 46.099 A 1.204 1.204 0 0 0 235.803 46.392 C 235.803 46.56 235.78 46.751 235.718 46.965 A 2.65 2.65 0 0 1 235.608 47.271 A 4.274 4.274 0 0 1 235.12 48.345 C 234.633 49.058 234.298 49.729 234.098 50.327 A 4.46 4.46 0 0 0 233.899 51.177 A 2.37 2.37 0 0 1 233.894 51.193 C 233.843 51.341 233.746 51.58 233.557 51.91 A 2.338 2.338 0 0 1 233.55 51.926 C 233.403 52.262 233.163 52.599 232.922 52.984 A 18.462 18.462 0 0 0 232.759 53.25 C 232.672 53.394 232.593 53.53 232.522 53.659 A 9.153 9.153 0 0 0 232.336 54.009 A 1.702 1.702 0 0 0 232.302 54.054 C 232.168 54.233 232.114 54.381 232.098 54.456 A 0.212 0.212 0 0 0 232.092 54.497 A 0.175 0.175 0 0 1 232.111 54.578 C 232.111 54.638 232.084 54.706 232.038 54.801 A 8.239 8.239 0 0 1 231.995 54.888 A 2.21 2.21 0 0 0 231.958 54.944 C 231.909 55.024 231.858 55.114 231.8 55.208 A 2.935 2.935 0 0 1 231.653 55.425 C 231.165 56.011 231.165 56.109 231.653 55.816 A 3.266 3.266 0 0 1 231.717 55.779 C 231.923 55.661 232.052 55.621 232.141 55.621 C 232.239 55.669 232.239 55.767 232.239 56.011 L 232.239 56.402 L 232.239 56.646 A 0.094 0.094 0 0 1 232.244 56.651 C 232.271 56.683 232.258 56.715 232.232 56.747 A 0.609 0.609 0 0 1 232.19 56.792 A 0.373 0.373 0 0 0 232.085 56.809 A 1.184 1.184 0 0 0 231.897 56.89 A 0.176 0.176 0 0 0 231.818 56.914 C 231.724 56.963 231.594 57.083 231.409 57.232 A 60.139 60.139 0 0 0 231.362 57.291 C 231.252 57.428 231.143 57.567 231.033 57.727 A 4.742 4.742 0 0 0 230.823 58.062 A 10.366 10.366 0 0 1 230.709 58.23 C 230.621 58.356 230.523 58.489 230.413 58.625 A 5.319 5.319 0 0 1 230.042 59.038 C 229.834 59.194 229.64 59.35 229.453 59.491 A 4.705 4.705 0 0 1 228.967 59.82 A 243.645 243.645 0 0 0 228.927 59.843 C 228.599 60.03 228.274 60.218 228.04 60.406 A 2.531 2.531 0 0 0 227.853 60.573 C 227.668 60.753 227.477 60.981 227.258 61.236 A 3.274 3.274 0 0 0 227.099 61.408 C 226.842 61.705 226.546 62.129 226.184 62.652 C 225.745 63.189 225.11 63.579 224.182 63.824 A 2.251 2.251 0 0 0 224.052 63.846 C 223.743 63.909 223.407 64.037 223.108 64.165 A 2.484 2.484 0 0 0 223.055 64.189 C 222.803 64.304 222.607 64.444 222.468 64.567 A 2.019 2.019 0 0 0 222.375 64.654 A 6.697 6.697 0 0 1 222.142 64.88 A 1.805 1.805 0 0 1 221.936 65.044 C 221.861 65.157 221.786 65.212 221.733 65.231 A 0.122 0.122 0 0 1 221.692 65.24 A 7.907 7.907 0 0 0 221.666 65.24 C 221.582 65.24 221.459 65.243 221.225 65.272 A 7.553 7.553 0 0 0 221.106 65.288 A 5.722 5.722 0 0 1 220.795 65.317 C 220.575 65.333 220.331 65.342 220.062 65.357 A 15.925 15.925 0 0 0 219.641 65.386 A 23.219 23.219 0 0 0 218.872 65.465 A 7.514 7.514 0 0 0 218.176 65.581 A 4.084 4.084 0 0 0 218.114 65.589 C 217.738 65.636 217.515 65.719 217.373 65.768 A 5.401 5.401 0 0 1 217.37 65.769 M 428.248 10.703 A 291.498 291.498 0 0 0 427.942 10.747 A 3.135 3.135 0 0 0 427.44 10.876 C 427.355 10.905 427.276 10.937 427.207 10.969 A 1.787 1.787 0 0 0 427.161 10.992 C 426.917 11.089 426.819 11.187 426.819 11.333 A 2.923 2.923 0 0 0 426.822 11.512 A 0.592 0.592 0 0 0 426.917 11.822 C 426.965 11.968 427.161 12.115 427.405 12.359 A 1.741 1.741 0 0 1 427.505 12.431 C 427.597 12.502 427.661 12.566 427.698 12.603 A 0.63 0.63 0 0 1 427.753 12.634 C 427.789 12.656 427.814 12.679 427.828 12.701 A 0.087 0.087 0 0 1 427.844 12.749 L 427.991 12.896 A 3.973 3.973 0 0 0 428.064 13.038 C 428.094 13.092 428.129 13.152 428.176 13.223 A 3.361 3.361 0 0 0 428.186 13.238 C 428.187 13.24 428.188 13.242 428.189 13.244 C 428.286 13.435 428.381 13.532 428.381 13.628 A 0.825 0.825 0 0 1 428.443 13.695 C 428.455 13.71 428.466 13.726 428.472 13.741 A 0.089 0.089 0 0 1 428.479 13.775 A 0.286 0.286 0 0 1 428.506 13.807 C 428.539 13.851 428.567 13.909 428.574 13.95 A 0.11 0.11 0 0 1 428.577 13.97 A 0.636 0.636 0 0 0 428.653 14.085 C 428.696 14.137 428.747 14.189 428.799 14.241 A 21.977 21.977 0 0 0 428.821 14.263 C 428.918 14.41 429.016 14.507 429.114 14.605 A 0.823 0.823 0 0 1 429.164 14.632 C 429.216 14.663 429.256 14.693 429.307 14.724 A 0.823 0.823 0 0 0 429.358 14.751 A 1.422 1.422 0 0 1 429.541 14.855 C 429.575 14.879 429.61 14.906 429.644 14.94 A 0.823 0.823 0 0 1 429.651 14.947 C 429.699 14.995 429.796 15.091 429.892 15.236 A 1.732 1.732 0 0 1 429.895 15.24 A 2.2 2.2 0 0 1 429.91 15.287 C 429.944 15.398 429.95 15.446 429.992 15.531 A 0.888 0.888 0 0 0 429.993 15.533 A 0.823 0.823 0 0 0 430.02 15.583 C 430.051 15.635 430.081 15.675 430.112 15.726 A 0.823 0.823 0 0 1 430.139 15.777 C 430.139 15.81 430.162 15.843 430.192 15.876 A 1.229 1.229 0 0 0 430.237 15.923 A 0.71 0.71 0 0 0 430.302 16.026 C 430.333 16.068 430.369 16.112 430.408 16.162 A 2.093 2.093 0 0 1 430.481 16.265 L 430.823 16.607 A 360.134 360.134 0 0 1 427.937 16.562 C 425.558 16.515 423.718 16.451 422.386 16.386 A 90.25 90.25 0 0 1 421.936 16.363 A 45.276 45.276 0 0 1 420.691 16.243 C 419.519 16.112 418.567 15.948 417.834 15.728 A 51.336 51.336 0 0 0 417.308 15.623 C 417.03 15.571 416.779 15.533 416.565 15.533 L 416.418 15.533 C 415.588 15.484 415.149 16.07 415.1 17.242 A 8.383 8.383 0 0 0 415.098 17.252 C 415.05 17.543 415.002 17.928 414.905 18.313 A 8.443 8.443 0 0 1 414.905 18.316 C 414.86 18.672 414.816 18.988 414.734 19.263 A 2.462 2.462 0 0 1 414.709 19.341 A 0.629 0.629 0 0 0 414.691 19.476 C 414.688 19.599 414.716 19.739 414.776 19.894 A 2.068 2.068 0 0 0 414.856 20.074 A 11.709 11.709 0 0 0 415.072 20.482 A 43.092 43.092 0 0 0 415.393 21.05 A 9.95 9.95 0 0 1 415.747 21.661 C 415.857 21.868 415.955 22.076 416.028 22.271 A 4.325 4.325 0 0 1 416.347 23.328 A 6.764 6.764 0 0 1 416.418 23.882 A 7.463 7.463 0 0 0 416.455 24.085 C 416.471 24.167 416.487 24.241 416.503 24.311 A 13.212 13.212 0 0 0 416.565 24.566 A 0.703 0.703 0 0 0 416.602 24.676 C 416.655 24.798 416.732 24.859 416.809 24.859 C 416.956 24.859 417.102 24.859 417.2 24.81 A 0.948 0.948 0 0 1 417.304 24.766 C 417.365 24.744 417.434 24.726 417.506 24.717 A 0.724 0.724 0 0 1 417.59 24.712 C 417.754 24.671 417.952 24.665 418.214 24.721 A 2.502 2.502 0 0 1 418.372 24.761 C 418.656 24.802 419.041 24.876 419.528 25.012 A 12.517 12.517 0 0 1 419.836 25.103 A 6.018 6.018 0 0 0 420.456 25.287 C 420.889 25.393 421.391 25.478 421.936 25.542 C 422.766 25.591 423.596 25.64 424.426 25.64 A 101.596 101.596 0 0 1 424.459 25.638 C 425.139 25.603 425.95 25.567 426.929 25.512 A 135.557 135.557 0 0 0 428.04 25.445 A 159.866 159.866 0 0 0 432.678 25.103 A 67.823 67.823 0 0 0 433.813 25.022 C 434.909 24.935 435.889 24.834 436.731 24.761 C 437.688 24.674 438.296 24.587 438.521 24.535 A 0.769 0.769 0 0 0 438.586 24.517 A 0.421 0.421 0 0 1 438.684 24.492 C 438.917 24.45 439.512 24.403 440.442 24.322 C 441.321 24.285 442.31 24.221 443.429 24.171 A 79.179 79.179 0 0 1 444.592 24.126 A 273.609 273.609 0 0 0 446.32 24.016 C 446.776 23.986 447.21 23.955 447.623 23.925 A 126.856 126.856 0 0 0 448.792 23.833 A 38.907 38.907 0 0 0 449.376 23.778 C 450.097 23.705 450.557 23.631 450.714 23.557 A 0.237 0.237 0 0 0 450.745 23.54 C 450.868 23.499 451.167 23.388 451.669 23.237 A 21.456 21.456 0 0 1 451.965 23.15 A 53.278 53.278 0 0 0 452.919 22.934 C 453.243 22.858 453.585 22.777 453.944 22.695 A 65.102 65.102 0 0 1 454.309 22.613 C 454.968 22.503 455.573 22.365 456.101 22.242 A 191.218 191.218 0 0 1 456.604 22.124 C 457.144 22 457.472 21.911 457.618 21.857 A 0.623 0.623 0 0 0 457.678 21.831 C 457.727 21.686 456.954 21.588 455.407 21.539 A 48.617 48.617 0 0 0 455.383 21.538 A 492.535 492.535 0 0 0 453.481 21.541 C 452.345 21.545 451.074 21.557 449.67 21.587 A 34.56 34.56 0 0 1 448.959 21.614 C 448.252 21.633 447.649 21.624 447.131 21.587 A 7.842 7.842 0 0 1 446.778 21.555 C 446.332 21.502 446.07 21.42 446.014 21.309 A 0.111 0.111 0 0 1 446.008 21.294 C 445.813 21.099 446.057 20.904 446.643 20.757 C 447.222 20.624 448.327 20.531 449.961 20.552 A 39.499 39.499 0 0 1 450.452 20.562 C 451.039 20.478 451.554 20.43 452.029 20.356 A 9.131 9.131 0 0 0 452.258 20.318 A 19.539 19.539 0 0 0 452.268 20.317 C 452.791 20.269 453.08 20.222 453.228 20.22 A 0.695 0.695 0 0 1 453.235 20.22 C 453.36 20.179 453.484 20.172 453.669 20.141 A 3.347 3.347 0 0 0 453.772 20.122 A 6.335 6.335 0 0 0 454.242 20.111 A 3.358 3.358 0 0 0 454.553 20.074 A 1.499 1.499 0 0 0 454.83 20.049 A 1.337 1.337 0 0 0 455.188 19.927 A 0.506 0.506 0 0 0 455.31 19.869 C 455.386 19.817 455.432 19.75 455.432 19.683 C 455.432 19.598 454.582 19.587 452.851 19.586 A 1034.174 1034.174 0 0 0 452.014 19.585 C 449.768 19.634 446.838 19.488 443.274 19.195 C 440.694 19.083 438.573 18.999 436.931 18.944 A 244.196 244.196 0 0 0 435.559 18.902 C 435.657 18.706 435.852 18.413 436.096 18.023 A 47.025 47.025 0 0 0 437.677 17.992 A 216.643 216.643 0 0 0 439.368 17.925 A 72.92 72.92 0 0 1 440.987 17.907 C 441.955 17.907 442.887 17.927 443.774 17.968 A 47.329 47.329 0 0 1 445.422 18.072 C 447.247 18.216 448.458 18.265 449.101 18.221 A 4.464 4.464 0 0 0 449.133 18.218 A 15.321 15.321 0 0 0 449.371 18.216 C 449.968 18.207 450.854 18.169 451.965 18.169 A 129.444 129.444 0 0 1 454.904 18.08 A 63.862 63.862 0 0 1 455.92 18.072 A 77.644 77.644 0 0 0 456.93 18.05 C 459.47 17.979 460.511 17.801 460.12 17.583 C 459.192 17.339 453.137 17.046 441.956 16.607 L 436.829 16.607 A 3.845 3.845 0 0 1 436.902 16.468 C 436.963 16.357 437.024 16.256 437.085 16.141 A 3.492 3.492 0 0 0 437.122 16.07 A 3.694 3.694 0 0 1 437.194 15.932 C 437.263 15.807 437.326 15.708 437.363 15.635 A 0.865 0.865 0 0 0 437.366 15.63 A 2.258 2.258 0 0 0 437.515 15.404 C 437.581 15.29 437.629 15.182 437.659 15.093 C 437.7 14.97 437.706 14.811 437.678 14.647 A 1.267 1.267 0 0 0 437.659 14.556 A 2.775 2.775 0 0 0 437.612 14.392 C 437.555 14.211 437.463 13.982 437.317 13.726 C 437.512 13.287 437.561 12.945 437.463 12.701 A 1.713 1.713 0 0 0 437.232 12.308 A 2.941 2.941 0 0 0 436.975 12.017 A 0.56 0.56 0 0 1 436.831 11.909 A 0.553 0.553 0 0 1 436.731 11.773 C 436.643 11.685 436.475 11.636 436.191 11.556 A 58.169 58.169 0 0 1 436.096 11.529 C 435.899 11.463 435.658 11.397 435.388 11.332 A 21.905 21.905 0 0 0 434.973 11.236 A 9.706 9.706 0 0 1 434.583 11.176 A 4.783 4.783 0 0 0 433.801 11.089 A 82.307 82.307 0 0 1 432.88 11.01 C 432.597 10.983 432.3 10.952 431.984 10.912 A 23.34 23.34 0 0 1 431.848 10.894 A 147.059 147.059 0 0 1 430.829 10.823 C 430.573 10.804 430.332 10.785 430.11 10.766 A 37.98 37.98 0 0 1 429.895 10.747 C 429.456 10.699 429.114 10.65 428.821 10.65 C 428.653 10.65 428.462 10.673 428.248 10.703 Z M 162.805 16.656 L 163.879 17.73 L 162.512 17.73 A 5.853 5.853 0 0 1 162.314 17.743 C 161.837 17.767 161.513 17.718 161.34 17.632 C 161.171 17.547 161.111 17.425 161.099 17.203 A 1.923 1.923 0 0 1 161.096 17.095 A 0.935 0.935 0 0 0 161.077 16.901 A 0.827 0.827 0 0 0 160.95 16.607 A 1.651 1.651 0 0 0 160.817 16.483 C 160.764 16.441 160.71 16.412 160.657 16.412 A 5.636 5.636 0 0 1 160.504 16.41 C 160.407 16.407 160.291 16.401 160.15 16.382 A 3.873 3.873 0 0 1 160.022 16.363 C 159.631 16.363 159.241 16.314 158.752 16.314 A 4.776 4.776 0 0 0 158.399 16.282 C 158.331 16.279 158.263 16.277 158.197 16.277 A 3.643 3.643 0 0 0 157.678 16.314 A 6.206 6.206 0 0 0 157.5 16.346 C 157.353 16.375 157.244 16.404 157.183 16.433 A 0.156 0.156 0 0 0 157.141 16.46 A 0.087 0.087 0 0 1 157.103 16.478 C 157 16.505 156.716 16.503 156.206 16.472 A 30.306 30.306 0 0 1 156.018 16.46 A 22.404 22.404 0 0 1 155.187 16.442 C 154.939 16.433 154.677 16.421 154.4 16.407 A 6679.18 6679.18 0 0 1 153.528 16.363 A 49.876 49.876 0 0 0 151.372 16.205 A 888.338 888.338 0 0 0 150.696 16.167 A 60.244 60.244 0 0 0 150.045 16.103 C 149.643 16.065 149.298 16.036 149.004 16.01 A 35.219 35.219 0 0 1 148.596 15.972 A 55.541 55.541 0 0 0 147.287 15.793 C 146.876 15.741 146.486 15.695 146.116 15.65 A 90.844 90.844 0 0 1 145.959 15.63 A 52.201 52.201 0 0 0 145.943 15.628 C 145.327 15.551 144.864 15.505 144.554 15.465 A 5.915 5.915 0 0 1 144.348 15.435 C 144.181 15.435 143.99 15.389 143.777 15.329 A 146.696 146.696 0 0 1 143.469 15.24 A 3.253 3.253 0 0 1 142.506 14.954 A 2.476 2.476 0 0 1 142.493 14.947 A 14.815 14.815 0 0 0 142.023 14.8 A 54.67 54.67 0 0 0 141.516 14.654 C 141.125 14.556 140.833 14.458 140.54 14.41 L 139.661 14.263 L 140.002 16.021 C 140.1 16.558 140.198 17.144 140.247 17.779 C 140.321 18.302 140.339 18.768 140.343 19.177 A 35.284 35.284 0 0 1 140.344 19.537 L 140.344 20.122 A 7.48 7.48 0 0 0 140.326 20.556 C 140.319 21.061 140.365 21.52 140.442 21.978 C 140.491 22.515 140.784 23.052 141.223 23.492 A 5.719 5.719 0 0 0 141.582 23.858 C 141.878 24.133 142.149 24.314 142.395 24.419 A 2.304 2.304 0 0 0 143.286 24.649 A 5.592 5.592 0 0 0 143.713 24.663 C 144.062 24.663 144.49 24.663 145.03 24.698 A 16.082 16.082 0 0 1 145.227 24.712 A 26.782 26.782 0 0 0 146.173 24.834 A 19.327 19.327 0 0 1 147.082 24.956 A 2.782 2.782 0 0 0 147.271 24.976 C 147.66 25.004 148.317 24.998 149.182 24.956 C 150.256 24.956 151.428 24.908 152.747 24.859 A 66.364 66.364 0 0 1 154.266 24.81 C 154.622 24.801 154.968 24.792 155.297 24.779 A 25.096 25.096 0 0 0 155.676 24.761 C 156.555 24.761 157.19 24.712 157.629 24.761 A 32.614 32.614 0 0 0 159.021 24.804 A 125.158 125.158 0 0 0 160.559 24.81 A 251.062 251.062 0 0 0 161.329 24.809 C 162.064 24.807 162.695 24.798 163.245 24.761 A 26.36 26.36 0 0 0 164.41 24.731 A 121.072 121.072 0 0 0 165.686 24.663 C 166.36 24.663 166.97 24.631 167.516 24.619 A 16.628 16.628 0 0 1 167.883 24.615 C 171.621 24.615 174.731 24.518 177.262 24.373 A 117.814 117.814 0 0 0 177.307 24.371 C 179.895 24.224 181.409 24.078 181.897 23.833 A 2.625 2.625 0 0 1 182.14 23.726 C 182.289 23.669 182.465 23.62 182.678 23.589 A 2.313 2.313 0 0 1 183.142 23.498 C 183.301 23.479 183.459 23.467 183.606 23.443 C 183.948 23.443 184.241 23.394 184.583 23.345 A 6.093 6.093 0 0 0 184.849 23.263 C 185.043 23.197 185.2 23.132 185.334 23.067 A 3.298 3.298 0 0 0 185.364 23.052 A 4.551 4.551 0 0 1 185.946 22.85 A 2.448 2.448 0 0 1 186.145 22.808 A 2.99 2.99 0 0 1 186.618 22.692 C 186.736 22.673 186.849 22.663 186.954 22.662 A 1.86 1.86 0 0 1 186.975 22.662 A 7.025 7.025 0 0 0 187.584 22.633 C 187.86 22.609 188.159 22.57 188.489 22.515 C 189.075 22.466 189.661 22.32 190.247 22.222 A 8.77 8.77 0 0 0 190.726 22.121 C 190.989 22.057 191.226 21.988 191.414 21.929 A 9.813 9.813 0 0 0 191.565 21.88 A 7.129 7.129 0 0 0 191.655 21.854 C 191.909 21.778 191.987 21.734 191.92 21.692 A 0.158 0.158 0 0 0 191.907 21.685 A 1.323 1.323 0 0 1 191.711 21.597 C 191.623 21.551 191.529 21.496 191.418 21.441 A 1.235 1.235 0 0 1 191.25 21.338 C 191.136 21.256 191.046 21.166 190.979 21.099 C 190.784 20.953 190.735 20.806 190.784 20.757 A 0.097 0.097 0 0 1 190.817 20.685 C 190.875 20.63 191.005 20.586 191.209 20.518 A 152.913 152.913 0 0 1 191.223 20.513 A 4.095 4.095 0 0 0 191.432 20.443 C 191.898 20.272 192.018 20.105 191.76 19.976 A 0.807 0.807 0 0 0 191.525 19.855 C 191.2 19.74 190.652 19.683 189.905 19.683 A 47.952 47.952 0 0 1 188.983 19.677 C 188.66 19.671 188.318 19.659 187.952 19.634 C 187.219 19.634 186.584 19.585 186.047 19.537 A 12.957 12.957 0 0 0 185.666 19.491 C 185.284 19.452 185.008 19.442 184.827 19.44 A 10.542 10.542 0 0 0 184.68 19.439 C 184.485 19.488 184.485 19.585 184.68 19.732 C 185.093 20.007 185.075 20.067 184.624 19.911 A 6.57 6.57 0 0 1 184.534 19.878 A 17.479 17.479 0 0 0 183.097 19.468 A 21.029 21.029 0 0 0 182.043 19.244 A 32.466 32.466 0 0 0 181.162 19.138 C 180.617 19.081 180.007 19.03 179.358 18.999 A 21.016 21.016 0 0 0 178.863 18.97 C 178.484 18.952 178.135 18.943 177.807 18.921 A 9.938 9.938 0 0 1 177.551 18.902 C 177.081 18.816 176.723 18.768 176.543 18.725 A 0.82 0.82 0 0 1 176.477 18.706 A 4.24 4.24 0 0 0 176.158 18.642 C 175.809 18.584 175.303 18.526 174.64 18.467 A 59.291 59.291 0 0 0 173.987 18.413 A 164.104 164.104 0 0 0 171.985 18.346 A 81.722 81.722 0 0 0 169.836 18.316 C 168.665 18.316 167.786 18.218 167.2 18.072 A 2.968 2.968 0 0 1 166.986 18.011 C 166.57 17.872 166.451 17.697 166.663 17.486 C 166.83 17.36 167.463 17.306 168.593 17.263 A 97.796 97.796 0 0 1 169.202 17.242 A 108.698 108.698 0 0 1 171.582 17.272 A 535.286 535.286 0 0 1 174.182 17.339 A 46.058 46.058 0 0 1 176.014 17.425 C 176.523 17.459 177.001 17.5 177.445 17.543 A 47.144 47.144 0 0 1 178.674 17.681 A 10.179 10.179 0 0 0 178.799 17.697 C 179.422 17.772 179.53 17.715 179.163 17.486 C 179.025 17.44 178.585 17.351 177.844 17.259 A 25.254 25.254 0 0 0 177.698 17.242 C 177.161 17.174 176.554 17.13 175.879 17.094 A 107.456 107.456 0 0 0 174.915 17.046 A 241.022 241.022 0 0 1 173.633 16.982 C 173.374 16.968 173.126 16.955 172.891 16.941 A 82.16 82.16 0 0 1 172.229 16.9 A 32.22 32.22 0 0 1 171.848 16.872 C 171.412 16.838 171.125 16.804 171.004 16.769 A 0.264 0.264 0 0 1 170.959 16.753 C 170.912 16.753 170.679 16.707 170.261 16.659 A 13.51 13.51 0 0 0 170.227 16.656 C 169.836 16.656 169.348 16.607 168.811 16.607 C 168.274 16.607 167.834 16.558 167.444 16.509 A 5.56 5.56 0 0 1 167.267 16.481 C 167.088 16.45 166.967 16.415 166.902 16.365 A 0.149 0.149 0 0 1 166.858 16.314 C 166.858 16.265 166.956 16.07 167.053 15.874 A 4.071 4.071 0 0 1 167.23 15.502 C 167.297 15.374 167.371 15.24 167.444 15.093 C 167.542 14.947 167.59 14.8 167.688 14.703 A 3.312 3.312 0 0 1 167.69 14.698 C 167.751 14.577 167.811 14.475 167.86 14.381 A 1.204 1.204 0 0 0 167.932 14.214 A 0.7 0.7 0 0 0 167.969 13.988 C 167.969 13.909 167.957 13.824 167.932 13.726 A 1.983 1.983 0 0 0 167.871 13.527 C 167.826 13.404 167.762 13.262 167.673 13.095 A 5.692 5.692 0 0 0 167.59 12.945 A 2.596 2.596 0 0 0 167.689 12.724 C 167.793 12.456 167.813 12.238 167.749 12.05 A 0.669 0.669 0 0 0 167.737 12.017 A 1.924 1.924 0 0 0 167.554 11.724 C 167.49 11.639 167.416 11.553 167.333 11.468 A 3.239 3.239 0 0 0 167.297 11.431 L 167.053 11.187 A 0.264 0.264 0 0 0 167.011 11.155 C 166.928 11.101 166.754 11.022 166.516 10.943 C 166.223 10.845 165.881 10.796 165.491 10.699 A 43.678 43.678 0 0 1 164.935 10.625 A 107.242 107.242 0 0 1 164.417 10.552 A 92.02 92.02 0 0 0 163.568 10.479 C 163.306 10.458 163.031 10.436 162.737 10.415 A 100.151 100.151 0 0 0 162.61 10.406 C 162.138 10.372 161.713 10.338 161.334 10.305 A 44.413 44.413 0 0 1 160.852 10.259 A 7 7 0 0 0 160.569 10.23 C 160.312 10.209 160.085 10.199 159.906 10.167 A 1.496 1.496 0 0 1 159.875 10.162 C 159.631 10.162 159.387 10.21 159.094 10.259 A 6.522 6.522 0 0 0 158.785 10.317 C 158.68 10.34 158.583 10.365 158.494 10.398 A 1.268 1.268 0 0 0 158.362 10.454 A 1.181 1.181 0 0 0 158.24 10.524 C 158.123 10.601 158.057 10.684 158.02 10.796 A 1.117 1.117 0 0 0 158.082 11.126 A 6.138 6.138 0 0 0 158.118 11.236 C 158.213 11.331 158.355 11.52 158.544 11.71 A 3.372 3.372 0 0 0 158.557 11.724 A 1.741 1.741 0 0 1 158.658 11.796 C 158.749 11.867 158.813 11.932 158.85 11.968 A 0.223 0.223 0 0 1 158.879 11.97 C 158.948 11.979 158.953 12.022 158.997 12.066 L 159.143 12.212 A 0.186 0.186 0 0 1 159.167 12.244 C 159.208 12.309 159.249 12.424 159.29 12.505 L 159.485 12.896 A 0.199 0.199 0 0 1 159.506 12.921 C 159.535 12.961 159.542 13.001 159.581 13.041 A 0.209 0.209 0 0 0 159.583 13.042 C 159.583 13.076 159.605 13.109 159.635 13.142 A 1.229 1.229 0 0 0 159.68 13.189 A 0.368 0.368 0 0 1 159.72 13.238 C 159.758 13.292 159.802 13.371 159.871 13.476 A 3.5 3.5 0 0 0 159.875 13.482 A 2.637 2.637 0 0 1 160.035 13.651 C 160.068 13.69 160.095 13.728 160.116 13.767 A 0.422 0.422 0 0 1 160.12 13.775 A 3.074 3.074 0 0 1 160.256 13.846 C 160.3 13.871 160.339 13.896 160.364 13.921 A 0.823 0.823 0 0 1 160.414 13.949 C 160.466 13.979 160.506 14.01 160.557 14.04 A 0.823 0.823 0 0 0 160.608 14.068 C 160.694 14.111 160.742 14.192 160.82 14.312 A 4.58 4.58 0 0 0 160.852 14.361 C 160.899 14.455 160.901 14.549 160.945 14.6 A 0.107 0.107 0 0 0 160.95 14.605 A 0.852 0.852 0 0 0 160.951 14.607 C 160.988 14.681 161.025 14.727 161.04 14.766 A 0.094 0.094 0 0 1 161.047 14.8 A 0.326 0.326 0 0 1 161.075 14.832 C 161.114 14.883 161.153 14.954 161.192 14.994 A 0.215 0.215 0 0 0 161.194 14.996 A 0.213 0.213 0 0 1 161.196 14.998 C 161.244 15.047 161.293 15.143 161.389 15.24 C 161.519 15.413 161.687 15.547 161.86 15.712 A 3.833 3.833 0 0 1 161.926 15.777 A 2.118 2.118 0 0 1 162.454 16.218 C 162.523 16.296 162.592 16.379 162.662 16.468 A 11.018 11.018 0 0 1 162.805 16.656 Z M 64.832 50.805 A 0.279 0.279 0 0 1 64.758 50.831 A 0.256 0.256 0 0 1 64.709 50.835 A 1.003 1.003 0 0 0 64.639 50.852 C 64.5 50.89 64.42 50.951 64.387 51.048 A 0.392 0.392 0 0 0 64.368 51.177 A 0.304 0.304 0 0 1 64.354 51.258 C 64.322 51.369 64.239 51.544 64.126 51.806 A 17.558 17.558 0 0 0 64.124 51.812 A 9.109 9.109 0 0 1 64.012 52.06 C 63.883 52.339 63.725 52.647 63.538 52.984 A 6.01 6.01 0 0 0 63.129 53.697 A 6.625 6.625 0 0 0 62.805 54.497 A 10.236 10.236 0 0 0 62.746 54.63 C 62.537 55.108 62.406 55.511 62.317 55.913 C 62.25 56.148 62.183 56.383 62.115 56.587 A 4.47 4.47 0 0 1 62.024 56.841 A 3.481 3.481 0 0 1 62.001 56.887 C 61.9 57.081 61.824 57.18 61.773 57.236 A 1.086 1.086 0 0 1 61.731 57.281 A 0.222 0.222 0 0 0 61.627 57.308 C 61.466 57.392 61.306 57.669 61.145 58.111 C 60.95 58.599 60.852 59.185 60.754 59.82 A 1.475 1.475 0 0 1 60.699 60.232 A 1.342 1.342 0 0 1 60.559 60.552 C 60.493 60.716 60.406 60.858 60.311 60.963 A 0.774 0.774 0 0 1 60.168 61.089 A 19.853 19.853 0 0 1 60.167 61.091 C 59.826 61.48 59.729 61.479 59.924 61.138 A 0.77 0.77 0 0 0 59.94 61.085 C 60.009 60.815 59.897 60.586 59.485 60.357 A 1.469 1.469 0 0 1 59.253 60.124 A 1.773 1.773 0 0 1 58.997 59.673 A 1.452 1.452 0 0 1 58.986 59.599 C 58.97 59.459 58.977 59.331 59 59.215 A 1.093 1.093 0 0 1 59.094 58.941 C 59.241 58.697 59.436 58.599 59.729 58.648 A 1.072 1.072 0 0 0 59.8 58.646 A 0.814 0.814 0 0 0 60.217 58.501 A 1.324 1.324 0 0 0 60.325 58.412 A 1.298 1.298 0 0 0 60.608 58.013 A 2.612 2.612 0 0 1 60.664 57.883 C 60.743 57.713 60.822 57.594 60.901 57.476 C 60.976 57.363 61.051 57.308 61.104 57.289 A 0.122 0.122 0 0 1 61.145 57.281 C 61.243 57.281 61.292 57.232 61.34 57.134 C 61.389 57.037 61.389 56.89 61.389 56.744 A 1.652 1.652 0 0 0 61.367 56.681 C 61.352 56.643 61.337 56.609 61.321 56.579 A 0.297 0.297 0 0 0 61.194 56.451 A 0.346 0.346 0 0 0 61.156 56.418 C 61.07 56.354 60.98 56.359 60.852 56.402 A 0.786 0.786 0 0 1 60.827 56.408 C 60.686 56.438 60.599 56.413 60.522 56.333 A 0.568 0.568 0 0 1 60.461 56.255 C 60.364 56.109 60.364 55.913 60.364 55.669 A 1.929 1.929 0 0 1 60.396 55.557 C 60.421 55.477 60.453 55.391 60.493 55.302 A 2.88 2.88 0 0 1 60.657 54.986 C 60.803 54.742 60.999 54.351 61.243 53.814 C 61.438 53.326 61.584 52.837 61.731 52.349 A 1.019 1.019 0 0 1 61.758 52.268 C 61.85 52.024 62.007 51.938 62.227 51.983 A 0.778 0.778 0 0 1 62.317 52.007 A 1.999 1.999 0 0 0 62.375 52.035 C 62.596 52.137 62.639 52.096 62.503 51.912 A 1.7 1.7 0 0 0 62.463 51.861 A 0.928 0.928 0 0 1 62.371 51.751 C 62.326 51.689 62.282 51.617 62.237 51.537 A 9.221 9.221 0 0 1 62.024 51.128 A 11.349 11.349 0 0 0 62.007 51.077 C 61.967 50.959 61.928 50.849 61.897 50.743 A 1.401 1.401 0 0 1 61.829 50.347 C 61.78 50.103 61.877 50.054 62.073 50.103 A 2.181 2.181 0 0 0 62.149 50.112 C 62.436 50.143 62.561 50.088 62.561 49.908 C 62.561 49.8 62.456 49.666 62.284 49.525 A 2.684 2.684 0 0 0 62.073 49.371 A 1.434 1.434 0 0 1 61.996 49.329 C 61.91 49.28 61.848 49.23 61.803 49.181 A 0.452 0.452 0 0 1 61.731 49.078 A 0.237 0.237 0 0 1 61.719 49.002 C 61.719 48.913 61.77 48.824 61.861 48.735 A 1.158 1.158 0 0 1 61.975 48.638 A 1.225 1.225 0 0 1 62.154 48.53 C 62.299 48.456 62.491 48.382 62.724 48.308 A 9.453 9.453 0 0 1 63.098 48.199 C 63.245 48.15 63.293 48.101 63.342 48.003 A 0.366 0.366 0 0 0 63.356 47.973 C 63.384 47.901 63.383 47.83 63.334 47.759 A 0.34 0.34 0 0 0 63.293 47.71 A 0.45 0.45 0 0 1 63.28 47.704 C 63.218 47.67 63.155 47.618 63.092 47.588 A 0.214 0.214 0 0 0 63 47.564 A 3.718 3.718 0 0 0 62.935 47.564 C 62.842 47.566 62.765 47.575 62.672 47.624 A 0.71 0.71 0 0 0 62.61 47.662 A 2.791 2.791 0 0 0 62.604 47.662 C 62.561 47.662 62.561 47.664 62.561 47.71 L 62.512 47.71 L 62.415 47.71 A 0.093 0.093 0 0 0 62.388 47.715 C 62.362 47.722 62.336 47.739 62.31 47.749 A 0.113 0.113 0 0 1 62.268 47.759 C 62.122 47.759 61.682 47.808 61.047 47.906 A 13.583 13.583 0 0 1 60.421 47.956 C 59.662 48.001 58.837 47.993 57.922 47.954 A 24.632 24.632 0 0 0 57.562 47.943 C 56.829 47.924 56.19 47.942 55.632 47.984 A 14.065 14.065 0 0 0 54.944 48.052 A 10.889 10.889 0 0 1 54.642 48.117 C 54.092 48.228 53.496 48.304 52.795 48.345 A 31.383 31.383 0 0 0 52.03 48.405 C 51.531 48.448 51.054 48.492 50.598 48.492 C 50.47 48.524 50.342 48.535 50.227 48.538 A 4.929 4.929 0 0 1 50.061 48.54 A 12.971 12.971 0 0 1 49.861 48.556 C 49.486 48.581 49.179 48.584 48.939 48.564 A 2.397 2.397 0 0 1 48.743 48.54 A 1.273 1.273 0 0 1 48.679 48.539 C 48.421 48.526 48.24 48.435 48.059 48.345 A 6.255 6.255 0 0 1 47.924 48.207 C 47.866 48.145 47.808 48.079 47.75 48.002 A 2.229 2.229 0 0 1 47.62 47.808 A 0.538 0.538 0 0 1 47.542 47.744 C 47.435 47.639 47.348 47.488 47.229 47.369 C 46.936 47.076 46.692 46.685 46.448 46.246 A 5.911 5.911 0 0 1 46.299 45.959 C 46.141 45.635 46.035 45.339 45.959 45.074 A 10.304 10.304 0 0 1 45.955 45.055 C 45.888 44.787 45.844 44.564 45.791 44.338 A 6.631 6.631 0 0 0 45.715 44.048 A 41.269 41.269 0 0 1 45.587 43.541 C 45.323 42.465 45.159 41.614 45.032 41.021 A 5.954 5.954 0 0 1 45.01 40.852 C 44.943 40.264 44.995 39.873 45.129 39.605 C 45.325 39.361 45.667 39.165 46.155 39.068 C 46.887 38.921 48.108 38.921 49.817 39.019 A 224.817 224.817 0 0 0 50.879 39.092 A 274.379 274.379 0 0 0 52.014 39.165 A 68.61 68.61 0 0 0 52.893 39.185 C 53.796 39.199 54.773 39.195 55.823 39.155 A 47.643 47.643 0 0 0 58.02 39.019 A 1451.073 1451.073 0 0 0 58.365 39.004 C 59.164 38.971 59.889 38.942 60.523 38.952 A 11.997 11.997 0 0 1 61.047 38.97 A 25.101 25.101 0 0 0 61.13 38.974 C 62.197 39.016 62.709 38.965 62.756 38.775 A 0.601 0.601 0 0 1 62.72 38.734 C 62.675 38.679 62.603 38.585 62.479 38.453 A 4.777 4.777 0 0 0 62.366 38.335 A 10.892 10.892 0 0 0 61.936 37.841 A 5.084 5.084 0 0 0 61.536 37.456 A 15.906 15.906 0 0 1 60.954 36.841 A 28.414 28.414 0 0 1 60.51 36.333 A 7.866 7.866 0 0 0 60.285 36.091 A 11.49 11.49 0 0 0 59.192 35.113 A 10.09 10.09 0 0 1 58.917 34.894 C 58.414 34.478 58.018 34.063 57.727 33.648 A 57.851 57.851 0 0 0 57.257 33.031 A 210.491 210.491 0 0 0 56.75 32.378 A 131.327 131.327 0 0 1 56.7 32.321 C 56.38 31.954 56.104 31.636 55.872 31.451 A 4.501 4.501 0 0 1 55.56 31.107 A 3.362 3.362 0 0 1 55.286 30.718 A 2.623 2.623 0 0 1 55.162 30.551 C 55.046 30.381 54.981 30.232 54.944 30.083 A 0.481 0.481 0 0 0 54.865 29.806 A 0.429 0.429 0 0 0 54.749 29.693 A 0.445 0.445 0 0 0 54.681 29.613 A 0.462 0.462 0 0 0 54.358 29.497 A 0.267 0.267 0 0 1 54.314 29.493 C 54.165 29.468 53.939 29.323 53.674 29.058 C 53.506 28.857 53.316 28.632 53.133 28.369 A 4.614 4.614 0 0 1 52.893 27.984 A 4.467 4.467 0 0 1 52.621 27.576 A 4.799 4.799 0 0 1 52.258 26.812 A 0.92 0.92 0 0 0 52.129 26.621 C 51.946 26.409 51.638 26.22 51.184 26.031 A 3.14 3.14 0 0 1 50.969 25.954 C 50.467 25.757 49.927 25.405 49.348 24.899 A 12.217 12.217 0 0 1 48.547 24.126 A 18.555 18.555 0 0 1 47.998 23.325 C 47.651 22.788 47.395 22.312 47.229 21.88 A 3.52 3.52 0 0 0 46.204 20.269 C 44.934 19.146 44.836 18.511 45.911 18.316 C 46.094 18.279 46.442 18.215 46.913 18.144 A 30.741 30.741 0 0 1 47.424 18.072 A 47.385 47.385 0 0 1 47.799 17.998 A 129.815 129.815 0 0 1 48.987 17.779 A 0.879 0.879 0 0 0 49.126 17.718 C 49.204 17.676 49.29 17.617 49.396 17.537 A 6.624 6.624 0 0 0 49.524 17.437 A 2.863 2.863 0 0 0 49.675 17.315 A 8.338 8.338 0 0 0 50.11 16.9 A 4.157 4.157 0 0 1 50.278 16.742 C 50.412 16.621 50.54 16.518 50.644 16.415 A 1.902 1.902 0 0 0 50.647 16.412 A 1.508 1.508 0 0 1 50.739 16.326 C 50.855 16.228 50.971 16.167 51.086 16.167 L 54.553 14.751 A 4.494 4.494 0 0 0 54.742 14.747 C 54.939 14.739 55.106 14.719 55.244 14.694 A 2.864 2.864 0 0 0 55.432 14.654 C 55.623 14.616 55.784 14.607 55.892 14.605 A 4.398 4.398 0 0 1 55.969 14.605 A 1.689 1.689 0 0 1 56.018 14.605 C 56.08 14.607 56.135 14.616 56.156 14.659 A 0.099 0.099 0 0 1 56.165 14.703 A 0.131 0.131 0 0 1 56.176 14.715 C 56.199 14.746 56.222 14.798 56.238 14.86 A 0.742 0.742 0 0 1 56.262 15.044 C 56.262 15.322 56.359 15.793 56.579 16.484 A 18.823 18.823 0 0 0 56.75 16.997 A 8.785 8.785 0 0 0 57.057 17.716 C 57.34 18.312 57.741 19.034 58.261 19.868 A 41.817 41.817 0 0 0 59.094 21.148 C 60.641 23.647 61.576 25.341 61.925 26.255 A 2.517 2.517 0 0 1 62.073 26.763 A 0.807 0.807 0 0 1 62.079 26.781 C 62.114 26.897 62.122 27.009 62.149 27.072 A 0.108 0.108 0 0 0 62.17 27.105 C 62.25 27.264 62.458 27.616 62.821 28.187 A 63.701 63.701 0 0 0 63.098 28.619 A 55.468 55.468 0 0 0 63.873 29.9 A 38.93 38.93 0 0 0 64.758 31.255 A 286.416 286.416 0 0 0 65.168 31.902 C 65.556 32.513 65.868 33 66.125 33.404 A 12.849 12.849 0 0 1 66.206 33.526 C 66.364 33.769 66.488 33.981 66.569 34.172 A 1.37 1.37 0 0 1 66.663 34.478 A 0.773 0.773 0 0 1 66.701 34.606 C 66.743 34.805 66.703 34.992 66.663 35.113 A 3.492 3.492 0 0 1 66.626 35.184 C 66.565 35.299 66.504 35.4 66.443 35.511 A 3.845 3.845 0 0 0 66.37 35.65 A 1.611 1.611 0 0 0 66.16 35.906 A 2.213 2.213 0 0 0 66.028 36.138 C 65.93 36.333 65.881 36.626 65.881 36.919 L 65.686 38.775 L 67.102 38.726 A 1.463 1.463 0 0 0 67.267 38.716 A 3.589 3.589 0 0 0 67.981 38.531 C 68.145 38.465 68.287 38.377 68.392 38.283 A 0.774 0.774 0 0 0 68.518 38.14 A 7.614 7.614 0 0 1 68.624 38.036 C 68.735 37.929 68.846 37.835 68.958 37.798 A 0.761 0.761 0 0 1 69.018 37.762 C 69.1 37.717 69.163 37.705 69.208 37.702 A 0.541 0.541 0 0 1 69.25 37.701 A 0.105 0.105 0 0 1 69.277 37.745 C 69.294 37.8 69.276 37.883 69.202 37.994 C 69.164 38.07 69.155 38.146 69.153 38.199 A 1.079 1.079 0 0 0 69.153 38.238 A 1.229 1.229 0 0 0 69.2 38.283 C 69.233 38.313 69.266 38.335 69.299 38.335 C 69.397 38.335 69.543 38.287 69.69 38.238 C 69.781 38.177 69.873 38.135 69.965 38.088 A 1.615 1.615 0 0 0 70.129 37.994 C 70.227 37.945 70.325 37.847 70.374 37.798 A 0.231 0.231 0 0 0 70.39 37.789 C 70.441 37.758 70.436 37.728 70.413 37.712 A 0.072 0.072 0 0 0 70.374 37.701 C 70.288 37.701 70.278 37.626 70.341 37.543 A 0.361 0.361 0 0 1 70.374 37.505 A 0.438 0.438 0 0 1 70.396 37.452 C 70.459 37.322 70.593 37.189 70.764 37.017 A 3.504 3.504 0 0 1 70.809 36.959 C 70.94 36.791 71.067 36.655 71.155 36.48 A 3.236 3.236 0 0 1 71.176 36.401 C 71.216 36.256 71.245 36.173 71.204 36.089 A 0.164 0.164 0 0 1 71.166 36.064 C 71.108 36.011 71.121 35.928 71.204 35.845 A 0.275 0.275 0 0 1 71.292 35.743 C 71.344 35.706 71.412 35.678 71.497 35.65 A 4.347 4.347 0 0 1 71.57 35.602 C 71.678 35.533 71.758 35.486 71.838 35.406 A 0.337 0.337 0 0 0 71.862 35.345 C 71.879 35.286 71.872 35.23 71.831 35.19 A 0.165 0.165 0 0 0 71.79 35.162 A 5.666 5.666 0 0 1 71.75 35.082 C 71.727 35.034 71.708 34.99 71.698 34.955 A 0.147 0.147 0 0 1 71.692 34.917 C 71.704 34.892 71.714 34.871 71.722 34.851 A 5.886 5.886 0 0 0 71.723 34.85 M 102.342 43.198 A 0.918 0.918 0 0 1 102.356 43.169 A 1.373 1.373 0 0 0 102.351 43.024 C 102.347 42.993 102.342 42.959 102.334 42.923 A 1.002 1.002 0 0 0 102.307 42.828 C 102.258 42.73 102.258 42.583 102.307 42.437 A 0.784 0.784 0 0 1 102.37 42.146 A 1.393 1.393 0 0 1 102.502 41.9 C 102.733 41.531 102.746 41.38 102.459 41.446 A 1.104 1.104 0 0 0 102.405 41.46 C 102.092 41.505 102.025 41.427 102.203 41.189 A 1.705 1.705 0 0 1 102.258 41.119 C 102.307 40.972 102.356 40.826 102.356 40.581 A 1.207 1.207 0 0 0 102.355 40.548 C 102.35 40.364 102.304 40.177 102.258 39.947 A 1.217 1.217 0 0 1 102.166 39.691 C 102.146 39.612 102.132 39.526 102.123 39.432 A 2.836 2.836 0 0 1 102.112 39.165 A 2.663 2.663 0 0 1 102.112 39.147 C 102.113 38.944 102.138 38.72 102.185 38.521 A 1.712 1.712 0 0 1 102.258 38.287 A 4.732 4.732 0 0 0 102.265 38.267 C 102.33 38.069 102.395 37.828 102.46 37.544 A 16.113 16.113 0 0 0 102.551 37.115 A 37.732 37.732 0 0 0 102.692 36.388 A 10.538 10.538 0 0 0 102.795 35.699 A 141.471 141.471 0 0 0 102.879 35.317 A 14.06 14.06 0 0 1 103.137 34.283 C 103.271 33.913 103.383 33.613 103.487 33.367 A 5.207 5.207 0 0 1 103.625 33.062 A 21.783 21.783 0 0 0 103.888 32.525 A 5.901 5.901 0 0 0 104.016 32.232 C 104.058 32.023 104.099 31.851 104.08 31.744 A 0.18 0.18 0 0 0 104.065 31.695 A 0.111 0.111 0 0 1 104.056 31.667 C 104.033 31.556 104.126 31.32 104.26 30.962 A 3.44 3.44 0 0 1 104.382 30.679 C 104.458 30.521 104.548 30.358 104.649 30.186 A 50.919 50.919 0 0 1 104.944 29.693 C 105.235 29.208 105.429 28.772 105.623 28.384 A 12.763 12.763 0 0 1 105.627 28.374 A 5.028 5.028 0 0 0 105.696 28.18 C 105.772 27.951 105.803 27.784 105.789 27.665 A 0.351 0.351 0 0 0 105.774 27.593 C 105.683 27.366 105.719 27.265 105.843 27.292 A 0.276 0.276 0 0 1 105.872 27.3 A 3.171 3.171 0 0 0 105.924 27.3 C 106.026 27.298 106.108 27.286 106.21 27.202 A 0.755 0.755 0 0 0 106.262 27.154 A 1.096 1.096 0 0 0 106.508 26.932 A 0.568 0.568 0 0 0 106.604 26.763 A 0.522 0.522 0 0 0 106.64 26.7 C 106.671 26.636 106.682 26.575 106.675 26.525 A 0.132 0.132 0 0 0 106.604 26.421 C 106.555 26.372 106.604 26.275 106.702 26.079 A 2.723 2.723 0 0 0 106.852 25.914 C 106.953 25.795 107.061 25.655 107.19 25.494 A 2.423 2.423 0 0 0 107.511 25.181 A 4.237 4.237 0 0 0 107.825 24.761 C 107.926 24.559 108.026 24.381 108.095 24.225 A 1.232 1.232 0 0 0 108.167 24.029 A 4.217 4.217 0 0 1 108.24 23.759 A 1.078 1.078 0 0 1 108.362 23.492 A 0.505 0.505 0 0 1 108.421 23.37 C 108.472 23.293 108.539 23.247 108.606 23.247 C 108.655 23.199 108.801 23.15 108.948 23.003 A 1.965 1.965 0 0 1 109.069 22.844 C 109.15 22.746 109.244 22.64 109.338 22.515 A 34.808 34.808 0 0 1 109.704 21.977 C 109.957 21.612 110.179 21.311 110.374 21.062 A 9.747 9.747 0 0 1 110.706 20.66 A 20.469 20.469 0 0 1 110.909 20.458 C 111.05 20.321 111.174 20.209 111.292 20.132 A 0.702 0.702 0 0 1 111.536 20.025 A 7.43 7.43 0 0 1 111.702 19.92 C 111.762 19.883 111.826 19.841 111.891 19.792 A 1.722 1.722 0 0 0 112.073 19.634 C 112.268 19.439 112.463 19.244 112.61 19.048 A 1.31 1.31 0 0 1 112.722 18.892 C 112.883 18.696 113.122 18.487 113.391 18.218 C 113.626 17.983 113.884 17.771 114.134 17.582 A 14.777 14.777 0 0 1 114.465 17.339 C 114.856 17.095 115.1 16.851 115.247 16.704 C 115.393 16.558 115.393 16.509 115.198 16.558 A 3.474 3.474 0 0 1 115.096 16.568 C 114.851 16.588 114.678 16.572 114.587 16.522 A 0.124 0.124 0 0 1 114.514 16.412 C 114.474 16.29 114.602 16.134 114.898 15.945 A 3.893 3.893 0 0 1 115.1 15.826 A 6.168 6.168 0 0 1 115.154 15.801 C 115.679 15.569 116.296 15.383 117.004 15.288 A 14.048 14.048 0 0 1 119.366 15.093 C 120.126 15.093 120.906 15.15 121.708 15.265 A 21.104 21.104 0 0 1 124.524 15.874 A 21.624 21.624 0 0 1 124.81 15.948 A 40.585 40.585 0 0 1 125.598 16.167 C 125.838 16.207 126.013 16.247 126.095 16.261 A 0.287 0.287 0 0 0 126.135 16.265 C 126.379 16.167 126.868 16.363 127.649 16.704 A 19.079 19.079 0 0 1 129.797 17.974 C 130.302 18.298 130.647 18.596 130.852 18.848 A 1.379 1.379 0 0 1 131.018 19.097 C 131.116 19.244 131.213 19.39 131.36 19.488 C 131.446 19.574 131.533 19.623 131.654 19.598 A 0.403 0.403 0 0 0 131.702 19.585 C 131.924 19.541 131.984 19.658 131.847 19.936 A 1.667 1.667 0 0 1 131.799 20.025 A 7.796 7.796 0 0 1 131.768 20.115 C 131.734 20.214 131.712 20.291 131.75 20.367 A 0.264 0.264 0 0 0 131.751 20.376 C 131.753 20.447 131.785 20.461 131.847 20.464 A 1.198 1.198 0 0 0 131.897 20.464 A 1.176 1.176 0 0 1 132.043 20.47 A 0.445 0.445 0 0 1 132.19 20.513 A 2.14 2.14 0 0 1 132.263 20.551 A 0.382 0.382 0 0 1 132.434 20.708 C 132.483 20.854 132.579 20.999 132.724 21.241 A 14.5 14.5 0 0 1 132.727 21.246 C 132.874 21.441 133.02 21.685 133.167 21.929 C 133.43 22.28 133.535 22.513 133.519 22.592 A 0.041 0.041 0 0 1 133.508 22.613 C 133.508 22.697 133.328 22.708 133.06 22.648 A 2.523 2.523 0 0 1 132.922 22.613 A 1.712 1.712 0 0 1 132.239 22.32 A 2.79 2.79 0 0 1 132.135 22.238 C 132.066 22.181 132.004 22.123 131.949 22.066 A 1.4 1.4 0 0 1 131.799 21.88 A 1.068 1.068 0 0 0 131.792 21.859 C 131.697 21.593 131.605 21.699 131.653 22.222 A 6.742 6.742 0 0 0 131.658 22.474 C 131.675 22.915 131.729 23.578 131.808 24.464 A 601.744 601.744 0 0 0 131.897 25.445 A 3.426 3.426 0 0 1 131.92 25.609 C 131.948 25.844 131.955 26.067 131.995 26.226 A 2.551 2.551 0 0 0 131.995 26.229 C 132.031 26.372 132.067 26.462 132.103 26.499 A 0.054 0.054 0 0 0 132.141 26.519 A 0.032 0.032 0 0 1 132.169 26.536 C 132.19 26.571 132.19 26.653 132.19 26.763 C 132.19 26.958 132.19 27.154 132.141 27.398 C 132.107 27.605 132.072 27.763 132.072 27.907 A 0.709 0.709 0 0 0 132.092 28.081 C 132.092 28.207 132.112 28.312 132.152 28.384 A 0.207 0.207 0 0 0 132.239 28.472 C 132.336 28.521 132.385 28.667 132.434 28.863 C 132.467 28.993 132.456 29.145 132.445 29.304 A 3.567 3.567 0 0 0 132.434 29.546 C 132.391 29.717 132.311 29.925 132.259 30.073 A 3.616 3.616 0 0 0 132.239 30.132 A 0.887 0.887 0 0 1 132.205 30.195 C 132.118 30.338 132.026 30.376 131.897 30.376 A 1.449 1.449 0 0 0 131.869 30.371 C 131.667 30.335 131.622 30.377 131.837 30.53 A 2.208 2.208 0 0 0 131.897 30.572 C 132.141 30.767 132.141 30.962 131.946 31.206 A 0.686 0.686 0 0 0 131.871 31.264 C 131.819 31.31 131.784 31.358 131.756 31.413 A 0.985 0.985 0 0 0 131.702 31.548 A 0.38 0.38 0 0 0 131.677 31.575 C 131.604 31.664 131.604 31.752 131.604 31.841 A 1.875 1.875 0 0 1 131.662 31.965 A 0.45 0.45 0 0 1 131.702 32.134 C 131.734 32.198 131.745 32.262 131.762 32.326 A 0.541 0.541 0 0 0 131.799 32.427 C 131.799 32.513 131.799 32.561 131.767 32.637 A 0.661 0.661 0 0 1 131.75 32.671 C 131.725 32.696 131.687 32.722 131.643 32.747 A 3.074 3.074 0 0 1 131.506 32.818 A 0.837 0.837 0 0 1 131.353 32.805 A 0.415 0.415 0 0 1 131.067 32.622 A 1.531 1.531 0 0 1 131.006 32.485 A 1.247 1.247 0 0 1 130.92 32.037 C 130.92 31.953 130.932 31.88 130.953 31.817 A 0.512 0.512 0 0 1 131.165 31.548 C 131.257 31.486 131.33 31.425 131.384 31.363 A 0.522 0.522 0 0 0 131.458 31.255 A 0.269 0.269 0 0 0 131.459 31.252 C 131.484 31.2 131.481 31.162 131.466 31.131 A 0.281 0.281 0 0 0 131.409 31.06 A 0.195 0.195 0 0 1 131.328 30.98 C 131.298 30.928 131.278 30.855 131.269 30.762 A 1.408 1.408 0 0 1 131.262 30.621 L 131.262 29.79 C 131.311 29.449 131.311 29.107 131.311 28.765 A 33.516 33.516 0 0 0 131.242 28.299 C 131.229 28.212 131.215 28.131 131.201 28.058 A 3.059 3.059 0 0 0 131.165 27.886 A 1.184 1.184 0 0 1 131.126 27.775 C 131.094 27.664 131.08 27.554 131.073 27.451 A 3.71 3.71 0 0 1 131.067 27.203 A 1.03 1.03 0 0 1 131.071 27.106 C 131.077 27.048 131.087 26.994 131.104 26.946 A 0.46 0.46 0 0 1 131.213 26.763 A 0.24 0.24 0 0 0 131.214 26.762 C 131.337 26.596 131.286 26.223 130.974 25.671 A 5.185 5.185 0 0 0 130.774 25.347 A 10.722 10.722 0 0 1 130.678 25.175 C 130.578 24.993 130.497 24.829 130.442 24.692 A 1.4 1.4 0 0 1 130.383 24.517 A 0.786 0.786 0 0 1 130.376 24.501 C 130.295 24.33 130.331 24.239 130.412 24.265 A 0.136 0.136 0 0 1 130.432 24.273 C 130.562 24.273 130.538 24.119 130.395 23.778 A 7.364 7.364 0 0 0 130.334 23.638 A 21.332 21.332 0 0 0 130.172 23.281 C 130.004 22.919 129.795 22.511 129.504 22.076 A 1034.879 1034.879 0 0 0 129.431 21.957 A 57.724 57.724 0 0 0 128.333 20.22 C 128.072 19.872 127.845 19.576 127.633 19.321 A 6.999 6.999 0 0 0 127.209 18.853 A 6.686 6.686 0 0 0 126.825 18.496 A 5.23 5.23 0 0 0 126.331 18.121 A 2.566 2.566 0 0 0 126.268 18.07 C 126.074 17.919 125.905 17.833 125.774 17.798 A 0.496 0.496 0 0 0 125.647 17.779 A 1.081 1.081 0 0 0 125.611 17.774 C 125.333 17.744 125.274 17.857 125.402 18.017 A 0.676 0.676 0 0 0 125.452 18.072 A 0.729 0.729 0 0 1 125.498 18.122 C 125.524 18.154 125.546 18.186 125.562 18.218 A 0.325 0.325 0 0 1 125.598 18.365 A 0.233 0.233 0 0 1 125.607 18.383 C 125.64 18.469 125.589 18.511 125.452 18.511 A 0.383 0.383 0 0 1 125.417 18.526 C 125.359 18.549 125.3 18.554 125.241 18.541 A 0.353 0.353 0 0 1 125.159 18.511 A 1.652 1.652 0 0 1 125.096 18.489 C 125.058 18.474 125.024 18.459 124.994 18.443 A 0.297 0.297 0 0 1 124.866 18.316 C 124.742 18.233 124.445 18.255 123.974 18.381 A 7.922 7.922 0 0 0 123.694 18.462 A 10 10 0 0 0 123.681 18.466 C 123.402 18.553 123.104 18.658 122.796 18.781 A 12.359 12.359 0 0 0 121.594 19.341 C 121.191 19.517 120.828 19.707 120.496 19.902 A 10.613 10.613 0 0 0 119.641 20.464 C 118.03 21.783 116.321 23.492 114.612 25.64 A 40.946 40.946 0 0 0 113.508 27.047 C 112.413 28.511 111.738 29.671 111.438 30.572 A 0.426 0.426 0 0 1 111.437 30.602 C 111.423 30.797 111.279 31.082 111.047 31.499 A 6.96 6.96 0 0 1 110.827 31.946 A 22.943 22.943 0 0 1 110.266 32.915 A 136.276 136.276 0 0 1 110.175 33.082 C 109.993 33.415 109.831 33.707 109.689 33.959 A 46.862 46.862 0 0 1 109.534 34.234 C 109.387 34.624 109.29 34.82 109.29 34.869 A 0.216 0.216 0 0 1 109.288 34.892 C 109.278 34.974 109.23 35.205 109.143 35.552 A 115.349 115.349 0 0 0 108.91 36.271 A 22.96 22.96 0 0 1 108.655 37.017 A 31.008 31.008 0 0 0 108.478 37.562 C 108.369 37.913 108.281 38.219 108.215 38.482 C 108.095 38.802 108.041 39.024 108.025 39.12 A 0.319 0.319 0 0 0 108.02 39.165 A 0.084 0.084 0 0 1 108.034 39.184 C 108.061 39.233 108.06 39.326 108.015 39.427 A 0.536 0.536 0 0 1 107.971 39.507 A 3.164 3.164 0 0 1 107.892 39.727 A 1.272 1.272 0 0 1 107.776 39.947 A 10.38 10.38 0 0 0 107.686 40.13 A 2.196 2.196 0 0 0 107.532 40.533 C 107.491 40.654 107.484 40.809 107.511 40.914 A 0.29 0.29 0 0 0 107.532 40.972 A 8.154 8.154 0 0 1 107.53 41.182 C 107.526 41.326 107.516 41.493 107.485 41.704 A 5.627 5.627 0 0 1 107.434 41.997 A 37.661 37.661 0 0 1 107.214 42.632 A 37.661 37.661 0 0 0 106.995 43.267 A 3.512 3.512 0 0 1 106.965 43.343 C 106.871 43.578 106.777 43.733 106.682 43.822 A 0.349 0.349 0 0 1 106.555 43.902 A 1.261 1.261 0 0 1 106.53 43.906 C 106.067 43.981 106.03 43.707 106.418 43.085 A 5.672 5.672 0 0 1 106.555 42.876 A 1.625 1.625 0 0 0 106.77 42.354 A 1.533 1.533 0 0 0 106.799 42.046 A 2.574 2.574 0 0 0 106.799 42.005 A 1.573 1.573 0 0 0 106.604 41.216 A 0.898 0.898 0 0 0 106.529 41.109 C 106.394 40.944 106.23 40.882 106.067 40.923 A 0.63 0.63 0 0 0 106.012 40.954 C 105.977 40.976 105.953 40.998 105.938 41.019 A 0.088 0.088 0 0 0 105.92 41.07 A 0.091 0.091 0 0 0 105.933 41.113 C 105.949 41.144 105.982 41.18 106.033 41.231 A 11.182 11.182 0 0 0 106.067 41.265 A 0.169 0.169 0 0 1 106.089 41.278 C 106.156 41.326 106.193 41.423 106.182 41.53 A 0.374 0.374 0 0 1 106.165 41.607 C 106.165 41.704 106.067 41.851 105.969 41.997 A 1.532 1.532 0 0 0 105.851 42.129 A 1.343 1.343 0 0 0 105.579 42.779 C 105.579 43.001 105.607 43.307 105.684 43.718 A 10.662 10.662 0 0 0 105.774 44.146 A 0.407 0.407 0 0 1 105.794 44.277 C 105.794 44.386 105.76 44.509 105.726 44.679 A 4.86 4.86 0 0 0 105.725 44.683 A 8.262 8.262 0 0 1 105.678 44.866 A 2.164 2.164 0 0 1 105.53 45.269 A 9.998 9.998 0 0 1 105.445 45.431 C 105.419 45.482 105.395 45.53 105.376 45.575 A 0.481 0.481 0 0 0 105.334 45.757 A 2.445 2.445 0 0 0 105.336 45.847 C 105.339 45.944 105.356 46.012 105.432 46.05 A 0.276 0.276 0 0 1 105.486 46.13 C 105.539 46.245 105.563 46.444 105.54 46.763 A 4.447 4.447 0 0 1 105.53 46.88 A 7.92 7.92 0 0 1 105.433 47.549 A 10.619 10.619 0 0 1 105.237 48.394 C 105.042 48.882 104.895 49.273 104.7 49.468 A 3.056 3.056 0 0 1 104.658 49.509 C 104.484 49.677 104.351 49.761 104.26 49.761 A 0.592 0.592 0 0 1 104.237 49.761 C 104.125 49.756 104.074 49.719 104.002 49.649 A 3.765 3.765 0 0 1 103.967 49.615 L 103.967 49.566 A 3.174 3.174 0 0 1 103.896 49.438 C 103.542 48.767 103.398 47.918 103.486 46.891 A 8.249 8.249 0 0 1 103.577 46.197 A 51.903 51.903 0 0 1 103.597 46.014 C 103.618 45.835 103.638 45.664 103.659 45.501 A 30.929 30.929 0 0 1 103.723 45.025 L 103.723 44.39 A 0.17 0.17 0 0 1 103.712 44.36 C 103.69 44.286 103.714 44.187 103.767 44.065 A 2.24 2.24 0 0 1 103.821 43.951 A 2.01 2.01 0 0 1 103.902 43.804 A 5.71 5.71 0 0 1 104.211 43.365 A 1.744 1.744 0 0 1 104.27 43.308 C 104.328 43.255 104.387 43.21 104.445 43.173 A 0.913 0.913 0 0 1 104.651 43.072 C 104.749 43.072 104.797 42.974 104.749 42.828 C 104.749 42.682 104.652 42.537 104.556 42.344 A 3.312 3.312 0 0 1 104.553 42.339 A 1.595 1.595 0 0 1 104.469 42.216 C 104.438 42.165 104.414 42.118 104.393 42.073 A 2.124 2.124 0 0 1 104.309 41.851 C 104.309 41.785 104.319 41.728 104.339 41.686 A 0.125 0.125 0 0 1 104.456 41.607 C 104.524 41.572 104.593 41.562 104.645 41.576 A 0.122 0.122 0 0 1 104.7 41.607 A 0.58 0.58 0 0 1 104.732 41.641 C 104.766 41.681 104.786 41.727 104.749 41.802 A 1.738 1.738 0 0 0 104.75 41.894 C 104.752 41.924 104.755 41.952 104.761 41.977 A 0.148 0.148 0 0 0 104.797 42.046 A 0.729 0.729 0 0 0 104.848 42.092 C 104.88 42.119 104.912 42.14 104.944 42.156 A 0.325 0.325 0 0 0 105.09 42.193 A 0.452 0.452 0 0 0 105.092 42.193 C 105.21 42.232 105.296 42.207 105.377 42.118 A 0.62 0.62 0 0 0 105.432 42.046 A 2.545 2.545 0 0 0 105.442 42.016 C 105.46 41.959 105.478 41.896 105.496 41.83 A 16.923 16.923 0 0 0 105.579 41.509 A 7.755 7.755 0 0 0 105.583 41.409 C 105.615 40.414 105.421 40.103 105.09 40.386 A 0.987 0.987 0 0 0 105.048 40.408 C 105.029 40.419 105.012 40.429 104.996 40.439 A 0.773 0.773 0 0 1 104.994 40.439 A 1.021 1.021 0 0 1 104.993 40.44 M 206.346 43.198 A 0.918 0.918 0 0 1 206.36 43.169 A 1.373 1.373 0 0 0 206.355 43.024 C 206.351 42.993 206.346 42.959 206.338 42.923 A 1.002 1.002 0 0 0 206.311 42.828 C 206.262 42.73 206.262 42.583 206.311 42.437 A 0.784 0.784 0 0 1 206.374 42.146 A 1.393 1.393 0 0 1 206.506 41.9 C 206.737 41.531 206.75 41.38 206.463 41.446 A 1.104 1.104 0 0 0 206.409 41.46 C 206.096 41.505 206.028 41.427 206.207 41.189 A 1.705 1.705 0 0 1 206.262 41.119 C 206.311 40.972 206.36 40.826 206.36 40.581 A 1.207 1.207 0 0 0 206.359 40.548 C 206.354 40.364 206.308 40.177 206.262 39.947 A 1.217 1.217 0 0 1 206.17 39.691 C 206.15 39.612 206.136 39.526 206.127 39.432 A 2.836 2.836 0 0 1 206.116 39.165 A 2.663 2.663 0 0 1 206.116 39.147 C 206.117 38.944 206.142 38.72 206.189 38.521 A 1.712 1.712 0 0 1 206.262 38.287 A 4.732 4.732 0 0 0 206.269 38.267 C 206.334 38.069 206.399 37.828 206.464 37.544 A 16.113 16.113 0 0 0 206.555 37.115 A 37.732 37.732 0 0 0 206.696 36.388 A 10.538 10.538 0 0 0 206.799 35.699 A 141.471 141.471 0 0 0 206.883 35.317 A 14.06 14.06 0 0 1 207.141 34.283 C 207.275 33.913 207.387 33.613 207.491 33.367 A 5.207 5.207 0 0 1 207.629 33.062 A 21.783 21.783 0 0 0 207.892 32.525 A 5.901 5.901 0 0 0 208.02 32.232 C 208.062 32.023 208.103 31.851 208.084 31.744 A 0.18 0.18 0 0 0 208.069 31.695 A 0.111 0.111 0 0 1 208.06 31.667 C 208.037 31.556 208.13 31.32 208.264 30.962 A 3.44 3.44 0 0 1 208.386 30.679 C 208.462 30.521 208.552 30.358 208.653 30.186 A 50.919 50.919 0 0 1 208.948 29.693 C 209.238 29.208 209.433 28.772 209.627 28.384 A 12.763 12.763 0 0 1 209.631 28.374 A 5.028 5.028 0 0 0 209.7 28.18 C 209.776 27.951 209.806 27.784 209.793 27.665 A 0.351 0.351 0 0 0 209.778 27.593 C 209.687 27.366 209.723 27.265 209.847 27.292 A 0.276 0.276 0 0 1 209.875 27.3 A 3.171 3.171 0 0 0 209.928 27.3 C 210.03 27.298 210.112 27.286 210.214 27.202 A 0.755 0.755 0 0 0 210.266 27.154 A 1.096 1.096 0 0 0 210.512 26.932 A 0.568 0.568 0 0 0 210.608 26.763 A 0.522 0.522 0 0 0 210.644 26.7 C 210.675 26.636 210.686 26.575 210.679 26.525 A 0.132 0.132 0 0 0 210.608 26.421 C 210.559 26.372 210.608 26.275 210.706 26.079 A 2.723 2.723 0 0 0 210.856 25.914 C 210.957 25.795 211.065 25.655 211.194 25.494 A 2.423 2.423 0 0 0 211.515 25.181 A 4.237 4.237 0 0 0 211.829 24.761 C 211.929 24.559 212.03 24.381 212.099 24.225 A 1.232 1.232 0 0 0 212.17 24.029 A 4.217 4.217 0 0 1 212.244 23.759 A 1.078 1.078 0 0 1 212.366 23.492 A 0.505 0.505 0 0 1 212.425 23.37 C 212.476 23.293 212.543 23.247 212.61 23.247 C 212.659 23.199 212.805 23.15 212.952 23.003 A 1.965 1.965 0 0 1 213.073 22.844 C 213.154 22.746 213.248 22.64 213.342 22.515 A 34.808 34.808 0 0 1 213.708 21.977 C 213.961 21.612 214.183 21.311 214.378 21.062 A 9.747 9.747 0 0 1 214.709 20.66 A 20.469 20.469 0 0 1 214.913 20.458 C 215.054 20.321 215.178 20.209 215.296 20.132 A 0.702 0.702 0 0 1 215.54 20.025 A 7.43 7.43 0 0 1 215.706 19.92 C 215.766 19.883 215.83 19.841 215.895 19.792 A 1.722 1.722 0 0 0 216.077 19.634 C 216.272 19.439 216.467 19.244 216.614 19.048 A 1.31 1.31 0 0 1 216.726 18.892 C 216.887 18.696 217.126 18.487 217.395 18.218 C 217.63 17.983 217.888 17.771 218.137 17.582 A 14.777 14.777 0 0 1 218.469 17.339 C 218.86 17.095 219.104 16.851 219.25 16.704 C 219.397 16.558 219.397 16.509 219.202 16.558 A 3.474 3.474 0 0 1 219.1 16.568 C 218.855 16.588 218.682 16.572 218.591 16.522 A 0.124 0.124 0 0 1 218.518 16.412 C 218.477 16.29 218.606 16.134 218.902 15.945 A 3.893 3.893 0 0 1 219.104 15.826 A 6.168 6.168 0 0 1 219.158 15.801 C 219.683 15.569 220.3 15.383 221.008 15.288 A 14.048 14.048 0 0 1 223.37 15.093 C 224.13 15.093 224.91 15.15 225.712 15.265 A 21.104 21.104 0 0 1 228.528 15.874 A 21.624 21.624 0 0 1 228.813 15.948 A 40.585 40.585 0 0 1 229.602 16.167 C 229.842 16.207 230.017 16.247 230.099 16.261 A 0.287 0.287 0 0 0 230.139 16.265 C 230.383 16.167 230.872 16.363 231.653 16.704 A 19.079 19.079 0 0 1 233.801 17.974 C 234.306 18.298 234.651 18.596 234.856 18.848 A 1.379 1.379 0 0 1 235.022 19.097 C 235.12 19.244 235.217 19.39 235.364 19.488 C 235.45 19.574 235.537 19.623 235.658 19.598 A 0.403 0.403 0 0 0 235.706 19.585 C 235.927 19.541 235.988 19.658 235.851 19.936 A 1.667 1.667 0 0 1 235.803 20.025 A 7.796 7.796 0 0 1 235.772 20.115 C 235.738 20.214 235.716 20.291 235.754 20.367 A 0.264 0.264 0 0 0 235.755 20.376 C 235.757 20.447 235.789 20.461 235.851 20.464 A 1.198 1.198 0 0 0 235.901 20.464 A 1.176 1.176 0 0 1 236.047 20.47 A 0.445 0.445 0 0 1 236.194 20.513 A 2.14 2.14 0 0 1 236.267 20.551 A 0.382 0.382 0 0 1 236.438 20.708 C 236.486 20.854 236.583 20.999 236.728 21.241 A 14.5 14.5 0 0 1 236.731 21.246 C 236.877 21.441 237.024 21.685 237.17 21.929 C 237.434 22.28 237.539 22.513 237.522 22.592 A 0.041 0.041 0 0 1 237.512 22.613 C 237.512 22.697 237.332 22.708 237.064 22.648 A 2.523 2.523 0 0 1 236.926 22.613 A 1.712 1.712 0 0 1 236.243 22.32 A 2.79 2.79 0 0 1 236.139 22.238 C 236.07 22.181 236.007 22.123 235.953 22.066 A 1.4 1.4 0 0 1 235.803 21.88 A 1.068 1.068 0 0 0 235.796 21.859 C 235.701 21.593 235.609 21.699 235.657 22.222 A 6.742 6.742 0 0 0 235.662 22.474 C 235.679 22.915 235.733 23.578 235.812 24.464 A 601.744 601.744 0 0 0 235.901 25.445 A 3.426 3.426 0 0 1 235.924 25.609 C 235.951 25.844 235.959 26.067 235.999 26.226 A 2.551 2.551 0 0 0 235.999 26.229 C 236.035 26.372 236.071 26.462 236.107 26.499 A 0.054 0.054 0 0 0 236.145 26.519 A 0.032 0.032 0 0 1 236.173 26.536 C 236.194 26.571 236.194 26.653 236.194 26.763 C 236.194 26.958 236.194 27.154 236.145 27.398 C 236.11 27.605 236.076 27.763 236.076 27.907 A 0.709 0.709 0 0 0 236.096 28.081 C 236.096 28.207 236.116 28.312 236.156 28.384 A 0.207 0.207 0 0 0 236.243 28.472 C 236.34 28.521 236.389 28.667 236.438 28.863 C 236.471 28.993 236.46 29.145 236.449 29.304 A 3.567 3.567 0 0 0 236.438 29.546 C 236.395 29.717 236.315 29.925 236.263 30.073 A 3.616 3.616 0 0 0 236.243 30.132 A 0.887 0.887 0 0 1 236.208 30.195 C 236.122 30.338 236.03 30.376 235.901 30.376 A 1.449 1.449 0 0 0 235.873 30.371 C 235.67 30.335 235.626 30.377 235.841 30.53 A 2.208 2.208 0 0 0 235.901 30.572 C 236.145 30.767 236.145 30.962 235.95 31.206 A 0.686 0.686 0 0 0 235.874 31.264 C 235.823 31.31 235.788 31.358 235.76 31.413 A 0.985 0.985 0 0 0 235.706 31.548 A 0.38 0.38 0 0 0 235.681 31.575 C 235.608 31.664 235.608 31.752 235.608 31.841 A 1.875 1.875 0 0 1 235.666 31.965 A 0.45 0.45 0 0 1 235.706 32.134 C 235.738 32.198 235.749 32.262 235.766 32.326 A 0.541 0.541 0 0 0 235.803 32.427 C 235.803 32.513 235.803 32.561 235.771 32.637 A 0.661 0.661 0 0 1 235.754 32.671 C 235.729 32.696 235.691 32.722 235.647 32.747 A 3.074 3.074 0 0 1 235.51 32.818 A 0.837 0.837 0 0 1 235.357 32.805 A 0.415 0.415 0 0 1 235.071 32.622 A 1.531 1.531 0 0 1 235.01 32.485 A 1.247 1.247 0 0 1 234.924 32.037 C 234.924 31.953 234.936 31.88 234.957 31.817 A 0.512 0.512 0 0 1 235.168 31.548 C 235.261 31.486 235.334 31.425 235.388 31.363 A 0.522 0.522 0 0 0 235.461 31.255 A 0.269 0.269 0 0 0 235.463 31.252 C 235.488 31.2 235.485 31.162 235.47 31.131 A 0.281 0.281 0 0 0 235.413 31.06 A 0.195 0.195 0 0 1 235.332 30.98 C 235.302 30.928 235.282 30.855 235.273 30.762 A 1.408 1.408 0 0 1 235.266 30.621 L 235.266 29.79 C 235.315 29.449 235.315 29.107 235.315 28.765 A 33.516 33.516 0 0 0 235.246 28.299 C 235.233 28.212 235.219 28.131 235.205 28.058 A 3.059 3.059 0 0 0 235.168 27.886 A 1.184 1.184 0 0 1 235.13 27.775 C 235.098 27.664 235.083 27.554 235.077 27.451 A 3.71 3.71 0 0 1 235.071 27.203 A 1.03 1.03 0 0 1 235.075 27.106 C 235.081 27.048 235.091 26.994 235.107 26.946 A 0.46 0.46 0 0 1 235.217 26.763 A 0.24 0.24 0 0 0 235.218 26.762 C 235.341 26.596 235.29 26.223 234.978 25.671 A 5.185 5.185 0 0 0 234.778 25.347 A 10.722 10.722 0 0 1 234.682 25.175 C 234.582 24.993 234.501 24.829 234.446 24.692 A 1.4 1.4 0 0 1 234.387 24.517 A 0.786 0.786 0 0 1 234.379 24.501 C 234.299 24.33 234.335 24.239 234.416 24.265 A 0.136 0.136 0 0 1 234.436 24.273 C 234.566 24.273 234.542 24.119 234.399 23.778 A 7.364 7.364 0 0 0 234.338 23.638 A 21.332 21.332 0 0 0 234.176 23.281 C 234.008 22.919 233.799 22.511 233.508 22.076 A 1034.879 1034.879 0 0 0 233.435 21.957 A 57.724 57.724 0 0 0 232.336 20.22 C 232.076 19.872 231.849 19.576 231.636 19.321 A 6.999 6.999 0 0 0 231.213 18.853 A 6.686 6.686 0 0 0 230.829 18.496 A 5.23 5.23 0 0 0 230.334 18.121 A 2.566 2.566 0 0 0 230.272 18.07 C 230.078 17.919 229.909 17.833 229.778 17.798 A 0.496 0.496 0 0 0 229.651 17.779 A 1.081 1.081 0 0 0 229.615 17.774 C 229.337 17.744 229.278 17.857 229.406 18.017 A 0.676 0.676 0 0 0 229.456 18.072 A 0.729 0.729 0 0 1 229.502 18.122 C 229.528 18.154 229.549 18.186 229.565 18.218 A 0.325 0.325 0 0 1 229.602 18.365 A 0.233 0.233 0 0 1 229.61 18.383 C 229.644 18.469 229.592 18.511 229.456 18.511 A 0.383 0.383 0 0 1 229.421 18.526 C 229.362 18.549 229.304 18.554 229.245 18.541 A 0.353 0.353 0 0 1 229.163 18.511 A 1.652 1.652 0 0 1 229.1 18.489 C 229.062 18.474 229.028 18.459 228.998 18.443 A 0.297 0.297 0 0 1 228.87 18.316 C 228.746 18.233 228.449 18.255 227.977 18.381 A 7.922 7.922 0 0 0 227.698 18.462 A 10 10 0 0 0 227.684 18.466 C 227.406 18.553 227.108 18.658 226.8 18.781 A 12.359 12.359 0 0 0 225.598 19.341 C 225.195 19.517 224.831 19.707 224.5 19.902 A 10.613 10.613 0 0 0 223.645 20.464 C 222.034 21.783 220.325 23.492 218.616 25.64 A 40.946 40.946 0 0 0 217.512 27.047 C 216.417 28.511 215.742 29.671 215.442 30.572 A 0.426 0.426 0 0 1 215.441 30.602 C 215.427 30.797 215.283 31.082 215.051 31.499 A 6.96 6.96 0 0 1 214.831 31.946 A 22.943 22.943 0 0 1 214.27 32.915 A 136.276 136.276 0 0 1 214.179 33.082 C 213.997 33.415 213.835 33.707 213.693 33.959 A 46.862 46.862 0 0 1 213.538 34.234 C 213.391 34.624 213.293 34.82 213.293 34.869 A 0.216 0.216 0 0 1 213.292 34.892 C 213.282 34.974 213.234 35.205 213.147 35.552 A 115.349 115.349 0 0 0 212.914 36.271 A 22.96 22.96 0 0 1 212.659 37.017 A 31.008 31.008 0 0 0 212.482 37.562 C 212.373 37.913 212.285 38.219 212.219 38.482 C 212.099 38.802 212.045 39.024 212.029 39.12 A 0.319 0.319 0 0 0 212.024 39.165 A 0.084 0.084 0 0 1 212.038 39.184 C 212.065 39.233 212.064 39.326 212.019 39.427 A 0.536 0.536 0 0 1 211.975 39.507 A 3.164 3.164 0 0 1 211.896 39.727 A 1.272 1.272 0 0 1 211.78 39.947 A 10.38 10.38 0 0 0 211.69 40.13 A 2.196 2.196 0 0 0 211.536 40.533 C 211.495 40.654 211.488 40.809 211.515 40.914 A 0.29 0.29 0 0 0 211.536 40.972 A 8.154 8.154 0 0 1 211.534 41.182 C 211.53 41.326 211.52 41.493 211.489 41.704 A 5.627 5.627 0 0 1 211.438 41.997 A 37.661 37.661 0 0 1 211.218 42.632 A 37.661 37.661 0 0 0 210.999 43.267 A 3.512 3.512 0 0 1 210.969 43.343 C 210.875 43.578 210.78 43.733 210.686 43.822 A 0.349 0.349 0 0 1 210.559 43.902 A 1.261 1.261 0 0 1 210.534 43.906 C 210.071 43.981 210.034 43.707 210.422 43.085 A 5.672 5.672 0 0 1 210.559 42.876 A 1.625 1.625 0 0 0 210.774 42.354 A 1.533 1.533 0 0 0 210.803 42.046 A 2.574 2.574 0 0 0 210.803 42.005 A 1.573 1.573 0 0 0 210.608 41.216 A 0.898 0.898 0 0 0 210.533 41.109 C 210.398 40.944 210.234 40.882 210.071 40.923 A 0.63 0.63 0 0 0 210.016 40.954 C 209.981 40.976 209.957 40.998 209.942 41.019 A 0.088 0.088 0 0 0 209.924 41.07 A 0.091 0.091 0 0 0 209.936 41.113 C 209.953 41.144 209.986 41.18 210.036 41.231 A 11.182 11.182 0 0 0 210.071 41.265 A 0.169 0.169 0 0 1 210.093 41.278 C 210.16 41.326 210.197 41.423 210.185 41.53 A 0.374 0.374 0 0 1 210.168 41.607 C 210.168 41.704 210.071 41.851 209.973 41.997 A 1.532 1.532 0 0 0 209.855 42.129 A 1.343 1.343 0 0 0 209.583 42.779 C 209.583 43.001 209.611 43.307 209.688 43.718 A 10.662 10.662 0 0 0 209.778 44.146 A 0.407 0.407 0 0 1 209.798 44.277 C 209.798 44.386 209.764 44.509 209.73 44.679 A 4.86 4.86 0 0 0 209.729 44.683 A 8.262 8.262 0 0 1 209.682 44.866 A 2.164 2.164 0 0 1 209.534 45.269 A 9.998 9.998 0 0 1 209.449 45.431 C 209.423 45.482 209.399 45.53 209.38 45.575 A 0.481 0.481 0 0 0 209.338 45.757 A 2.445 2.445 0 0 0 209.339 45.847 C 209.343 45.944 209.36 46.012 209.436 46.05 A 0.276 0.276 0 0 1 209.49 46.13 C 209.543 46.245 209.567 46.444 209.544 46.763 A 4.447 4.447 0 0 1 209.534 46.88 A 7.92 7.92 0 0 1 209.437 47.549 A 10.619 10.619 0 0 1 209.241 48.394 C 209.045 48.882 208.899 49.273 208.704 49.468 A 3.056 3.056 0 0 1 208.662 49.509 C 208.488 49.677 208.355 49.761 208.264 49.761 A 0.592 0.592 0 0 1 208.241 49.761 C 208.129 49.756 208.078 49.719 208.006 49.649 A 3.765 3.765 0 0 1 207.971 49.615 L 207.971 49.566 A 3.174 3.174 0 0 1 207.9 49.438 C 207.546 48.767 207.402 47.918 207.49 46.891 A 8.249 8.249 0 0 1 207.581 46.197 A 51.903 51.903 0 0 1 207.601 46.014 C 207.622 45.835 207.642 45.664 207.663 45.501 A 30.929 30.929 0 0 1 207.727 45.025 L 207.727 44.39 A 0.17 0.17 0 0 1 207.716 44.36 C 207.694 44.286 207.718 44.187 207.771 44.065 A 2.24 2.24 0 0 1 207.825 43.951 A 2.01 2.01 0 0 1 207.906 43.804 A 5.71 5.71 0 0 1 208.215 43.365 A 1.744 1.744 0 0 1 208.274 43.308 C 208.332 43.255 208.391 43.21 208.449 43.173 A 0.913 0.913 0 0 1 208.655 43.072 C 208.752 43.072 208.801 42.974 208.752 42.828 C 208.752 42.682 208.656 42.537 208.559 42.344 A 3.312 3.312 0 0 1 208.557 42.339 A 1.595 1.595 0 0 1 208.473 42.216 C 208.442 42.165 208.417 42.118 208.397 42.073 A 2.124 2.124 0 0 1 208.313 41.851 C 208.313 41.785 208.323 41.728 208.343 41.686 A 0.125 0.125 0 0 1 208.459 41.607 C 208.528 41.572 208.597 41.562 208.648 41.576 A 0.122 0.122 0 0 1 208.704 41.607 A 0.58 0.58 0 0 1 208.736 41.641 C 208.77 41.681 208.79 41.727 208.752 41.802 A 1.738 1.738 0 0 0 208.754 41.894 C 208.756 41.924 208.759 41.952 208.765 41.977 A 0.148 0.148 0 0 0 208.801 42.046 A 0.729 0.729 0 0 0 208.852 42.092 C 208.884 42.119 208.916 42.14 208.948 42.156 A 0.325 0.325 0 0 0 209.094 42.193 A 0.452 0.452 0 0 0 209.096 42.193 C 209.214 42.232 209.3 42.207 209.381 42.118 A 0.62 0.62 0 0 0 209.436 42.046 A 2.545 2.545 0 0 0 209.446 42.016 C 209.464 41.959 209.482 41.896 209.5 41.83 A 16.923 16.923 0 0 0 209.583 41.509 A 7.755 7.755 0 0 0 209.586 41.409 C 209.619 40.414 209.425 40.103 209.094 40.386 A 0.987 0.987 0 0 0 209.052 40.408 C 209.033 40.419 209.016 40.429 208.999 40.439 A 0.773 0.773 0 0 1 208.998 40.439 A 1.021 1.021 0 0 1 208.997 40.44 M 71.73 34.834 C 71.747 34.797 71.764 34.769 71.803 34.743 A 0.308 0.308 0 0 1 71.838 34.722 C 71.936 34.673 72.083 34.527 72.278 34.331 A 4.315 4.315 0 0 0 72.62 33.935 C 72.729 33.794 72.839 33.648 72.961 33.501 C 73.206 33.16 73.401 32.867 73.547 32.622 A 6.43 6.43 0 0 0 73.589 32.552 C 73.682 32.392 73.75 32.257 73.778 32.163 A 0.286 0.286 0 0 0 73.792 32.085 C 73.759 32.02 73.704 31.954 73.627 31.918 A 0.3 0.3 0 0 0 73.499 31.89 A 1.196 1.196 0 0 0 73.242 31.918 A 1.411 1.411 0 0 0 72.913 32.037 A 0.758 0.758 0 0 0 72.737 32.094 A 1.307 1.307 0 0 0 72.375 32.378 C 71.647 33.198 71.64 32.786 72.396 31.14 A 32.368 32.368 0 0 1 72.571 30.767 A 40.047 40.047 0 0 1 72.77 30.336 C 72.924 30.008 73.053 29.741 73.157 29.497 A 22.816 22.816 0 0 1 73.202 29.396 C 73.328 29.116 73.432 28.901 73.514 28.735 A 36.094 36.094 0 0 1 73.596 28.57 C 73.694 28.374 73.743 28.228 73.84 28.179 A 0.422 0.422 0 0 1 73.844 28.171 C 73.865 28.133 73.892 28.094 73.925 28.055 A 2.637 2.637 0 0 1 74.084 27.886 L 74.182 27.788 A 4.669 4.669 0 0 1 74.253 27.719 C 74.455 27.526 74.578 27.447 74.622 27.447 C 74.622 27.489 74.622 27.57 74.589 27.752 A 4.233 4.233 0 0 1 74.573 27.837 A 2.482 2.482 0 0 0 74.548 27.962 C 74.5 28.249 74.531 28.436 74.679 28.522 A 0.4 0.4 0 0 0 74.817 28.57 C 75.11 28.619 75.403 28.423 75.745 28.033 A 9.142 9.142 0 0 0 76.721 26.617 A 8.462 8.462 0 0 0 76.927 26.223 C 77.008 26.056 77.08 25.894 77.14 25.742 A 3.904 3.904 0 0 0 77.258 25.396 A 4.159 4.159 0 0 0 77.288 25.27 C 77.335 25.052 77.344 24.906 77.314 24.809 A 0.227 0.227 0 0 0 77.258 24.712 C 77.161 24.712 76.965 24.761 76.721 24.956 A 6.015 6.015 0 0 0 76.355 25.359 A 8.077 8.077 0 0 0 75.989 25.835 C 75.806 26.092 75.623 26.348 75.46 26.563 A 9.175 9.175 0 0 1 75.305 26.763 C 75.125 26.943 74.998 27.044 74.904 27.084 A 0.224 0.224 0 0 1 74.817 27.105 A 0.192 0.192 0 0 1 74.785 27.103 C 74.729 27.093 74.721 27.052 74.719 26.96 A 4.195 4.195 0 0 1 74.719 26.91 A 1.006 1.006 0 0 1 74.802 26.729 C 74.83 26.68 74.863 26.63 74.9 26.576 A 5.146 5.146 0 0 1 75.012 26.421 A 3.305 3.305 0 0 0 75.086 26.319 C 75.148 26.229 75.211 26.13 75.273 26.022 A 6.24 6.24 0 0 0 75.452 25.689 C 75.598 25.445 75.696 25.201 75.745 25.054 A 7.634 7.634 0 0 1 75.877 24.798 A 2.715 2.715 0 0 1 76.086 24.468 C 76.184 24.273 76.331 24.126 76.477 23.98 A 0.967 0.967 0 0 0 76.484 23.972 C 76.593 23.861 76.728 23.671 76.89 23.402 A 10.525 10.525 0 0 0 77.063 23.101 A 17.356 17.356 0 0 0 77.423 22.43 A 7.002 7.002 0 0 0 77.747 21.685 C 77.903 21.341 78.019 21.017 78.108 20.726 A 9.102 9.102 0 0 0 78.235 20.269 A 2.992 2.992 0 0 0 78.244 20.244 C 78.362 19.921 78.378 19.701 78.35 19.585 A 0.231 0.231 0 0 0 78.333 19.537 A 0.216 0.216 0 0 0 78.318 19.532 C 78.17 19.494 77.934 19.596 77.698 19.927 C 77.405 20.318 77.161 20.708 76.868 21.246 A 11.374 11.374 0 0 0 76.661 21.605 C 76.552 21.802 76.453 21.996 76.368 22.179 A 6.166 6.166 0 0 0 76.184 22.613 A 6.648 6.648 0 0 1 75.958 23.028 C 75.919 23.095 75.877 23.162 75.834 23.231 A 10.791 10.791 0 0 1 75.696 23.443 A 31.787 31.787 0 0 1 75.5 23.637 C 75.438 23.698 75.379 23.755 75.321 23.808 A 3.333 3.333 0 0 1 75.061 24.029 A 2.674 2.674 0 0 1 75.043 24.041 C 74.76 24.226 74.571 24.271 74.475 24.175 A 0.289 0.289 0 0 1 74.418 24.083 C 74.371 23.973 74.338 23.79 74.308 23.524 A 12.841 12.841 0 0 1 74.28 23.247 A 5.791 5.791 0 0 1 74.258 23.132 C 74.183 22.712 74.19 22.454 74.28 22.32 C 74.323 22.234 74.479 22.186 74.716 22.242 A 1.193 1.193 0 0 1 74.817 22.271 A 0.496 0.496 0 0 0 74.982 22.241 C 75.283 22.135 75.619 21.742 75.989 21.001 A 20.03 20.03 0 0 0 76.362 20.21 C 76.525 19.844 76.693 19.442 76.864 19.008 A 37.79 37.79 0 0 0 77.405 17.535 A 16.27 16.27 0 0 1 77.447 17.421 C 77.635 16.915 77.868 16.367 78.186 15.777 A 17.3 17.3 0 0 1 78.426 15.347 C 78.685 14.896 78.938 14.502 79.163 14.165 A 7.297 7.297 0 0 1 79.281 14.001 C 79.562 13.622 79.772 13.433 79.944 13.433 C 80.042 13.433 80.286 13.482 80.676 13.628 C 81.116 13.775 81.555 13.97 82.141 14.165 A 14.168 14.168 0 0 1 83.703 14.899 A 9.871 9.871 0 0 1 86.389 16.997 C 87.419 18.12 87.955 19.154 87.955 20.097 A 2.458 2.458 0 0 1 87.952 20.22 C 87.952 20.367 87.854 20.562 87.756 20.806 C 87.659 21.001 87.512 21.246 87.415 21.392 C 87.3 21.545 87.215 21.638 87.16 21.671 A 0.079 0.079 0 0 1 87.122 21.685 A 0.34 0.34 0 0 0 87.03 21.699 C 86.69 21.795 86.107 22.386 85.3 23.513 A 28.178 28.178 0 0 0 84.68 24.419 C 84.241 25.054 83.704 25.738 83.118 26.568 C 82.587 27.34 82.151 27.874 81.811 28.31 A 28.244 28.244 0 0 0 81.799 28.326 C 81.506 28.716 81.213 29.107 81.018 29.4 A 10.725 10.725 0 0 0 80.652 29.949 A 14.044 14.044 0 0 0 80.286 30.572 A 21.018 21.018 0 0 1 80.27 30.604 C 80.027 31.088 79.69 31.713 79.26 32.525 A 7.053 7.053 0 0 1 78.892 33.074 A 12.151 12.151 0 0 1 78.137 33.99 A 2.265 2.265 0 0 0 78.079 34.04 C 77.9 34.2 77.757 34.376 77.627 34.53 A 3.236 3.236 0 0 1 77.454 34.722 A 0.861 0.861 0 0 1 77.441 34.746 C 77.34 34.933 77.153 35.122 76.965 35.357 C 76.477 35.894 76.086 36.48 75.696 37.066 L 74.915 38.579 L 75.745 38.628 A 13.537 13.537 0 0 1 75.916 38.629 C 76.48 38.636 76.468 38.685 75.882 38.838 A 15.976 15.976 0 0 1 75.745 38.872 L 75.696 38.872 A 5.543 5.543 0 0 0 75.693 38.873 C 74.914 39.117 74.671 39.361 74.866 39.605 C 75.058 39.836 75.464 39.976 76.106 40.025 A 7.518 7.518 0 0 0 76.672 40.044 A 9.409 9.409 0 0 0 77.844 40.093 C 78.577 40.093 79.114 40.142 79.553 40.142 A 1.859 1.859 0 0 1 79.673 40.146 C 79.873 40.16 80.161 40.2 80.481 40.24 A 26.637 26.637 0 0 0 82.019 40.423 A 34.483 34.483 0 0 0 83.704 40.533 C 84.515 40.533 85.14 40.57 85.545 40.579 A 7.015 7.015 0 0 0 85.706 40.581 A 9.428 9.428 0 0 1 85.827 40.596 C 86.097 40.629 86.256 40.663 86.336 40.696 A 0.167 0.167 0 0 1 86.389 40.728 A 0.269 0.269 0 0 1 86.392 40.731 C 86.474 40.815 86.446 40.9 86.309 41.017 A 1.385 1.385 0 0 1 86.243 41.07 C 86.03 41.283 85.894 41.444 85.817 41.572 A 0.677 0.677 0 0 0 85.754 41.704 A 0.325 0.325 0 0 0 85.749 41.724 C 85.718 41.84 85.798 41.846 85.989 41.776 A 2.29 2.29 0 0 0 86.047 41.753 C 86.145 41.704 86.243 41.704 86.389 41.704 A 0.702 0.702 0 0 1 86.643 41.753 A 0.953 0.953 0 0 1 86.829 41.851 C 87.122 41.997 86.731 42.242 85.608 42.583 A 17.996 17.996 0 0 1 84.695 42.877 A 56.492 56.492 0 0 1 83.264 43.267 C 82.66 43.435 82.125 43.603 81.675 43.755 A 25.811 25.811 0 0 0 81.116 43.951 A 4.32 4.32 0 0 0 80.897 44.022 C 80.59 44.132 80.426 44.243 80.426 44.353 A 0.116 0.116 0 0 0 80.432 44.39 A 0.186 0.186 0 0 1 80.441 44.449 C 80.441 44.587 80.303 44.757 80.09 44.927 A 2.921 2.921 0 0 1 79.678 45.155 A 3.571 3.571 0 0 1 79.065 45.367 A 4.452 4.452 0 0 1 78.92 45.406 C 78.718 45.456 78.538 45.482 78.391 45.462 A 0.501 0.501 0 0 1 78.235 45.415 C 78.137 45.367 77.991 45.367 77.844 45.367 A 0.653 0.653 0 0 0 77.749 45.374 A 0.524 0.524 0 0 0 77.454 45.513 A 6.099 6.099 0 0 0 77.378 45.539 C 77.262 45.58 77.103 45.635 76.903 45.676 A 2.89 2.89 0 0 1 76.721 45.708 A 16.15 16.15 0 0 1 76.456 45.744 A 6.915 6.915 0 0 1 75.598 45.806 A 11.965 11.965 0 0 1 74.939 45.855 A 11.965 11.965 0 0 0 74.28 45.904 A 24.245 24.245 0 0 0 74.223 45.909 C 73.944 45.938 73.713 45.967 73.512 45.995 A 14.916 14.916 0 0 0 73.157 46.05 A 2.172 2.172 0 0 0 73.079 46.078 C 73.039 46.093 73.002 46.108 72.968 46.123 A 3.614 3.614 0 0 0 72.815 46.197 A 0.11 0.11 0 0 0 72.795 46.199 C 72.754 46.207 72.695 46.235 72.652 46.267 A 0.286 0.286 0 0 0 72.62 46.294 A 0.261 0.261 0 0 1 72.599 46.313 C 72.546 46.355 72.467 46.392 72.424 46.392 A 0.945 0.945 0 0 0 72.4 46.405 A 4.681 4.681 0 0 0 72.352 46.431 M 159.534 25.542 A 0.247 0.247 0 0 0 159.452 25.559 C 159.377 25.586 159.288 25.642 159.196 25.703 A 14.183 14.183 0 0 0 159.143 25.738 A 0.628 0.628 0 0 0 158.962 25.964 C 158.894 26.099 158.848 26.275 158.817 26.491 A 3.974 3.974 0 0 0 158.801 26.617 A 19.591 19.591 0 0 0 158.804 26.964 C 158.81 27.367 158.838 27.935 158.948 28.667 C 158.997 29.4 159.045 30.035 159.094 30.572 C 159.143 31.109 159.143 31.402 159.143 31.548 C 159.143 31.643 159.143 32.062 159.098 32.76 A 27.385 27.385 0 0 1 159.094 32.818 A 20.236 20.236 0 0 0 159.065 33.395 C 159.05 33.797 159.041 34.237 159.026 34.713 A 47.562 47.562 0 0 1 158.997 35.454 A 397.638 397.638 0 0 0 158.997 36.344 C 158.999 37.105 159.006 37.682 159.031 38.091 A 6.75 6.75 0 0 0 159.045 38.287 A 3.562 3.562 0 0 0 159.077 38.526 C 159.119 38.774 159.183 38.928 159.28 38.989 A 0.197 0.197 0 0 0 159.387 39.019 A 1.794 1.794 0 0 1 159.452 39.02 C 159.542 39.023 159.651 39.039 159.729 39.117 A 1.102 1.102 0 0 1 159.863 39.219 A 0.552 0.552 0 0 1 160.022 39.458 C 160.12 39.703 160.12 40.093 160.12 40.581 A 7.947 7.947 0 0 1 160.035 41.216 A 16.261 16.261 0 0 1 159.875 41.997 A 2.395 2.395 0 0 1 159.805 42.232 C 159.728 42.445 159.634 42.584 159.537 42.622 A 0.143 0.143 0 0 1 159.485 42.632 C 159.29 42.681 159.338 42.779 159.68 43.023 A 1.132 1.132 0 0 1 159.912 43.174 C 160.045 43.287 160.132 43.426 160.198 43.602 A 1.712 1.712 0 0 1 160.217 43.658 A 1.58 1.58 0 0 1 160.3 43.924 C 160.312 43.984 160.319 44.042 160.319 44.099 A 0.535 0.535 0 0 1 160.266 44.341 C 160.222 44.516 160.101 44.573 159.902 44.514 A 0.869 0.869 0 0 1 159.827 44.488 A 0.649 0.649 0 0 0 159.758 44.474 C 159.689 44.465 159.629 44.469 159.578 44.487 A 0.224 0.224 0 0 0 159.436 44.634 A 0.455 0.455 0 0 0 159.376 44.788 C 159.342 44.939 159.339 45.159 159.338 45.462 A 96.607 96.607 0 0 0 159.338 45.562 C 159.386 46.562 159.48 46.726 159.621 46.008 A 7.074 7.074 0 0 0 159.631 45.953 A 7.516 7.516 0 0 1 159.664 45.857 C 159.824 45.396 159.869 45.449 159.832 46.016 A 11.746 11.746 0 0 1 159.827 46.099 C 159.744 46.762 159.766 47.953 159.865 49.641 A 113.478 113.478 0 0 0 159.924 50.591 A 24.72 24.72 0 0 0 160.065 52.276 A 48.172 48.172 0 0 0 160.315 54.107 A 78.659 78.659 0 0 0 160.535 55.508 C 160.611 55.965 160.687 56.393 160.764 56.791 A 38.472 38.472 0 0 0 160.901 57.476 C 161.096 58.404 161.243 59.185 161.34 59.869 A 53.962 53.962 0 0 1 161.383 60.174 C 161.446 60.629 161.474 60.91 161.447 61.016 A 0.124 0.124 0 0 1 161.438 61.04 A 0.661 0.661 0 0 0 161.422 61.075 C 161.389 61.151 161.389 61.199 161.389 61.285 C 161.438 61.333 161.487 61.333 161.584 61.333 A 0.32 0.32 0 0 1 161.667 61.396 C 161.726 61.457 161.795 61.553 161.89 61.694 A 35.119 35.119 0 0 1 161.975 61.822 C 162.17 62.115 162.317 62.505 162.463 62.994 A 10.638 10.638 0 0 0 164.411 66.399 A 11.811 11.811 0 0 0 165.247 67.29 A 1.4 1.4 0 0 1 165.432 67.44 C 165.49 67.495 165.547 67.557 165.605 67.626 A 2.79 2.79 0 0 1 165.686 67.73 A 8.736 8.736 0 0 0 166.189 68.188 A 36.709 36.709 0 0 0 166.516 68.462 A 2.364 2.364 0 0 0 167.127 68.909 A 1.726 1.726 0 0 0 167.346 68.999 A 5.369 5.369 0 0 1 168.033 69.263 A 2.074 2.074 0 0 1 168.176 69.341 A 4.053 4.053 0 0 0 168.381 69.417 C 168.511 69.461 168.623 69.492 168.717 69.522 A 2.977 2.977 0 0 1 168.762 69.537 A 0.752 0.752 0 0 0 168.871 69.564 C 168.953 69.578 169.027 69.576 169.072 69.557 A 0.097 0.097 0 0 0 169.104 69.537 A 0.243 0.243 0 0 0 169.139 69.491 C 169.171 69.438 169.189 69.365 169.153 69.292 A 1.738 1.738 0 0 0 169.117 69.193 C 169.081 69.104 169.039 69.027 168.975 68.929 A 3.102 3.102 0 0 0 168.958 68.902 L 168.811 68.609 A 1.198 1.198 0 0 1 168.812 68.559 C 168.814 68.497 168.828 68.465 168.899 68.462 A 0.264 0.264 0 0 1 168.909 68.462 C 168.958 68.462 169.006 68.511 169.153 68.609 A 0.71 0.71 0 0 1 169.256 68.674 C 169.297 68.705 169.342 68.741 169.392 68.78 A 2.093 2.093 0 0 0 169.495 68.853 C 169.788 69.097 170.081 69.292 170.422 69.488 A 4.882 4.882 0 0 0 170.66 69.598 A 17.094 17.094 0 0 0 171.106 69.781 A 17.21 17.21 0 0 1 171.418 69.836 A 33.456 33.456 0 0 1 171.887 69.927 L 172.278 69.927 A 7.951 7.951 0 0 1 171.575 69.297 A 6.697 6.697 0 0 1 171.057 68.706 A 14.101 14.101 0 0 1 170.793 68.396 C 170.546 68.096 170.286 67.755 170.048 67.391 A 9.215 9.215 0 0 1 169.983 67.29 A 6.783 6.783 0 0 1 169.425 66.197 C 169.263 65.787 169.156 65.385 169.104 64.996 A 7.805 7.805 0 0 0 168.86 63.97 A 10.626 10.626 0 0 1 168.572 62.926 C 168.464 62.442 168.378 61.911 168.323 61.333 A 11.021 11.021 0 0 0 168.169 60.279 A 41.743 41.743 0 0 0 168.079 59.82 A 50.453 50.453 0 0 1 167.822 58.282 A 36.795 36.795 0 0 1 167.639 56.89 A 99.986 99.986 0 0 0 167.566 56.383 C 167.542 56.221 167.518 56.065 167.494 55.92 A 16.08 16.08 0 0 0 167.493 55.913 A 7.982 7.982 0 0 1 167.507 55.459 C 167.528 55.094 167.572 54.659 167.639 54.156 A 11.181 11.181 0 0 0 167.802 53.079 C 167.836 52.735 167.852 52.405 167.852 52.089 A 9.13 9.13 0 0 0 167.834 51.519 A 1.947 1.947 0 0 1 167.798 51.392 C 167.784 51.339 167.77 51.28 167.757 51.217 A 19.006 19.006 0 0 1 167.688 50.884 A 66.912 66.912 0 0 1 167.505 49.945 A 34.42 34.42 0 0 1 167.395 49.322 A 8.728 8.728 0 0 1 167.292 48.487 C 167.283 48.355 167.278 48.224 167.278 48.094 A 4.771 4.771 0 0 1 167.297 47.662 A 3.761 3.761 0 0 1 167.318 47.269 C 167.337 47.09 167.366 46.928 167.395 46.783 A 4.291 4.291 0 0 0 167.517 46.416 A 4.291 4.291 0 0 1 167.639 46.05 A 6.902 6.902 0 0 0 167.749 45.755 C 167.787 45.645 167.825 45.528 167.863 45.404 A 12.856 12.856 0 0 0 167.932 45.171 A 4.949 4.949 0 0 0 168.024 44.691 C 168.045 44.546 168.063 44.391 168.08 44.227 A 28.382 28.382 0 0 0 168.127 43.706 C 168.225 42.339 168.274 40.923 168.372 39.41 A 97.905 97.905 0 0 1 168.467 36.998 C 168.512 36.135 168.564 35.328 168.616 34.576 C 168.694 33.443 168.772 32.654 168.85 32.208 A 2.743 2.743 0 0 1 168.909 31.939 A 4.641 4.641 0 0 0 169.184 30.632 C 169.198 30.384 169.188 30.136 169.153 29.888 C 169.104 29.204 168.909 28.667 168.567 28.277 C 168.305 28.015 167.841 27.752 167.176 27.49 A 13.045 13.045 0 0 0 166.516 27.251 A 32.778 32.778 0 0 0 163.391 26.372 A 195.957 195.957 0 0 0 162.64 26.237 C 162.159 26.151 161.756 26.085 161.432 26.053 A 3.924 3.924 0 0 0 161.047 26.031 A 2.333 2.333 0 0 1 160.857 26.022 C 160.671 26.007 160.479 25.973 160.334 25.938 A 2.667 2.667 0 0 1 160.315 25.933 C 160.071 25.884 159.924 25.787 159.827 25.689 C 159.827 25.689 159.827 25.64 159.778 25.64 C 159.729 25.591 159.729 25.591 159.68 25.591 C 159.631 25.542 159.631 25.542 159.583 25.542 L 159.534 25.542 Z M 423.157 26.861 A 3.225 3.225 0 0 0 422.704 26.895 C 422.58 26.913 422.467 26.936 422.375 26.958 A 0.631 0.631 0 0 0 422.146 27.05 C 422.062 27.106 421.995 27.184 421.941 27.282 A 1.061 1.061 0 0 0 421.887 27.398 A 1.359 1.359 0 0 0 421.823 27.618 C 421.768 27.877 421.741 28.252 421.741 28.765 A 0.141 0.141 0 0 1 421.733 28.806 C 421.72 28.848 421.689 28.908 421.641 28.986 A 2.783 2.783 0 0 1 421.594 29.058 C 421.549 29.193 421.422 29.286 421.326 29.376 A 1.048 1.048 0 0 0 421.301 29.4 C 421.155 29.546 421.008 29.595 420.813 29.595 C 420.771 29.595 420.692 29.595 420.639 29.563 A 0.117 0.117 0 0 1 420.618 29.546 A 0.923 0.923 0 0 0 420.536 29.474 C 420.495 29.442 420.456 29.416 420.424 29.393 A 0.442 0.442 0 0 1 420.374 29.352 A 0.923 0.923 0 0 0 420.292 29.279 C 420.251 29.246 420.212 29.221 420.18 29.197 A 0.442 0.442 0 0 1 420.13 29.156 C 420.069 29.126 420.028 29.114 419.993 29.11 A 0.44 0.44 0 0 0 419.934 29.107 A 1.486 1.486 0 0 0 419.797 29.41 C 419.737 29.595 419.698 29.818 419.691 30.089 A 3.514 3.514 0 0 0 419.69 30.181 A 4.526 4.526 0 0 0 419.669 30.567 C 419.665 30.865 419.684 31.143 419.689 31.401 A 5.53 5.53 0 0 1 419.69 31.499 A 1.002 1.002 0 0 1 419.717 31.595 C 419.725 31.631 419.73 31.664 419.733 31.696 A 1.373 1.373 0 0 1 419.739 31.841 A 21.898 21.898 0 0 0 419.824 32.824 C 419.861 33.135 419.91 33.428 419.983 33.697 C 420.078 34.221 420.173 34.745 420.223 35.405 A 11.861 11.861 0 0 1 420.227 35.454 A 6.348 6.348 0 0 1 420.247 35.981 A 17.589 17.589 0 0 1 420.178 37.31 A 32.289 32.289 0 0 0 420.111 37.939 A 6.521 6.521 0 0 0 420.081 38.531 A 5.08 5.08 0 0 0 420.15 39.352 A 7.033 7.033 0 0 0 420.227 39.751 A 17.21 17.21 0 0 0 420.282 40.063 A 33.456 33.456 0 0 0 420.374 40.533 C 420.374 40.874 420.374 41.119 420.325 41.363 A 2.424 2.424 0 0 0 420.285 41.698 C 420.279 41.811 420.277 41.932 420.276 42.061 A 37.036 37.036 0 0 0 420.276 42.242 A 42.724 42.724 0 0 0 420.483 45.14 A 127.609 127.609 0 0 0 420.618 46.392 C 420.685 46.862 420.729 47.286 420.766 47.663 A 219.842 219.842 0 0 0 420.813 48.15 C 420.908 49.332 421.14 50.607 421.509 52.017 A 32.779 32.779 0 0 0 421.545 52.154 A 49.951 49.951 0 0 0 422.262 54.562 A 21.391 21.391 0 0 0 422.815 56.06 C 423.251 57.222 423.638 58 423.978 58.394 A 1.871 1.871 0 0 0 423.987 58.404 C 424.142 58.559 424.297 58.714 424.477 58.943 A 5.271 5.271 0 0 1 424.622 59.136 A 12.745 12.745 0 0 1 425.22 59.891 A 5.079 5.079 0 0 1 425.305 60.015 L 425.354 60.015 C 425.879 60.84 426.635 61.665 427.643 62.49 A 17.988 17.988 0 0 0 428.625 63.238 A 19.166 19.166 0 0 0 432.434 64.996 A 7.272 7.272 0 0 1 432.674 65.069 C 432.8 65.109 432.916 65.15 433.031 65.191 A 16.738 16.738 0 0 0 433.313 65.288 A 0.492 0.492 0 0 1 433.306 65.255 C 433.276 65.088 433.373 65.047 433.557 65.093 A 1.624 1.624 0 0 1 433.701 65.15 C 433.795 65.191 433.904 65.247 434.026 65.318 A 6.447 6.447 0 0 1 434.143 65.386 C 434.29 65.484 434.436 65.533 434.534 65.63 A 17.53 17.53 0 0 1 434.536 65.631 C 434.877 65.728 435.169 65.826 435.559 65.826 C 435.702 65.826 435.798 65.826 435.939 65.871 A 1.131 1.131 0 0 1 435.95 65.874 L 436.194 65.874 C 436.34 65.874 436.487 65.923 436.633 65.923 A 1.473 1.473 0 0 0 436.787 65.975 C 436.961 66.023 437.105 66.032 437.219 66.07 C 437.29 66.07 437.339 66.07 437.375 66.064 A 0.145 0.145 0 0 0 437.463 66.021 A 0.055 0.055 0 0 0 437.479 66.019 C 437.512 66.009 437.506 65.966 437.463 65.923 C 437.463 65.89 437.441 65.857 437.411 65.824 A 1.229 1.229 0 0 0 437.366 65.777 A 0.199 0.199 0 0 1 437.344 65.752 C 437.316 65.712 437.309 65.672 437.27 65.632 A 0.209 0.209 0 0 0 437.268 65.63 L 437.268 65.581 C 437.268 65.541 437.302 65.534 437.341 65.533 A 0.844 0.844 0 0 1 437.366 65.533 C 437.455 65.533 437.585 65.533 437.719 65.607 A 0.562 0.562 0 0 1 437.756 65.63 L 438.342 65.777 A 2.081 2.081 0 0 0 438.595 65.881 C 438.699 65.917 438.797 65.945 438.879 65.972 C 439.075 66.021 439.172 66.021 439.27 66.021 C 440.393 66.021 441.223 65.874 441.76 65.679 A 2.825 2.825 0 0 0 441.891 65.639 C 442.398 65.467 442.132 65.344 441.17 65.384 A 10.746 10.746 0 0 0 441.125 65.386 A 8.597 8.597 0 0 1 439.787 65.173 A 8.161 8.161 0 0 1 439.319 65.044 C 438.765 64.86 438.256 64.675 437.872 64.409 A 2.251 2.251 0 0 1 437.805 64.361 C 437.366 64.117 437.219 63.872 437.268 63.677 A 0.075 0.075 0 0 0 437.255 63.639 C 437.222 63.586 437.128 63.51 436.975 63.433 C 436.85 63.35 436.654 63.231 436.417 63.107 A 7.455 7.455 0 0 0 436.292 63.042 A 8.006 8.006 0 0 1 435.838 62.82 C 435.682 62.739 435.523 62.652 435.362 62.565 A 17.815 17.815 0 0 0 434.875 62.31 A 5.94 5.94 0 0 1 434.405 61.994 C 434.231 61.867 434.071 61.736 433.921 61.61 A 41.789 41.789 0 0 1 433.655 61.382 A 22.807 22.807 0 0 1 432.737 60.324 C 432.433 59.949 432.169 59.588 431.946 59.237 A 6.315 6.315 0 0 1 431.409 58.208 A 10.757 10.757 0 0 1 430.887 56.791 A 11.865 11.865 0 0 1 430.579 55.425 A 3.744 3.744 0 0 1 430.55 55.123 C 430.53 54.775 430.53 54.29 430.53 53.667 A 17.566 17.566 0 0 1 430.481 52.856 C 430.47 52.615 430.46 52.37 430.441 52.117 A 12.235 12.235 0 0 0 430.432 52.007 C 430.432 51.47 430.383 50.982 430.334 50.591 A 0.624 0.624 0 0 1 430.307 50.527 C 430.273 50.433 430.244 50.303 430.238 50.192 A 0.747 0.747 0 0 1 430.237 50.152 C 430.138 49.856 430.062 49.495 429.993 49.068 A 24.721 24.721 0 0 1 429.895 48.394 A 15.993 15.993 0 0 1 429.871 47.877 C 429.853 47.278 429.863 46.567 429.914 45.744 A 29.93 29.93 0 0 1 429.944 45.318 A 146.878 146.878 0 0 1 430.164 43.841 A 669.78 669.78 0 0 1 430.237 43.365 C 430.432 42.437 430.53 41.558 430.53 40.777 C 430.481 37.896 430.53 35.845 430.627 34.624 C 430.672 33.566 430.835 32.706 431.082 32.118 A 3.003 3.003 0 0 1 431.165 31.939 A 371.211 371.211 0 0 0 431.301 31.599 C 431.427 31.283 431.519 31.036 431.555 30.816 A 1.231 1.231 0 0 0 431.606 30.662 C 431.65 30.486 431.642 30.334 431.604 30.181 A 4.011 4.011 0 0 0 431.451 29.963 C 431.416 29.917 431.377 29.869 431.332 29.818 A 2.925 2.925 0 0 0 431.213 29.693 C 430.432 29.009 429.163 28.374 427.502 27.788 A 19.322 19.322 0 0 0 425.72 27.25 C 425.146 27.108 424.603 27.006 424.094 26.941 A 10.803 10.803 0 0 0 423.157 26.861 Z M 319.059 59.681 A 11.598 11.598 0 0 0 319.06 59.685 A 10.978 10.978 0 0 0 319.065 59.697 A 11.181 11.181 0 0 1 319.062 59.689 A 11.598 11.598 0 0 1 319.059 59.681 A 9.846 9.846 0 0 1 319.057 59.677 A 10.029 10.029 0 0 1 319.055 59.673 C 318.933 59.405 318.835 59.1 318.75 58.77 A 19.433 19.433 0 0 1 318.518 57.72 C 318.445 57.354 318.384 57.012 318.341 56.689 A 7.049 7.049 0 0 1 318.274 55.767 A 3.378 3.378 0 0 1 318.269 55.701 C 318.233 55.206 318.329 54.937 318.469 54.937 A 0.227 0.227 0 0 0 318.687 54.8 C 318.773 54.627 318.761 54.294 318.665 53.814 A 39.478 39.478 0 0 1 318.629 53.669 C 318.546 53.332 318.472 53.014 318.408 52.709 A 18.442 18.442 0 0 1 318.225 51.714 C 318.127 51.079 318.03 50.542 317.981 50.152 A 25.95 25.95 0 0 1 317.981 50.036 C 317.982 49.784 317.991 49.644 318.064 49.699 A 0.149 0.149 0 0 1 318.079 49.712 C 318.118 49.752 318.222 50.017 318.365 50.456 A 22.472 22.472 0 0 1 318.469 50.787 C 318.663 51.416 318.857 52.19 319.098 53.061 A 62.246 62.246 0 0 0 319.104 53.081 C 319.299 53.96 319.543 54.742 319.788 55.376 A 10.038 10.038 0 0 0 319.911 55.661 C 320.098 56.074 320.253 56.321 320.374 56.402 C 320.892 56.618 320.837 55.685 320.139 53.672 A 32.655 32.655 0 0 0 319.836 52.837 A 3.734 3.734 0 0 1 319.832 52.824 C 319.639 52.288 319.446 51.375 319.159 50.129 A 139.287 139.287 0 0 0 319.153 50.103 C 318.86 48.833 318.616 47.515 318.372 46.099 A 72.889 72.889 0 0 1 318.154 45.04 C 317.97 44.116 317.818 43.298 317.639 42.583 C 317.441 41.83 317.307 41.366 317.211 41.219 A 0.089 0.089 0 0 0 317.151 41.167 A 0.123 0.123 0 0 0 317.038 41.24 C 317.026 41.262 317.018 41.288 317.012 41.317 A 0.51 0.51 0 0 0 317.004 41.412 A 0.139 0.139 0 0 0 317.003 41.415 C 316.957 41.514 317.005 41.707 317.053 41.9 A 3.548 3.548 0 0 1 317.169 42.3 C 317.293 42.831 317.378 43.557 317.492 44.43 A 163.516 163.516 0 0 0 317.493 44.439 A 78.116 78.116 0 0 1 317.688 47.71 C 317.688 48.499 317.659 49.086 317.579 49.448 A 1.164 1.164 0 0 1 317.493 49.712 A 1.501 1.501 0 0 0 317.354 50.072 C 317.233 50.562 317.319 51.174 317.59 51.91 A 8.473 8.473 0 0 1 317.724 52.347 A 5.536 5.536 0 0 1 317.883 53.13 A 3.114 3.114 0 0 1 317.925 53.321 C 317.967 53.548 317.973 53.736 317.955 53.884 A 1.014 1.014 0 0 1 317.932 54.009 C 317.883 54.302 317.737 54.107 317.542 53.423 C 317.297 52.788 317.053 51.861 316.76 50.738 A 212.929 212.929 0 0 1 316.272 48.405 A 443.243 443.243 0 0 0 316.028 47.222 C 315.873 46.45 315.758 45.755 315.669 45.139 A 38.694 38.694 0 0 1 315.54 44.146 C 315.393 42.437 315.247 41.412 315.1 40.972 C 314.928 40.584 314.717 40.539 314.435 40.769 A 1.554 1.554 0 0 0 314.319 40.874 A 1.206 1.206 0 0 0 314.135 41.072 C 313.961 41.313 313.937 41.579 314.065 41.886 A 1.628 1.628 0 0 0 314.172 42.095 A 1.617 1.617 0 0 1 314.177 42.103 C 314.416 42.539 314.366 42.927 314.075 43.316 C 313.846 43.59 313.832 43.693 313.992 43.625 A 0.652 0.652 0 0 0 314.026 43.609 A 0.131 0.131 0 0 1 314.033 43.606 C 314.111 43.572 314.188 43.631 314.266 43.757 A 1.243 1.243 0 0 1 314.319 43.853 C 314.392 44.036 314.438 44.274 314.477 44.567 A 14.793 14.793 0 0 1 314.514 44.878 A 21.186 21.186 0 0 0 314.615 45.956 C 314.689 46.581 314.793 47.248 314.926 47.956 A 41.721 41.721 0 0 0 315.393 50.103 A 37.278 37.278 0 0 0 315.718 51.462 C 316.087 52.887 316.507 54.134 316.956 55.181 C 317.053 55.425 317.151 55.767 317.249 56.206 C 317.346 56.695 317.444 57.134 317.542 57.622 A 6.965 6.965 0 0 0 317.552 57.711 C 317.604 58.127 317.698 58.586 317.834 59.087 C 317.896 59.392 317.976 59.679 318.063 59.934 A 6.044 6.044 0 0 0 318.225 60.357 A 20.656 20.656 0 0 0 318.296 60.564 C 318.342 60.698 318.382 60.817 318.404 60.914 A 0.602 0.602 0 0 1 318.42 61.04 A 1.063 1.063 0 0 1 318.42 61.065 C 318.416 61.24 318.367 61.282 318.274 61.236 A 0.178 0.178 0 0 1 318.239 61.213 C 318.174 61.158 318.106 61.041 318.022 60.876 A 18.248 18.248 0 0 1 317.932 60.699 A 2.813 2.813 0 0 1 317.855 60.529 A 7.278 7.278 0 0 1 317.59 59.722 C 317.59 59.699 317.579 59.676 317.568 59.648 M 442.151 39.556 A 2.49 2.49 0 0 0 441.744 39.586 A 1.327 1.327 0 0 0 441.272 39.751 C 441.028 39.849 440.93 40.044 440.979 40.24 A 51.483 51.483 0 0 1 441.619 43.602 C 441.953 45.703 442.228 48.098 442.444 50.787 A 238.456 238.456 0 0 0 442.628 53.048 C 442.813 55.19 443.005 56.975 443.225 58.404 A 73.15 73.15 0 0 1 443.492 60.342 C 443.642 61.551 443.785 62.931 443.909 64.507 C 444.058 66.376 444.151 67.931 444.207 69.17 A 102.818 102.818 0 0 1 444.25 70.22 A 51.8 51.8 0 0 0 444.271 70.74 C 444.366 72.872 444.535 73.016 444.81 71.111 A 38.71 38.71 0 0 0 444.885 70.562 A 26.35 26.35 0 0 1 444.934 70.047 C 445.106 68.403 445.317 68.343 445.595 69.896 A 21.935 21.935 0 0 1 445.667 70.318 C 445.764 71.05 445.862 71.441 445.959 71.587 A 0.148 0.148 0 0 0 445.989 71.611 C 446.077 71.662 446.17 71.548 446.301 71.197 C 446.396 71.007 446.491 70.817 446.631 70.717 A 0.438 0.438 0 0 1 446.643 70.708 C 446.787 70.564 446.884 70.515 446.98 70.56 A 0.2 0.2 0 0 1 446.985 70.562 C 447.083 70.611 447.229 70.513 447.327 70.269 C 447.392 70.072 447.458 69.831 447.523 69.561 A 21.905 21.905 0 0 0 447.62 69.146 A 0.783 0.783 0 0 0 447.645 69.213 C 447.686 69.305 447.732 69.339 447.809 69.341 A 0.28 0.28 0 0 0 447.815 69.341 A 0.097 0.097 0 0 0 447.887 69.307 C 447.943 69.249 447.989 69.113 448.059 68.902 C 448.108 68.609 448.157 68.267 448.157 67.876 C 448.157 67.308 448.105 66.946 448.002 66.773 A 0.231 0.231 0 0 0 447.864 66.656 A 2.826 2.826 0 0 1 447.925 66.094 C 447.952 65.957 447.987 65.819 448.023 65.677 A 52.228 52.228 0 0 0 448.059 65.533 A 2.713 2.713 0 0 1 448.27 65.002 A 2.24 2.24 0 0 1 448.499 64.654 C 448.694 64.41 448.84 63.921 449.036 63.287 A 13.918 13.918 0 0 0 449.415 61.568 A 14.73 14.73 0 0 0 449.475 61.138 C 449.568 60.259 449.704 58.767 449.801 56.62 A 102.433 102.433 0 0 0 449.817 56.255 C 449.963 53.912 450.11 51.617 450.208 49.322 A 397.198 397.198 0 0 0 450.265 47.927 C 450.31 46.758 450.338 45.864 450.349 45.235 A 30.064 30.064 0 0 0 450.354 44.732 C 450.275 43.978 449.905 43.256 449.193 42.567 A 6.505 6.505 0 0 0 448.645 42.095 A 8.065 8.065 0 0 0 445.423 40.589 A 9.624 9.624 0 0 0 444.885 40.484 A 4.677 4.677 0 0 0 444.58 40.397 C 444.37 40.343 444.153 40.288 443.958 40.191 A 4.535 4.535 0 0 1 443.692 40.107 C 443.513 40.044 443.372 39.975 443.269 39.889 A 0.665 0.665 0 0 1 443.225 39.849 C 442.932 39.654 442.542 39.556 442.151 39.556 Z M 72.19 46.487 C 72.253 46.48 72.295 46.462 72.338 46.439 A 1.055 1.055 0 0 1 72.341 46.437 C 72.295 46.462 72.253 46.48 72.19 46.487 A 0.538 0.538 0 0 1 72.131 46.49 C 71.497 46.609 70.83 47.63 70.104 49.554 A 32.096 32.096 0 0 0 69.592 51.031 A 98.04 98.04 0 0 1 69.574 51.081 C 69.484 51.328 69.404 51.544 69.324 51.745 A 7.842 7.842 0 0 1 69.055 52.349 C 68.909 52.691 68.811 52.935 68.762 52.984 A 0.367 0.367 0 0 0 68.736 53.013 C 68.681 53.082 68.586 53.231 68.42 53.521 A 5.273 5.273 0 0 0 68.201 53.887 A 19.367 19.367 0 0 0 67.834 54.595 C 67.59 54.986 67.444 55.328 67.346 55.621 A 2.893 2.893 0 0 0 67.329 55.661 C 67.243 55.871 67.157 56.145 67.072 56.454 A 26.117 26.117 0 0 0 66.907 57.085 A 33.197 33.197 0 0 1 66.833 57.374 A 12.747 12.747 0 0 1 66.223 59.234 A 104.251 104.251 0 0 1 65.794 60.275 C 65.345 61.347 64.96 62.212 64.661 62.847 C 64.372 63.521 64.178 64.006 64.032 64.347 A 16.683 16.683 0 0 1 64.026 64.361 A 2.837 2.837 0 0 0 63.991 64.447 C 63.888 64.71 63.846 64.937 63.866 65.081 A 0.337 0.337 0 0 0 63.879 65.142 C 63.879 65.305 63.879 65.4 63.851 65.512 A 0.977 0.977 0 0 1 63.831 65.581 A 0.761 0.761 0 0 1 63.826 65.591 C 63.791 65.658 63.755 65.7 63.702 65.718 A 0.21 0.21 0 0 1 63.635 65.728 A 3.387 3.387 0 0 0 63.6 65.763 C 63.558 65.807 63.498 65.872 63.42 65.97 A 4.119 4.119 0 0 0 63.342 66.07 C 63.197 66.264 63.052 66.553 62.859 66.844 A 4.642 4.642 0 0 1 62.854 66.851 A 21.783 21.783 0 0 0 62.591 67.388 A 5.901 5.901 0 0 0 62.463 67.681 A 7.675 7.675 0 0 1 62.436 67.735 C 62.354 67.897 62.271 68.045 62.189 68.197 A 10.519 10.519 0 0 0 62.024 68.511 A 4.563 4.563 0 0 0 61.938 68.623 C 61.841 68.752 61.755 68.877 61.674 68.983 A 1.64 1.64 0 0 1 61.536 69.146 A 1.67 1.67 0 0 1 61.515 69.173 C 61.38 69.346 61.287 69.388 61.194 69.341 A 0.578 0.578 0 0 0 61.141 69.318 C 60.999 69.264 60.892 69.295 60.861 69.412 A 0.296 0.296 0 0 0 60.852 69.488 A 0.077 0.077 0 0 1 60.852 69.491 C 60.85 69.532 60.816 69.605 60.724 69.709 A 1.563 1.563 0 0 1 60.657 69.781 L 60.168 70.269 A 1.068 1.068 0 0 0 59.973 70.446 C 59.943 70.48 59.912 70.515 59.88 70.55 A 2.643 2.643 0 0 1 59.778 70.66 C 59.705 70.708 59.644 70.757 59.583 70.8 A 0.749 0.749 0 0 1 59.387 70.904 C 59.274 70.941 59.19 70.979 59.09 70.994 A 0.617 0.617 0 0 1 58.997 71.001 A 5.666 5.666 0 0 1 58.917 71.041 C 58.869 71.064 58.825 71.083 58.79 71.093 A 0.147 0.147 0 0 1 58.752 71.099 A 1.229 1.229 0 0 0 58.707 71.146 C 58.677 71.179 58.655 71.212 58.655 71.246 C 58.704 71.392 58.655 71.49 58.606 71.636 A 0.556 0.556 0 0 1 58.57 71.72 C 58.517 71.82 58.44 71.89 58.362 71.929 A 0.19 0.19 0 0 1 58.348 71.941 C 58.335 71.952 58.322 71.96 58.309 71.965 A 0.237 0.237 0 0 1 58.215 71.978 C 58.167 72.002 58.105 72.027 58.044 72.057 A 0.65 0.65 0 0 0 57.874 72.173 C 57.764 72.246 57.681 72.375 57.606 72.558 A 3.112 3.112 0 0 0 57.532 72.759 A 15.046 15.046 0 0 1 57.411 73.022 C 56.733 74.462 56.378 74.528 56.283 73.283 A 8.892 8.892 0 0 1 56.262 72.857 L 56.262 71.978 A 3.07 3.07 0 0 0 56.272 71.928 C 56.293 71.814 56.302 71.723 56.307 71.641 A 3.414 3.414 0 0 0 56.311 71.441 A 26.521 26.521 0 0 1 56.311 71.421 C 56.311 71.307 56.313 71.255 56.344 71.182 A 0.628 0.628 0 0 1 56.36 71.148 L 56.36 71.05 C 56.409 71.05 56.409 71.001 56.458 71.001 C 56.458 71.001 56.506 70.953 56.555 70.953 C 56.59 70.882 56.625 70.812 56.66 70.724 A 2.123 2.123 0 0 0 56.702 70.611 A 0.628 0.628 0 0 0 56.715 70.565 C 56.75 70.425 56.746 70.254 56.702 70.122 C 56.662 69.805 56.816 69.616 57.138 69.557 A 1.373 1.373 0 0 1 57.385 69.537 C 57.544 69.537 57.703 69.504 57.783 69.466 A 0.155 0.155 0 0 0 57.825 69.439 A 0.174 0.174 0 0 0 57.857 69.419 C 57.906 69.378 57.915 69.319 57.897 69.255 A 0.338 0.338 0 0 0 57.874 69.195 A 5.564 5.564 0 0 0 57.849 69.17 C 57.78 69.103 57.733 69.063 57.642 69.052 A 0.492 0.492 0 0 0 57.581 69.048 A 0.366 0.366 0 0 0 57.55 69.035 C 57.479 69.007 57.407 69.008 57.336 69.057 A 0.34 0.34 0 0 0 57.288 69.097 A 0.334 0.334 0 0 1 57.266 69.102 C 57.11 69.13 57.022 69.02 57 68.689 A 2.741 2.741 0 0 1 56.995 68.511 C 57.062 68.075 57.129 67.684 57.196 67.356 A 9.769 9.769 0 0 1 57.288 66.949 A 3.512 3.512 0 0 1 57.317 66.873 C 57.411 66.638 57.506 66.483 57.6 66.394 A 0.349 0.349 0 0 1 57.727 66.314 C 57.825 66.363 57.922 66.46 57.971 66.607 A 29.606 29.606 0 0 1 57.978 66.633 C 58.01 66.762 58.04 66.892 58.04 67.021 A 0.703 0.703 0 0 1 58.02 67.193 A 4.623 4.623 0 0 1 58.018 67.204 C 57.97 67.441 57.92 67.584 57.776 67.632 A 0.286 0.286 0 0 0 57.691 67.732 C 57.608 67.894 57.685 68.146 57.922 68.462 C 58.091 68.673 58.223 68.775 58.319 68.736 A 0.13 0.13 0 0 0 58.362 68.706 A 0.34 0.34 0 0 0 58.402 68.675 C 58.517 68.57 58.638 68.339 58.812 67.936 A 19.507 19.507 0 0 0 58.899 67.73 C 58.972 67.559 59.033 67.4 59.094 67.248 A 5.79 5.79 0 0 1 59.29 66.802 A 7.013 7.013 0 0 1 59.313 66.756 C 59.446 66.494 59.536 66.36 59.583 66.314 C 59.583 66.265 59.631 66.167 59.631 66.021 A 0.628 0.628 0 0 0 59.645 65.975 C 59.68 65.835 59.675 65.664 59.631 65.533 C 59.631 65.322 59.657 65.036 59.743 64.692 A 4.415 4.415 0 0 1 59.875 64.263 A 8.591 8.591 0 0 1 60.092 63.586 A 12.243 12.243 0 0 1 60.413 62.798 C 60.594 62.436 60.748 62.235 60.876 62.135 A 0.417 0.417 0 0 1 60.999 62.066 C 61.047 62.066 61.096 62.017 61.096 61.919 A 0.053 0.053 0 0 0 61.101 61.914 C 61.142 61.861 61.095 61.721 61.047 61.626 C 60.989 61.538 60.965 61.45 60.967 61.362 A 0.581 0.581 0 0 1 60.999 61.187 C 61.033 61.083 61.068 60.979 61.138 60.874 A 0.841 0.841 0 0 1 61.243 60.747 C 61.34 60.601 61.487 60.406 61.633 60.113 A 8.164 8.164 0 0 0 61.847 59.649 C 61.872 59.589 61.896 59.53 61.92 59.471 A 5.815 5.815 0 0 0 62.024 59.185 A 21.196 21.196 0 0 1 62.197 58.599 A 9.833 9.833 0 0 1 62.366 58.111 A 7.712 7.712 0 0 1 62.386 58.058 C 62.524 57.698 62.66 57.423 62.753 57.192 A 3.867 3.867 0 0 0 62.756 57.183 A 2.806 2.806 0 0 0 62.819 57.073 C 62.93 56.868 63 56.673 63 56.548 A 4.707 4.707 0 0 0 63.005 56.532 C 63.04 56.386 63.047 56.328 63.023 56.31 A 0.037 0.037 0 0 0 63 56.304 A 0.092 0.092 0 0 1 62.976 56.301 C 62.921 56.286 62.951 56.211 63.017 56.075 A 12.01 12.01 0 0 1 63.049 56.011 A 3.961 3.961 0 0 0 63.06 55.995 C 63.158 55.847 63.301 55.612 63.489 55.376 A 6.257 6.257 0 0 0 63.831 54.925 C 63.94 54.766 64.05 54.595 64.172 54.4 A 31.948 31.948 0 0 1 64.357 54.039 C 64.416 53.924 64.472 53.814 64.522 53.709 A 3.059 3.059 0 0 0 64.661 53.374 C 64.758 53.033 64.905 52.74 65.051 52.447 A 26.021 26.021 0 0 1 65.168 52.253 C 65.273 52.082 65.37 51.932 65.442 51.861 A 1.744 1.744 0 0 0 65.498 51.802 C 65.551 51.744 65.596 51.685 65.634 51.627 A 0.913 0.913 0 0 0 65.735 51.421 C 65.813 51.265 65.829 51.171 65.832 51.064 A 2.892 2.892 0 0 0 65.833 50.982 A 3.718 3.718 0 0 1 65.833 50.916 C 65.835 50.823 65.844 50.747 65.893 50.654 A 0.71 0.71 0 0 1 65.93 50.591 A 0.711 0.711 0 0 1 65.964 50.544 A 1.484 1.484 0 0 1 66.321 50.249 A 1.176 1.176 0 0 0 66.528 50.073 A 1.124 1.124 0 0 0 66.711 49.81 A 2.231 2.231 0 0 0 66.746 49.718 A 1.929 1.929 0 0 0 66.858 49.078 C 66.858 48.833 66.907 48.589 66.956 48.345 C 67.01 48.235 67.05 48.125 67.1 48.033 A 0.472 0.472 0 0 1 67.249 47.857 A 2.655 2.655 0 0 0 67.35 47.721 C 67.431 47.606 67.486 47.504 67.516 47.414 A 0.46 0.46 0 0 0 67.542 47.271 A 0.465 0.465 0 0 0 67.536 47.198 C 67.513 47.051 67.411 46.978 67.2 46.978 C 67.103 46.978 66.957 47.171 66.716 47.461 A 17.436 17.436 0 0 1 66.711 47.466 A 7.789 7.789 0 0 0 66.53 47.692 C 66.344 47.933 66.151 48.209 65.93 48.54 C 65.686 48.98 65.442 49.371 65.295 49.712 A 10.648 10.648 0 0 0 65.228 49.849 C 65.078 50.161 65.002 50.365 65.002 50.494 C 65.002 50.579 65.002 50.627 64.97 50.703 A 0.661 0.661 0 0 1 64.954 50.738 A 0.987 0.987 0 0 0 64.912 50.76 C 64.893 50.771 64.875 50.781 64.859 50.79 A 0.773 0.773 0 0 1 64.858 50.791 A 1.021 1.021 0 0 1 64.857 50.791 M 346.838 28.716 A 4.661 4.661 0 0 0 346.828 28.601 C 346.771 28.04 346.628 27.737 346.399 27.691 A 1.373 1.373 0 0 0 346.253 27.696 C 346.222 27.699 346.189 27.705 346.153 27.713 A 1.002 1.002 0 0 0 346.057 27.74 A 0.917 0.917 0 0 0 345.787 27.854 A 1.251 1.251 0 0 0 345.569 28.033 C 345.452 28.11 345.397 28.219 345.38 28.31 A 0.344 0.344 0 0 0 345.374 28.374 C 345.374 28.57 345.52 29.156 345.764 30.132 A 577.755 577.755 0 0 1 346.156 31.449 C 346.351 32.103 346.562 32.81 346.79 33.55 A 72.747 72.747 0 0 0 347.4 35.491 A 320.152 320.152 0 0 1 348.01 37.359 A 39.702 39.702 0 0 1 348.037 37.44 C 348.228 38.017 348.463 38.768 348.743 39.654 A 415.406 415.406 0 0 0 349.176 41.009 A 58.4 58.4 0 0 1 349.573 42.29 C 349.817 43.121 350.11 43.853 350.354 44.585 C 350.574 45.135 350.766 45.547 350.931 45.842 A 3.839 3.839 0 0 0 351.086 46.099 C 351.233 46.392 351.428 46.734 351.672 47.222 A 59.181 59.181 0 0 1 351.959 47.948 A 16.353 16.353 0 0 1 352.209 48.638 C 352.356 49.126 352.502 49.517 352.698 49.81 A 3.187 3.187 0 0 0 352.782 49.93 C 352.947 50.155 353.102 50.298 353.186 50.298 C 353.533 50.298 353.495 49.835 353.104 48.909 A 13.044 13.044 0 0 0 352.942 48.54 A 17.707 17.707 0 0 1 352.405 47.076 A 7.284 7.284 0 0 1 352.374 46.972 C 352.285 46.655 352.238 46.406 352.219 46.224 A 1.729 1.729 0 0 1 352.209 46.05 A 1.233 1.233 0 0 0 352.203 45.932 C 352.178 45.674 352.077 45.268 351.868 44.683 A 15.41 15.41 0 0 0 351.659 44.017 A 49.457 49.457 0 0 0 351.086 42.437 A 16.824 16.824 0 0 1 350.862 41.897 C 350.745 41.603 350.641 41.32 350.548 41.053 A 49.281 49.281 0 0 1 350.305 40.337 A 30.553 30.553 0 0 1 350.226 40.097 C 350.115 39.753 350.047 39.519 350.023 39.393 A 0.463 0.463 0 0 1 350.012 39.312 A 0.286 0.286 0 0 0 350.018 39.281 C 350.046 39.073 349.905 38.641 349.719 37.945 A 96.233 96.233 0 0 1 349.535 37.424 A 39.857 39.857 0 0 0 348.938 35.796 C 348.645 35.015 348.401 34.527 348.206 34.283 A 0.665 0.665 0 0 1 348.166 34.239 C 348.08 34.136 348.011 33.995 347.947 33.815 A 4.535 4.535 0 0 1 347.864 33.55 A 3.717 3.717 0 0 1 347.717 32.525 C 347.717 32.354 347.705 32.171 347.681 31.988 A 3.805 3.805 0 0 0 347.571 31.451 A 3.791 3.791 0 0 0 347.569 31.439 C 347.538 31.197 347.488 30.993 347.419 30.826 A 1.167 1.167 0 0 0 347.278 30.572 A 9.091 9.091 0 0 1 347.141 30.213 C 347.113 30.136 347.086 30.052 347.058 29.961 A 6.069 6.069 0 0 1 346.985 29.693 A 3.946 3.946 0 0 1 346.866 29.125 A 3.167 3.167 0 0 1 346.838 28.716 Z M 475.842 28.716 A 4.661 4.661 0 0 0 475.832 28.601 C 475.775 28.04 475.632 27.737 475.403 27.691 A 1.373 1.373 0 0 0 475.257 27.696 C 475.226 27.699 475.193 27.705 475.157 27.713 A 1.002 1.002 0 0 0 475.061 27.74 A 0.917 0.917 0 0 0 474.791 27.854 A 1.251 1.251 0 0 0 474.573 28.033 C 474.456 28.11 474.401 28.219 474.384 28.31 A 0.344 0.344 0 0 0 474.377 28.374 C 474.377 28.57 474.524 29.156 474.768 30.132 A 577.755 577.755 0 0 1 475.16 31.449 C 475.355 32.103 475.566 32.81 475.793 33.55 A 72.747 72.747 0 0 0 476.404 35.491 A 320.152 320.152 0 0 1 477.014 37.359 A 39.702 39.702 0 0 1 477.041 37.44 C 477.232 38.017 477.467 38.768 477.747 39.654 A 415.406 415.406 0 0 0 478.18 41.009 A 58.4 58.4 0 0 1 478.577 42.29 C 478.821 43.121 479.114 43.853 479.358 44.585 C 479.578 45.135 479.77 45.547 479.935 45.842 A 3.839 3.839 0 0 0 480.09 46.099 C 480.237 46.392 480.432 46.734 480.676 47.222 A 59.181 59.181 0 0 1 480.963 47.948 A 16.353 16.353 0 0 1 481.213 48.638 C 481.36 49.126 481.506 49.517 481.702 49.81 A 3.187 3.187 0 0 0 481.786 49.93 C 481.951 50.155 482.106 50.298 482.19 50.298 C 482.537 50.298 482.499 49.835 482.108 48.909 A 13.044 13.044 0 0 0 481.946 48.54 A 17.707 17.707 0 0 1 481.409 47.076 A 7.284 7.284 0 0 1 481.378 46.972 C 481.288 46.655 481.242 46.406 481.223 46.224 A 1.729 1.729 0 0 1 481.213 46.05 A 1.233 1.233 0 0 0 481.207 45.932 C 481.182 45.674 481.08 45.268 480.872 44.683 A 15.41 15.41 0 0 0 480.663 44.017 A 49.457 49.457 0 0 0 480.09 42.437 A 16.824 16.824 0 0 1 479.865 41.897 C 479.749 41.603 479.645 41.32 479.552 41.053 A 49.281 49.281 0 0 1 479.309 40.337 A 30.553 30.553 0 0 1 479.23 40.097 C 479.119 39.753 479.051 39.519 479.026 39.393 A 0.463 0.463 0 0 1 479.016 39.312 A 0.286 0.286 0 0 0 479.022 39.281 C 479.05 39.073 478.909 38.641 478.723 37.945 A 96.233 96.233 0 0 1 478.539 37.424 A 39.857 39.857 0 0 0 477.942 35.796 C 477.649 35.015 477.405 34.527 477.209 34.283 A 0.665 0.665 0 0 1 477.17 34.239 C 477.084 34.136 477.015 33.995 476.951 33.815 A 4.535 4.535 0 0 1 476.868 33.55 A 3.717 3.717 0 0 1 476.721 32.525 C 476.721 32.354 476.709 32.171 476.685 31.988 A 3.805 3.805 0 0 0 476.575 31.451 A 3.791 3.791 0 0 0 476.573 31.439 C 476.542 31.197 476.492 30.993 476.423 30.826 A 1.167 1.167 0 0 0 476.282 30.572 A 9.091 9.091 0 0 1 476.144 30.213 C 476.117 30.136 476.089 30.052 476.062 29.961 A 6.069 6.069 0 0 1 475.989 29.693 A 3.946 3.946 0 0 1 475.87 29.125 A 3.167 3.167 0 0 1 475.842 28.716 Z M 105.927 35.49 A 3.468 3.468 0 0 1 105.926 35.492 A 3.509 3.509 0 0 1 105.925 35.494 A 3.549 3.549 0 0 1 105.924 35.496 A 2.99 2.99 0 0 1 105.923 35.499 A 3.024 3.024 0 0 1 105.922 35.501 A 3.669 3.669 0 0 1 105.92 35.503 C 105.896 35.601 105.884 35.686 105.884 35.766 A 0.7 0.7 0 0 0 105.92 35.992 C 105.96 36.071 105.968 36.184 105.942 36.328 A 1.451 1.451 0 0 1 105.92 36.431 A 7.661 7.661 0 0 0 105.883 36.549 C 105.87 36.59 105.856 36.632 105.841 36.675 A 1.122 1.122 0 0 1 105.725 36.919 C 105.627 37.083 105.55 37.181 105.481 37.243 A 0.447 0.447 0 0 1 105.383 37.31 A 0.043 0.043 0 0 1 105.362 37.304 C 105.326 37.283 105.285 37.21 105.222 37.086 A 22.041 22.041 0 0 1 105.188 37.017 A 0.254 0.254 0 0 1 105.187 37.015 C 105.147 36.892 105.175 36.668 105.27 36.314 A 8.173 8.173 0 0 1 105.334 36.089 C 105.481 35.601 105.676 35.064 105.92 34.429 A 8.151 8.151 0 0 0 106.002 34.262 C 106.117 34.017 106.226 33.757 106.335 33.489 A 59.914 59.914 0 0 1 106.75 32.476 C 106.952 31.972 107.107 31.515 107.232 31.12 A 35.042 35.042 0 0 0 107.385 30.621 A 6.917 6.917 0 0 1 107.442 30.44 C 107.541 30.142 107.653 29.864 107.756 29.604 A 17.048 17.048 0 0 0 107.874 29.302 A 9.493 9.493 0 0 1 107.918 29.204 C 108.044 28.928 108.148 28.737 108.231 28.602 A 3.539 3.539 0 0 1 108.313 28.472 C 108.459 28.277 108.655 27.984 108.801 27.642 A 13.778 13.778 0 0 0 109.024 27.241 A 3.316 3.316 0 0 0 109.29 26.617 C 109.436 26.275 109.534 26.031 109.583 25.835 A 1.241 1.241 0 0 0 109.584 25.83 C 109.626 25.657 109.589 25.643 109.472 25.752 A 1.423 1.423 0 0 0 109.436 25.787 A 14.251 14.251 0 0 0 109.239 26.016 C 109.117 26.162 108.99 26.319 108.865 26.484 A 10.445 10.445 0 0 0 108.362 27.203 A 43.542 43.542 0 0 0 108.2 27.447 C 108.041 27.688 107.893 27.921 107.758 28.145 A 9.764 9.764 0 0 0 107.385 28.814 A 4.433 4.433 0 0 0 107.248 29.082 C 107.104 29.389 107.043 29.616 107.043 29.693 A 0.325 0.325 0 0 1 107.045 29.696 C 107.139 29.889 106.944 29.986 106.506 29.986 A 3.691 3.691 0 0 0 106.484 29.983 C 106.112 29.939 106.021 29.988 106.165 30.083 A 0.204 0.204 0 0 1 106.23 30.156 C 106.306 30.294 106.284 30.563 106.165 30.962 A 4.37 4.37 0 0 1 106.025 31.352 C 105.863 31.751 105.626 32.198 105.334 32.671 C 105.237 32.915 105.09 33.257 104.944 33.648 C 104.797 34.087 104.651 34.527 104.553 34.966 A 7.984 7.984 0 0 1 104.441 35.444 C 104.358 35.758 104.26 36.073 104.163 36.431 C 104.053 36.706 103.958 36.949 103.871 37.171 A 18.598 18.598 0 0 1 103.674 37.652 C 103.577 37.945 103.479 38.238 103.43 38.531 A 2.145 2.145 0 0 0 103.406 38.609 C 103.333 38.859 103.337 39.028 103.381 39.117 C 103.419 39.23 103.457 39.314 103.472 39.414 A 0.617 0.617 0 0 1 103.479 39.507 C 103.479 39.565 103.471 39.615 103.459 39.661 A 0.979 0.979 0 0 1 103.381 39.849 C 103.344 39.924 103.307 40.056 103.269 40.245 A 6.493 6.493 0 0 0 103.235 40.435 C 103.21 40.559 103.198 40.696 103.185 40.838 A 5.451 5.451 0 0 1 103.137 41.265 A 3.745 3.745 0 0 1 103.127 41.543 A 7.033 7.033 0 0 1 103.04 42.193 A 7.063 7.063 0 0 1 103.008 42.369 C 102.985 42.488 102.962 42.588 102.939 42.674 A 2.69 2.69 0 0 1 102.893 42.828 A 6.138 6.138 0 0 0 102.857 42.937 A 1.117 1.117 0 0 0 102.795 43.267 C 102.771 43.34 102.759 43.401 102.759 43.456 A 0.331 0.331 0 0 0 102.795 43.609 A 1.439 1.439 0 0 1 102.829 43.726 C 102.853 43.825 102.874 43.951 102.885 44.103 A 3.275 3.275 0 0 1 102.893 44.341 A 3.133 3.133 0 0 1 102.926 44.629 A 9.759 9.759 0 0 1 102.942 45.318 A 4.169 4.169 0 0 1 102.936 45.535 C 102.923 45.785 102.893 46.006 102.893 46.197 A 2.582 2.582 0 0 1 102.87 46.303 C 102.842 46.416 102.814 46.487 102.787 46.534 A 0.262 0.262 0 0 1 102.747 46.587 A 0.043 0.043 0 0 0 102.725 46.594 C 102.684 46.618 102.649 46.707 102.649 46.831 C 102.649 46.898 102.659 46.974 102.674 47.056 A 5.725 5.725 0 0 0 102.747 47.369 A 1.22 1.22 0 0 1 102.811 47.523 A 1.672 1.672 0 0 1 102.893 48.052 L 102.893 48.638 C 102.795 49.029 102.6 48.785 102.307 47.954 A 7.162 7.162 0 0 1 102.241 47.667 C 102.211 47.525 102.19 47.392 102.177 47.26 A 3.297 3.297 0 0 1 102.161 46.929 A 2.173 2.173 0 0 1 102.166 46.774 C 102.181 46.566 102.228 46.422 102.307 46.343 A 1.629 1.629 0 0 0 102.325 46.325 C 102.549 46.094 102.496 46.004 102.258 46.099 A 0.12 0.12 0 0 1 102.195 46.079 C 102.121 46.033 102.052 45.91 102.014 45.757 C 101.985 45.612 101.956 45.45 101.937 45.271 A 3.761 3.761 0 0 1 101.917 44.878 A 23.134 23.134 0 0 1 101.918 44.6 A 4.222 4.222 0 0 1 101.965 43.951 C 102.014 43.658 102.112 43.462 102.209 43.365 C 102.291 43.324 102.304 43.283 102.335 43.214 M 209.931 35.49 A 3.468 3.468 0 0 1 209.93 35.492 A 3.509 3.509 0 0 1 209.929 35.494 A 3.549 3.549 0 0 1 209.928 35.496 A 2.99 2.99 0 0 1 209.927 35.499 A 3.024 3.024 0 0 1 209.925 35.501 A 3.669 3.669 0 0 1 209.924 35.503 C 209.9 35.601 209.888 35.686 209.888 35.766 A 0.7 0.7 0 0 0 209.924 35.992 C 209.964 36.071 209.971 36.184 209.946 36.328 A 1.451 1.451 0 0 1 209.924 36.431 A 7.661 7.661 0 0 0 209.887 36.549 C 209.874 36.59 209.86 36.632 209.845 36.675 A 1.122 1.122 0 0 1 209.729 36.919 C 209.631 37.083 209.554 37.181 209.485 37.243 A 0.447 0.447 0 0 1 209.387 37.31 A 0.043 0.043 0 0 1 209.366 37.304 C 209.329 37.283 209.289 37.21 209.226 37.086 A 22.041 22.041 0 0 1 209.192 37.017 A 0.254 0.254 0 0 1 209.191 37.015 C 209.151 36.892 209.179 36.668 209.274 36.314 A 8.173 8.173 0 0 1 209.338 36.089 C 209.485 35.601 209.68 35.064 209.924 34.429 A 8.151 8.151 0 0 0 210.006 34.262 C 210.121 34.017 210.23 33.757 210.339 33.489 A 59.914 59.914 0 0 1 210.754 32.476 C 210.956 31.972 211.111 31.515 211.236 31.12 A 35.042 35.042 0 0 0 211.389 30.621 A 6.917 6.917 0 0 1 211.446 30.44 C 211.544 30.142 211.657 29.864 211.76 29.604 A 17.048 17.048 0 0 0 211.877 29.302 A 9.493 9.493 0 0 1 211.922 29.204 C 212.048 28.928 212.152 28.737 212.234 28.602 A 3.539 3.539 0 0 1 212.317 28.472 C 212.463 28.277 212.659 27.984 212.805 27.642 A 13.778 13.778 0 0 0 213.028 27.241 A 3.316 3.316 0 0 0 213.293 26.617 C 213.44 26.275 213.538 26.031 213.586 25.835 A 1.241 1.241 0 0 0 213.588 25.83 C 213.63 25.657 213.593 25.643 213.476 25.752 A 1.423 1.423 0 0 0 213.44 25.787 A 14.251 14.251 0 0 0 213.243 26.016 C 213.121 26.162 212.994 26.319 212.869 26.484 A 10.445 10.445 0 0 0 212.366 27.203 A 43.542 43.542 0 0 0 212.204 27.447 C 212.045 27.688 211.897 27.921 211.762 28.145 A 9.764 9.764 0 0 0 211.389 28.814 A 4.433 4.433 0 0 0 211.252 29.082 C 211.108 29.389 211.047 29.616 211.047 29.693 A 0.325 0.325 0 0 1 211.049 29.696 C 211.143 29.889 210.948 29.986 210.51 29.986 A 3.691 3.691 0 0 0 210.488 29.983 C 210.116 29.939 210.025 29.988 210.168 30.083 A 0.204 0.204 0 0 1 210.234 30.156 C 210.31 30.294 210.288 30.563 210.168 30.962 A 4.37 4.37 0 0 1 210.029 31.352 C 209.867 31.751 209.63 32.198 209.338 32.671 C 209.241 32.915 209.094 33.257 208.948 33.648 C 208.801 34.087 208.655 34.527 208.557 34.966 A 7.984 7.984 0 0 1 208.445 35.444 C 208.362 35.758 208.264 36.073 208.167 36.431 C 208.057 36.706 207.962 36.949 207.875 37.171 A 18.598 18.598 0 0 1 207.678 37.652 C 207.581 37.945 207.483 38.238 207.434 38.531 A 2.145 2.145 0 0 0 207.41 38.609 C 207.337 38.859 207.341 39.028 207.385 39.117 C 207.423 39.23 207.461 39.314 207.476 39.414 A 0.617 0.617 0 0 1 207.483 39.507 C 207.483 39.565 207.475 39.615 207.463 39.661 A 0.979 0.979 0 0 1 207.385 39.849 C 207.348 39.924 207.31 40.056 207.273 40.245 A 6.493 6.493 0 0 0 207.239 40.435 C 207.214 40.559 207.202 40.696 207.189 40.838 A 5.451 5.451 0 0 1 207.141 41.265 A 3.745 3.745 0 0 1 207.131 41.543 A 7.033 7.033 0 0 1 207.043 42.193 A 7.063 7.063 0 0 1 207.012 42.369 C 206.989 42.488 206.966 42.588 206.943 42.674 A 2.69 2.69 0 0 1 206.897 42.828 A 6.138 6.138 0 0 0 206.861 42.937 A 1.117 1.117 0 0 0 206.799 43.267 C 206.775 43.34 206.763 43.401 206.763 43.456 A 0.331 0.331 0 0 0 206.799 43.609 A 1.439 1.439 0 0 1 206.833 43.726 C 206.857 43.825 206.877 43.951 206.889 44.103 A 3.275 3.275 0 0 1 206.897 44.341 A 3.133 3.133 0 0 1 206.93 44.629 A 9.759 9.759 0 0 1 206.946 45.318 A 4.169 4.169 0 0 1 206.94 45.535 C 206.927 45.785 206.897 46.006 206.897 46.197 A 2.582 2.582 0 0 1 206.874 46.303 C 206.846 46.416 206.818 46.487 206.791 46.534 A 0.262 0.262 0 0 1 206.75 46.587 A 0.043 0.043 0 0 0 206.729 46.594 C 206.688 46.618 206.653 46.707 206.653 46.831 C 206.653 46.898 206.663 46.974 206.678 47.056 A 5.725 5.725 0 0 0 206.75 47.369 A 1.22 1.22 0 0 1 206.815 47.523 A 1.672 1.672 0 0 1 206.897 48.052 L 206.897 48.638 C 206.799 49.029 206.604 48.785 206.311 47.954 A 7.162 7.162 0 0 1 206.245 47.667 C 206.215 47.525 206.194 47.392 206.181 47.26 A 3.297 3.297 0 0 1 206.165 46.929 A 2.173 2.173 0 0 1 206.17 46.774 C 206.185 46.566 206.232 46.422 206.311 46.343 A 1.629 1.629 0 0 0 206.329 46.325 C 206.553 46.094 206.5 46.004 206.262 46.099 A 0.12 0.12 0 0 1 206.199 46.079 C 206.124 46.033 206.056 45.91 206.018 45.757 C 205.989 45.612 205.96 45.45 205.941 45.271 A 3.761 3.761 0 0 1 205.92 44.878 A 23.134 23.134 0 0 1 205.921 44.6 A 4.222 4.222 0 0 1 205.969 43.951 C 206.018 43.658 206.116 43.462 206.213 43.365 C 206.295 43.324 206.308 43.283 206.339 43.214 M 451.868 31.695 A 1.744 1.744 0 0 0 451.673 31.708 C 451.401 31.74 450.986 31.824 450.452 31.939 C 449.768 32.085 449.036 32.281 448.303 32.525 A 39.768 39.768 0 0 0 447.264 32.799 A 41.408 41.408 0 0 0 446.204 33.111 A 9.107 9.107 0 0 1 445.833 33.248 A 33.419 33.419 0 0 1 445.374 33.404 A 6.962 6.962 0 0 1 444.836 33.599 A 6.962 6.962 0 0 0 444.299 33.794 A 12.483 12.483 0 0 1 443.64 33.916 A 12.483 12.483 0 0 0 442.981 34.038 A 6.988 6.988 0 0 0 442.24 34.144 C 442.032 34.186 441.838 34.237 441.661 34.297 A 3.434 3.434 0 0 0 441.565 34.331 C 441.42 34.368 441.302 34.404 441.191 34.44 A 18.326 18.326 0 0 0 441.077 34.478 A 45.922 45.922 0 0 0 439.884 34.877 C 439.076 35.162 438.422 35.43 437.952 35.699 A 3.657 3.657 0 0 1 437.95 35.7 C 437.842 35.772 437.761 35.817 437.706 35.875 A 0.282 0.282 0 0 0 437.659 35.943 A 0.326 0.326 0 0 0 437.631 35.975 C 437.592 36.026 437.553 36.096 437.514 36.136 A 0.215 0.215 0 0 1 437.512 36.138 A 0.709 0.709 0 0 1 437.478 36.199 C 437.464 36.222 437.45 36.241 437.436 36.258 A 0.971 0.971 0 0 1 437.366 36.333 L 437.17 36.529 A 12.588 12.588 0 0 0 437.038 36.605 C 436.506 36.918 436.477 37 436.916 36.886 A 4.955 4.955 0 0 0 436.975 36.871 A 29.69 29.69 0 0 1 437.541 36.668 C 438.059 36.489 438.448 36.377 438.696 36.344 A 1.034 1.034 0 0 1 438.831 36.333 A 1.098 1.098 0 0 1 438.874 36.327 C 439.107 36.298 439.157 36.379 439.056 36.572 A 1.072 1.072 0 0 1 439.026 36.626 C 438.933 36.719 438.84 36.812 438.706 36.904 A 1.7 1.7 0 0 1 438.684 36.919 A 0.953 0.953 0 0 1 438.499 37.017 A 0.702 0.702 0 0 1 438.245 37.066 A 0.778 0.778 0 0 0 438.052 37.092 C 437.97 37.113 437.877 37.145 437.762 37.191 A 9.03 9.03 0 0 0 437.708 37.212 A 3.932 3.932 0 0 0 437.553 37.294 C 437.394 37.383 437.22 37.492 437.074 37.602 A 4.267 4.267 0 0 0 437.073 37.603 A 1.449 1.449 0 0 0 437.006 37.656 C 436.883 37.76 436.848 37.835 436.902 37.88 A 0.122 0.122 0 0 0 436.926 37.896 A 0.538 0.538 0 0 0 437.068 37.958 C 437.253 38.014 437.556 38.042 438 38.042 L 440.686 38.042 A 46.656 46.656 0 0 1 442.548 38.006 A 49.465 49.465 0 0 1 444.446 38.042 A 134.995 134.995 0 0 1 445.322 38.08 C 446.158 38.119 446.863 38.164 447.375 38.238 C 447.888 38.274 448.373 38.338 448.811 38.389 A 17.748 17.748 0 0 0 449.231 38.433 A 25.479 25.479 0 0 1 449.587 38.465 C 449.91 38.496 450.151 38.528 450.311 38.559 A 1.845 1.845 0 0 1 450.403 38.579 A 0.712 0.712 0 0 0 450.631 38.535 C 450.831 38.467 451.084 38.321 451.419 38.11 A 25.67 25.67 0 0 0 451.526 38.042 C 451.999 37.711 452.518 37.334 452.994 36.867 A 6.989 6.989 0 0 0 453.04 36.822 A 7.463 7.463 0 0 0 453.489 36.283 C 453.634 36.09 453.755 35.901 453.851 35.715 A 2.439 2.439 0 0 0 454.016 35.308 A 1.427 1.427 0 0 0 454.091 34.854 C 454.091 34.464 453.929 34.074 453.634 33.684 A 3.619 3.619 0 0 0 453.528 33.55 A 0.524 0.524 0 0 1 453.388 33.255 A 0.653 0.653 0 0 1 453.381 33.16 A 1.208 1.208 0 0 1 453.333 32.775 A 10.565 10.565 0 0 1 453.333 32.72 A 1.153 1.153 0 0 0 453.323 32.573 C 453.307 32.444 453.271 32.326 453.235 32.183 C 453.187 32.04 453.094 31.898 452.909 31.845 A 0.505 0.505 0 0 0 452.893 31.841 A 0.982 0.982 0 0 0 452.7 31.772 C 452.564 31.737 452.392 31.714 452.185 31.703 A 5.893 5.893 0 0 0 451.868 31.695 Z M 342.59 48.931 A 0.475 0.475 0 0 0 342.338 49.012 C 342.29 49.042 342.242 49.078 342.192 49.116 A 10.339 10.339 0 0 1 342.053 49.224 A 1.581 1.581 0 0 0 341.942 49.402 C 341.81 49.639 341.643 50.019 341.418 50.542 A 46.439 46.439 0 0 1 341.416 50.55 C 341.21 51.125 340.971 51.769 340.755 52.481 A 18.159 18.159 0 0 0 340.637 52.886 A 169.366 169.366 0 0 0 340.283 54.089 C 340.173 54.473 340.076 54.839 340.002 55.181 C 339.866 55.774 339.814 56.197 339.848 56.329 A 0.118 0.118 0 0 0 339.856 56.353 A 0.173 0.173 0 0 1 339.87 56.4 C 339.888 56.498 339.862 56.674 339.829 56.945 A 17.17 17.17 0 0 0 339.807 57.134 C 339.758 57.574 339.612 58.062 339.465 58.599 A 23.232 23.232 0 0 0 339.252 59.521 C 339.185 59.844 339.124 60.186 339.075 60.552 A 41.153 41.153 0 0 0 338.94 61.535 C 338.904 61.846 338.879 62.139 338.879 62.408 A 13.863 13.863 0 0 1 338.784 63.131 C 338.739 63.421 338.687 63.731 338.635 64.068 A 11.298 11.298 0 0 1 338.521 64.651 C 338.469 64.886 338.414 65.107 338.364 65.303 A 79.93 79.93 0 0 0 338.293 65.581 A 26.206 26.206 0 0 0 338.21 65.836 C 337.761 67.23 337.874 67.347 338.515 66.187 A 21.517 21.517 0 0 0 338.684 65.874 A 10.628 10.628 0 0 1 338.95 65.434 C 339.094 65.207 339.262 64.963 339.465 64.703 A 10.566 10.566 0 0 1 340.36 63.649 A 4.255 4.255 0 0 1 340.54 63.482 A 67.173 67.173 0 0 0 341.236 62.704 C 341.898 61.953 342.456 61.285 342.932 60.699 A 38.709 38.709 0 0 0 343.235 60.29 C 343.634 59.743 343.86 59.383 343.86 59.185 A 0.595 0.595 0 0 1 343.891 59.009 C 343.945 58.835 344.072 58.614 344.271 58.344 A 5.894 5.894 0 0 1 344.299 58.306 C 344.592 57.915 344.934 57.574 345.325 57.232 C 345.648 56.908 345.884 56.76 346.074 56.745 A 0.404 0.404 0 0 1 346.106 56.744 A 0.45 0.45 0 0 0 346.275 56.704 A 1.875 1.875 0 0 0 346.399 56.646 A 0.29 0.29 0 0 0 346.439 56.594 C 346.458 56.563 346.475 56.526 346.485 56.487 A 0.336 0.336 0 0 0 346.497 56.402 C 346.497 56.355 346.587 56.173 346.767 55.942 A 3.166 3.166 0 0 1 346.79 55.913 C 346.985 55.621 347.18 55.376 347.473 55.083 A 8.044 8.044 0 0 0 347.936 54.493 A 2.495 2.495 0 0 0 348.108 54.204 C 348.297 53.92 348.395 53.728 348.401 53.583 A 0.34 0.34 0 0 0 348.401 53.57 A 1.203 1.203 0 0 0 348.274 53.175 C 348.095 52.812 347.733 52.372 347.206 51.838 A 16.91 16.91 0 0 0 347.131 51.763 C 346.35 50.933 345.422 50.298 344.446 49.712 C 343.526 49.18 342.895 48.888 342.598 48.93 A 0.345 0.345 0 0 0 342.59 48.931 Z M 471.594 48.931 A 0.475 0.475 0 0 0 471.342 49.012 C 471.294 49.042 471.246 49.078 471.196 49.116 A 10.339 10.339 0 0 1 471.057 49.224 A 1.581 1.581 0 0 0 470.945 49.402 C 470.814 49.639 470.647 50.019 470.422 50.542 A 46.439 46.439 0 0 1 470.42 50.55 C 470.214 51.125 469.975 51.769 469.759 52.481 A 18.159 18.159 0 0 0 469.641 52.886 A 169.366 169.366 0 0 0 469.287 54.089 C 469.177 54.473 469.08 54.839 469.006 55.181 C 468.869 55.774 468.818 56.197 468.852 56.329 A 0.118 0.118 0 0 0 468.86 56.353 A 0.173 0.173 0 0 1 468.874 56.4 C 468.892 56.498 468.866 56.674 468.833 56.945 A 17.17 17.17 0 0 0 468.811 57.134 C 468.762 57.574 468.616 58.062 468.469 58.599 A 23.232 23.232 0 0 0 468.256 59.521 C 468.188 59.844 468.127 60.186 468.079 60.552 A 41.153 41.153 0 0 0 467.944 61.535 C 467.908 61.846 467.883 62.139 467.883 62.408 A 13.863 13.863 0 0 1 467.787 63.131 C 467.743 63.421 467.691 63.731 467.639 64.068 A 11.298 11.298 0 0 1 467.525 64.651 C 467.473 64.886 467.418 65.107 467.368 65.303 A 79.93 79.93 0 0 0 467.297 65.581 A 26.206 26.206 0 0 0 467.214 65.836 C 466.765 67.23 466.878 67.347 467.519 66.187 A 21.517 21.517 0 0 0 467.688 65.874 A 10.628 10.628 0 0 1 467.953 65.434 C 468.098 65.207 468.266 64.963 468.469 64.703 A 10.566 10.566 0 0 1 469.364 63.649 A 4.255 4.255 0 0 1 469.543 63.482 A 67.173 67.173 0 0 0 470.24 62.704 C 470.901 61.953 471.46 61.285 471.936 60.699 A 38.709 38.709 0 0 0 472.239 60.29 C 472.638 59.743 472.864 59.383 472.864 59.185 A 0.595 0.595 0 0 1 472.895 59.009 C 472.949 58.835 473.076 58.614 473.275 58.344 A 5.894 5.894 0 0 1 473.303 58.306 C 473.596 57.915 473.938 57.574 474.329 57.232 C 474.652 56.908 474.888 56.76 475.078 56.745 A 0.404 0.404 0 0 1 475.11 56.744 A 0.45 0.45 0 0 0 475.279 56.704 A 1.875 1.875 0 0 0 475.403 56.646 A 0.29 0.29 0 0 0 475.443 56.594 C 475.462 56.563 475.479 56.526 475.489 56.487 A 0.336 0.336 0 0 0 475.5 56.402 C 475.5 56.355 475.591 56.173 475.771 55.942 A 3.166 3.166 0 0 1 475.793 55.913 C 475.989 55.621 476.184 55.376 476.477 55.083 A 8.044 8.044 0 0 0 476.94 54.493 A 2.495 2.495 0 0 0 477.112 54.204 C 477.301 53.92 477.399 53.728 477.405 53.583 A 0.34 0.34 0 0 0 477.405 53.57 A 1.203 1.203 0 0 0 477.278 53.175 C 477.098 52.812 476.737 52.372 476.21 51.838 A 16.91 16.91 0 0 0 476.135 51.763 C 475.354 50.933 474.426 50.298 473.45 49.712 C 472.53 49.18 471.899 48.888 471.602 48.93 A 0.345 0.345 0 0 0 471.594 48.931 Z M 116.027 33.961 A 8.272 8.272 0 0 0 115.979 34.038 A 12.947 12.947 0 0 0 115.233 35.359 C 115.043 35.744 114.861 36.157 114.687 36.606 A 18.745 18.745 0 0 0 114.514 37.066 A 6.405 6.405 0 0 0 114.385 37.377 C 114.299 37.601 114.242 37.794 114.203 37.953 A 3.493 3.493 0 0 0 114.172 38.091 C 114.124 38.333 114.124 38.383 114.218 38.289 A 0.789 0.789 0 0 0 114.221 38.287 A 3.954 3.954 0 0 1 114.342 38.114 C 114.517 37.88 114.653 37.769 114.764 37.769 A 0.163 0.163 0 0 1 114.856 37.798 C 114.98 37.84 114.964 38.056 114.867 38.388 A 5.27 5.27 0 0 1 114.807 38.579 A 2.947 2.947 0 0 1 114.703 38.995 C 114.661 39.129 114.612 39.263 114.563 39.41 A 3.162 3.162 0 0 0 114.462 39.711 C 114.424 39.842 114.396 39.96 114.368 40.044 C 114.293 40.343 114.161 40.757 113.994 41.241 A 47.961 47.961 0 0 1 113.831 41.704 C 113.538 42.437 113.293 43.121 113.049 43.804 A 84.763 84.763 0 0 0 112.854 44.231 C 112.711 44.544 112.601 44.792 112.525 44.974 A 8.596 8.596 0 0 0 112.463 45.122 C 112.385 45.28 112.306 45.437 112.278 45.569 A 0.444 0.444 0 0 0 112.268 45.66 A 0.417 0.417 0 0 0 112.255 45.708 C 112.23 45.828 112.274 45.915 112.317 46.001 A 0.281 0.281 0 0 1 112.374 46.072 C 112.39 46.104 112.392 46.142 112.367 46.193 A 0.269 0.269 0 0 1 112.366 46.197 L 112.122 46.441 A 0.465 0.465 0 0 0 111.95 46.539 C 111.895 46.59 111.855 46.655 111.829 46.734 A 0.837 0.837 0 0 0 111.771 46.866 C 111.757 46.914 111.754 46.962 111.772 47.009 A 0.197 0.197 0 0 0 111.78 47.027 A 0.225 0.225 0 0 0 111.939 47.122 C 112.271 47.177 113.007 46.797 114.172 45.953 A 14.519 14.519 0 0 1 114.717 45.637 A 7.733 7.733 0 0 1 114.954 45.513 A 5.293 5.293 0 0 1 115.127 45.413 C 115.289 45.324 115.417 45.269 115.491 45.269 A 0.46 0.46 0 0 0 115.61 45.205 C 115.738 45.113 115.894 44.939 116.077 44.683 C 116.321 44.341 116.614 43.902 116.858 43.413 C 117.108 42.997 117.429 42.545 117.821 42.057 A 18.809 18.809 0 0 1 118.03 41.802 A 10.379 10.379 0 0 1 118.839 40.928 A 6.937 6.937 0 0 1 119.543 40.337 A 11.584 11.584 0 0 0 120.282 39.684 A 44.254 44.254 0 0 0 121.057 38.921 A 24.775 24.775 0 0 0 121.702 38.193 C 121.894 37.964 122.066 37.74 122.21 37.517 A 4.124 4.124 0 0 0 122.278 37.408 A 12.522 12.522 0 0 0 122.508 37.067 C 122.674 36.813 122.795 36.604 122.893 36.417 A 7.068 7.068 0 0 0 122.961 36.285 A 1.266 1.266 0 0 0 123.009 36.143 C 123.057 35.964 123.049 35.816 123.01 35.699 C 122.922 35.521 122.753 35.344 122.503 35.13 A 7.554 7.554 0 0 0 122.424 35.064 C 122.131 34.771 121.729 34.478 121.257 34.185 A 15.611 15.611 0 0 0 120.764 33.892 A 9.852 9.852 0 0 0 119.891 33.391 A 11.414 11.414 0 0 0 118.811 32.915 A 11.976 11.976 0 0 0 118.372 32.755 C 117.967 32.617 117.645 32.543 117.424 32.569 A 0.626 0.626 0 0 0 117.395 32.574 C 117.016 32.716 116.545 33.134 116.027 33.961 Z M 220.031 33.961 A 8.272 8.272 0 0 0 219.983 34.038 A 12.947 12.947 0 0 0 219.237 35.359 C 219.047 35.744 218.865 36.157 218.69 36.606 A 18.745 18.745 0 0 0 218.518 37.066 A 6.405 6.405 0 0 0 218.389 37.377 C 218.303 37.601 218.246 37.794 218.207 37.953 A 3.493 3.493 0 0 0 218.176 38.091 C 218.128 38.333 218.127 38.383 218.222 38.289 A 0.789 0.789 0 0 0 218.225 38.287 A 3.954 3.954 0 0 1 218.346 38.114 C 218.521 37.88 218.657 37.769 218.768 37.769 A 0.163 0.163 0 0 1 218.86 37.798 C 218.984 37.84 218.968 38.056 218.871 38.388 A 5.27 5.27 0 0 1 218.811 38.579 A 2.947 2.947 0 0 1 218.707 38.995 C 218.665 39.129 218.616 39.263 218.567 39.41 A 3.162 3.162 0 0 0 218.466 39.711 C 218.428 39.842 218.4 39.96 218.372 40.044 C 218.297 40.343 218.165 40.757 217.997 41.241 A 47.961 47.961 0 0 1 217.834 41.704 C 217.542 42.437 217.297 43.121 217.053 43.804 A 84.763 84.763 0 0 0 216.858 44.231 C 216.715 44.544 216.605 44.792 216.529 44.974 A 8.596 8.596 0 0 0 216.467 45.122 C 216.389 45.28 216.31 45.437 216.282 45.569 A 0.444 0.444 0 0 0 216.272 45.66 A 0.417 0.417 0 0 0 216.259 45.708 C 216.234 45.828 216.278 45.915 216.321 46.001 A 0.281 0.281 0 0 1 216.378 46.072 C 216.393 46.104 216.396 46.142 216.371 46.193 A 0.269 0.269 0 0 1 216.37 46.197 L 216.125 46.441 A 0.465 0.465 0 0 0 215.954 46.539 C 215.899 46.59 215.859 46.655 215.833 46.734 A 0.837 0.837 0 0 0 215.775 46.866 C 215.761 46.914 215.758 46.962 215.776 47.009 A 0.197 0.197 0 0 0 215.784 47.027 A 0.225 0.225 0 0 0 215.943 47.122 C 216.275 47.177 217.011 46.797 218.176 45.953 A 14.519 14.519 0 0 1 218.721 45.637 A 7.733 7.733 0 0 1 218.958 45.513 A 5.293 5.293 0 0 1 219.131 45.413 C 219.293 45.324 219.421 45.269 219.495 45.269 A 0.46 0.46 0 0 0 219.614 45.205 C 219.742 45.113 219.897 44.939 220.081 44.683 C 220.325 44.341 220.618 43.902 220.862 43.413 C 221.112 42.997 221.433 42.545 221.825 42.057 A 18.809 18.809 0 0 1 222.034 41.802 A 10.379 10.379 0 0 1 222.843 40.928 A 6.937 6.937 0 0 1 223.547 40.337 A 11.584 11.584 0 0 0 224.286 39.684 A 44.254 44.254 0 0 0 225.061 38.921 A 24.775 24.775 0 0 0 225.705 38.193 C 225.898 37.964 226.07 37.74 226.214 37.517 A 4.124 4.124 0 0 0 226.282 37.408 A 12.522 12.522 0 0 0 226.512 37.067 C 226.678 36.813 226.799 36.604 226.897 36.417 A 7.068 7.068 0 0 0 226.965 36.285 A 1.266 1.266 0 0 0 227.013 36.143 C 227.061 35.964 227.053 35.816 227.014 35.699 C 226.926 35.521 226.756 35.344 226.507 35.13 A 7.554 7.554 0 0 0 226.428 35.064 C 226.135 34.771 225.733 34.478 225.261 34.185 A 15.611 15.611 0 0 0 224.768 33.892 A 9.852 9.852 0 0 0 223.895 33.391 A 11.414 11.414 0 0 0 222.815 32.915 A 11.976 11.976 0 0 0 222.376 32.755 C 221.971 32.617 221.649 32.543 221.428 32.569 A 0.626 0.626 0 0 0 221.399 32.574 C 221.02 32.716 220.549 33.134 220.031 33.961 Z M 323.041 62.286 A 0.279 0.279 0 0 1 323.015 62.212 A 0.256 0.256 0 0 1 323.01 62.163 L 323.01 61.773 L 323.01 61.285 A 4.729 4.729 0 0 0 322.996 61.201 C 322.952 60.964 322.908 60.845 322.864 60.845 C 322.823 60.845 322.749 60.946 322.642 61.146 A 5.725 5.725 0 0 0 322.571 61.285 C 322.305 61.773 322.2 61.777 322.183 61.334 A 3.872 3.872 0 0 1 322.18 61.187 A 7.178 7.178 0 0 0 322.158 61.027 C 322.105 60.665 322.014 60.224 321.887 59.673 C 321.692 59.087 321.497 58.55 321.252 58.013 A 6.622 6.622 0 0 0 321.158 57.787 C 321.008 57.45 320.886 57.281 320.764 57.281 A 0.182 0.182 0 0 0 320.615 57.36 C 320.533 57.468 320.495 57.683 320.511 57.994 A 3.211 3.211 0 0 0 320.52 58.111 C 320.569 58.697 320.715 59.331 321.008 59.966 A 8.803 8.803 0 0 1 321.399 60.992 A 4.794 4.794 0 0 1 321.45 61.135 C 321.559 61.455 321.607 61.7 321.692 61.871 A 3.745 3.745 0 0 0 321.784 62.26 A 1.567 1.567 0 0 0 321.936 62.603 A 7.634 7.634 0 0 0 322.068 62.859 A 2.715 2.715 0 0 0 322.278 63.189 C 322.375 63.335 322.473 63.482 322.473 63.677 A 0.599 0.599 0 0 1 322.484 63.714 C 322.501 63.778 322.509 63.85 322.504 63.921 A 0.503 0.503 0 0 1 322.424 64.165 A 0.578 0.578 0 0 0 322.391 64.221 C 322.263 64.47 322.515 64.543 323.108 64.361 A 72.564 72.564 0 0 0 323.208 64.333 C 323.662 64.209 323.776 64.175 323.547 64.312 C 323.394 64.4 323.28 64.487 323.201 64.58 A 0.543 0.543 0 0 0 323.059 64.947 A 0.675 0.675 0 0 0 323.068 64.986 C 323.125 65.201 323.274 65.288 323.596 65.288 A 0.264 0.264 0 0 1 323.669 65.299 C 323.808 65.339 323.968 65.49 324.131 65.754 A 3.304 3.304 0 0 1 324.28 66.021 A 6.599 6.599 0 0 1 324.441 66.336 A 7.641 7.641 0 0 1 324.915 67.632 C 325.031 68.099 325.055 68.442 325.01 68.685 A 0.874 0.874 0 0 1 324.963 68.853 A 7.796 7.796 0 0 1 324.932 68.943 C 324.898 69.043 324.877 69.119 324.915 69.195 C 324.952 69.232 324.99 69.27 325.05 69.285 A 0.242 0.242 0 0 0 325.11 69.292 C 325.215 69.292 325.295 69.318 325.35 69.35 A 0.265 0.265 0 0 1 325.403 69.39 C 325.441 69.428 325.478 69.466 325.494 69.526 A 0.242 0.242 0 0 1 325.5 69.585 C 325.452 69.682 325.5 69.828 325.549 70.022 A 4.898 4.898 0 0 0 325.555 70.049 C 325.594 70.201 325.634 70.325 325.7 70.496 A 8.703 8.703 0 0 0 325.745 70.611 C 326.191 71.817 325.943 71.92 324.963 70.956 A 14.819 14.819 0 0 1 324.67 70.66 A 9.628 9.628 0 0 1 324.347 70.228 C 323.983 69.715 323.514 68.98 322.961 68.023 A 98.242 98.242 0 0 1 321.875 66.094 A 59.161 59.161 0 0 1 320.862 64.165 C 320.366 63.135 320.019 62.344 319.821 61.814 A 6.275 6.275 0 0 1 319.69 61.431 A 3.059 3.059 0 0 0 319.633 61.237 C 319.582 61.079 319.515 60.892 319.448 60.658 A 6.913 6.913 0 0 1 319.446 60.65 A 4.21 4.21 0 0 0 319.269 60.162 C 319.211 60.025 319.149 59.888 319.086 59.744 A 10.859 10.859 0 0 1 319.084 59.74 A 11.052 11.052 0 0 1 319.083 59.737 A 11.252 11.252 0 0 1 319.081 59.733 A 11.455 11.455 0 0 1 319.08 59.73 A 27.466 27.466 0 0 1 319.078 59.726 A 11.873 11.873 0 0 1 319.076 59.723 A 12.087 12.087 0 0 1 319.075 59.719 A 9.846 9.846 0 0 1 319.073 59.715 A 12.531 12.531 0 0 1 319.072 59.712 A 12.761 12.761 0 0 1 319.07 59.708 C 319.067 59.702 319.066 59.699 319.065 59.697 M 27.619 54.3 A 12.262 12.262 0 0 0 27.698 54.4 C 27.699 54.402 27.7 54.404 27.701 54.407 C 27.849 54.701 28.041 55.039 28.186 55.425 A 219.835 219.835 0 0 1 28.855 56.878 C 30.289 60.028 31.005 61.822 31.065 62.198 A 0.434 0.434 0 0 1 31.067 62.212 A 0.23 0.23 0 0 0 31.072 62.265 C 31.087 62.329 31.133 62.376 31.208 62.451 A 37.593 37.593 0 0 0 31.213 62.456 C 31.256 62.499 31.373 62.542 31.468 62.552 A 0.368 0.368 0 0 0 31.506 62.554 A 0.405 0.405 0 0 1 31.84 62.708 C 31.88 62.757 31.915 62.819 31.946 62.896 A 0.988 0.988 0 0 1 32.003 63.109 C 32.036 63.32 32.018 63.574 31.95 63.854 A 2.898 2.898 0 0 1 31.946 63.872 A 0.237 0.237 0 0 0 31.959 63.966 C 31.964 63.979 31.972 63.992 31.982 64.006 A 0.19 0.19 0 0 0 31.995 64.019 A 0.29 0.29 0 0 0 32.046 64.059 C 32.077 64.078 32.114 64.095 32.154 64.105 A 0.336 0.336 0 0 0 32.239 64.117 A 0.778 0.778 0 0 1 32.305 64.119 C 32.444 64.131 32.471 64.19 32.385 64.361 A 0.363 0.363 0 0 0 32.337 64.419 C 32.292 64.488 32.288 64.552 32.288 64.593 A 1.145 1.145 0 0 0 32.288 64.605 A 0.63 0.63 0 0 0 32.318 64.66 C 32.341 64.696 32.363 64.721 32.386 64.736 A 0.087 0.087 0 0 0 32.434 64.751 C 32.532 64.8 32.581 64.947 32.678 65.142 A 2.626 2.626 0 0 1 32.815 65.617 C 32.836 65.725 32.855 65.841 32.874 65.972 A 19.615 19.615 0 0 0 32.874 65.977 A 19.318 19.318 0 0 0 32.874 65.981 A 19.025 19.025 0 0 0 32.875 65.985 A 20.178 20.178 0 0 0 32.875 65.99 A 82.853 82.853 0 0 0 32.876 65.994 A 19.299 19.299 0 0 0 32.876 66.003 A 19.011 19.011 0 0 0 32.877 66.007 A 18.726 18.726 0 0 0 32.877 66.011 A 17.128 17.128 0 0 0 32.878 66.015 C 32.878 66.018 32.878 66.021 32.878 66.024 A 17.633 17.633 0 0 0 32.879 66.028 A 17.369 17.369 0 0 0 32.879 66.032 A 17.112 17.112 0 0 0 32.879 66.036 C 32.88 66.04 32.88 66.044 32.881 66.048 A 17.484 17.484 0 0 0 32.881 66.052 C 32.921 66.479 32.958 66.734 32.936 66.79 A 0.015 0.015 0 0 1 32.922 66.802 A 0.011 0.011 0 0 1 32.921 66.808 C 32.908 66.828 32.791 66.67 32.631 66.364 A 6.192 6.192 0 0 1 32.581 66.265 A 11.24 11.24 0 0 1 32.288 65.716 A 15.173 15.173 0 0 1 31.995 65.093 A 10.224 10.224 0 0 0 31.867 64.773 C 31.762 64.519 31.632 64.222 31.483 63.881 A 87.469 87.469 0 0 1 31.311 63.482 C 31.262 63.238 31.116 62.945 30.92 62.554 C 30.725 62.163 30.53 61.822 30.334 61.431 C 30.185 61.169 30.007 60.793 29.778 60.324 A 51.805 51.805 0 0 0 29.553 59.869 A 81.175 81.175 0 0 0 29.114 58.868 A 81.175 81.175 0 0 1 28.674 57.867 A 26.636 26.636 0 0 1 28.271 56.951 A 19.693 19.693 0 0 1 27.942 56.109 A 33.652 33.652 0 0 0 27.937 56.097 C 27.708 55.595 27.523 55.222 27.422 54.937 A 2.546 2.546 0 0 1 27.405 54.888 L 27.356 54.839 A 1.554 1.554 0 0 1 27.258 54.596 C 27.238 54.529 27.224 54.465 27.217 54.406 A 0.807 0.807 0 0 1 27.209 54.302 A 15.854 15.854 0 0 1 27.21 54.233 C 27.21 54.133 27.213 54.063 27.227 54.016 A 0.129 0.129 0 0 1 27.258 53.96 L 27.307 53.96 C 27.391 54.002 27.474 54.115 27.619 54.3 Z M 34.729 65.386 A 3.226 3.226 0 0 0 34.689 65.32 C 34.564 65.124 34.48 65.044 34.436 65.044 A 0.124 0.124 0 0 0 34.381 65.057 C 34.337 65.078 34.305 65.126 34.277 65.191 A 1.237 1.237 0 0 0 34.241 65.288 C 34.205 65.43 34.17 65.572 34.153 65.752 A 2.361 2.361 0 0 0 34.143 65.972 C 34.098 66.563 34.179 66.816 34.427 66.769 A 0.445 0.445 0 0 0 34.485 66.753 A 1.44 1.44 0 0 1 34.518 66.74 C 34.716 66.667 34.768 66.704 34.739 66.819 A 0.455 0.455 0 0 1 34.729 66.851 A 0.331 0.331 0 0 0 34.692 67.004 C 34.692 67.058 34.705 67.12 34.729 67.193 A 2.001 2.001 0 0 0 34.774 67.28 C 34.804 67.333 34.841 67.389 34.9 67.457 A 1.561 1.561 0 0 0 34.973 67.535 A 1.048 1.048 0 0 0 34.998 67.558 C 35.094 67.648 35.221 67.742 35.266 67.876 C 35.323 67.962 35.364 68.031 35.387 68.093 A 0.346 0.346 0 0 1 35.413 68.218 C 35.37 68.39 36.005 69.428 37.253 71.234 A 127.791 127.791 0 0 0 37.805 72.027 A 0.693 0.693 0 0 1 37.851 72.078 C 37.972 72.226 38.055 72.439 38.098 72.613 A 3.371 3.371 0 0 1 38.131 72.698 C 38.207 72.903 38.245 73.075 38.245 73.247 A 3.276 3.276 0 0 0 38.241 73.29 C 38.205 73.701 38.284 73.766 38.444 73.517 A 1.675 1.675 0 0 0 38.489 73.443 A 0.801 0.801 0 0 1 38.507 73.417 C 38.554 73.352 38.6 73.309 38.647 73.283 A 0.268 0.268 0 0 1 38.782 73.247 C 38.879 73.296 38.976 73.489 39.121 73.731 A 7.274 7.274 0 0 0 39.124 73.736 C 39.27 74.029 39.465 74.322 39.709 74.663 C 39.954 75.005 40.247 75.298 40.491 75.542 C 40.735 75.787 40.93 75.933 41.028 75.933 C 41.077 75.933 40.979 75.738 40.784 75.347 C 40.54 74.956 40.247 74.517 39.905 73.931 A 65.349 65.349 0 0 1 39.62 73.537 A 126.141 126.141 0 0 1 38.831 72.417 A 90.133 90.133 0 0 0 38.787 72.358 C 38.418 71.851 38.14 71.481 37.952 71.246 A 12.079 12.079 0 0 1 37.804 71.082 C 37.342 70.559 36.996 70.072 36.731 69.585 C 36.48 69.126 36.373 68.774 36.408 68.559 A 0.338 0.338 0 0 1 36.438 68.462 A 0.106 0.106 0 0 0 36.461 68.428 C 36.483 68.375 36.468 68.297 36.389 68.218 C 36.34 68.194 36.279 68.157 36.212 68.121 A 1.351 1.351 0 0 0 35.999 68.023 A 2.102 2.102 0 0 1 35.939 68.007 C 35.782 67.963 35.695 67.915 35.608 67.828 A 0.371 0.371 0 0 1 35.584 67.801 C 35.511 67.712 35.515 67.623 35.559 67.535 C 35.64 67.454 35.654 67.406 35.656 67.337 A 1.383 1.383 0 0 0 35.657 67.29 C 35.619 67.253 35.581 67.215 35.521 67.2 A 0.242 0.242 0 0 0 35.461 67.193 C 35.364 67.193 35.315 67.193 35.266 67.144 C 35.185 67.063 35.171 67.016 35.169 66.946 A 1.383 1.383 0 0 1 35.168 66.9 C 35.168 66.704 35.12 66.46 35.022 66.167 C 34.924 65.874 34.827 65.63 34.729 65.386 Z M 286.438 38.726 A 23.15 23.15 0 0 0 286.442 38.678 C 286.534 37.49 286.485 36.919 286.34 36.919 C 286.206 36.919 286.154 37.001 286.071 37.166 A 11.746 11.746 0 0 0 286.047 37.212 A 1.485 1.485 0 0 0 286.02 37.305 C 285.982 37.451 285.95 37.649 285.95 37.847 C 285.95 38.217 285.894 38.811 285.781 39.63 A 52.577 52.577 0 0 1 285.657 40.484 C 285.413 41.753 285.168 42.974 284.875 44.195 A 31.313 31.313 0 0 1 284.709 44.833 C 284.546 45.432 284.403 45.87 284.293 46.134 A 1.687 1.687 0 0 1 284.192 46.343 C 284.045 46.49 283.997 46.783 283.899 47.271 A 5.702 5.702 0 0 0 283.882 47.451 C 283.867 47.636 283.859 47.836 283.855 48.047 A 39.669 39.669 0 0 0 283.85 48.833 A 22.495 22.495 0 0 0 283.85 48.87 C 283.854 51.087 284.188 50.702 284.891 47.753 A 72.021 72.021 0 0 0 285.071 46.978 C 285.364 45.806 285.608 44.439 285.852 42.876 A 36.24 36.24 0 0 0 285.961 42.264 C 286.064 41.662 286.146 41.09 286.217 40.544 A 169.29 169.29 0 0 0 286.438 38.726 Z M 172.209 19.147 A 7.623 7.623 0 0 0 172.083 19.146 C 171.924 19.146 171.765 19.178 171.685 19.216 A 0.155 0.155 0 0 0 171.643 19.244 C 171.6 19.33 171.557 19.417 171.581 19.537 A 0.417 0.417 0 0 0 171.594 19.585 A 0.994 0.994 0 0 0 171.986 20.104 C 172.478 20.465 173.399 20.682 174.757 20.766 A 23.298 23.298 0 0 0 176.184 20.806 A 18.138 18.138 0 0 1 176.596 20.811 A 35.758 35.758 0 0 1 178.333 20.904 C 179.016 20.953 179.504 21.001 179.797 21.099 A 55.647 55.647 0 0 1 180.283 21.181 A 15.296 15.296 0 0 1 180.627 21.246 A 3.177 3.177 0 0 0 180.694 21.256 C 180.902 21.286 181.081 21.29 181.214 21.269 A 0.624 0.624 0 0 0 181.311 21.246 A 1.348 1.348 0 0 1 181.537 21.197 C 181.586 21.189 181.638 21.181 181.694 21.171 A 1.869 1.869 0 0 0 181.799 21.148 A 10.565 10.565 0 0 0 181.854 21.148 A 1.208 1.208 0 0 0 182.239 21.099 C 182.312 21.099 182.413 21.072 182.521 20.996 A 0.826 0.826 0 0 0 182.629 20.904 A 28.495 28.495 0 0 0 182.648 20.885 C 182.693 20.84 182.747 20.785 182.8 20.727 A 1.872 1.872 0 0 0 182.971 20.513 C 183.049 20.32 183.095 20.187 183.087 20.092 A 0.185 0.185 0 0 0 183.069 20.025 A 0.129 0.129 0 0 0 183.051 19.998 C 182.998 19.938 182.879 19.9 182.709 19.885 A 2.082 2.082 0 0 0 182.532 19.878 A 2.554 2.554 0 0 1 182.455 19.877 C 182.235 19.87 181.891 19.84 181.377 19.832 A 16.141 16.141 0 0 0 181.116 19.829 C 180.432 19.781 179.651 19.732 178.772 19.732 A 172.044 172.044 0 0 1 178.428 19.711 C 178.089 19.691 177.768 19.67 177.464 19.649 A 98.488 98.488 0 0 1 176.575 19.585 C 175.989 19.537 175.647 19.439 175.549 19.39 A 1.98 1.98 0 0 0 175.316 19.249 A 0.482 0.482 0 0 0 175.11 19.195 A 1.145 1.145 0 0 0 175.054 19.196 C 174.944 19.201 174.851 19.222 174.775 19.249 A 0.866 0.866 0 0 0 174.67 19.292 C 174.573 19.39 174.573 19.488 174.67 19.634 A 2.221 2.221 0 0 1 174.706 19.689 C 174.846 19.913 174.8 19.952 174.505 19.741 A 4.25 4.25 0 0 1 174.426 19.683 A 1.134 1.134 0 0 0 174.322 19.622 C 174.221 19.569 174.091 19.516 173.932 19.463 A 5.753 5.753 0 0 0 173.694 19.39 A 2.843 2.843 0 0 0 173.466 19.325 A 8.076 8.076 0 0 0 172.717 19.195 A 2.469 2.469 0 0 0 172.4 19.154 C 172.331 19.15 172.267 19.148 172.209 19.147 Z M 75.354 30.279 C 75.549 30.279 75.745 30.376 75.94 30.572 A 0.272 0.272 0 0 1 75.976 30.657 C 76.013 30.808 75.978 31.057 75.889 31.386 A 6.502 6.502 0 0 1 75.842 31.548 C 75.696 32.085 75.549 32.574 75.305 33.111 C 75.144 33.513 74.983 33.816 74.822 34.02 A 1.345 1.345 0 0 1 74.719 34.136 A 0.405 0.405 0 0 0 74.684 34.178 C 74.631 34.248 74.553 34.381 74.475 34.576 C 74.402 34.722 74.301 34.923 74.214 35.159 A 3.455 3.455 0 0 0 74.133 35.406 A 4.351 4.351 0 0 1 73.927 35.866 C 73.844 36.028 73.746 36.198 73.634 36.375 A 9.089 9.089 0 0 1 73.401 36.724 A 8.767 8.767 0 0 1 72.632 37.798 A 11.718 11.718 0 0 1 72.424 38.042 C 72.11 38.357 71.836 38.548 71.681 38.614 A 0.499 0.499 0 0 1 71.643 38.628 C 71.452 38.628 71.355 38.489 71.396 38.21 A 1.06 1.06 0 0 1 71.399 38.189 A 1.975 1.975 0 0 1 71.522 37.475 A 1.804 1.804 0 0 1 71.594 37.31 C 71.741 36.968 71.936 36.724 72.131 36.578 C 72.313 36.487 72.452 36.396 72.55 36.266 A 0.687 0.687 0 0 0 72.571 36.236 A 0.791 0.791 0 0 0 72.65 36.145 C 72.728 36.037 72.753 35.935 72.724 35.859 A 0.165 0.165 0 0 0 72.717 35.845 A 0.251 0.251 0 0 1 72.736 35.759 C 72.763 35.686 72.819 35.592 72.895 35.468 A 32.583 32.583 0 0 0 72.961 35.357 A 7.889 7.889 0 0 1 73.08 35.166 C 73.122 35.1 73.166 35.033 73.212 34.966 A 6.448 6.448 0 0 1 73.499 34.576 A 14.797 14.797 0 0 0 73.673 34.363 C 73.812 34.189 73.937 34.02 74.06 33.821 A 4.633 4.633 0 0 0 74.133 33.697 C 74.28 33.404 74.377 33.111 74.426 32.915 A 1.113 1.113 0 0 1 74.47 32.78 C 74.513 32.67 74.566 32.58 74.604 32.511 A 1.282 1.282 0 0 0 74.622 32.476 A 0.424 0.424 0 0 1 74.764 32.382 C 74.829 32.356 74.896 32.351 74.951 32.373 A 0.167 0.167 0 0 1 74.963 32.378 C 75.208 32.525 75.208 32.378 75.061 31.939 A 0.937 0.937 0 0 1 74.957 31.719 C 74.934 31.652 74.915 31.579 74.897 31.501 A 5.651 5.651 0 0 1 74.866 31.353 C 74.866 31.163 74.866 30.973 74.911 30.828 A 0.597 0.597 0 0 1 74.915 30.816 C 74.972 30.645 75.045 30.507 75.136 30.412 A 0.454 0.454 0 0 1 75.354 30.279 Z M 130.872 33.16 A 0.638 0.638 0 0 0 130.569 33.422 C 130.525 33.49 130.487 33.569 130.454 33.66 A 2.239 2.239 0 0 0 130.383 33.892 A 4.385 4.385 0 0 1 130.267 34.38 A 1.421 1.421 0 0 1 130.188 34.576 A 1.343 1.343 0 0 1 130.162 34.683 C 130.114 34.851 130.045 34.964 130.002 35.046 A 1.074 1.074 0 0 0 129.993 35.064 A 0.813 0.813 0 0 0 129.952 35.108 C 129.854 35.221 129.856 35.293 129.928 35.266 A 0.164 0.164 0 0 0 129.943 35.259 C 130.042 35.259 130.042 35.357 129.944 35.552 C 129.865 35.709 129.787 35.897 129.658 36.117 A 3.438 3.438 0 0 1 129.553 36.285 A 35.989 35.989 0 0 1 129.415 36.524 C 129.285 36.748 129.175 36.932 129.065 37.115 C 128.983 37.362 128.935 37.504 128.951 37.573 A 0.062 0.062 0 0 0 128.967 37.603 A 1.523 1.523 0 0 1 128.965 37.698 C 128.96 37.791 128.94 37.916 128.87 38.091 C 128.807 38.216 128.744 38.382 128.669 38.562 A 5.157 5.157 0 0 1 128.528 38.872 C 128.381 39.117 128.284 39.41 128.186 39.654 C 128.137 39.947 128.088 40.093 128.137 40.24 C 128.186 40.337 128.235 40.386 128.333 40.386 A 0.228 0.228 0 0 0 128.358 40.397 C 128.434 40.424 128.482 40.387 128.56 40.346 A 0.926 0.926 0 0 1 128.577 40.337 A 0.248 0.248 0 0 0 128.706 40.178 C 128.715 40.147 128.721 40.113 128.722 40.074 A 0.615 0.615 0 0 0 128.723 40.044 A 0.353 0.353 0 0 0 128.753 39.962 C 128.766 39.903 128.761 39.844 128.738 39.786 A 0.383 0.383 0 0 0 128.723 39.751 A 0.199 0.199 0 0 1 128.704 39.677 C 128.698 39.6 128.724 39.506 128.756 39.409 A 8.333 8.333 0 0 1 128.772 39.361 A 3.585 3.585 0 0 1 128.989 39.059 A 1.922 1.922 0 0 1 129.114 38.921 C 129.228 38.836 129.309 38.75 129.366 38.664 A 0.757 0.757 0 0 0 129.456 38.482 A 0.9 0.9 0 0 0 129.472 38.427 C 129.503 38.311 129.492 38.231 129.407 38.189 A 0.165 0.165 0 0 1 129.365 38.16 C 129.324 38.12 129.318 38.065 129.334 38.005 A 0.337 0.337 0 0 1 129.358 37.945 A 1.9 1.9 0 0 1 129.514 37.801 C 129.548 37.773 129.587 37.745 129.632 37.717 A 1.427 1.427 0 0 1 129.749 37.652 A 1.872 1.872 0 0 0 129.962 37.481 C 130.021 37.427 130.075 37.374 130.12 37.329 A 28.495 28.495 0 0 0 130.139 37.31 A 0.692 0.692 0 0 0 130.176 37.249 C 130.236 37.135 130.23 37.052 130.188 36.968 A 3.298 3.298 0 0 1 130.065 36.751 C 129.836 36.308 129.843 36.013 130.107 35.888 A 0.617 0.617 0 0 1 130.237 35.845 A 0.646 0.646 0 0 0 130.486 35.73 C 130.618 35.634 130.75 35.487 130.882 35.295 A 3.641 3.641 0 0 0 130.969 35.162 C 131.213 34.771 131.409 34.283 131.506 33.746 A 1.361 1.361 0 0 0 131.536 33.645 C 131.621 33.303 131.496 33.136 131.19 33.113 A 1.025 1.025 0 0 0 131.116 33.111 A 3.091 3.091 0 0 0 131.073 33.111 C 131.01 33.112 130.965 33.117 130.899 33.146 A 0.69 0.69 0 0 0 130.872 33.16 Z M 234.875 33.16 A 0.638 0.638 0 0 0 234.573 33.422 C 234.529 33.49 234.491 33.569 234.458 33.66 A 2.239 2.239 0 0 0 234.387 33.892 A 4.385 4.385 0 0 1 234.271 34.38 A 1.421 1.421 0 0 1 234.192 34.576 A 1.343 1.343 0 0 1 234.166 34.683 C 234.117 34.851 234.049 34.964 234.006 35.046 A 1.074 1.074 0 0 0 233.997 35.064 A 0.813 0.813 0 0 0 233.956 35.108 C 233.858 35.221 233.859 35.293 233.932 35.266 A 0.164 0.164 0 0 0 233.947 35.259 C 234.045 35.259 234.045 35.357 233.948 35.552 C 233.869 35.709 233.791 35.897 233.662 36.117 A 3.438 3.438 0 0 1 233.557 36.285 A 35.989 35.989 0 0 1 233.419 36.524 C 233.289 36.748 233.179 36.932 233.069 37.115 C 232.987 37.362 232.939 37.504 232.955 37.573 A 0.062 0.062 0 0 0 232.971 37.603 A 1.523 1.523 0 0 1 232.969 37.698 C 232.963 37.791 232.944 37.916 232.874 38.091 C 232.811 38.216 232.748 38.382 232.673 38.562 A 5.157 5.157 0 0 1 232.532 38.872 C 232.385 39.117 232.288 39.41 232.19 39.654 C 232.141 39.947 232.092 40.093 232.141 40.24 C 232.19 40.337 232.239 40.386 232.336 40.386 A 0.228 0.228 0 0 0 232.362 40.397 C 232.438 40.424 232.485 40.387 232.564 40.346 A 0.926 0.926 0 0 1 232.581 40.337 A 0.248 0.248 0 0 0 232.71 40.178 C 232.719 40.147 232.724 40.113 232.726 40.074 A 0.615 0.615 0 0 0 232.727 40.044 A 0.353 0.353 0 0 0 232.757 39.962 C 232.77 39.903 232.765 39.844 232.742 39.786 A 0.383 0.383 0 0 0 232.727 39.751 A 0.199 0.199 0 0 1 232.708 39.677 C 232.702 39.6 232.728 39.506 232.76 39.409 A 8.333 8.333 0 0 1 232.776 39.361 A 3.585 3.585 0 0 1 232.993 39.059 A 1.922 1.922 0 0 1 233.118 38.921 C 233.232 38.836 233.313 38.75 233.37 38.664 A 0.757 0.757 0 0 0 233.459 38.482 A 0.9 0.9 0 0 0 233.476 38.427 C 233.507 38.311 233.496 38.231 233.411 38.189 A 0.165 0.165 0 0 1 233.369 38.16 C 233.328 38.12 233.322 38.065 233.338 38.005 A 0.337 0.337 0 0 1 233.362 37.945 A 1.9 1.9 0 0 1 233.518 37.801 C 233.552 37.773 233.591 37.745 233.636 37.717 A 1.427 1.427 0 0 1 233.752 37.652 A 1.872 1.872 0 0 0 233.966 37.481 C 234.025 37.427 234.079 37.374 234.124 37.329 A 28.495 28.495 0 0 0 234.143 37.31 A 0.692 0.692 0 0 0 234.18 37.249 C 234.24 37.135 234.234 37.052 234.192 36.968 A 3.298 3.298 0 0 1 234.069 36.751 C 233.84 36.308 233.847 36.013 234.111 35.888 A 0.617 0.617 0 0 1 234.241 35.845 A 0.646 0.646 0 0 0 234.49 35.73 C 234.622 35.634 234.754 35.487 234.886 35.295 A 3.641 3.641 0 0 0 234.973 35.162 C 235.217 34.771 235.413 34.283 235.51 33.746 A 1.361 1.361 0 0 0 235.54 33.645 C 235.625 33.303 235.5 33.136 235.194 33.113 A 1.025 1.025 0 0 0 235.12 33.111 A 3.091 3.091 0 0 0 235.077 33.111 C 235.014 33.112 234.969 33.117 234.903 33.146 A 0.69 0.69 0 0 0 234.875 33.16 Z M 135.879 35.59 A 1.346 1.346 0 0 1 135.878 35.591 C 135.846 35.631 135.808 35.672 135.754 35.699 A 0.41 0.41 0 0 1 135.699 35.721 A 0.739 0.739 0 0 1 135.461 35.747 C 135.315 35.699 135.266 35.747 135.217 35.845 A 1.373 1.373 0 0 0 135.223 35.991 C 135.226 36.022 135.231 36.055 135.239 36.091 A 1.002 1.002 0 0 0 135.266 36.187 C 135.34 36.335 135.358 36.455 135.32 36.568 A 0.456 0.456 0 0 1 135.266 36.675 C 135.229 36.822 135.165 36.913 135.053 36.991 A 1.048 1.048 0 0 1 134.924 37.066 C 134.68 37.261 134.485 37.505 134.387 37.896 A 1.774 1.774 0 0 0 134.358 38.036 C 134.338 38.155 134.332 38.269 134.339 38.378 A 1.388 1.388 0 0 0 134.485 38.921 A 0.269 0.269 0 0 1 134.487 38.925 C 134.511 38.976 134.509 39.014 134.493 39.046 A 0.281 0.281 0 0 1 134.436 39.117 C 134.366 39.152 134.296 39.187 134.207 39.222 A 2.123 2.123 0 0 1 134.094 39.263 A 2.31 2.31 0 0 0 134.044 39.276 C 133.93 39.307 133.855 39.338 133.804 39.37 A 0.283 0.283 0 0 0 133.752 39.41 C 133.709 39.453 133.704 39.496 133.773 39.54 A 0.322 0.322 0 0 0 133.801 39.556 A 1.326 1.326 0 0 1 133.842 39.643 C 133.871 39.712 133.884 39.78 133.85 39.849 A 0.823 0.823 0 0 1 133.816 39.935 C 133.787 39.998 133.749 40.061 133.701 40.124 A 1.547 1.547 0 0 1 133.557 40.288 A 8.678 8.678 0 0 0 133.48 40.394 C 133.439 40.449 133.402 40.501 133.368 40.551 A 15.088 15.088 0 0 0 133.215 40.777 A 1.528 1.528 0 0 0 133.199 40.849 C 133.176 40.963 133.173 41.058 133.188 41.134 A 0.327 0.327 0 0 0 133.215 41.216 L 133.215 41.509 C 133.19 41.534 133.152 41.56 133.108 41.585 A 3.074 3.074 0 0 1 132.971 41.656 L 132.727 41.656 A 0.381 0.381 0 0 1 132.67 41.653 C 132.652 41.65 132.633 41.644 132.614 41.633 A 0.171 0.171 0 0 1 132.581 41.607 C 132.581 41.558 132.629 41.413 132.677 41.172 A 4.85 4.85 0 0 0 132.678 41.167 A 38.187 38.187 0 0 0 132.826 40.718 A 15.871 15.871 0 0 0 132.971 40.24 C 133.118 39.898 133.167 39.556 133.215 39.214 C 133.264 38.921 133.264 38.677 133.167 38.482 A 1.131 1.131 0 0 1 133.163 38.471 C 133.118 38.33 133.118 38.234 133.118 38.091 A 0.658 0.658 0 0 1 133.138 38.054 C 133.181 37.98 133.229 37.938 133.313 37.896 C 133.459 37.896 133.508 37.749 133.606 37.554 C 133.641 37.412 133.677 37.27 133.694 37.091 A 2.361 2.361 0 0 0 133.704 36.871 C 133.704 36.626 133.752 36.382 133.85 36.187 A 1.26 1.26 0 0 1 133.896 36.103 C 133.92 36.063 133.944 36.028 133.97 36 A 0.285 0.285 0 0 1 134.192 35.894 A 1.593 1.593 0 0 0 134.282 35.861 A 0.704 0.704 0 0 0 134.534 35.699 A 1.875 1.875 0 0 0 134.592 35.575 A 0.45 0.45 0 0 0 134.631 35.406 C 134.672 35.284 134.746 35.197 134.936 35.142 A 1.229 1.229 0 0 1 135.071 35.113 L 135.364 35.113 A 1.145 1.145 0 0 1 135.419 35.114 C 135.53 35.119 135.623 35.14 135.699 35.167 A 0.866 0.866 0 0 1 135.803 35.21 A 0.729 0.729 0 0 1 135.849 35.261 C 135.876 35.293 135.897 35.325 135.913 35.357 A 0.325 0.325 0 0 1 135.95 35.503 C 135.93 35.523 135.91 35.551 135.886 35.581 A 0.948 0.948 0 0 1 135.884 35.584 M 239.883 35.59 A 1.346 1.346 0 0 1 239.882 35.591 C 239.85 35.631 239.812 35.672 239.758 35.699 A 0.41 0.41 0 0 1 239.703 35.721 A 0.739 0.739 0 0 1 239.465 35.747 C 239.319 35.699 239.27 35.747 239.221 35.845 A 1.373 1.373 0 0 0 239.227 35.991 C 239.23 36.022 239.235 36.055 239.243 36.091 A 1.002 1.002 0 0 0 239.27 36.187 C 239.344 36.335 239.362 36.455 239.324 36.568 A 0.456 0.456 0 0 1 239.27 36.675 C 239.233 36.822 239.169 36.913 239.057 36.991 A 1.048 1.048 0 0 1 238.928 37.066 C 238.684 37.261 238.489 37.505 238.391 37.896 A 1.774 1.774 0 0 0 238.362 38.036 C 238.342 38.155 238.336 38.269 238.343 38.378 A 1.388 1.388 0 0 0 238.489 38.921 A 0.269 0.269 0 0 1 238.49 38.925 C 238.515 38.976 238.513 39.014 238.497 39.046 A 0.281 0.281 0 0 1 238.44 39.117 C 238.37 39.152 238.3 39.187 238.211 39.222 A 2.123 2.123 0 0 1 238.098 39.263 A 2.31 2.31 0 0 0 238.048 39.276 C 237.934 39.307 237.859 39.338 237.808 39.37 A 0.283 0.283 0 0 0 237.756 39.41 C 237.713 39.453 237.708 39.496 237.776 39.54 A 0.322 0.322 0 0 0 237.805 39.556 A 1.326 1.326 0 0 1 237.846 39.643 C 237.874 39.712 237.888 39.78 237.854 39.849 A 0.823 0.823 0 0 1 237.82 39.935 C 237.791 39.998 237.752 40.061 237.705 40.124 A 1.547 1.547 0 0 1 237.561 40.288 A 8.678 8.678 0 0 0 237.483 40.394 C 237.443 40.449 237.406 40.501 237.372 40.551 A 15.088 15.088 0 0 0 237.219 40.777 A 1.528 1.528 0 0 0 237.203 40.849 C 237.18 40.963 237.177 41.058 237.192 41.134 A 0.327 0.327 0 0 0 237.219 41.216 L 237.219 41.509 C 237.194 41.534 237.156 41.56 237.111 41.585 A 3.074 3.074 0 0 1 236.975 41.656 L 236.731 41.656 A 0.381 0.381 0 0 1 236.674 41.653 C 236.655 41.65 236.637 41.644 236.618 41.633 A 0.171 0.171 0 0 1 236.584 41.607 C 236.584 41.558 236.633 41.413 236.681 41.172 A 4.85 4.85 0 0 0 236.682 41.167 A 38.187 38.187 0 0 0 236.83 40.718 A 15.871 15.871 0 0 0 236.975 40.24 C 237.122 39.898 237.17 39.556 237.219 39.214 C 237.268 38.921 237.268 38.677 237.17 38.482 A 1.131 1.131 0 0 1 237.167 38.471 C 237.122 38.33 237.122 38.234 237.122 38.091 A 0.658 0.658 0 0 1 237.142 38.054 C 237.185 37.98 237.233 37.938 237.317 37.896 C 237.463 37.896 237.512 37.749 237.61 37.554 C 237.645 37.412 237.681 37.27 237.698 37.091 A 2.361 2.361 0 0 0 237.708 36.871 C 237.708 36.626 237.756 36.382 237.854 36.187 A 1.26 1.26 0 0 1 237.9 36.103 C 237.924 36.063 237.948 36.028 237.974 36 A 0.285 0.285 0 0 1 238.196 35.894 A 1.593 1.593 0 0 0 238.285 35.861 A 0.704 0.704 0 0 0 238.538 35.699 A 1.875 1.875 0 0 0 238.596 35.575 A 0.45 0.45 0 0 0 238.635 35.406 C 238.676 35.284 238.75 35.197 238.94 35.142 A 1.229 1.229 0 0 1 239.075 35.113 L 239.368 35.113 A 1.145 1.145 0 0 1 239.423 35.114 C 239.534 35.119 239.627 35.14 239.703 35.167 A 0.866 0.866 0 0 1 239.807 35.21 A 0.729 0.729 0 0 1 239.853 35.261 C 239.88 35.293 239.901 35.325 239.917 35.357 A 0.325 0.325 0 0 1 239.954 35.503 C 239.934 35.523 239.914 35.551 239.89 35.581 A 0.948 0.948 0 0 1 239.888 35.584 M 46.985 35.015 A 104.224 104.224 0 0 0 46.509 35.016 C 46.156 35.017 45.752 35.022 45.296 35.037 A 37.124 37.124 0 0 0 44.641 35.064 A 228.776 228.776 0 0 0 43.734 35.1 C 42.871 35.137 42.139 35.174 41.516 35.21 A 19.188 19.188 0 0 0 41.221 35.213 C 40.571 35.223 40.192 35.265 40.149 35.308 A 0.041 0.041 0 0 0 40.18 35.335 C 40.269 35.375 40.55 35.415 41.023 35.454 A 21.48 21.48 0 0 0 41.028 35.454 A 42.961 42.961 0 0 0 41.048 35.456 C 41.631 35.504 42.356 35.553 43.225 35.65 C 44.247 35.692 45.083 35.735 45.733 35.713 A 7.399 7.399 0 0 0 46.008 35.699 A 9.913 9.913 0 0 0 46.608 35.639 C 46.826 35.61 47.026 35.574 47.212 35.532 A 4.795 4.795 0 0 0 47.668 35.406 C 48.108 35.23 48.31 35.133 48.31 35.08 A 0.022 0.022 0 0 0 48.303 35.064 C 48.254 35.015 47.815 34.966 46.985 35.015 Z M 104.968 40.453 A 0.279 0.279 0 0 1 104.895 40.479 A 0.256 0.256 0 0 1 104.846 40.484 C 104.804 40.484 104.762 40.484 104.72 40.422 A 0.314 0.314 0 0 1 104.7 40.386 C 104.7 40.338 104.748 40.241 104.797 40.096 A 2.228 2.228 0 0 0 104.797 40.093 C 104.895 39.947 105.042 39.8 105.188 39.654 A 24.475 24.475 0 0 0 105.306 39.535 C 105.479 39.36 105.579 39.246 105.579 39.165 C 105.579 39.068 105.432 39.019 105.188 38.97 A 3.577 3.577 0 0 1 105.148 38.962 C 104.74 38.875 104.715 38.789 105.073 38.702 A 2.994 2.994 0 0 1 105.188 38.677 A 2.571 2.571 0 0 1 105.251 38.664 C 105.412 38.632 105.553 38.622 105.678 38.632 A 0.863 0.863 0 0 1 106.165 38.824 C 106.334 38.951 106.393 39.151 106.31 39.425 A 1.256 1.256 0 0 1 106.262 39.556 A 0.434 0.434 0 0 0 106.216 39.61 A 0.583 0.583 0 0 0 106.116 39.947 C 106.116 40.044 106.165 40.093 106.262 40.142 C 106.302 40.182 106.375 40.124 106.481 40.02 A 8.664 8.664 0 0 0 106.555 39.947 L 106.897 39.263 L 107.288 38.238 L 106.36 38.238 A 1.936 1.936 0 0 0 106.291 38.225 C 106.07 38.189 105.853 38.193 105.676 38.238 C 105.518 38.238 105.391 38.27 105.297 38.282 A 0.479 0.479 0 0 1 105.237 38.287 A 0.385 0.385 0 0 1 105.221 38.297 C 105.087 38.377 105.043 38.279 105.09 38.091 C 105.09 37.994 105.139 37.945 105.237 37.896 A 1.326 1.326 0 0 1 105.324 37.855 C 105.393 37.827 105.461 37.813 105.53 37.847 C 105.647 37.847 105.763 37.723 105.905 37.5 A 4.922 4.922 0 0 0 106.018 37.31 A 10.452 10.452 0 0 0 106.244 36.83 A 7.353 7.353 0 0 0 106.555 35.992 A 5.269 5.269 0 0 0 106.65 35.625 C 106.726 35.289 106.762 34.986 106.798 34.734 A 13.15 13.15 0 0 1 106.799 34.722 A 1.702 1.702 0 0 0 106.799 34.682 C 106.795 34.528 106.771 34.44 106.74 34.402 A 0.05 0.05 0 0 0 106.702 34.38 A 4.957 4.957 0 0 0 106.66 34.423 C 106.589 34.495 106.457 34.635 106.262 34.869 C 106.121 35.057 106.025 35.291 105.93 35.483 M 208.972 40.453 A 0.279 0.279 0 0 1 208.899 40.479 A 0.256 0.256 0 0 1 208.85 40.484 C 208.808 40.484 208.766 40.484 208.724 40.422 A 0.314 0.314 0 0 1 208.704 40.386 C 208.704 40.338 208.752 40.241 208.8 40.096 A 2.228 2.228 0 0 0 208.801 40.093 C 208.899 39.947 209.045 39.8 209.192 39.654 A 24.475 24.475 0 0 0 209.31 39.535 C 209.483 39.36 209.583 39.246 209.583 39.165 C 209.583 39.068 209.436 39.019 209.192 38.97 A 3.577 3.577 0 0 1 209.152 38.962 C 208.744 38.875 208.719 38.789 209.077 38.702 A 2.994 2.994 0 0 1 209.192 38.677 A 2.571 2.571 0 0 1 209.255 38.664 C 209.416 38.632 209.557 38.622 209.682 38.632 A 0.863 0.863 0 0 1 210.168 38.824 C 210.338 38.951 210.397 39.151 210.314 39.425 A 1.256 1.256 0 0 1 210.266 39.556 A 0.434 0.434 0 0 0 210.22 39.61 A 0.583 0.583 0 0 0 210.12 39.947 C 210.12 40.044 210.168 40.093 210.266 40.142 C 210.306 40.182 210.379 40.124 210.485 40.02 A 8.664 8.664 0 0 0 210.559 39.947 L 210.901 39.263 L 211.292 38.238 L 210.364 38.238 A 1.936 1.936 0 0 0 210.295 38.225 C 210.074 38.189 209.857 38.193 209.68 38.238 C 209.521 38.238 209.395 38.27 209.301 38.282 A 0.479 0.479 0 0 1 209.241 38.287 A 0.385 0.385 0 0 1 209.225 38.297 C 209.091 38.377 209.047 38.279 209.094 38.091 C 209.094 37.994 209.143 37.945 209.241 37.896 A 1.326 1.326 0 0 1 209.328 37.855 C 209.397 37.827 209.465 37.813 209.534 37.847 C 209.65 37.847 209.767 37.723 209.909 37.5 A 4.922 4.922 0 0 0 210.022 37.31 A 10.452 10.452 0 0 0 210.248 36.83 A 7.353 7.353 0 0 0 210.559 35.992 A 5.269 5.269 0 0 0 210.654 35.625 C 210.729 35.289 210.766 34.986 210.802 34.734 A 13.15 13.15 0 0 1 210.803 34.722 A 1.702 1.702 0 0 0 210.803 34.682 C 210.799 34.528 210.774 34.44 210.744 34.402 A 0.05 0.05 0 0 0 210.706 34.38 A 4.957 4.957 0 0 0 210.664 34.423 C 210.593 34.495 210.461 34.635 210.266 34.869 C 210.125 35.057 210.029 35.291 209.934 35.483 M 398.545 35.569 A 0.265 0.265 0 0 0 398.401 35.406 C 398.27 35.449 398.256 36.151 398.358 37.58 A 57.92 57.92 0 0 0 398.401 38.14 A 112.114 112.114 0 0 0 398.461 38.834 C 398.535 39.664 398.604 40.335 398.643 40.799 A 26.874 26.874 0 0 1 398.645 40.826 C 398.693 41.407 398.79 41.796 398.839 42.041 A 5.12 5.12 0 0 1 398.84 42.046 A 4.944 4.944 0 0 0 398.921 42.237 C 398.992 42.394 399.063 42.526 399.133 42.632 A 5.441 5.441 0 0 0 399.202 42.716 C 399.353 42.898 399.438 42.962 399.524 42.876 A 0.077 0.077 0 0 0 399.54 42.845 C 399.567 42.754 399.567 42.501 399.54 42.108 A 15.637 15.637 0 0 0 399.524 41.9 A 21.788 21.788 0 0 0 399.523 41.884 C 399.486 41.446 399.422 40.847 399.332 40.066 A 215.635 215.635 0 0 0 399.231 39.214 A 90.232 90.232 0 0 0 399.078 38.125 C 398.875 36.74 398.706 35.902 398.545 35.569 Z M 445.516 58.514 A 0.237 0.237 0 0 0 445.422 58.501 A 0.844 0.844 0 0 0 445.398 58.502 C 445.358 58.503 445.325 58.51 445.325 58.55 C 445.325 58.55 445.325 58.584 445.297 58.623 A 0.192 0.192 0 0 1 445.276 58.648 L 445.276 58.843 L 445.276 58.941 L 445.276 59.038 A 0.043 0.043 0 0 0 445.254 59.045 C 445.214 59.069 445.178 59.158 445.178 59.283 A 3.626 3.626 0 0 0 445.179 59.351 C 445.18 59.414 445.184 59.492 445.199 59.585 A 1.636 1.636 0 0 0 445.227 59.722 C 445.264 59.942 445.3 60.134 445.316 60.361 A 3.39 3.39 0 0 1 445.325 60.601 C 445.325 60.943 445.325 61.333 445.374 61.822 A 21.184 21.184 0 0 1 445.441 62.402 A 5.718 5.718 0 0 1 445.471 62.945 L 445.471 63.579 C 445.422 63.824 445.422 64.068 445.422 64.312 A 2.638 2.638 0 0 1 445.437 64.39 C 445.465 64.556 445.473 64.694 445.498 64.787 A 0.322 0.322 0 0 0 445.52 64.849 C 445.52 64.954 445.545 65.034 445.578 65.089 A 0.265 0.265 0 0 0 445.618 65.142 A 0.062 0.062 0 0 0 445.618 65.152 C 445.625 65.191 445.67 65.191 445.715 65.191 C 445.802 65.234 445.812 65.123 445.813 64.891 A 20.731 20.731 0 0 0 445.813 64.8 A 0.585 0.585 0 0 1 445.797 64.741 C 445.776 64.645 445.768 64.521 445.766 64.375 A 14.364 14.364 0 0 1 445.764 64.117 C 445.796 63.988 445.807 63.86 445.811 63.746 A 4.929 4.929 0 0 0 445.813 63.579 L 445.813 62.163 L 445.813 61.48 A 2.036 2.036 0 0 0 445.808 61.342 C 445.802 61.259 445.793 61.181 445.784 61.106 A 2.237 2.237 0 0 1 445.764 60.845 L 445.764 60.406 L 445.764 60.308 L 445.764 59.722 A 3.451 3.451 0 0 0 445.74 59.362 C 445.728 59.246 445.715 59.136 445.715 59.038 C 445.681 58.867 445.647 58.743 445.612 58.651 A 1.032 1.032 0 0 0 445.569 58.55 A 0.19 0.19 0 0 0 445.555 58.538 C 445.542 58.527 445.529 58.52 445.516 58.514 Z M 302.381 18.484 A 0.208 0.208 0 0 0 302.258 18.365 A 4.957 4.957 0 0 0 302.229 18.365 C 302.161 18.365 302.112 18.369 302.016 18.397 A 1.792 1.792 0 0 0 301.965 18.413 C 301.819 18.462 301.721 18.609 301.624 18.755 A 0.691 0.691 0 0 0 301.587 18.975 A 0.692 0.692 0 0 0 301.624 19.195 A 0.533 0.533 0 0 1 301.641 19.268 C 301.672 19.44 301.672 19.751 301.672 20.171 C 301.672 20.708 301.624 21.246 301.526 21.88 C 301.429 22.508 301.381 23.04 301.332 23.476 A 27.287 27.287 0 0 1 301.331 23.492 C 301.331 23.877 301.331 24.141 301.355 24.283 A 0.324 0.324 0 0 0 301.379 24.371 A 1.704 1.704 0 0 0 301.408 24.404 C 301.824 24.878 302.132 24.662 302.33 23.755 A 6.696 6.696 0 0 0 302.405 23.345 C 302.441 23.052 302.451 22.677 302.473 22.26 A 15.189 15.189 0 0 1 302.502 21.831 A 15.86 15.86 0 0 0 302.543 21.026 A 35.967 35.967 0 0 0 302.551 20.074 A 16.635 16.635 0 0 0 302.549 19.769 C 302.536 19.094 302.48 18.675 302.381 18.484 Z M 429.578 61.755 A 0.279 0.279 0 0 0 429.504 61.728 A 0.256 0.256 0 0 0 429.456 61.724 A 0.093 0.093 0 0 1 429.429 61.72 C 429.403 61.712 429.377 61.696 429.351 61.685 A 0.113 0.113 0 0 0 429.309 61.675 A 0.089 0.089 0 0 1 429.275 61.668 C 429.26 61.662 429.244 61.652 429.229 61.639 A 0.825 0.825 0 0 1 429.163 61.578 A 0.093 0.093 0 0 0 429.158 61.551 C 429.151 61.525 429.134 61.499 429.124 61.473 A 0.113 0.113 0 0 1 429.114 61.431 L 428.967 61.138 C 428.918 61.089 428.821 61.04 428.723 61.04 A 0.721 0.721 0 0 1 428.624 60.997 C 428.492 60.93 428.33 60.814 428.137 60.699 A 11.411 11.411 0 0 1 427.89 60.36 A 5.237 5.237 0 0 1 427.698 60.064 C 427.588 59.917 427.478 59.771 427.389 59.645 A 5.05 5.05 0 0 1 427.307 59.527 C 427.124 59.344 426.968 59.133 426.84 58.936 A 6.113 6.113 0 0 1 426.721 58.746 A 0.823 0.823 0 0 1 426.714 58.739 C 426.681 58.704 426.653 58.67 426.629 58.636 A 1.422 1.422 0 0 1 426.526 58.453 A 9.609 9.609 0 0 1 426.492 58.41 C 426.354 58.235 426.269 58.115 426.217 58.051 A 0.491 0.491 0 0 0 426.184 58.013 A 1.887 1.887 0 0 1 426.156 57.994 C 426.072 57.936 426.004 57.88 425.943 57.847 A 0.216 0.216 0 0 0 425.842 57.818 C 425.745 57.769 425.696 57.72 425.647 57.72 L 425.549 57.72 A 0.347 0.347 0 0 0 425.531 57.831 C 425.531 57.943 425.586 58.062 425.696 58.208 A 10.324 10.324 0 0 1 425.733 58.259 C 425.859 58.429 425.949 58.559 426.038 58.648 L 426.086 58.697 A 0.374 0.374 0 0 0 426.115 58.743 C 426.191 58.851 426.369 59.035 426.618 59.325 A 13.526 13.526 0 0 1 426.624 59.331 C 426.672 59.331 426.672 59.38 426.721 59.429 A 0.29 0.29 0 0 0 426.721 59.433 C 426.722 59.528 426.77 59.577 426.77 59.673 A 0.768 0.768 0 0 1 426.783 59.699 C 426.819 59.78 426.823 59.829 426.868 59.917 A 0.209 0.209 0 0 1 426.869 59.919 C 426.908 59.959 426.915 59.999 426.944 60.039 A 0.199 0.199 0 0 0 426.965 60.064 C 427.267 60.4 427.57 60.689 427.84 60.917 A 5.593 5.593 0 0 0 428.186 61.187 C 428.333 61.285 428.43 61.382 428.479 61.431 L 428.772 61.724 A 1.872 1.872 0 0 1 428.986 61.895 C 429.053 61.956 429.114 62.017 429.163 62.066 C 429.285 62.107 429.373 62.181 429.427 62.205 A 0.074 0.074 0 0 0 429.456 62.212 A 0.381 0.381 0 0 0 429.512 62.209 C 429.531 62.207 429.55 62.201 429.569 62.19 A 0.171 0.171 0 0 0 429.602 62.163 A 0.63 0.63 0 0 0 429.657 62.133 C 429.692 62.111 429.716 62.089 429.731 62.067 A 0.088 0.088 0 0 0 429.749 62.017 A 0.269 0.269 0 0 0 429.75 62.014 C 429.775 61.962 429.772 61.924 429.757 61.893 A 0.281 0.281 0 0 0 429.7 61.822 A 0.987 0.987 0 0 1 429.658 61.799 C 429.632 61.785 429.61 61.771 429.588 61.76 M 10.259 63.615 A 8.407 8.407 0 0 0 10.266 63.726 A 71.561 71.561 0 0 0 10.433 65.035 C 10.493 65.466 10.556 65.872 10.624 66.25 A 16.75 16.75 0 0 0 10.754 66.9 A 12.867 12.867 0 0 0 10.83 67.293 C 10.927 67.758 11.02 68.044 11.095 68.136 A 0.071 0.071 0 0 0 11.145 68.169 C 11.194 68.169 11.243 67.925 11.243 67.339 A 10.986 10.986 0 0 1 11.214 66.918 C 11.198 66.625 11.189 66.308 11.174 65.966 A 24.132 24.132 0 0 0 11.145 65.435 C 11.096 65.069 11.06 64.727 11.023 64.397 A 23.086 23.086 0 0 0 10.901 63.433 C 10.765 62.844 10.629 62.549 10.493 62.549 A 0.099 0.099 0 0 0 10.461 62.554 C 10.277 62.646 10.223 63 10.259 63.615 Z M 444.285 20.948 A 7.913 7.913 0 0 0 443.42 20.904 C 442.59 20.904 441.858 20.953 441.125 21.148 C 439.96 21.506 440.358 21.741 442.319 21.815 A 31.97 31.97 0 0 0 442.883 21.831 C 443.762 21.831 444.449 21.804 444.943 21.749 A 5.093 5.093 0 0 0 445.374 21.685 C 445.816 21.552 445.858 21.419 445.498 21.25 A 2.31 2.31 0 0 0 445.374 21.197 C 445.076 21.078 444.706 20.995 444.285 20.948 Z M 59.436 40.044 C 60.12 39.947 60.803 39.898 61.536 39.898 C 61.932 39.898 62.25 39.938 62.487 39.981 A 4.824 4.824 0 0 1 62.561 39.996 A 1.67 1.67 0 0 1 62.648 40.027 C 62.971 40.155 62.799 40.251 62.057 40.427 A 17.058 17.058 0 0 1 62.024 40.435 C 61.145 40.581 60.315 40.63 59.583 40.63 A 7.48 7.48 0 0 1 59.214 40.622 C 58.677 40.595 58.402 40.507 58.362 40.386 A 0.127 0.127 0 0 1 58.424 40.278 C 58.459 40.253 58.509 40.232 58.575 40.213 A 1.809 1.809 0 0 1 58.655 40.191 A 5.669 5.669 0 0 1 58.875 40.14 C 59.009 40.113 59.164 40.085 59.349 40.057 A 12.304 12.304 0 0 1 59.436 40.044 Z M 162.708 58.794 C 162.805 58.794 162.952 58.843 163.098 58.99 A 1.834 1.834 0 0 1 163.293 59.219 C 163.358 59.31 163.418 59.413 163.468 59.526 A 1.64 1.64 0 0 1 163.489 59.576 A 0.796 0.796 0 0 1 163.554 59.779 C 163.584 59.936 163.586 60.116 163.586 60.277 A 44.029 44.029 0 0 1 163.586 60.308 C 163.586 60.499 163.616 60.719 163.629 60.97 A 4.169 4.169 0 0 1 163.635 61.187 C 163.672 61.444 163.736 61.673 163.787 61.875 A 4.173 4.173 0 0 1 163.831 62.066 A 2.349 2.349 0 0 1 163.925 62.357 C 163.958 62.484 163.975 62.598 163.977 62.684 A 0.709 0.709 0 0 1 163.977 62.701 C 163.977 62.894 163.929 62.992 163.881 62.994 A 0.037 0.037 0 0 1 163.879 62.994 C 163.838 62.994 163.796 62.958 163.724 62.887 A 9.291 9.291 0 0 1 163.684 62.847 A 0.31 0.31 0 0 1 163.644 62.796 C 163.62 62.759 163.596 62.71 163.572 62.648 A 1.864 1.864 0 0 1 163.538 62.554 A 761.049 761.049 0 0 1 163.533 62.539 C 163.158 61.273 162.874 60.325 162.723 59.779 A 19.96 19.96 0 0 1 162.708 59.722 A 6.299 6.299 0 0 1 162.662 59.528 C 162.588 59.188 162.578 58.972 162.631 58.865 A 0.132 0.132 0 0 1 162.708 58.794 Z M 345.553 35.302 A 0.272 0.272 0 0 0 345.52 35.259 C 345.477 35.216 345.472 35.482 345.54 36.126 A 22.573 22.573 0 0 0 345.569 36.382 A 26.323 26.323 0 0 0 345.601 36.679 C 345.796 38.388 346.081 39.263 346.497 39.263 A 0.087 0.087 0 0 0 346.54 39.252 C 346.592 39.222 346.625 39.136 346.637 39.006 A 1.415 1.415 0 0 0 346.643 38.872 C 346.643 38.726 346.616 38.525 346.561 38.268 A 8.355 8.355 0 0 0 346.497 37.994 A 17.658 17.658 0 0 1 346.423 37.729 A 51.204 51.204 0 0 1 346.204 36.871 A 10.585 10.585 0 0 0 346.161 36.745 C 346.031 36.371 345.905 36.075 345.817 35.855 A 12.068 12.068 0 0 1 345.813 35.845 C 345.694 35.567 345.607 35.386 345.553 35.302 Z M 474.557 35.302 A 0.272 0.272 0 0 0 474.524 35.259 C 474.48 35.216 474.476 35.482 474.544 36.126 A 22.573 22.573 0 0 0 474.573 36.382 A 26.323 26.323 0 0 0 474.605 36.679 C 474.8 38.388 475.084 39.263 475.5 39.263 A 0.087 0.087 0 0 0 475.544 39.252 C 475.596 39.222 475.629 39.136 475.641 39.006 A 1.415 1.415 0 0 0 475.647 38.872 C 475.647 38.726 475.62 38.525 475.565 38.268 A 8.355 8.355 0 0 0 475.5 37.994 A 17.658 17.658 0 0 1 475.427 37.729 A 51.204 51.204 0 0 1 475.208 36.871 A 10.585 10.585 0 0 0 475.165 36.745 C 475.035 36.371 474.909 36.075 474.821 35.855 A 12.068 12.068 0 0 1 474.817 35.845 C 474.698 35.567 474.611 35.386 474.557 35.302 Z M 37.317 73.736 C 37.512 73.736 37.952 74.126 38.782 74.956 C 39.861 76.126 40.029 76.756 39.248 76.849 A 1.9 1.9 0 0 1 39.026 76.861 A 0.628 0.628 0 0 1 38.907 76.851 C 38.718 76.814 38.662 76.676 38.766 76.411 A 1.295 1.295 0 0 1 38.782 76.372 C 38.879 76.031 38.684 75.542 38.098 74.908 A 5.646 5.646 0 0 1 37.806 74.591 C 37.735 74.509 37.67 74.429 37.611 74.354 A 8.156 8.156 0 0 1 37.512 74.224 A 1.455 1.455 0 0 1 37.424 74.128 C 37.311 73.993 37.274 73.892 37.269 73.845 A 0.1 0.1 0 0 1 37.268 73.833 C 37.268 73.788 37.268 73.743 37.307 73.736 A 0.062 0.062 0 0 1 37.317 73.736 Z M 71.008 33.648 A 0.142 0.142 0 0 0 70.924 33.681 C 70.866 33.725 70.798 33.81 70.705 33.928 A 17.27 17.27 0 0 1 70.618 34.038 A 4.726 4.726 0 0 0 70.361 34.391 C 70.293 34.495 70.224 34.608 70.155 34.732 A 6.107 6.107 0 0 0 70.032 34.966 C 69.914 35.162 69.828 35.389 69.723 35.648 A 11.15 11.15 0 0 1 69.641 35.845 A 7.525 7.525 0 0 1 69.638 35.854 C 69.492 36.24 69.348 36.531 69.299 36.822 C 69.202 37.115 69.202 37.261 69.25 37.261 C 69.348 37.261 69.446 37.212 69.495 37.163 A 1.02 1.02 0 0 1 69.52 37.117 C 69.559 37.048 69.592 37 69.592 36.919 A 0.478 0.478 0 0 1 69.6 36.841 C 69.615 36.752 69.654 36.622 69.731 36.453 A 3.327 3.327 0 0 1 69.788 36.333 A 11.564 11.564 0 0 0 70.007 35.863 A 41.845 41.845 0 0 0 70.227 35.357 C 70.406 35.044 70.503 34.812 70.631 34.625 A 1.403 1.403 0 0 1 70.667 34.576 C 70.862 34.331 70.959 34.087 71.057 33.941 C 71.106 33.746 71.106 33.648 71.008 33.648 Z M 300.726 15.552 A 0.305 0.305 0 0 0 300.452 15.386 A 0.284 0.284 0 0 0 300.313 15.422 A 0.259 0.259 0 0 0 300.208 15.533 A 0.512 0.512 0 0 0 300.098 15.704 C 300.083 15.741 300.072 15.778 300.067 15.812 A 0.376 0.376 0 0 0 300.061 15.874 A 211.598 211.598 0 0 1 300.021 16.569 C 300 16.927 299.982 17.24 299.972 17.502 A 9.98 9.98 0 0 0 299.963 17.876 C 299.963 18.246 299.963 18.504 299.985 18.671 A 0.713 0.713 0 0 0 300.012 18.804 C 300.037 18.877 300.061 18.939 300.092 18.981 A 0.138 0.138 0 0 0 300.208 19.048 C 300.256 19.048 300.354 18.951 300.452 18.755 A 0.993 0.993 0 0 0 300.482 18.707 C 300.569 18.559 300.652 18.34 300.696 18.121 A 9.208 9.208 0 0 0 300.811 17.406 C 300.844 17.13 300.861 16.868 300.861 16.617 A 5.406 5.406 0 0 0 300.842 16.167 A 2.373 2.373 0 0 0 300.833 15.952 C 300.817 15.777 300.78 15.645 300.726 15.552 Z M 447.561 56.922 A 0.037 0.037 0 0 0 447.522 56.89 A 4.475 4.475 0 0 0 447.381 57.19 A 1.799 1.799 0 0 0 447.278 57.525 C 447.229 57.769 447.18 58.013 447.18 58.208 A 0.706 0.706 0 0 0 447.16 58.381 C 447.16 58.522 447.194 58.671 447.229 58.843 C 447.266 59.029 447.303 59.215 447.297 59.38 A 0.714 0.714 0 0 1 447.278 59.527 L 447.278 59.966 C 447.229 60.113 447.278 60.21 447.278 60.357 C 447.278 60.445 447.318 60.494 447.325 60.502 A 0.04 0.04 0 0 0 447.327 60.503 A 0.087 0.087 0 0 0 447.375 60.488 C 447.397 60.473 447.42 60.448 447.442 60.412 A 0.63 0.63 0 0 0 447.473 60.357 A 0.411 0.411 0 0 0 447.502 60.275 C 447.515 60.223 447.524 60.164 447.536 60.102 A 1.094 1.094 0 0 1 447.571 59.966 L 447.571 59.527 A 1.363 1.363 0 0 1 447.548 59.412 C 447.535 59.333 447.527 59.248 447.517 59.16 A 3.455 3.455 0 0 0 447.473 58.843 L 447.473 58.208 A 14.784 14.784 0 0 1 447.473 58.164 C 447.474 58.023 447.478 57.843 447.522 57.622 C 447.571 57.427 447.571 57.281 447.571 57.134 A 54.829 54.829 0 0 0 447.571 57.112 C 447.571 57.011 447.57 56.953 447.561 56.922 Z M 162.805 56.402 A 17.366 17.366 0 0 0 162.707 56.024 C 162.508 55.299 162.345 54.937 162.219 54.937 A 0.105 0.105 0 0 0 162.194 54.934 C 162.043 54.934 162.03 55.317 162.094 55.995 A 17.456 17.456 0 0 0 162.122 56.255 A 14.27 14.27 0 0 0 162.165 56.66 C 162.321 57.934 162.588 58.475 162.854 58.208 A 0.142 0.142 0 0 0 162.904 58.165 C 162.959 58.09 162.985 57.941 162.963 57.717 A 2.12 2.12 0 0 0 162.952 57.622 A 3.779 3.779 0 0 0 162.951 57.558 C 162.945 57.226 162.897 56.814 162.805 56.402 Z M 132.825 23.296 A 0.097 0.097 0 0 0 132.771 23.374 C 132.758 23.453 132.791 23.584 132.825 23.785 C 132.889 23.977 132.974 24.211 133.08 24.474 A 13.857 13.857 0 0 0 133.264 24.908 A 7.902 7.902 0 0 0 133.479 25.355 C 133.557 25.503 133.634 25.638 133.711 25.764 A 6.701 6.701 0 0 0 133.85 25.982 A 4.409 4.409 0 0 0 133.971 26.128 C 134.084 26.256 134.176 26.34 134.247 26.365 A 0.129 0.129 0 0 0 134.29 26.372 C 134.338 26.324 134.338 26.177 134.241 25.884 C 134.195 25.607 134.061 25.243 133.84 24.832 A 6.031 6.031 0 0 0 133.801 24.761 A 15.088 15.088 0 0 0 133.49 24.161 C 133.398 23.997 133.307 23.85 133.215 23.736 C 133.02 23.443 132.874 23.296 132.825 23.296 Z M 236.829 23.296 A 0.097 0.097 0 0 0 236.775 23.374 C 236.762 23.453 236.795 23.584 236.829 23.785 C 236.893 23.977 236.978 24.211 237.084 24.474 A 13.857 13.857 0 0 0 237.268 24.908 A 7.902 7.902 0 0 0 237.483 25.355 C 237.56 25.503 237.638 25.638 237.715 25.764 A 6.701 6.701 0 0 0 237.854 25.982 A 4.409 4.409 0 0 0 237.975 26.128 C 238.088 26.256 238.18 26.34 238.251 26.365 A 0.129 0.129 0 0 0 238.293 26.372 C 238.342 26.324 238.342 26.177 238.245 25.884 C 238.198 25.607 238.065 25.243 237.844 24.832 A 6.031 6.031 0 0 0 237.805 24.761 A 15.088 15.088 0 0 0 237.494 24.161 C 237.402 23.997 237.311 23.85 237.219 23.736 C 237.024 23.443 236.877 23.296 236.829 23.296 Z M 316.272 42.193 C 316.321 42.144 316.418 42.242 316.565 42.535 A 0.928 0.928 0 0 1 316.702 42.818 C 316.732 42.914 316.754 43.021 316.774 43.135 A 8.569 8.569 0 0 1 316.809 43.365 C 316.899 43.679 316.906 43.993 316.869 44.269 A 2.362 2.362 0 0 1 316.858 44.341 C 316.76 45.562 316.565 45.122 316.321 43.023 A 14.768 14.768 0 0 0 316.32 43.019 A 14.535 14.535 0 0 0 316.32 43.015 A 15.406 15.406 0 0 0 316.32 43.011 C 316.273 42.555 316.229 42.316 316.265 42.21 A 0.135 0.135 0 0 1 316.272 42.193 Z M 432.513 63.995 C 432.535 64.003 432.56 64.012 432.591 64.016 A 0.278 0.278 0 0 0 432.629 64.019 A 0.209 0.209 0 0 0 432.631 64.021 C 432.671 64.06 432.711 64.067 432.751 64.095 A 0.199 0.199 0 0 1 432.776 64.117 L 432.874 64.117 L 432.825 64.068 C 432.821 64.068 432.776 64.066 432.776 64.019 C 432.727 63.97 432.629 63.97 432.581 63.921 L 432.385 63.726 L 432.092 63.433 C 431.98 63.321 431.896 63.266 431.841 63.246 A 0.129 0.129 0 0 0 431.799 63.238 L 431.604 63.238 A 0.19 0.19 0 0 1 431.591 63.25 C 431.578 63.261 431.564 63.268 431.551 63.274 A 0.237 0.237 0 0 1 431.458 63.287 A 0.094 0.094 0 0 1 431.423 63.279 C 431.384 63.264 431.338 63.227 431.264 63.19 A 0.852 0.852 0 0 0 431.262 63.189 A 0.823 0.823 0 0 0 431.255 63.182 C 431.221 63.149 431.187 63.121 431.152 63.097 A 1.422 1.422 0 0 0 430.969 62.994 A 5.666 5.666 0 0 0 430.889 62.954 C 430.842 62.931 430.797 62.912 430.763 62.902 A 0.147 0.147 0 0 0 430.725 62.896 L 430.627 62.896 A 0.779 0.779 0 0 0 430.633 62.987 C 430.639 63.036 430.649 63.088 430.664 63.14 A 0.881 0.881 0 0 0 430.774 63.384 A 11.763 11.763 0 0 1 430.802 63.422 C 430.872 63.516 430.931 63.598 430.992 63.667 A 0.866 0.866 0 0 0 431.165 63.824 C 431.165 63.872 431.165 63.872 431.213 63.921 L 431.262 63.921 A 0.209 0.209 0 0 0 431.264 63.92 C 431.303 63.88 431.31 63.84 431.339 63.8 A 0.199 0.199 0 0 1 431.36 63.775 A 0.089 0.089 0 0 1 431.367 63.741 C 431.373 63.726 431.383 63.71 431.396 63.695 A 0.825 0.825 0 0 1 431.458 63.628 A 0.381 0.381 0 0 1 431.514 63.631 C 431.533 63.634 431.552 63.64 431.571 63.651 A 0.171 0.171 0 0 1 431.604 63.677 A 0.266 0.266 0 0 0 431.622 63.708 A 0.271 0.271 0 0 0 431.848 63.824 A 0.117 0.117 0 0 0 431.87 63.841 C 431.922 63.872 432.001 63.872 432.043 63.872 L 432.19 63.872 C 432.219 63.872 432.265 63.89 432.318 63.914 A 3.643 3.643 0 0 1 432.434 63.97 C 432.457 63.97 432.48 63.981 432.509 63.993 M 297.161 25.437 A 1.138 1.138 0 0 1 297.161 25.438 C 297.152 25.455 297.142 25.473 297.131 25.494 A 1.915 1.915 0 0 1 296.863 25.666 C 296.715 25.742 296.536 25.805 296.306 25.835 A 2.011 2.011 0 0 1 296.301 25.835 A 5.847 5.847 0 0 1 295.443 25.794 A 2.115 2.115 0 0 1 295.178 25.738 C 294.926 25.702 294.753 25.612 294.68 25.49 A 0.275 0.275 0 0 1 294.641 25.347 A 0.432 0.432 0 0 1 294.671 25.179 C 294.729 25.041 294.874 24.97 295.125 25.005 A 1.047 1.047 0 0 1 295.129 25.005 A 1.343 1.343 0 0 1 295.279 25.011 C 295.311 25.014 295.344 25.02 295.38 25.028 A 1.009 1.009 0 0 1 295.471 25.054 C 295.715 25.103 295.959 25.152 296.204 25.152 C 296.439 25.199 296.675 25.201 296.823 25.201 A 35.095 35.095 0 0 0 296.838 25.201 A 0.584 0.584 0 0 1 296.939 25.209 C 297.031 25.225 297.095 25.262 297.131 25.298 A 0.204 0.204 0 0 1 297.153 25.311 C 297.203 25.344 297.192 25.378 297.165 25.43 M 434.181 62.12 A 1.198 1.198 0 0 1 434.202 62.133 C 434.209 62.137 434.216 62.142 434.223 62.148 A 0.212 0.212 0 0 1 434.241 62.163 A 1.706 1.706 0 0 0 434.684 62.482 A 3.015 3.015 0 0 0 434.729 62.505 C 434.855 62.547 435.017 62.589 435.153 62.631 A 3.016 3.016 0 0 1 435.217 62.652 C 435.364 62.701 435.51 62.749 435.608 62.847 A 0.113 0.113 0 0 1 435.645 62.855 C 435.684 62.868 435.73 62.896 435.803 62.896 A 0.146 0.146 0 0 0 435.851 62.926 C 435.904 62.948 435.975 62.958 436.047 62.994 A 1.184 1.184 0 0 0 436.235 63.075 A 0.373 0.373 0 0 0 436.34 63.091 C 436.389 63.14 436.438 63.14 436.438 63.189 C 436.485 63.189 436.487 63.234 436.487 63.237 L 436.438 63.238 A 0.108 0.108 0 0 0 436.435 63.236 C 436.419 63.229 436.327 63.189 436.194 63.189 C 436.051 63.141 435.861 63.093 435.624 63.046 A 9.574 9.574 0 0 0 435.608 63.042 A 7.9 7.9 0 0 0 435.454 63.006 C 435.32 62.975 435.177 62.945 435.048 62.914 A 6.354 6.354 0 0 1 434.973 62.896 C 434.778 62.798 434.68 62.749 434.631 62.701 A 1.706 1.706 0 0 0 434.188 62.382 A 3.015 3.015 0 0 0 434.143 62.359 A 1.833 1.833 0 0 1 434.042 62.322 C 433.979 62.297 433.929 62.272 433.892 62.246 A 0.292 0.292 0 0 1 433.85 62.212 A 0.183 0.183 0 0 0 433.818 62.186 A 0.285 0.285 0 0 0 433.771 62.163 M 74.204 28.596 A 0.29 0.29 0 0 0 74.084 28.57 C 74.048 28.57 73.984 28.625 73.913 28.714 A 1.487 1.487 0 0 0 73.84 28.814 A 1.233 1.233 0 0 0 73.78 28.916 C 73.701 29.063 73.617 29.271 73.502 29.539 A 39.308 39.308 0 0 1 73.499 29.546 A 8.411 8.411 0 0 0 73.4 29.798 C 73.031 30.796 73.228 30.972 73.93 30.328 A 6.614 6.614 0 0 0 74.133 30.132 A 8.061 8.061 0 0 0 74.261 29.983 C 74.524 29.667 74.677 29.429 74.719 29.302 C 74.757 29.151 74.707 29.001 74.57 28.872 A 0.848 0.848 0 0 0 74.426 28.765 C 74.338 28.677 74.268 28.624 74.204 28.596 Z M 34.338 68.462 A 1.488 1.488 0 0 0 34.298 68.399 C 34.166 68.201 34.037 68.121 33.948 68.121 A 0.215 0.215 0 0 0 33.936 68.121 C 33.734 68.131 33.788 68.434 34.065 68.964 A 7.081 7.081 0 0 0 34.192 69.195 C 35.012 70.516 35.237 70.604 34.867 69.46 A 14.651 14.651 0 0 0 34.778 69.195 C 34.694 69.028 34.611 68.876 34.527 68.741 A 3.736 3.736 0 0 0 34.338 68.462 Z M 286.975 34.771 A 9.921 9.921 0 0 0 286.973 34.537 C 286.961 34.064 286.913 33.843 286.829 33.843 A 0.04 0.04 0 0 0 286.799 33.831 C 286.757 33.831 286.697 33.891 286.634 33.997 A 1.372 1.372 0 0 0 286.584 34.087 A 3.521 3.521 0 0 0 286.49 34.293 A 2.996 2.996 0 0 0 286.292 34.966 C 286.253 35.197 286.245 35.429 286.267 35.612 A 1.121 1.121 0 0 0 286.292 35.747 C 286.389 35.992 286.487 36.089 286.633 36.089 C 286.779 36.089 286.828 35.945 286.924 35.704 A 15.452 15.452 0 0 0 286.925 35.702 A 6.183 6.183 0 0 0 286.944 35.605 C 286.986 35.38 287.018 35.113 286.975 34.771 Z M 127.832 41.129 A 6.019 6.019 0 0 0 127.844 41.216 A 1.226 1.226 0 0 1 127.879 41.433 C 127.884 41.513 127.88 41.589 127.868 41.658 A 0.667 0.667 0 0 1 127.844 41.753 A 0.735 0.735 0 0 1 127.799 41.883 C 127.775 41.936 127.745 41.981 127.714 42.021 A 1.446 1.446 0 0 1 127.6 42.144 A 2.476 2.476 0 0 0 127.557 42.173 C 127.443 42.253 127.395 42.306 127.307 42.437 A 0.353 0.353 0 0 0 127.278 42.519 C 127.265 42.578 127.269 42.637 127.292 42.696 A 0.383 0.383 0 0 0 127.307 42.73 A 0.124 0.124 0 0 0 127.324 42.756 C 127.374 42.814 127.457 42.767 127.541 42.647 A 0.823 0.823 0 0 0 127.551 42.632 A 0.774 0.774 0 0 0 127.689 42.512 C 127.771 42.423 127.854 42.302 127.936 42.151 A 3.332 3.332 0 0 0 127.991 42.046 A 3.998 3.998 0 0 0 128.122 41.759 C 128.166 41.651 128.199 41.547 128.218 41.446 A 1.005 1.005 0 0 0 128.235 41.265 A 0.61 0.61 0 0 0 128.252 41.152 C 128.261 40.999 128.206 40.865 128.088 40.826 A 0.825 0.825 0 0 0 128.022 40.764 C 128.007 40.751 127.991 40.741 127.976 40.735 A 0.089 0.089 0 0 0 127.942 40.728 C 127.809 40.728 127.797 40.849 127.832 41.129 Z M 231.836 41.129 A 6.019 6.019 0 0 0 231.848 41.216 A 1.226 1.226 0 0 1 231.882 41.433 C 231.888 41.513 231.884 41.589 231.872 41.658 A 0.667 0.667 0 0 1 231.848 41.753 A 0.735 0.735 0 0 1 231.803 41.883 C 231.779 41.936 231.749 41.981 231.718 42.021 A 1.446 1.446 0 0 1 231.604 42.144 A 2.476 2.476 0 0 0 231.561 42.173 C 231.447 42.253 231.399 42.306 231.311 42.437 A 0.353 0.353 0 0 0 231.281 42.519 C 231.269 42.578 231.273 42.637 231.296 42.696 A 0.383 0.383 0 0 0 231.311 42.73 A 0.124 0.124 0 0 0 231.328 42.756 C 231.378 42.814 231.461 42.767 231.545 42.647 A 0.823 0.823 0 0 0 231.555 42.632 A 0.774 0.774 0 0 0 231.693 42.512 C 231.775 42.423 231.858 42.302 231.94 42.151 A 3.332 3.332 0 0 0 231.995 42.046 A 3.998 3.998 0 0 0 232.126 41.759 C 232.17 41.651 232.203 41.547 232.222 41.446 A 1.005 1.005 0 0 0 232.239 41.265 A 0.61 0.61 0 0 0 232.256 41.152 C 232.265 40.999 232.21 40.865 232.092 40.826 A 0.825 0.825 0 0 0 232.026 40.764 C 232.01 40.751 231.995 40.741 231.98 40.735 A 0.089 0.089 0 0 0 231.946 40.728 C 231.813 40.728 231.801 40.849 231.836 41.129 Z M 316.272 37.847 A 1.261 1.261 0 0 0 316.21 37.737 C 316.133 37.615 316.056 37.554 315.979 37.554 A 0.12 0.12 0 0 0 315.916 37.574 C 315.841 37.62 315.773 37.743 315.735 37.896 A 0.833 0.833 0 0 0 315.663 38.123 A 2.647 2.647 0 0 0 315.637 38.579 A 2.466 2.466 0 0 0 315.64 38.695 C 315.651 38.937 315.699 39.143 315.784 39.312 A 0.742 0.742 0 0 0 315.809 39.395 C 315.839 39.474 315.878 39.53 315.922 39.565 A 0.17 0.17 0 0 0 316.028 39.605 C 316.162 39.605 316.214 39.523 316.297 39.359 A 11.746 11.746 0 0 0 316.321 39.312 C 316.358 39.124 316.396 38.965 316.411 38.767 A 2.421 2.421 0 0 0 316.418 38.579 A 2.466 2.466 0 0 0 316.416 38.464 C 316.405 38.222 316.357 38.016 316.272 37.847 Z M 136.194 30.23 A 0.21 0.21 0 0 0 136.127 30.24 C 136.074 30.257 136.038 30.3 136.004 30.367 A 0.761 0.761 0 0 0 135.999 30.376 A 0.353 0.353 0 0 0 135.969 30.459 C 135.956 30.518 135.961 30.576 135.983 30.635 A 0.383 0.383 0 0 0 135.999 30.669 A 1.002 1.002 0 0 1 136.025 30.765 C 136.034 30.801 136.039 30.834 136.042 30.866 A 1.373 1.373 0 0 1 136.047 31.011 C 135.999 31.158 135.901 31.255 135.803 31.304 A 0.56 0.56 0 0 0 135.737 31.361 C 135.615 31.487 135.645 31.618 135.887 31.783 A 1.474 1.474 0 0 0 135.901 31.792 A 2.988 2.988 0 0 0 135.978 31.848 C 136.081 31.921 136.154 31.957 136.217 31.957 A 0.164 0.164 0 0 0 136.292 31.939 C 136.388 31.89 136.485 31.746 136.582 31.505 A 2.822 2.822 0 0 0 136.584 31.499 C 136.731 31.109 136.78 30.767 136.682 30.523 A 0.753 0.753 0 0 0 136.614 30.389 C 136.528 30.258 136.411 30.202 136.246 30.222 A 0.669 0.669 0 0 0 136.194 30.23 Z M 240.198 30.23 A 0.21 0.21 0 0 0 240.131 30.24 C 240.078 30.257 240.042 30.3 240.007 30.367 A 0.761 0.761 0 0 0 240.002 30.376 A 0.353 0.353 0 0 0 239.973 30.459 C 239.96 30.518 239.965 30.576 239.987 30.635 A 0.383 0.383 0 0 0 240.002 30.669 A 1.002 1.002 0 0 1 240.029 30.765 C 240.038 30.801 240.043 30.834 240.046 30.866 A 1.373 1.373 0 0 1 240.051 31.011 C 240.002 31.158 239.905 31.255 239.807 31.304 A 0.56 0.56 0 0 0 239.741 31.361 C 239.619 31.487 239.649 31.618 239.891 31.783 A 1.474 1.474 0 0 0 239.905 31.792 A 2.988 2.988 0 0 0 239.982 31.848 C 240.085 31.921 240.157 31.957 240.221 31.957 A 0.164 0.164 0 0 0 240.295 31.939 C 240.392 31.89 240.489 31.746 240.586 31.505 A 2.822 2.822 0 0 0 240.588 31.499 C 240.735 31.109 240.784 30.767 240.686 30.523 A 0.753 0.753 0 0 0 240.618 30.389 C 240.532 30.258 240.415 30.202 240.25 30.222 A 0.669 0.669 0 0 0 240.198 30.23 Z M 379.554 10.302 A 0.041 0.041 0 0 0 379.553 10.308 A 0.054 0.054 0 0 0 379.522 10.322 C 379.475 10.358 379.4 10.466 379.28 10.644 A 61.578 61.578 0 0 0 379.211 10.747 A 4.475 4.475 0 0 0 379.071 11.047 A 1.799 1.799 0 0 0 378.967 11.382 A 1.398 1.398 0 0 0 378.946 11.439 C 378.897 11.579 378.879 11.702 378.873 11.808 A 2.642 2.642 0 0 0 378.87 11.968 C 378.87 12.212 378.87 12.31 378.918 12.31 C 378.959 12.31 379.033 12.209 379.14 12.009 A 5.725 5.725 0 0 0 379.211 11.871 A 11.322 11.322 0 0 0 379.395 11.492 A 5.912 5.912 0 0 0 379.504 11.236 A 36.255 36.255 0 0 1 379.549 11.017 C 379.579 10.872 379.602 10.75 379.602 10.65 A 1.802 1.802 0 0 0 379.601 10.599 C 379.596 10.396 379.557 10.275 379.554 10.302 Z M 301.311 33.618 A 0.033 0.033 0 0 0 301.282 33.599 C 301.241 33.599 301.201 33.666 301.16 33.8 A 1.991 1.991 0 0 0 301.135 33.892 A 1.268 1.268 0 0 0 301.079 34.025 C 301.046 34.113 301.02 34.21 300.997 34.315 A 6.522 6.522 0 0 0 300.94 34.624 A 3.043 3.043 0 0 1 300.938 34.732 C 300.932 34.91 300.913 35.069 300.92 35.208 A 0.763 0.763 0 0 0 300.94 35.357 A 1.809 1.809 0 0 0 300.962 35.437 C 300.981 35.502 301.002 35.553 301.027 35.588 A 0.127 0.127 0 0 0 301.135 35.65 A 0.402 0.402 0 0 0 301.186 35.62 C 301.266 35.564 301.339 35.469 301.379 35.308 C 301.414 35.17 301.448 35.007 301.448 34.838 A 1.086 1.086 0 0 0 301.428 34.624 A 14.617 14.617 0 0 0 301.427 34.364 C 301.423 34.184 301.413 34.026 301.379 33.892 A 2.575 2.575 0 0 1 301.377 33.882 C 301.343 33.742 301.333 33.654 301.311 33.618 Z M 161.963 51.439 A 0.055 0.055 0 0 0 161.926 51.421 A 0.033 0.033 0 0 0 161.898 51.439 C 161.878 51.469 161.868 51.541 161.843 51.654 A 2.735 2.735 0 0 1 161.829 51.714 L 161.829 52.398 A 25.89 25.89 0 0 0 161.829 52.478 C 161.829 52.727 161.838 52.904 161.926 53.081 A 1.809 1.809 0 0 0 161.948 53.162 C 161.968 53.227 161.988 53.277 162.013 53.312 A 0.127 0.127 0 0 0 162.122 53.374 C 162.162 53.374 162.202 53.307 162.243 53.173 A 1.991 1.991 0 0 0 162.268 53.081 A 5.929 5.929 0 0 0 162.264 52.819 C 162.261 52.752 162.256 52.68 162.247 52.601 A 3.66 3.66 0 0 0 162.219 52.398 A 14.088 14.088 0 0 0 162.173 52.137 C 162.158 52.054 162.143 51.977 162.127 51.904 A 6.602 6.602 0 0 0 162.073 51.665 A 1.923 1.923 0 0 0 162.054 51.611 C 162.024 51.529 161.994 51.468 161.963 51.439 Z M 170.48 19.483 A 1.305 1.305 0 0 0 170.422 19.488 A 0.743 0.743 0 0 0 170.368 19.49 C 170.273 19.497 170.161 19.521 170.031 19.563 A 3.089 3.089 0 0 0 169.836 19.634 C 169.446 19.829 169.397 19.927 169.592 19.927 C 169.698 19.927 169.778 19.952 169.832 19.985 A 0.265 0.265 0 0 1 169.885 20.025 C 169.885 20.11 169.885 20.158 169.853 20.234 A 0.661 0.661 0 0 1 169.836 20.269 C 169.699 20.498 169.734 20.641 169.86 20.617 A 0.198 0.198 0 0 0 169.885 20.611 A 0.641 0.641 0 0 0 169.911 20.602 C 170.022 20.559 170.182 20.466 170.372 20.305 A 3.301 3.301 0 0 0 170.569 20.122 A 2.44 2.44 0 0 0 170.605 20.081 C 170.941 19.685 170.899 19.46 170.48 19.483 Z M 432.483 18.218 L 433.118 18.853 C 432.385 18.81 431.88 18.729 431.604 18.677 A 8.864 8.864 0 0 1 431.506 18.658 C 431.318 18.563 431.266 18.469 431.395 18.33 A 0.571 0.571 0 0 1 431.409 18.316 A 0.175 0.175 0 0 0 431.419 18.315 C 431.485 18.311 431.748 18.276 432.233 18.237 A 27.415 27.415 0 0 1 432.483 18.218 Z M 457.776 19.488 C 457.483 19.488 457.19 19.488 456.946 19.537 A 1.626 1.626 0 0 0 456.859 19.558 C 456.559 19.642 456.744 19.721 457.476 19.731 A 11.831 11.831 0 0 0 457.629 19.732 C 458.557 19.732 458.85 19.683 458.557 19.585 A 3.11 3.11 0 0 0 458.371 19.545 C 458.279 19.528 458.176 19.513 458.068 19.502 A 3.043 3.043 0 0 0 457.776 19.488 Z M 67.46 39.339 A 0.8 0.8 0 0 0 67.249 39.312 C 66.956 39.312 66.614 39.41 66.321 39.605 A 1.779 1.779 0 0 0 66.282 39.631 C 66.051 39.794 66 39.922 66.159 40.014 A 0.503 0.503 0 0 0 66.223 40.044 A 0.98 0.98 0 0 0 66.671 40.161 C 66.694 40.161 66.718 40.16 66.742 40.158 A 0.99 0.99 0 0 0 66.858 40.142 A 5.651 5.651 0 0 0 67.006 40.111 C 67.084 40.093 67.157 40.073 67.224 40.051 A 0.937 0.937 0 0 0 67.444 39.947 A 0.715 0.715 0 0 0 67.554 39.879 C 67.601 39.844 67.639 39.805 67.668 39.763 A 0.36 0.36 0 0 0 67.737 39.556 C 67.703 39.455 67.6 39.378 67.46 39.339 Z M 32.231 62.034 L 32.23 62.032 A 5.158 5.158 0 0 0 32.23 62.03 C 32.189 61.871 32.15 61.741 32.142 61.585 A 1.151 1.151 0 0 1 32.141 61.529 C 32.092 61.236 32.141 61.04 32.19 60.992 C 32.234 60.992 32.357 61.071 32.559 61.264 A 4.669 4.669 0 0 1 32.629 61.333 A 1.615 1.615 0 0 1 32.724 61.498 C 32.771 61.59 32.813 61.681 32.874 61.773 A 1.561 1.561 0 0 1 32.899 61.895 C 32.918 62.011 32.922 62.115 32.922 62.234 A 16.269 16.269 0 0 1 32.922 62.31 C 32.922 62.744 32.78 62.797 32.541 62.517 A 1.469 1.469 0 0 1 32.532 62.505 C 32.392 62.365 32.341 62.27 32.251 62.09 A 46.55 46.55 0 0 1 32.239 62.066 C 32.238 62.063 32.237 62.06 32.237 62.057 A 5.047 5.047 0 0 0 32.235 62.05 C 32.234 62.048 32.234 62.046 32.233 62.044 L 32.233 62.042 M 314.52 37.637 A 0.191 0.191 0 0 0 314.417 37.603 A 0.996 0.996 0 0 0 314.347 37.64 C 314.275 37.683 314.21 37.747 314.172 37.896 A 0.539 0.539 0 0 0 314.095 38.095 A 1.818 1.818 0 0 0 314.075 38.433 C 314.075 38.677 314.124 38.872 314.172 39.019 C 314.236 39.114 314.299 39.188 314.362 39.229 A 0.191 0.191 0 0 0 314.465 39.263 A 0.159 0.159 0 0 0 314.512 39.256 C 314.567 39.239 314.621 39.194 314.676 39.13 A 1.212 1.212 0 0 0 314.758 39.019 A 91.793 91.793 0 0 0 314.763 39.001 A 2.374 2.374 0 0 0 314.856 38.433 C 314.856 38.303 314.842 38.187 314.814 38.084 A 0.802 0.802 0 0 0 314.709 37.847 C 314.646 37.752 314.583 37.678 314.52 37.637 Z M 445.911 66.363 C 446.155 66.412 446.301 66.509 446.301 66.802 C 446.301 66.802 446.301 66.851 446.252 66.851 C 446.252 66.9 446.204 66.9 446.204 66.949 C 446.119 66.991 446.071 67.033 446.028 67.107 A 0.658 0.658 0 0 0 446.008 67.144 C 445.969 67.263 445.961 67.35 445.934 67.457 A 1.164 1.164 0 0 1 445.911 67.535 L 445.911 67.779 C 445.862 67.828 445.862 67.876 445.813 67.876 A 0.154 0.154 0 0 1 445.689 67.805 C 445.662 67.77 445.64 67.725 445.618 67.681 L 445.471 67.242 L 445.471 66.851 A 0.595 0.595 0 0 1 445.482 66.735 C 445.493 66.681 445.511 66.633 445.531 66.588 A 2.078 2.078 0 0 1 445.569 66.509 C 445.664 66.414 445.76 66.412 445.902 66.366 A 1.177 1.177 0 0 0 445.911 66.363 Z M 378.625 15.288 A 0.471 0.471 0 0 0 378.621 15.224 C 378.608 15.127 378.56 15.093 378.479 15.093 C 378.402 15.093 378.325 15.154 378.248 15.276 A 1.259 1.259 0 0 0 378.186 15.386 A 0.822 0.822 0 0 0 378.115 15.519 C 378.061 15.645 378.026 15.796 377.991 15.972 A 3.488 3.488 0 0 0 377.939 16.202 C 377.919 16.315 377.912 16.421 377.942 16.509 A 0.471 0.471 0 0 0 377.946 16.574 C 377.959 16.67 378.007 16.704 378.088 16.704 A 0.282 0.282 0 0 0 378.156 16.657 C 378.214 16.602 378.26 16.521 378.332 16.413 A 3.657 3.657 0 0 1 378.333 16.412 A 1.693 1.693 0 0 0 378.399 16.303 C 378.472 16.173 378.539 16.014 378.577 15.826 A 3.07 3.07 0 0 0 378.586 15.775 C 378.607 15.662 378.617 15.57 378.621 15.489 A 3.414 3.414 0 0 0 378.625 15.288 Z M 339.905 42.144 A 0.505 0.505 0 0 0 339.846 42.022 C 339.795 41.946 339.728 41.9 339.661 41.9 A 0.159 0.159 0 0 0 339.614 41.907 C 339.559 41.924 339.505 41.969 339.45 42.033 A 1.212 1.212 0 0 0 339.368 42.144 A 2.439 2.439 0 0 0 339.367 42.147 C 339.349 42.201 339.331 42.262 339.315 42.327 A 1.55 1.55 0 0 0 339.27 42.681 A 1.554 1.554 0 0 0 339.316 43.039 A 2.175 2.175 0 0 0 339.368 43.218 A 0.801 0.801 0 0 0 339.386 43.244 C 339.432 43.309 339.479 43.351 339.526 43.378 A 0.268 0.268 0 0 0 339.661 43.413 C 339.738 43.413 339.815 43.383 339.868 43.298 A 0.372 0.372 0 0 0 339.905 43.218 A 0.761 0.761 0 0 0 339.967 43.104 A 1.058 1.058 0 0 0 340.051 42.681 A 1.14 1.14 0 0 0 340.029 42.455 A 0.877 0.877 0 0 0 339.905 42.144 Z M 468.909 42.144 A 0.505 0.505 0 0 0 468.85 42.022 C 468.799 41.946 468.732 41.9 468.665 41.9 A 0.159 0.159 0 0 0 468.618 41.907 C 468.563 41.924 468.508 41.969 468.454 42.033 A 1.212 1.212 0 0 0 468.372 42.144 A 2.439 2.439 0 0 0 468.371 42.147 C 468.353 42.201 468.335 42.262 468.319 42.327 A 1.55 1.55 0 0 0 468.274 42.681 A 1.554 1.554 0 0 0 468.32 43.039 A 2.175 2.175 0 0 0 468.372 43.218 A 0.801 0.801 0 0 0 468.389 43.244 C 468.436 43.309 468.483 43.351 468.53 43.378 A 0.268 0.268 0 0 0 468.665 43.413 C 468.742 43.413 468.819 43.383 468.872 43.298 A 0.372 0.372 0 0 0 468.909 43.218 A 0.761 0.761 0 0 0 468.971 43.104 A 1.058 1.058 0 0 0 469.055 42.681 A 1.14 1.14 0 0 0 469.033 42.455 A 0.877 0.877 0 0 0 468.909 42.144 Z M 48.904 80.199 A 3.406 3.406 0 0 0 48.903 80.2 A 3.29 3.29 0 0 0 48.902 80.2 C 48.831 80.239 48.785 80.268 48.709 80.237 A 0.245 0.245 0 0 1 48.694 80.23 A 0.23 0.23 0 0 1 48.641 80.224 C 48.577 80.209 48.531 80.164 48.455 80.089 A 37.593 37.593 0 0 1 48.45 80.083 A 0.636 0.636 0 0 0 48.373 79.969 C 48.325 79.909 48.265 79.85 48.206 79.79 C 48.059 79.693 47.961 79.644 47.815 79.546 A 4.35 4.35 0 0 1 47.731 79.514 C 47.427 79.392 47.455 79.351 47.815 79.351 A 1.499 1.499 0 0 1 48.092 79.375 A 1.337 1.337 0 0 1 48.45 79.497 A 2.04 2.04 0 0 1 48.615 79.571 C 48.764 79.647 48.865 79.729 48.938 79.839 A 0.253 0.253 0 0 1 48.995 79.926 C 49.023 79.997 49.015 80.077 48.969 80.144 A 0.264 0.264 0 0 1 48.938 80.181 M 13.098 62.994 A 0.237 0.237 0 0 0 13.004 63.006 C 12.991 63.012 12.978 63.019 12.965 63.03 A 0.19 0.19 0 0 0 12.952 63.042 A 0.678 0.678 0 0 0 12.847 63.175 C 12.795 63.263 12.756 63.378 12.756 63.531 A 1.564 1.564 0 0 0 12.724 63.812 C 12.723 63.922 12.736 64.027 12.768 64.124 A 0.69 0.69 0 0 0 12.805 64.214 C 12.852 64.451 12.946 64.55 13.04 64.511 A 0.129 0.129 0 0 0 13.049 64.507 A 0.23 0.23 0 0 0 13.102 64.502 C 13.166 64.487 13.213 64.442 13.288 64.366 A 37.593 37.593 0 0 0 13.293 64.361 A 0.148 0.148 0 0 0 13.329 64.291 C 13.336 64.267 13.339 64.239 13.341 64.209 A 1.738 1.738 0 0 0 13.342 64.117 L 13.342 63.872 A 4.929 4.929 0 0 0 13.34 63.706 C 13.337 63.592 13.326 63.464 13.293 63.335 A 0.787 0.787 0 0 0 13.287 63.228 C 13.271 63.115 13.225 63.047 13.13 63.006 A 0.408 0.408 0 0 0 13.098 62.994 Z M 71.591 39.116 A 0.314 0.314 0 0 0 71.497 39.068 A 0.349 0.349 0 0 0 71.473 39.069 C 71.37 39.076 71.185 39.128 70.959 39.263 A 3.292 3.292 0 0 0 70.758 39.373 A 6.005 6.005 0 0 0 70.471 39.556 A 2.398 2.398 0 0 0 70.411 39.598 C 70.311 39.669 70.276 39.71 70.276 39.751 A 0.043 0.043 0 0 0 70.282 39.773 C 70.306 39.814 70.395 39.849 70.52 39.849 A 0.801 0.801 0 0 0 70.615 39.874 C 70.685 39.888 70.758 39.894 70.838 39.896 A 6.187 6.187 0 0 0 71.008 39.898 C 71.252 39.898 71.399 39.849 71.545 39.751 A 1.293 1.293 0 0 0 71.631 39.66 C 71.682 39.598 71.716 39.531 71.702 39.448 A 0.261 0.261 0 0 0 71.692 39.41 C 71.692 39.265 71.665 39.173 71.591 39.116 Z M 168.025 19.72 A 0.409 0.409 0 0 0 167.981 19.732 C 167.858 19.732 167.735 19.79 167.612 19.881 A 2.034 2.034 0 0 0 167.395 20.074 C 167.159 20.309 167.018 20.45 166.972 20.522 A 0.084 0.084 0 0 0 166.956 20.562 C 166.956 20.641 167.052 20.656 167.219 20.659 A 7.853 7.853 0 0 0 167.346 20.66 C 167.542 20.66 167.688 20.611 167.834 20.562 A 1.7 1.7 0 0 0 167.856 20.547 C 167.991 20.454 168.084 20.362 168.176 20.269 C 168.253 20.116 168.299 19.993 168.292 19.899 A 0.186 0.186 0 0 0 168.274 19.829 C 168.23 19.742 168.147 19.694 168.025 19.72 Z M 286.959 51.15 A 0.043 0.043 0 0 0 286.926 51.128 C 286.844 51.087 286.727 51.15 286.545 51.318 A 3.778 3.778 0 0 0 286.438 51.421 L 286.047 51.812 C 285.95 51.958 285.901 52.056 285.901 52.056 A 0.087 0.087 0 0 0 285.917 52.104 C 285.931 52.127 285.957 52.149 285.992 52.172 A 0.63 0.63 0 0 0 286.047 52.203 L 286.487 52.203 A 0.481 0.481 0 0 0 286.764 52.124 A 0.429 0.429 0 0 0 286.877 52.007 A 0.827 0.827 0 0 0 287.005 51.713 A 0.935 0.935 0 0 0 287.024 51.519 C 287.024 51.33 286.995 51.199 286.959 51.15 Z M 126.917 43.072 C 126.77 43.121 126.672 43.218 126.624 43.413 A 0.646 0.646 0 0 0 126.604 43.571 C 126.604 43.699 126.639 43.831 126.695 43.982 A 3.224 3.224 0 0 0 126.721 44.048 C 126.81 44.315 126.899 44.46 126.951 44.484 A 0.035 0.035 0 0 0 126.965 44.488 C 127.01 44.488 127.097 44.321 127.187 44.064 A 4.396 4.396 0 0 0 127.209 43.999 A 2.281 2.281 0 0 0 127.265 43.881 C 127.326 43.74 127.356 43.616 127.356 43.462 A 0.507 0.507 0 0 0 127.346 43.356 C 127.337 43.315 127.323 43.28 127.303 43.25 A 0.239 0.239 0 0 0 127.209 43.169 C 127.15 43.109 127.09 43.086 127.03 43.077 A 0.761 0.761 0 0 0 126.917 43.072 Z M 230.92 43.072 C 230.774 43.121 230.676 43.218 230.627 43.413 A 0.646 0.646 0 0 0 230.608 43.571 C 230.608 43.699 230.643 43.831 230.699 43.982 A 3.224 3.224 0 0 0 230.725 44.048 C 230.814 44.315 230.903 44.46 230.955 44.484 A 0.035 0.035 0 0 0 230.969 44.488 C 231.014 44.488 231.101 44.321 231.191 44.064 A 4.396 4.396 0 0 0 231.213 43.999 A 2.281 2.281 0 0 0 231.269 43.881 C 231.329 43.74 231.36 43.616 231.36 43.462 A 0.507 0.507 0 0 0 231.35 43.356 C 231.341 43.315 231.326 43.28 231.306 43.25 A 0.239 0.239 0 0 0 231.213 43.169 C 231.153 43.109 231.094 43.086 231.034 43.077 A 0.761 0.761 0 0 0 230.92 43.072 Z M 57.942 64.509 A 1.303 1.303 0 0 0 57.922 64.556 A 1.599 1.599 0 0 0 57.767 64.803 C 57.711 64.916 57.678 65.029 57.678 65.142 A 1.112 1.112 0 0 0 57.666 65.219 C 57.641 65.41 57.68 65.533 57.722 65.62 A 0.782 0.782 0 0 0 57.727 65.63 A 0.154 0.154 0 0 0 57.756 65.672 C 57.806 65.72 57.882 65.713 57.987 65.651 A 0.755 0.755 0 0 0 58.02 65.63 C 58.109 65.586 58.197 65.502 58.249 65.341 A 0.794 0.794 0 0 0 58.264 65.288 A 0.899 0.899 0 0 0 58.302 65.097 C 58.312 65.003 58.313 64.9 58.313 64.796 A 30.696 30.696 0 0 0 58.313 64.751 C 58.264 64.703 58.264 64.703 58.264 64.654 A 1.085 1.085 0 0 0 58.256 64.517 C 58.241 64.4 58.208 64.313 58.174 64.272 A 0.121 0.121 0 0 0 58.167 64.263 C 58.121 64.263 58.033 64.306 57.942 64.509 Z M 131.192 38.414 A 4.478 4.478 0 0 0 131.165 38.482 A 2.508 2.508 0 0 0 131.139 38.679 C 131.121 38.889 131.138 39.076 131.213 39.263 C 131.311 39.556 131.506 39.41 131.702 38.921 A 2.535 2.535 0 0 0 131.799 38.354 A 1.191 1.191 0 0 0 131.799 38.335 A 0.507 0.507 0 0 0 131.789 38.229 C 131.78 38.188 131.766 38.153 131.746 38.123 A 0.239 0.239 0 0 0 131.653 38.042 A 0.171 0.171 0 0 0 131.62 38.016 C 131.601 38.005 131.582 37.999 131.563 37.996 A 0.381 0.381 0 0 0 131.506 37.994 C 131.374 38.038 131.281 38.202 131.192 38.414 Z M 235.196 38.414 A 4.478 4.478 0 0 0 235.168 38.482 A 2.508 2.508 0 0 0 235.143 38.679 C 235.125 38.889 235.142 39.076 235.217 39.263 C 235.315 39.556 235.51 39.41 235.706 38.921 A 2.535 2.535 0 0 0 235.803 38.354 A 1.191 1.191 0 0 0 235.803 38.335 A 0.507 0.507 0 0 0 235.793 38.229 C 235.784 38.188 235.77 38.153 235.75 38.123 A 0.239 0.239 0 0 0 235.657 38.042 A 0.171 0.171 0 0 0 235.624 38.016 C 235.605 38.005 235.586 37.999 235.567 37.996 A 0.381 0.381 0 0 0 235.51 37.994 C 235.378 38.038 235.285 38.202 235.196 38.414 Z M 314.172 34.783 A 0.349 0.349 0 0 0 314.165 34.763 C 314.162 34.755 314.158 34.747 314.154 34.741 A 0.035 0.035 0 0 0 314.124 34.722 C 314.08 34.679 314.037 34.828 314.028 35.237 A 7.514 7.514 0 0 0 314.026 35.406 A 5.518 5.518 0 0 1 314.04 35.513 C 314.068 35.739 314.077 35.916 314.101 36.045 A 0.697 0.697 0 0 0 314.124 36.138 A 14.577 14.577 0 0 0 314.127 36.146 C 314.17 36.23 314.173 36.233 314.213 36.155 A 5.51 5.51 0 0 0 314.221 36.138 A 2.012 2.012 0 0 0 314.268 35.976 C 314.297 35.857 314.319 35.715 314.319 35.552 A 1.843 1.843 0 0 0 314.304 35.316 A 3.383 3.383 0 0 0 314.221 34.917 C 314.208 34.891 314.198 34.864 314.19 34.84 A 3.507 3.507 0 0 1 314.177 34.798 M 129.7 52.984 C 129.651 52.984 129.602 53.033 129.456 53.13 C 129.358 53.228 129.26 53.374 129.163 53.57 C 129.023 53.756 128.972 53.898 128.968 53.996 A 0.306 0.306 0 0 0 128.967 54.009 C 128.922 54.145 128.961 54.197 129.044 54.165 A 0.23 0.23 0 0 0 129.065 54.156 A 0.171 0.171 0 0 0 129.141 54.133 C 129.231 54.087 129.343 53.975 129.456 53.863 A 2.258 2.258 0 0 0 129.605 53.637 C 129.671 53.522 129.719 53.415 129.749 53.326 A 1.927 1.927 0 0 0 129.762 53.268 C 129.781 53.183 129.786 53.12 129.774 53.072 A 0.132 0.132 0 0 0 129.7 52.984 Z M 233.704 52.984 C 233.655 52.984 233.606 53.033 233.459 53.13 C 233.362 53.228 233.264 53.374 233.167 53.57 C 233.027 53.756 232.976 53.898 232.971 53.996 A 0.306 0.306 0 0 0 232.971 54.009 C 232.926 54.145 232.964 54.197 233.048 54.165 A 0.23 0.23 0 0 0 233.069 54.156 A 0.171 0.171 0 0 0 233.145 54.133 C 233.235 54.087 233.347 53.975 233.459 53.863 A 2.258 2.258 0 0 0 233.609 53.637 C 233.675 53.522 233.723 53.415 233.752 53.326 A 1.927 1.927 0 0 0 233.766 53.268 C 233.784 53.183 233.79 53.12 233.778 53.072 A 0.132 0.132 0 0 0 233.704 52.984 Z M 307.336 24.956 A 2.377 2.377 0 0 0 306.75 25.005 C 306.402 25.136 306.52 25.189 307 25.199 A 9.275 9.275 0 0 0 307.19 25.201 A 24.208 24.208 0 0 0 307.42 25.2 C 307.616 25.198 307.763 25.191 307.845 25.163 A 0.217 0.217 0 0 0 307.874 25.152 A 0.602 0.602 0 0 0 307.911 25.138 C 308.01 25.098 308.011 25.057 307.944 25.017 A 0.328 0.328 0 0 0 307.922 25.005 A 1.55 1.55 0 0 0 307.784 24.966 C 307.682 24.942 307.563 24.927 307.428 24.942 A 1.049 1.049 0 0 0 307.336 24.956 Z M 10.608 33.599 C 10.706 33.599 10.754 33.648 10.803 33.794 A 0.866 0.866 0 0 1 10.847 33.899 C 10.873 33.975 10.894 34.068 10.9 34.178 A 1.145 1.145 0 0 1 10.901 34.234 A 1.454 1.454 0 0 0 10.863 34.38 C 10.847 34.451 10.831 34.522 10.799 34.593 A 0.573 0.573 0 0 1 10.754 34.673 A 0.28 0.28 0 0 1 10.713 34.734 C 10.662 34.791 10.596 34.82 10.559 34.82 A 0.271 0.271 0 0 1 10.333 34.705 A 0.266 0.266 0 0 1 10.315 34.673 A 1.208 1.208 0 0 1 10.266 34.289 A 10.565 10.565 0 0 1 10.266 34.234 A 1.096 1.096 0 0 1 10.278 34.073 C 10.295 33.956 10.329 33.863 10.364 33.794 A 2.249 2.249 0 0 1 10.396 33.747 C 10.468 33.645 10.515 33.605 10.59 33.6 A 0.26 0.26 0 0 1 10.608 33.599 Z M 120.032 56.206 C 120.129 56.158 120.178 56.206 120.178 56.304 C 120.178 56.348 120.139 56.469 120.061 56.599 A 1.166 1.166 0 0 1 120.032 56.646 A 1.872 1.872 0 0 1 119.861 56.86 C 119.8 56.927 119.739 56.988 119.69 57.037 A 1.651 1.651 0 0 1 119.557 57.16 C 119.504 57.203 119.45 57.232 119.397 57.232 C 119.349 57.232 119.301 57.232 119.299 57.139 A 0.28 0.28 0 0 1 119.299 57.134 A 0.662 0.662 0 0 0 119.337 57.035 C 119.358 56.969 119.379 56.897 119.437 56.806 A 0.839 0.839 0 0 1 119.446 56.792 A 0.784 0.784 0 0 1 119.599 56.524 A 0.711 0.711 0 0 1 119.739 56.402 A 0.678 0.678 0 0 1 119.801 56.322 C 119.878 56.237 119.955 56.206 120.032 56.206 Z M 224.036 56.206 C 224.133 56.158 224.182 56.206 224.182 56.304 C 224.182 56.348 224.143 56.469 224.065 56.599 A 1.166 1.166 0 0 1 224.036 56.646 A 1.872 1.872 0 0 1 223.865 56.86 C 223.804 56.927 223.743 56.988 223.694 57.037 A 1.651 1.651 0 0 1 223.561 57.16 C 223.508 57.203 223.454 57.232 223.401 57.232 C 223.353 57.232 223.305 57.232 223.303 57.139 A 0.28 0.28 0 0 1 223.303 57.134 A 0.662 0.662 0 0 0 223.341 57.035 C 223.362 56.969 223.383 56.897 223.441 56.806 A 0.839 0.839 0 0 1 223.45 56.792 A 0.784 0.784 0 0 1 223.603 56.524 A 0.711 0.711 0 0 1 223.743 56.402 A 0.678 0.678 0 0 1 223.804 56.322 C 223.882 56.237 223.959 56.206 224.036 56.206 Z M 347.815 41.9 C 347.815 41.9 347.913 41.949 347.961 42.095 A 1.241 1.241 0 0 0 347.982 42.134 C 348.004 42.175 348.032 42.222 348.059 42.272 A 1.351 1.351 0 0 1 348.157 42.486 A 2.152 2.152 0 0 1 348.209 42.657 C 348.225 42.726 348.232 42.791 348.218 42.844 A 0.176 0.176 0 0 1 348.206 42.876 C 348.206 42.944 348.185 42.99 348.153 43.021 A 0.202 0.202 0 0 1 348.01 43.072 A 0.204 0.204 0 0 1 347.895 43.03 A 0.427 0.427 0 0 1 347.766 42.876 A 0.357 0.357 0 0 1 347.674 42.648 A 1.68 1.68 0 0 1 347.668 42.486 L 347.668 42.095 A 0.904 0.904 0 0 1 347.691 42.033 C 347.733 41.935 347.774 41.9 347.815 41.9 Z M 476.819 41.9 C 476.819 41.9 476.917 41.949 476.965 42.095 A 1.241 1.241 0 0 0 476.986 42.134 C 477.008 42.175 477.036 42.222 477.063 42.272 A 1.351 1.351 0 0 1 477.161 42.486 A 2.152 2.152 0 0 1 477.213 42.657 C 477.229 42.726 477.236 42.791 477.222 42.844 A 0.176 0.176 0 0 1 477.209 42.876 C 477.209 42.944 477.189 42.99 477.157 43.021 A 0.202 0.202 0 0 1 477.014 43.072 A 0.204 0.204 0 0 1 476.898 43.03 A 0.427 0.427 0 0 1 476.77 42.876 A 0.357 0.357 0 0 1 476.678 42.648 A 1.68 1.68 0 0 1 476.672 42.486 L 476.672 42.095 A 0.904 0.904 0 0 1 476.695 42.033 C 476.736 41.935 476.778 41.9 476.819 41.9 Z M 13.293 65.338 A 0.136 0.136 0 0 0 13.291 65.34 C 13.28 65.351 13.245 65.393 13.245 65.435 C 13.201 65.611 13.157 65.748 13.148 65.916 A 1.151 1.151 0 0 0 13.147 65.972 A 18.575 18.575 0 0 0 13.147 66.087 C 13.148 66.248 13.154 66.369 13.185 66.51 A 1.622 1.622 0 0 0 13.196 66.558 C 13.24 66.78 13.285 66.638 13.329 66.131 A 14.904 14.904 0 0 0 13.342 65.972 A 3.639 3.639 0 0 0 13.353 65.856 C 13.382 65.497 13.339 65.3 13.296 65.335 A 0.03 0.03 0 0 0 13.293 65.337 Z M 63.473 50.272 A 0.171 0.171 0 0 0 63.44 50.298 A 0.178 0.178 0 0 0 63.41 50.301 C 63.368 50.308 63.318 50.33 63.269 50.359 A 0.922 0.922 0 0 0 63.098 50.494 A 0.823 0.823 0 0 0 63.091 50.5 C 63.058 50.535 63.03 50.569 63.006 50.603 A 1.422 1.422 0 0 0 62.903 50.787 C 62.903 50.982 62.903 51.079 63 51.128 C 63.098 51.177 63.245 51.177 63.391 51.079 A 0.657 0.657 0 0 0 63.597 50.859 A 0.841 0.841 0 0 0 63.684 50.64 A 1.11 1.11 0 0 0 63.701 50.595 C 63.759 50.429 63.74 50.338 63.662 50.285 A 0.304 0.304 0 0 0 63.586 50.249 A 0.381 0.381 0 0 0 63.53 50.252 C 63.511 50.255 63.492 50.261 63.473 50.272 Z M 108.586 30.258 A 3.049 3.049 0 0 0 108.557 30.328 C 108.265 30.913 108.069 31.108 107.972 30.914 A 0.518 0.518 0 0 1 107.972 30.872 C 107.977 30.819 107.994 30.744 108.069 30.669 A 1.303 1.303 0 0 0 108.179 30.541 C 108.232 30.472 108.286 30.393 108.339 30.313 A 44.038 44.038 0 0 0 108.362 30.279 A 2.563 2.563 0 0 1 108.458 30.166 C 108.595 30.013 108.692 29.945 108.703 29.938 A 0.107 0.107 0 0 1 108.704 29.937 C 108.748 29.937 108.673 30.056 108.586 30.258 Z M 212.59 30.258 A 3.049 3.049 0 0 0 212.561 30.328 C 212.268 30.913 212.073 31.108 211.976 30.914 A 0.518 0.518 0 0 1 211.976 30.872 C 211.98 30.819 211.998 30.744 212.073 30.669 A 1.303 1.303 0 0 0 212.183 30.541 C 212.236 30.472 212.289 30.393 212.343 30.313 A 44.038 44.038 0 0 0 212.366 30.279 A 2.563 2.563 0 0 1 212.462 30.166 C 212.598 30.013 212.696 29.945 212.706 29.938 A 0.107 0.107 0 0 1 212.708 29.937 C 212.752 29.937 212.677 30.056 212.59 30.258 Z M 315.738 35.36 A 0.136 0.136 0 0 0 315.735 35.357 A 0.068 0.068 0 0 0 315.712 35.361 C 315.644 35.385 315.604 35.523 315.592 35.774 A 3.669 3.669 0 0 0 315.588 35.943 A 9.859 9.859 0 0 0 315.604 36.115 C 315.649 36.556 315.702 36.654 315.833 36.48 A 1.591 1.591 0 0 0 315.852 36.389 C 315.873 36.282 315.879 36.186 315.881 36.082 A 8.151 8.151 0 0 0 315.881 35.943 C 315.881 35.747 315.833 35.601 315.784 35.454 C 315.784 35.413 315.748 35.371 315.738 35.36 Z M 301.632 25.064 A 0.507 0.507 0 0 0 301.526 25.054 A 0.284 0.284 0 0 0 301.388 25.09 A 0.259 0.259 0 0 0 301.282 25.201 A 0.38 0.38 0 0 0 301.257 25.227 C 301.184 25.316 301.184 25.405 301.184 25.494 A 0.373 0.373 0 0 0 301.201 25.599 A 1.184 1.184 0 0 0 301.282 25.787 A 1.875 1.875 0 0 0 301.405 25.845 A 0.45 0.45 0 0 0 301.575 25.884 A 0.307 0.307 0 0 0 301.672 25.868 C 301.707 25.856 301.743 25.838 301.778 25.813 A 0.66 0.66 0 0 0 301.868 25.738 C 301.904 25.701 301.941 25.637 301.957 25.545 A 0.584 0.584 0 0 0 301.965 25.445 A 0.284 0.284 0 0 0 301.93 25.306 A 0.259 0.259 0 0 0 301.819 25.201 A 0.239 0.239 0 0 0 301.738 25.107 C 301.708 25.087 301.673 25.073 301.632 25.064 Z M 377.896 17.293 A 0.136 0.136 0 0 0 377.894 17.291 C 377.812 17.331 377.765 17.472 377.751 17.741 A 3.593 3.593 0 0 0 377.747 17.925 A 3.089 3.089 0 0 0 377.749 18.063 C 377.766 18.44 377.854 18.54 377.942 18.365 C 377.978 18.221 378.014 18.104 378.03 17.975 A 1.153 1.153 0 0 0 378.04 17.828 C 378.04 17.681 377.991 17.535 377.942 17.388 C 377.942 17.346 377.906 17.305 377.896 17.293 Z M 378.642 13.336 A 0.423 0.423 0 0 0 378.625 13.335 A 0.033 0.033 0 0 0 378.601 13.352 C 378.561 13.408 378.528 13.597 378.528 13.921 A 6.683 6.683 0 0 0 378.529 14.074 C 378.538 14.451 378.583 14.562 378.693 14.408 A 0.749 0.749 0 0 0 378.723 14.361 A 14.147 14.147 0 0 0 378.735 14.325 C 378.78 14.19 378.821 14.052 378.821 13.872 A 0.747 0.747 0 0 0 378.82 13.832 C 378.814 13.721 378.784 13.591 378.75 13.497 A 0.624 0.624 0 0 0 378.723 13.433 A 12.84 12.84 0 0 0 378.715 13.418 C 378.68 13.346 378.673 13.337 378.642 13.336 Z M 134.387 30.621 A 0.133 0.133 0 0 0 134.333 30.632 C 134.271 30.659 134.241 30.728 134.241 30.767 A 0.347 0.347 0 0 0 134.21 30.863 C 134.199 30.932 134.203 31.007 134.225 31.07 A 0.305 0.305 0 0 0 134.241 31.109 A 0.958 0.958 0 0 1 134.31 31.187 C 134.358 31.246 134.397 31.306 134.45 31.365 A 0.869 0.869 0 0 0 134.485 31.402 A 1.507 1.507 0 0 0 134.58 31.447 C 134.63 31.468 134.676 31.479 134.709 31.464 A 0.065 0.065 0 0 0 134.729 31.451 C 134.806 31.451 134.853 31.42 134.869 31.358 A 0.216 0.216 0 0 0 134.875 31.304 C 134.914 31.228 134.892 31.152 134.858 31.053 A 7.796 7.796 0 0 1 134.827 30.962 A 0.775 0.775 0 0 0 134.717 30.784 A 0.291 0.291 0 0 0 134.631 30.718 A 0.363 0.363 0 0 0 134.573 30.67 C 134.504 30.625 134.44 30.621 134.399 30.621 A 1.145 1.145 0 0 0 134.387 30.621 Z M 238.391 30.621 A 0.133 0.133 0 0 0 238.336 30.632 C 238.275 30.659 238.245 30.728 238.245 30.767 A 0.347 0.347 0 0 0 238.214 30.863 C 238.203 30.932 238.207 31.007 238.229 31.07 A 0.305 0.305 0 0 0 238.245 31.109 A 0.958 0.958 0 0 1 238.314 31.187 C 238.362 31.246 238.401 31.306 238.454 31.365 A 0.869 0.869 0 0 0 238.489 31.402 A 1.507 1.507 0 0 0 238.584 31.447 C 238.634 31.468 238.68 31.479 238.713 31.464 A 0.065 0.065 0 0 0 238.733 31.451 C 238.81 31.451 238.857 31.42 238.873 31.358 A 0.216 0.216 0 0 0 238.879 31.304 C 238.917 31.228 238.896 31.152 238.862 31.053 A 7.796 7.796 0 0 1 238.831 30.962 A 0.775 0.775 0 0 0 238.721 30.784 A 0.291 0.291 0 0 0 238.635 30.718 A 0.363 0.363 0 0 0 238.577 30.67 C 238.508 30.625 238.444 30.621 238.403 30.621 A 1.145 1.145 0 0 0 238.391 30.621 Z M 33.85 67.193 A 0.38 0.38 0 0 0 33.823 67.168 C 33.735 67.095 33.646 67.095 33.557 67.095 C 33.448 67.132 33.366 67.168 33.311 67.245 A 0.352 0.352 0 0 0 33.264 67.339 A 0.275 0.275 0 0 0 33.248 67.38 C 33.223 67.458 33.23 67.557 33.303 67.66 A 0.534 0.534 0 0 0 33.362 67.73 C 33.411 67.779 33.459 67.779 33.557 67.779 A 0.34 0.34 0 0 0 33.618 67.773 C 33.696 67.759 33.781 67.721 33.896 67.682 A 2.373 2.373 0 0 1 33.899 67.681 A 0.71 0.71 0 0 0 33.907 67.676 C 34.143 67.53 34.14 67.338 33.85 67.193 Z M 50.319 81.413 C 50.363 81.441 50.41 81.399 50.496 81.355 A 0.8 0.8 0 0 1 50.497 81.355 C 50.41 81.399 50.363 81.441 50.319 81.413 A 0.082 0.082 0 0 1 50.305 81.402 A 0.081 0.081 0 0 1 50.248 81.377 C 50.229 81.358 50.215 81.329 50.21 81.288 A 0.26 0.26 0 0 1 50.208 81.255 A 0.45 0.45 0 0 1 50.247 81.086 A 1.875 1.875 0 0 1 50.305 80.962 L 50.549 80.718 A 0.237 0.237 0 0 0 50.643 80.705 C 50.656 80.7 50.669 80.692 50.682 80.682 A 0.19 0.19 0 0 0 50.696 80.669 C 50.777 80.669 50.825 80.703 50.838 80.8 A 0.471 0.471 0 0 1 50.842 80.865 A 0.45 0.45 0 0 1 50.803 81.034 A 1.875 1.875 0 0 1 50.745 81.158 C 50.696 81.206 50.598 81.304 50.5 81.353 A 0.854 0.854 0 0 0 50.499 81.354 A 0.835 0.835 0 0 0 50.498 81.354 M 287.952 47.808 A 0.401 0.401 0 0 0 287.892 47.756 C 287.853 47.73 287.799 47.71 287.708 47.71 A 0.284 0.284 0 0 0 287.569 47.746 A 0.259 0.259 0 0 0 287.463 47.857 A 0.239 0.239 0 0 0 287.37 47.938 C 287.35 47.968 287.336 48.003 287.327 48.044 A 0.507 0.507 0 0 0 287.317 48.15 A 0.37 0.37 0 0 0 287.323 48.213 C 287.333 48.274 287.355 48.33 287.363 48.369 A 0.131 0.131 0 0 1 287.366 48.394 A 0.63 0.63 0 0 0 287.397 48.449 C 287.418 48.483 287.44 48.508 287.462 48.523 A 0.088 0.088 0 0 0 287.512 48.54 A 0.091 0.091 0 0 0 287.555 48.528 C 287.587 48.512 287.622 48.478 287.673 48.428 A 11.182 11.182 0 0 0 287.708 48.394 A 1.9 1.9 0 0 0 287.734 48.367 C 287.772 48.328 287.823 48.27 287.863 48.193 A 0.605 0.605 0 0 0 287.903 48.101 A 0.371 0.371 0 0 0 287.927 48.074 C 288 47.986 287.996 47.897 287.952 47.808 Z M 300.061 20.269 C 300.11 20.269 300.159 20.269 300.208 20.367 A 0.593 0.593 0 0 0 300.231 20.509 C 300.243 20.557 300.256 20.606 300.256 20.655 A 0.298 0.298 0 0 1 300.256 20.66 A 0.325 0.325 0 0 1 300.22 20.806 C 300.204 20.838 300.182 20.87 300.156 20.902 A 0.729 0.729 0 0 1 300.11 20.953 A 0.162 0.162 0 0 1 300.065 21.009 C 300.013 21.05 299.939 21.05 299.866 21.05 C 299.748 21.089 299.693 21.066 299.651 21.004 A 0.434 0.434 0 0 1 299.622 20.953 C 299.579 20.91 299.574 20.83 299.638 20.712 A 0.733 0.733 0 0 1 299.67 20.66 C 299.713 20.574 299.793 20.489 299.845 20.403 A 0.502 0.502 0 0 0 299.866 20.367 A 0.852 0.852 0 0 0 299.867 20.366 C 299.942 20.328 299.988 20.291 300.027 20.276 A 0.094 0.094 0 0 1 300.061 20.269 Z M 429.652 59.251 A 0.088 0.088 0 0 0 429.602 59.234 C 429.573 59.234 429.527 59.251 429.474 59.275 A 3.643 3.643 0 0 0 429.358 59.331 C 429.26 59.429 429.211 59.527 429.26 59.624 C 429.3 59.704 429.34 59.751 429.432 59.792 A 0.8 0.8 0 0 0 429.504 59.82 A 0.399 0.399 0 0 0 429.52 59.835 C 429.613 59.918 429.705 59.92 429.797 59.966 L 429.944 59.966 A 0.092 0.092 0 0 0 429.945 59.965 C 429.953 59.957 429.988 59.917 429.944 59.917 A 0.089 0.089 0 0 0 429.937 59.884 C 429.93 59.868 429.92 59.853 429.908 59.837 A 0.825 0.825 0 0 0 429.846 59.771 A 0.19 0.19 0 0 1 429.834 59.758 C 429.823 59.744 429.816 59.731 429.81 59.718 A 0.237 0.237 0 0 1 429.797 59.624 A 0.37 0.37 0 0 0 429.791 59.561 C 429.781 59.501 429.759 59.444 429.751 59.405 A 0.131 0.131 0 0 1 429.749 59.38 A 0.63 0.63 0 0 0 429.718 59.325 C 429.696 59.291 429.674 59.266 429.652 59.251 Z M 61.78 55.132 A 0.383 0.383 0 0 0 61.776 55.124 C 61.728 55.035 61.679 55.035 61.584 55.035 A 1.794 1.794 0 0 0 61.52 55.035 C 61.465 55.037 61.403 55.044 61.346 55.066 A 0.294 0.294 0 0 0 61.243 55.132 A 2.14 2.14 0 0 0 61.17 55.17 A 0.382 0.382 0 0 0 60.999 55.328 C 60.964 55.396 60.954 55.465 60.968 55.517 A 0.122 0.122 0 0 0 60.999 55.572 C 61.036 55.609 61.074 55.647 61.134 55.662 A 0.242 0.242 0 0 0 61.194 55.669 A 0.373 0.373 0 0 0 61.299 55.653 A 1.184 1.184 0 0 0 61.487 55.572 A 0.553 0.553 0 0 0 61.623 55.472 A 0.56 0.56 0 0 0 61.731 55.328 C 61.78 55.23 61.78 55.181 61.78 55.132 Z M 10.657 31.451 C 10.706 31.451 10.754 31.548 10.852 31.695 C 10.901 31.841 10.95 31.988 10.95 32.085 A 0.8 0.8 0 0 1 10.922 32.158 C 10.881 32.25 10.834 32.29 10.754 32.329 C 10.709 32.375 10.621 32.378 10.53 32.299 A 0.387 0.387 0 0 1 10.51 32.281 A 0.29 0.29 0 0 1 10.47 32.229 C 10.451 32.198 10.434 32.161 10.424 32.122 A 0.336 0.336 0 0 1 10.413 32.037 C 10.413 31.89 10.413 31.792 10.461 31.695 A 0.576 0.576 0 0 1 10.496 31.612 C 10.548 31.513 10.618 31.451 10.657 31.451 Z M 24.323 40.461 A 0.739 0.739 0 0 0 24.084 40.435 C 24.027 40.435 23.976 40.443 23.931 40.455 A 0.979 0.979 0 0 0 23.743 40.533 A 0.274 0.274 0 0 0 23.731 40.539 C 23.656 40.581 23.612 40.653 23.6 40.703 A 0.11 0.11 0 0 0 23.596 40.728 A 0.269 0.269 0 0 0 23.597 40.753 C 23.605 40.834 23.649 40.879 23.694 40.923 A 1.373 1.373 0 0 0 23.839 40.918 C 23.871 40.915 23.904 40.91 23.94 40.901 A 1.002 1.002 0 0 0 24.036 40.874 A 1.593 1.593 0 0 0 24.125 40.842 A 0.704 0.704 0 0 0 24.377 40.679 A 0.812 0.812 0 0 0 24.387 40.674 C 24.467 40.633 24.511 40.593 24.522 40.584 A 0.111 0.111 0 0 0 24.524 40.581 C 24.524 40.533 24.475 40.484 24.377 40.484 A 0.41 0.41 0 0 0 24.323 40.461 Z M 302.176 16.693 A 0.075 0.075 0 0 0 302.161 16.704 A 0.143 0.143 0 0 1 302.159 16.723 C 302.153 16.771 302.127 16.867 302.116 16.993 A 1.232 1.232 0 0 0 302.112 17.095 A 13.702 13.702 0 0 0 302.112 17.238 C 302.113 17.334 302.117 17.41 302.127 17.473 A 0.39 0.39 0 0 0 302.161 17.583 C 302.204 17.67 302.247 17.68 302.324 17.647 A 0.565 0.565 0 0 0 302.356 17.632 A 0.131 0.131 0 0 0 302.367 17.62 C 302.391 17.589 302.413 17.537 302.43 17.475 A 0.742 0.742 0 0 0 302.454 17.29 C 302.454 17.144 302.405 16.997 302.356 16.851 A 3.205 3.205 0 0 0 302.351 16.843 C 302.266 16.717 302.219 16.667 302.176 16.693 Z M 78.102 23.754 A 3.406 3.406 0 0 1 78.103 23.754 A 3.29 3.29 0 0 0 78.101 23.755 A 1.969 1.969 0 0 1 78.056 23.779 C 78.008 23.804 77.967 23.816 77.908 23.792 A 0.245 0.245 0 0 1 77.893 23.785 A 0.052 0.052 0 0 1 77.863 23.773 C 77.826 23.746 77.795 23.677 77.795 23.638 A 0.739 0.739 0 0 1 77.822 23.4 A 0.41 0.41 0 0 1 77.844 23.345 A 0.56 0.56 0 0 1 77.952 23.201 A 0.553 0.553 0 0 1 78.088 23.101 A 0.171 0.171 0 0 1 78.122 23.075 C 78.14 23.063 78.159 23.058 78.178 23.055 A 0.381 0.381 0 0 1 78.235 23.052 C 78.287 23.026 78.339 23.042 78.384 23.077 A 0.367 0.367 0 0 1 78.479 23.199 A 0.45 0.45 0 0 1 78.439 23.368 A 1.875 1.875 0 0 1 78.381 23.492 A 0.56 0.56 0 0 1 78.274 23.636 A 0.553 0.553 0 0 1 78.137 23.736 M 182.092 17.583 A 0.148 0.148 0 0 0 182.07 17.611 C 182.047 17.648 182.051 17.691 182.082 17.758 A 0.69 0.69 0 0 0 182.092 17.779 L 182.336 18.023 A 1.184 1.184 0 0 0 182.524 18.104 A 0.373 0.373 0 0 0 182.629 18.121 A 2.238 2.238 0 0 0 182.725 18.099 C 182.899 18.057 182.964 18.009 182.922 17.925 C 182.876 17.879 182.743 17.789 182.48 17.656 A 7.013 7.013 0 0 0 182.434 17.632 C 182.291 17.585 182.149 17.583 182.096 17.583 A 4.983 4.983 0 0 0 182.092 17.583 Z M 336.584 49.908 C 336.487 49.908 336.389 49.956 336.389 50.005 A 0.507 0.507 0 0 0 336.373 50.04 C 336.342 50.117 336.353 50.17 336.438 50.298 C 336.487 50.395 336.584 50.493 336.633 50.542 A 1.822 1.822 0 0 1 336.633 50.542 C 336.708 50.617 336.754 50.635 336.793 50.639 A 0.327 0.327 0 0 0 336.829 50.64 C 336.877 50.64 336.925 50.64 336.926 50.548 A 0.28 0.28 0 0 0 336.926 50.542 A 0.148 0.148 0 0 0 336.962 50.473 C 336.969 50.448 336.972 50.42 336.973 50.39 A 1.738 1.738 0 0 0 336.975 50.298 C 336.975 50.164 336.975 50.112 336.9 50.029 A 0.661 0.661 0 0 0 336.877 50.005 A 1.184 1.184 0 0 0 336.69 49.924 A 0.373 0.373 0 0 0 336.584 49.908 Z M 465.588 49.908 C 465.491 49.908 465.393 49.956 465.393 50.005 A 0.507 0.507 0 0 0 465.377 50.04 C 465.346 50.117 465.356 50.17 465.442 50.298 C 465.49 50.395 465.587 50.493 465.636 50.542 A 1.822 1.822 0 0 1 465.637 50.542 C 465.712 50.617 465.758 50.635 465.797 50.639 A 0.327 0.327 0 0 0 465.833 50.64 C 465.88 50.64 465.928 50.64 465.93 50.548 A 0.28 0.28 0 0 0 465.93 50.542 A 0.148 0.148 0 0 0 465.966 50.473 C 465.973 50.448 465.976 50.42 465.977 50.39 A 1.738 1.738 0 0 0 465.979 50.298 C 465.979 50.164 465.979 50.112 465.904 50.029 A 0.661 0.661 0 0 0 465.881 50.005 A 1.184 1.184 0 0 0 465.694 49.924 A 0.373 0.373 0 0 0 465.588 49.908 Z M 377.217 21.413 A 9.208 9.208 0 0 1 377.216 21.411 A 8.977 8.977 0 0 0 377.217 21.414 A 6.163 6.163 0 0 1 377.248 21.505 C 377.278 21.596 377.294 21.677 377.258 21.783 C 377.258 21.914 377.258 22.006 377.187 22.095 A 0.369 0.369 0 0 1 377.161 22.124 C 377.12 22.207 377.079 22.185 377.037 22.147 A 0.835 0.835 0 0 1 377.014 22.124 C 376.965 22.027 376.965 21.88 376.965 21.685 A 1.578 1.578 0 0 1 376.971 21.548 C 376.982 21.421 377.008 21.331 377.038 21.28 A 0.163 0.163 0 0 1 377.063 21.246 A 0.078 0.078 0 0 1 377.077 21.234 C 377.115 21.211 377.153 21.246 377.191 21.34 A 0.911 0.911 0 0 1 377.209 21.392 C 377.21 21.394 377.211 21.395 377.211 21.397 A 2.411 2.411 0 0 0 377.212 21.399 A 5.801 5.801 0 0 0 377.212 21.4 A 2.307 2.307 0 0 0 377.213 21.402 A 2.257 2.257 0 0 0 377.213 21.404 A 2.76 2.76 0 0 0 377.214 21.405 A 2.16 2.16 0 0 0 377.214 21.407 A 9.963 9.963 0 0 0 377.215 21.408 Z M 58.655 62.31 A 0.129 0.129 0 0 0 58.613 62.318 C 58.558 62.338 58.474 62.393 58.362 62.505 A 1.735 1.735 0 0 1 58.36 62.509 C 58.295 62.605 58.23 62.681 58.18 62.749 A 0.69 0.69 0 0 0 58.118 62.847 C 58.118 62.922 58.118 62.997 58.14 63.05 A 0.126 0.126 0 0 0 58.167 63.091 A 0.52 0.52 0 0 0 58.202 63.108 C 58.272 63.136 58.318 63.129 58.391 63.061 A 0.689 0.689 0 0 0 58.411 63.042 A 0.208 0.208 0 0 0 58.442 62.998 C 58.48 62.931 58.519 62.816 58.557 62.701 A 2.386 2.386 0 0 0 58.594 62.601 C 58.655 62.429 58.655 62.352 58.655 62.31 Z M 76.819 38.531 A 0.072 0.072 0 0 0 76.779 38.542 C 76.756 38.558 76.751 38.588 76.803 38.62 A 0.231 0.231 0 0 0 76.819 38.628 C 76.857 38.705 76.925 38.721 77.022 38.725 A 2.445 2.445 0 0 0 77.112 38.726 C 77.255 38.726 77.351 38.726 77.491 38.681 A 1.131 1.131 0 0 0 77.502 38.677 C 77.795 38.531 77.698 38.482 77.258 38.482 A 6.847 6.847 0 0 0 77.105 38.483 C 76.984 38.486 76.889 38.496 76.819 38.531 Z M 188.116 21.465 A 0.279 0.279 0 0 0 188.143 21.392 A 0.256 0.256 0 0 0 188.147 21.343 A 0.37 0.37 0 0 0 188.141 21.28 C 188.13 21.219 188.109 21.163 188.101 21.124 A 0.131 0.131 0 0 1 188.098 21.099 L 188 21.001 A 0.094 0.094 0 0 0 187.966 21.008 C 187.927 21.024 187.881 21.061 187.807 21.098 A 0.852 0.852 0 0 1 187.805 21.099 A 0.442 0.442 0 0 0 187.764 21.15 C 187.74 21.182 187.714 21.22 187.682 21.262 A 0.923 0.923 0 0 1 187.61 21.343 A 0.69 0.69 0 0 0 187.597 21.371 C 187.567 21.437 187.562 21.482 187.561 21.545 A 3.091 3.091 0 0 0 187.561 21.587 C 187.599 21.625 187.637 21.663 187.697 21.678 A 0.242 0.242 0 0 0 187.756 21.685 C 187.903 21.685 187.952 21.636 188.049 21.587 A 0.987 0.987 0 0 1 188.072 21.545 C 188.086 21.52 188.1 21.497 188.111 21.475 M 129.501 27.84 A 0.136 0.136 0 0 0 129.504 27.838 A 0.234 0.234 0 0 1 129.55 27.841 C 129.651 27.861 129.651 27.958 129.651 28.13 A 2.391 2.391 0 0 1 129.65 28.185 C 129.644 28.442 129.596 28.573 129.504 28.619 A 0.058 0.058 0 0 1 129.462 28.636 C 129.419 28.636 129.36 28.592 129.299 28.493 A 0.915 0.915 0 0 1 129.26 28.423 C 129.218 28.339 129.212 28.291 129.243 28.217 A 0.565 0.565 0 0 1 129.26 28.179 L 129.407 27.886 C 129.449 27.886 129.49 27.85 129.501 27.84 Z M 233.505 27.84 A 0.136 0.136 0 0 0 233.508 27.838 A 0.234 0.234 0 0 1 233.553 27.841 C 233.655 27.861 233.655 27.958 233.655 28.13 A 2.391 2.391 0 0 1 233.654 28.185 C 233.648 28.442 233.6 28.573 233.508 28.619 A 0.058 0.058 0 0 1 233.466 28.636 C 233.422 28.636 233.364 28.592 233.303 28.493 A 0.915 0.915 0 0 1 233.264 28.423 C 233.222 28.339 233.216 28.291 233.247 28.217 A 0.565 0.565 0 0 1 233.264 28.179 L 233.411 27.886 C 233.452 27.886 233.494 27.85 233.505 27.84 Z M 76.624 29.888 A 1.229 1.229 0 0 0 76.577 29.843 C 76.543 29.813 76.51 29.79 76.477 29.79 A 0.089 0.089 0 0 0 76.443 29.798 C 76.428 29.804 76.412 29.814 76.397 29.826 A 0.825 0.825 0 0 0 76.331 29.888 A 0.291 0.291 0 0 0 76.245 29.954 A 0.775 0.775 0 0 0 76.135 30.132 A 0.69 0.69 0 0 0 76.122 30.16 C 76.093 30.226 76.088 30.271 76.087 30.334 A 3.091 3.091 0 0 0 76.086 30.376 A 0.126 0.126 0 0 0 76.127 30.403 C 76.18 30.425 76.255 30.425 76.331 30.425 C 76.404 30.425 76.477 30.425 76.53 30.384 A 0.162 0.162 0 0 0 76.575 30.328 C 76.612 30.29 76.65 30.252 76.665 30.192 A 0.242 0.242 0 0 0 76.672 30.132 A 0.37 0.37 0 0 0 76.666 30.069 C 76.656 30.008 76.634 29.952 76.626 29.913 A 0.131 0.131 0 0 1 76.624 29.888 Z M 10.618 46.772 A 4.558 4.558 0 0 0 10.608 46.783 A 0.29 0.29 0 0 0 10.568 46.834 C 10.549 46.865 10.532 46.902 10.522 46.942 A 0.336 0.336 0 0 0 10.51 47.027 A 3.834 3.834 0 0 0 10.511 47.086 C 10.512 47.178 10.519 47.289 10.559 47.369 C 10.648 47.592 10.697 47.57 10.742 47.265 A 4.193 4.193 0 0 0 10.754 47.173 C 10.754 46.978 10.754 46.845 10.729 46.774 A 0.108 0.108 0 0 0 10.706 46.734 C 10.66 46.734 10.657 46.734 10.618 46.772 Z M 434.174 62.115 C 434.16 62.106 434.15 62.097 434.146 62.083 A 0.055 0.055 0 0 1 434.143 62.066 C 434.094 62.066 434.094 62.017 434.094 62.017 L 434.045 61.968 L 433.997 61.968 L 433.997 61.919 L 433.997 61.968 L 433.948 61.919 C 433.899 61.919 433.899 61.871 433.85 61.871 A 0.823 0.823 0 0 0 433.843 61.864 C 433.809 61.83 433.775 61.803 433.74 61.779 A 1.422 1.422 0 0 0 433.557 61.675 A 0.987 0.987 0 0 1 433.515 61.653 C 433.49 61.638 433.467 61.625 433.445 61.613 M 433.435 61.608 A 0.279 0.279 0 0 0 433.361 61.582 A 0.256 0.256 0 0 0 433.313 61.578 L 433.264 61.578 C 433.215 61.675 433.264 61.773 433.362 61.871 A 0.869 0.869 0 0 0 433.398 61.905 C 433.458 61.958 433.517 61.997 433.577 62.045 A 0.958 0.958 0 0 1 433.655 62.115 C 433.697 62.136 433.73 62.148 433.758 62.158 A 1.151 1.151 0 0 0 433.758 62.158 M 36.717 72.544 A 0.918 0.918 0 0 1 36.731 72.515 C 36.731 72.434 36.697 72.387 36.658 72.317 A 1.02 1.02 0 0 1 36.633 72.271 C 36.584 72.222 36.487 72.173 36.389 72.173 A 0.109 0.109 0 0 0 36.372 72.175 C 36.32 72.183 36.238 72.222 36.194 72.222 A 0.212 0.212 0 0 1 36.177 72.237 C 36.169 72.243 36.162 72.248 36.155 72.253 A 1.198 1.198 0 0 1 36.134 72.266 M 36.265 72.554 A 1.346 1.346 0 0 1 36.264 72.553 C 36.297 72.594 36.336 72.635 36.389 72.662 C 36.487 72.71 36.536 72.71 36.584 72.71 C 36.666 72.67 36.679 72.629 36.71 72.56 M 36.127 72.271 C 36.113 72.28 36.103 72.289 36.099 72.303 A 0.055 0.055 0 0 0 36.096 72.32 A 0.089 0.089 0 0 0 36.103 72.354 C 36.11 72.369 36.12 72.384 36.132 72.4 A 0.825 0.825 0 0 0 36.194 72.466 C 36.214 72.487 36.235 72.516 36.259 72.546 A 0.948 0.948 0 0 1 36.259 72.546 M 48.92 80.19 A 1.479 1.479 0 0 1 48.921 80.19 A 1.555 1.555 0 0 1 48.923 80.189 A 1.595 1.595 0 0 1 48.924 80.188 A 1.637 1.637 0 0 1 48.925 80.188 A 1.726 1.726 0 0 1 48.927 80.187 A 1.772 1.772 0 0 1 48.928 80.186 A 0.936 0.936 0 0 1 48.929 80.186 A 0.959 0.959 0 0 0 48.929 80.186 M 32.876 65.994 C 32.876 65.995 32.876 65.997 32.876 65.998 M 319.06 59.685 C 319.061 59.686 319.061 59.688 319.062 59.689 M 32.232 62.04 C 32.232 62.038 32.232 62.037 32.231 62.036 M 286.926 35.699 C 286.926 35.7 286.925 35.701 286.925 35.702 M 316.32 43.011 C 316.319 43.009 316.319 43.008 316.319 43.007 M 323.046 62.295 C 323.046 62.297 323.047 62.298 323.048 62.299 M 64.841 50.8 C 64.843 50.799 64.844 50.799 64.845 50.798 M 104.978 40.448 C 104.979 40.448 104.98 40.447 104.982 40.446 M 208.982 40.448 C 208.983 40.448 208.984 40.447 208.986 40.446 M 64.847 50.797 C 64.848 50.796 64.849 50.795 64.85 50.795 M 104.984 40.445 C 104.985 40.445 104.986 40.444 104.987 40.443 M 208.988 40.445 C 208.989 40.445 208.99 40.444 208.991 40.443 M 113.342 65.777 C 113.343 65.776 113.345 65.776 113.346 65.776 M 217.346 65.777 C 217.347 65.776 217.348 65.776 217.35 65.776 M 78.127 23.741 A 1.772 1.772 0 0 0 78.126 23.741 A 0.936 0.936 0 0 1 78.128 23.74 A 0.959 0.959 0 0 0 78.128 23.74 Z M 301.587 18.978 C 301.587 18.977 301.587 18.976 301.587 18.975 M 78.119 23.745 C 78.119 23.745 78.118 23.746 78.117 23.746 M 323.048 62.299 A 0.682 0.682 0 0 0 323.048 62.3 A 0.794 0.794 0 0 1 323.048 62.3 Z M 104.982 40.446 A 0.682 0.682 0 0 0 104.983 40.446 A 0.794 0.794 0 0 1 104.983 40.446 Z M 208.986 40.446 A 0.682 0.682 0 0 0 208.987 40.446 A 0.794 0.794 0 0 1 208.987 40.446 Z M 64.845 50.798 A 0.682 0.682 0 0 0 64.846 50.797 A 0.794 0.794 0 0 1 64.846 50.797 Z M 48.938 80.181 C 48.937 80.181 48.936 80.182 48.936 80.182 M 78.137 23.736 C 78.136 23.736 78.136 23.736 78.135 23.737 M 323.049 62.301 A 0.658 0.658 0 0 0 323.05 62.302 A 0.767 0.767 0 0 1 323.05 62.302 Z M 64.853 50.794 A 1.093 1.093 0 0 0 64.854 50.793 A 0.831 0.831 0 0 1 64.854 50.793 Z M 104.989 40.442 A 1.093 1.093 0 0 0 104.99 40.442 A 0.831 0.831 0 0 1 104.99 40.442 Z M 208.993 40.442 A 1.093 1.093 0 0 0 208.994 40.442 A 0.831 0.831 0 0 1 208.994 40.442 Z M 323.052 62.307 A 1.093 1.093 0 0 0 323.052 62.308 A 0.831 0.831 0 0 1 323.052 62.308 Z M 78.123 23.743 A 1.595 1.595 0 0 0 78.122 23.743 A 1.555 1.555 0 0 1 78.122 23.743 Z M 433.763 62.16 A 1.207 1.207 0 0 0 433.762 62.16 A 1.684 1.684 0 0 1 433.762 62.16 Z M 78.121 23.744 C 78.121 23.744 78.12 23.745 78.119 23.745 M 433.761 62.16 C 433.76 62.159 433.76 62.159 433.759 62.159 M 32.233 62.042 C 32.233 62.041 32.232 62.04 32.232 62.04 M 32.231 62.036 C 32.231 62.035 32.231 62.034 32.231 62.034 M 78.117 23.746 A 2.539 2.539 0 0 0 78.116 23.747 A 1.308 1.308 0 0 1 78.116 23.747 Z M 377.215 21.408 C 377.215 21.409 377.215 21.409 377.216 21.41 M 377.216 21.41 C 377.216 21.41 377.216 21.411 377.216 21.411 M 377.217 21.414 C 377.217 21.415 377.217 21.415 377.218 21.416 M 50.498 81.354 C 50.498 81.354 50.497 81.355 50.497 81.355 M 64.85 50.795 C 64.851 50.795 64.851 50.794 64.852 50.794 M 104.987 40.443 C 104.988 40.443 104.988 40.443 104.988 40.443 M 208.991 40.443 C 208.991 40.443 208.992 40.443 208.992 40.443 M 323.051 62.304 C 323.051 62.305 323.051 62.305 323.051 62.306 M 323.051 62.306 C 323.051 62.306 323.052 62.306 323.052 62.307 M 64.852 50.794 C 64.852 50.794 64.852 50.794 64.853 50.794 M 104.988 40.443 C 104.989 40.443 104.989 40.442 104.989 40.442 M 208.992 40.443 C 208.993 40.443 208.993 40.442 208.993 40.442 M 48.931 80.184 C 48.931 80.185 48.931 80.185 48.93 80.185 M 78.131 23.739 C 78.13 23.739 78.13 23.739 78.129 23.74 M 323.053 62.309 C 323.053 62.309 323.053 62.309 323.054 62.31 M 64.855 50.793 C 64.855 50.792 64.855 50.792 64.856 50.792 M 104.991 40.441 C 104.992 40.441 104.992 40.441 104.992 40.44 M 208.995 40.441 C 208.996 40.441 208.996 40.441 208.996 40.44 M 48.926 80.187 C 48.926 80.187 48.925 80.187 48.925 80.188 M 78.124 23.742 C 78.124 23.742 78.124 23.743 78.123 23.743 M 48.922 80.189 C 48.922 80.189 48.922 80.189 48.921 80.19 M 48.916 80.193 C 48.915 80.193 48.915 80.193 48.915 80.193 M 48.919 80.191 C 48.919 80.191 48.919 80.191 48.919 80.191 M 78.125 23.742 C 78.125 23.742 78.125 23.742 78.125 23.742 M 113.363 65.77 C 113.363 65.77 113.363 65.77 113.363 65.77 M 135.886 35.582 C 135.886 35.582 135.886 35.582 135.886 35.582 M 217.367 65.77 C 217.367 65.77 217.367 65.77 217.367 65.77 M 239.889 35.582 C 239.889 35.582 239.889 35.582 239.889 35.582 M 32.88 66.044 A 89.878 89.878 0 0 1 32.88 66.04 M 32.238 62.061 A 4.669 4.669 0 0 1 32.238 62.064 M 32.234 62.046 A 4.846 4.846 0 0 1 32.234 62.048 M 48.916 80.193 A 1.308 1.308 0 0 1 48.917 80.192 M 64.844 50.799 A 0.623 0.623 0 0 1 64.843 50.799 M 64.849 50.795 A 0.767 0.767 0 0 1 64.848 50.796 M 64.857 50.791 A 1.039 1.039 0 0 1 64.856 50.792 M 78.118 23.746 A 0.742 0.742 0 0 1 78.119 23.745 M 78.114 23.748 A 0.904 0.904 0 0 1 78.115 23.747 M 104.98 40.447 A 0.623 0.623 0 0 1 104.979 40.448 M 104.986 40.444 A 0.767 0.767 0 0 1 104.985 40.445 M 104.993 40.44 A 1.039 1.039 0 0 1 104.992 40.44 M 208.984 40.447 A 0.623 0.623 0 0 1 208.983 40.448 M 208.99 40.444 A 0.767 0.767 0 0 1 208.989 40.445 M 208.997 40.44 A 1.039 1.039 0 0 1 208.996 40.44 M 323.047 62.298 A 0.623 0.623 0 0 1 323.046 62.297 M 323.051 62.304 A 0.635 0.635 0 0 1 323.05 62.303 M 323.054 62.311 A 1.039 1.039 0 0 1 323.054 62.31 M 377.211 21.395 A 2.522 2.522 0 0 1 377.21 21.394" vector-effect="non-scaling-stroke"></path></g></svg></figure></div></div><ul class="mt-4 h-full w-full text-white"><li class="mx-4 mt-4 md:mt-8"><h3 class="font-secondary text-3xl md:text-5xl">Truy\u1EC7n tranh</h3></li><li class="flex flex-wrap"><button class="absolute-center bg-hight-light ml-4 mt-4 w-fit rounded-xl py-2 px-4 md:mt-6"><a class="text-xl md:text-3xl" href="/browse?comics=manga-112">Manga</a></button><button class="absolute-center bg-hight-light ml-4 mt-4 w-fit rounded-xl py-2 px-4 md:mt-6"><a class="text-xl md:text-3xl" href="/browse?comics=manhua">Manhua</a></button><button class="absolute-center bg-hight-light ml-4 mt-4 w-fit rounded-xl py-2 px-4 md:mt-6"><a class="text-xl md:text-3xl" href="/browse?comics=manhwa-11400">Manhwa</a></button><button class="absolute-center bg-hight-light ml-4 mt-4 w-fit rounded-xl py-2 px-4 md:mt-6"><a class="text-xl md:text-3xl" href="/browse?comics=doujinshi">Doujinshi</a></button></li><li class="mx-4 mt-4 border-t-[2px] border-highlight pt-4 md:mt-8"><h3 class="font-secondary text-3xl md:text-5xl">Th\u1EC3 lo\u1EA1i</h3></li><li class="grid grid-cols-2"><button class="hover:bg-hight-light ml-4 mt-4 flex w-full items-center rounded-xl py-2 px-4 md:mt-6"><a class="text-xl md:text-3xl" href="/browse?genres=action">Action</a></button><button class="hover:bg-hight-light ml-4 mt-4 flex w-full items-center rounded-xl py-2 px-4 md:mt-6"><a class="text-xl md:text-3xl" href="/browse?genres=adventure">Adventure</a></button><button class="hover:bg-hight-light ml-4 mt-4 flex w-full items-center rounded-xl py-2 px-4 md:mt-6"><a class="text-xl md:text-3xl" href="/browse?genres=comedy-99">Comedy</a></button><button class="hover:bg-hight-light ml-4 mt-4 flex w-full items-center rounded-xl py-2 px-4 md:mt-6"><a class="text-xl md:text-3xl" href="/browse?genres=horror">Horror</a></button><button class="hover:bg-hight-light ml-4 mt-4 flex w-full items-center rounded-xl py-2 px-4 md:mt-6"><a class="text-xl md:text-3xl" href="/browse?genres=romance-121">Romance</a></button><button class="hover:bg-hight-light ml-4 mt-4 flex w-full items-center rounded-xl py-2 px-4 md:mt-6"><a class="text-xl md:text-3xl" href="/browse?genres=shoujo">Shoujo</a></button><button class="hover:bg-hight-light ml-4 mt-4 flex w-full items-center rounded-xl py-2 px-4 md:mt-6"><a class="text-xl md:text-3xl" href="/browse?genres=slice-of-life">Slice of Life</a></button><button class="hover:bg-hight-light ml-4 mt-4 flex w-full items-center rounded-xl py-2 px-4 md:mt-6"><a class="text-xl md:text-3xl" href="/browse?genres=drama-103">Drama</a></button><button class="hover:bg-hight-light ml-4 mt-4 flex w-full items-center rounded-xl py-2 px-4 md:mt-6"><a class="flex items-center text-xl md:text-3xl" href="/browse"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="mr-2 h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M12 4v16m8-8H4"></path></svg> Xem th\xEAm</a></button></li><li class="mx-4 mt-4 border-t-[2px] border-highlight pt-4 md:mt-8"><h3 class="font-secondary text-3xl md:text-5xl"><a class="flex items-center" href="/browse?view=newComic">M\u1EDBi c\u1EADp nh\u1EADt <button class="absolute-center h-full"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="ml-2 h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M9 5l7 7-7 7"></path></svg></button></a></h3></li><li class="mx-4 mt-4 border-t-[2px] border-highlight pt-4 md:mt-8"><h3 class="font-secondary text-3xl md:text-5xl"><a class="flex items-center" href="/browse?view=all">B\u1EA3ng x\u1EBFp h\u1EA1ng <button class="absolute-center h-full"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="ml-2 h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M9 5l7 7-7 7"></path></svg></button></a></h3></li></ul></div></aside><!--]-->`);
}
const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = __vite_ssr_import_2__.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/TheSidebar.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const __vite_ssr_import_3__ = await __vite_ssr_import__("/@id/plugin-vue:export-helper");

__vite_ssr_exports__.default = /* @__PURE__ */ __vite_ssr_import_3__.default(_sfc_main, [["ssrRender", _sfc_ssrRender], ["__file", "/Users/bonn/Documents/GitHub/next-truyen/components/TheSidebar.vue"]]);
;
}


// --------------------
// Request: /node_modules/vue/server-renderer/index.js
// Parents: 
// - /components/TheSidebar.vue ($id_a452c5e5)
// - /components/TheNav.vue ($id_0ec40bd1)
// - /components/TheHeader.vue ($id_d18d7003)
// - /components/TheFooter.vue ($id_cdfd5170)
// - /layouts/default.vue ($id_7689e89d)
// - /components/TheHome.vue ($id_370723ed)
// - /components/HomePage/Spotlight.vue ($id_3c9ba117)
// - /components/HomePage/MangeNewUpdate.vue ($id_eef87c89)
// - /components/HomePage/MangaFeatured.vue ($id_f783c960)
// - /pages/index.vue?macro=true ($id_5dd70240)
// - /pages/manga/index.vue?macro=true ($id_811fac0c)
// - /components/Manga/Review.vue ($id_4f57d685)
// - /components/Manga/Chaplist.vue ($id_49b3b6a3)
// - /pages/manga/read/[slug]/[chapter]/[id].vue?macro=true ($id_6e06068f)
// - /pages/index.vue ($id_cca58e97)
// - /pages/manga/index.vue ($id_f3f97c4e)
// - /pages/manga/read/[slug]/[chapter]/[id].vue ($id_b9cb4a69)
// - /node_modules/@nuxt/ui-templates/dist/templates/error-404.vue ($id_b90d4d0f)
// - /node_modules/@nuxt/ui-templates/dist/templates/error-500.vue ($id_14c8b574)
// - /node_modules/@nuxt/ui-templates/dist/templates/error-dev.vue ($id_bc2d74a1)
// - /node_modules/nuxt/dist/app/components/nuxt-error-page.vue ($id_8cc6d73f)
// - /node_modules/nuxt/dist/app/components/nuxt-root.vue ($id_e9bfada3)
// - /app.vue ($id_2b46e842)
// Dependencies: 

// --------------------
const $id_b215fa1c = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/vue/server-renderer/index.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/vue/server-renderer/index.js\".")
  })


// --------------------
// Request: /@id/plugin-vue:export-helper
// Parents: 
// - /components/TheSidebar.vue ($id_a452c5e5)
// - /components/TheNav.vue ($id_0ec40bd1)
// - /components/TheHeader.vue ($id_d18d7003)
// - /components/TheFooter.vue ($id_cdfd5170)
// - /layouts/default.vue ($id_7689e89d)
// - /components/TheHome.vue ($id_370723ed)
// - /components/HomePage/Spotlight.vue ($id_3c9ba117)
// - /components/HomePage/MangeNewUpdate.vue ($id_eef87c89)
// - /components/HomePage/MangaFeatured.vue ($id_f783c960)
// - /pages/index.vue?macro=true ($id_5dd70240)
// - /pages/manga/index.vue?macro=true ($id_811fac0c)
// - /components/Manga/Review.vue ($id_4f57d685)
// - /components/Manga/Chaplist.vue ($id_49b3b6a3)
// - /pages/manga/read/[slug]/[chapter]/[id].vue?macro=true ($id_6e06068f)
// - /pages/index.vue ($id_cca58e97)
// - /pages/manga/index.vue ($id_f3f97c4e)
// - /pages/manga/read/[slug]/[chapter]/[id].vue ($id_b9cb4a69)
// - /node_modules/@nuxt/ui-templates/dist/templates/error-404.vue ($id_b90d4d0f)
// - /node_modules/@nuxt/ui-templates/dist/templates/error-500.vue ($id_14c8b574)
// - /node_modules/@nuxt/ui-templates/dist/templates/error-dev.vue ($id_bc2d74a1)
// - /node_modules/nuxt/dist/app/components/nuxt-error-page.vue ($id_8cc6d73f)
// - /node_modules/nuxt/dist/app/components/nuxt-root.vue ($id_e9bfada3)
// - /app.vue ($id_2b46e842)
// Dependencies: 

// --------------------
const $id_bbb863c1 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {

__vite_ssr_exports__.default = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
}
;
}


// --------------------
// Request: /components/TheNav.vue
// Parents: 
// - /components/TheHeader.vue ($id_d18d7003)
// Dependencies: 
// - /node_modules/vue/server-renderer/index.js ($id_b215fa1c)
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /@id/plugin-vue:export-helper ($id_bbb863c1)
// --------------------
const $id_0ec40bd1 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const _sfc_main = {}
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/server-renderer/index.js");


function _sfc_ssrRender(_ctx, _push, _parent, _attrs) {
  _push(`<nav${__vite_ssr_import_0__.ssrRenderAttrs(_attrs)}><ul class="ml-32 hidden h-full w-fit items-center space-x-10 font-secondary text-3xl text-white lg:flex"><li class="relative transition-all"><button class="flex items-center false">Thể loại <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="h-8 w-8"><path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7"></path></svg></button><div></div></li><li class="relative transition-all"><button class="flex items-center false">Truyện tranh<!-- --><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="h-8 w-8"><path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7"></path></svg></button><div></div></li><li class="transition-all hover:text-primary"><a href="/browse?view=newComic">Mới cập nhật</a></li><li class="transition-all hover:text-primary"><a href="/browse?view=all">Bảng xếp hạng</a></li></ul></nav>`)
}


const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_setup = _sfc_main.setup
_sfc_main.setup = (props, ctx) => {
  const ssrContext = __vite_ssr_import_1__.useSSRContext()
  ;(ssrContext.modules || (ssrContext.modules = new Set())).add("components/TheNav.vue")
  return _sfc_setup ? _sfc_setup(props, ctx) : undefined
}
const __vite_ssr_import_2__ = await __vite_ssr_import__("/@id/plugin-vue:export-helper");

__vite_ssr_exports__.default = /*#__PURE__*/__vite_ssr_import_2__.default(_sfc_main, [['ssrRender',_sfc_ssrRender],['__file',"/Users/bonn/Documents/GitHub/next-truyen/components/TheNav.vue"]]);
}


// --------------------
// Request: /node_modules/@headlessui/vue/dist/headlessui.esm.js
// Parents: 
// - /components/TheHeader.vue ($id_d18d7003)
// - /components/Manga/Review.vue ($id_4f57d685)
// Dependencies: 
// - /node_modules/@headlessui/vue/dist/components/combobox/combobox.js ($id_92aab129)
// - /node_modules/@headlessui/vue/dist/components/dialog/dialog.js ($id_b07f1154)
// - /node_modules/@headlessui/vue/dist/components/disclosure/disclosure.js ($id_90ea7d3e)
// - /node_modules/@headlessui/vue/dist/components/focus-trap/focus-trap.js ($id_58899675)
// - /node_modules/@headlessui/vue/dist/components/listbox/listbox.js ($id_2feddcbf)
// - /node_modules/@headlessui/vue/dist/components/menu/menu.js ($id_b1042eef)
// - /node_modules/@headlessui/vue/dist/components/popover/popover.js ($id_f86ffab2)
// - /node_modules/@headlessui/vue/dist/components/portal/portal.js ($id_1d43fca2)
// - /node_modules/@headlessui/vue/dist/components/radio-group/radio-group.js ($id_0e8af24b)
// - /node_modules/@headlessui/vue/dist/components/switch/switch.js ($id_44a1a907)
// - /node_modules/@headlessui/vue/dist/components/tabs/tabs.js ($id_6cd55209)
// - /node_modules/@headlessui/vue/dist/components/transitions/transition.js ($id_99377655)
// --------------------
const $id_2c13895f = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/@headlessui/vue/dist/components/combobox/combobox.js");
__vite_ssr_exportAll__(__vite_ssr_import_0__);const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/@headlessui/vue/dist/components/dialog/dialog.js");
__vite_ssr_exportAll__(__vite_ssr_import_1__);const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/@headlessui/vue/dist/components/disclosure/disclosure.js");
__vite_ssr_exportAll__(__vite_ssr_import_2__);const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/@headlessui/vue/dist/components/focus-trap/focus-trap.js");
__vite_ssr_exportAll__(__vite_ssr_import_3__);const __vite_ssr_import_4__ = await __vite_ssr_import__("/node_modules/@headlessui/vue/dist/components/listbox/listbox.js");
__vite_ssr_exportAll__(__vite_ssr_import_4__);const __vite_ssr_import_5__ = await __vite_ssr_import__("/node_modules/@headlessui/vue/dist/components/menu/menu.js");
__vite_ssr_exportAll__(__vite_ssr_import_5__);const __vite_ssr_import_6__ = await __vite_ssr_import__("/node_modules/@headlessui/vue/dist/components/popover/popover.js");
__vite_ssr_exportAll__(__vite_ssr_import_6__);const __vite_ssr_import_7__ = await __vite_ssr_import__("/node_modules/@headlessui/vue/dist/components/portal/portal.js");
__vite_ssr_exportAll__(__vite_ssr_import_7__);const __vite_ssr_import_8__ = await __vite_ssr_import__("/node_modules/@headlessui/vue/dist/components/radio-group/radio-group.js");
__vite_ssr_exportAll__(__vite_ssr_import_8__);const __vite_ssr_import_9__ = await __vite_ssr_import__("/node_modules/@headlessui/vue/dist/components/switch/switch.js");
__vite_ssr_exportAll__(__vite_ssr_import_9__);const __vite_ssr_import_10__ = await __vite_ssr_import__("/node_modules/@headlessui/vue/dist/components/tabs/tabs.js");
__vite_ssr_exportAll__(__vite_ssr_import_10__);const __vite_ssr_import_11__ = await __vite_ssr_import__("/node_modules/@headlessui/vue/dist/components/transitions/transition.js");
__vite_ssr_exportAll__(__vite_ssr_import_11__);
;
}


// --------------------
// Request: /node_modules/@headlessui/vue/dist/components/combobox/combobox.js
// Parents: 
// - /node_modules/@headlessui/vue/dist/headlessui.esm.js ($id_2c13895f)
// Dependencies: 

// --------------------
const $id_92aab129 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/@headlessui/vue/dist/components/combobox/combobox.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/@headlessui/vue/dist/components/combobox/combobox.js\".")
  })


// --------------------
// Request: /node_modules/@headlessui/vue/dist/components/dialog/dialog.js
// Parents: 
// - /node_modules/@headlessui/vue/dist/headlessui.esm.js ($id_2c13895f)
// Dependencies: 

// --------------------
const $id_b07f1154 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/@headlessui/vue/dist/components/dialog/dialog.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/@headlessui/vue/dist/components/dialog/dialog.js\".")
  })


// --------------------
// Request: /node_modules/@headlessui/vue/dist/components/disclosure/disclosure.js
// Parents: 
// - /node_modules/@headlessui/vue/dist/headlessui.esm.js ($id_2c13895f)
// Dependencies: 

// --------------------
const $id_90ea7d3e = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/@headlessui/vue/dist/components/disclosure/disclosure.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/@headlessui/vue/dist/components/disclosure/disclosure.js\".")
  })


// --------------------
// Request: /node_modules/@headlessui/vue/dist/components/focus-trap/focus-trap.js
// Parents: 
// - /node_modules/@headlessui/vue/dist/headlessui.esm.js ($id_2c13895f)
// Dependencies: 

// --------------------
const $id_58899675 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/@headlessui/vue/dist/components/focus-trap/focus-trap.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/@headlessui/vue/dist/components/focus-trap/focus-trap.js\".")
  })


// --------------------
// Request: /node_modules/@headlessui/vue/dist/components/listbox/listbox.js
// Parents: 
// - /node_modules/@headlessui/vue/dist/headlessui.esm.js ($id_2c13895f)
// Dependencies: 

// --------------------
const $id_2feddcbf = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/@headlessui/vue/dist/components/listbox/listbox.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/@headlessui/vue/dist/components/listbox/listbox.js\".")
  })


// --------------------
// Request: /node_modules/@headlessui/vue/dist/components/menu/menu.js
// Parents: 
// - /node_modules/@headlessui/vue/dist/headlessui.esm.js ($id_2c13895f)
// Dependencies: 

// --------------------
const $id_b1042eef = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/@headlessui/vue/dist/components/menu/menu.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/@headlessui/vue/dist/components/menu/menu.js\".")
  })


// --------------------
// Request: /node_modules/@headlessui/vue/dist/components/popover/popover.js
// Parents: 
// - /node_modules/@headlessui/vue/dist/headlessui.esm.js ($id_2c13895f)
// Dependencies: 

// --------------------
const $id_f86ffab2 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/@headlessui/vue/dist/components/popover/popover.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/@headlessui/vue/dist/components/popover/popover.js\".")
  })


// --------------------
// Request: /node_modules/@headlessui/vue/dist/components/portal/portal.js
// Parents: 
// - /node_modules/@headlessui/vue/dist/headlessui.esm.js ($id_2c13895f)
// Dependencies: 

// --------------------
const $id_1d43fca2 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/@headlessui/vue/dist/components/portal/portal.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/@headlessui/vue/dist/components/portal/portal.js\".")
  })


// --------------------
// Request: /node_modules/@headlessui/vue/dist/components/radio-group/radio-group.js
// Parents: 
// - /node_modules/@headlessui/vue/dist/headlessui.esm.js ($id_2c13895f)
// Dependencies: 

// --------------------
const $id_0e8af24b = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/@headlessui/vue/dist/components/radio-group/radio-group.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/@headlessui/vue/dist/components/radio-group/radio-group.js\".")
  })


// --------------------
// Request: /node_modules/@headlessui/vue/dist/components/switch/switch.js
// Parents: 
// - /node_modules/@headlessui/vue/dist/headlessui.esm.js ($id_2c13895f)
// Dependencies: 

// --------------------
const $id_44a1a907 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/@headlessui/vue/dist/components/switch/switch.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/@headlessui/vue/dist/components/switch/switch.js\".")
  })


// --------------------
// Request: /node_modules/@headlessui/vue/dist/components/tabs/tabs.js
// Parents: 
// - /node_modules/@headlessui/vue/dist/headlessui.esm.js ($id_2c13895f)
// Dependencies: 

// --------------------
const $id_6cd55209 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/@headlessui/vue/dist/components/tabs/tabs.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/@headlessui/vue/dist/components/tabs/tabs.js\".")
  })


// --------------------
// Request: /node_modules/@headlessui/vue/dist/components/transitions/transition.js
// Parents: 
// - /node_modules/@headlessui/vue/dist/headlessui.esm.js ($id_2c13895f)
// Dependencies: 

// --------------------
const $id_99377655 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/@headlessui/vue/dist/components/transitions/transition.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/@headlessui/vue/dist/components/transitions/transition.js\".")
  })


// --------------------
// Request: /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs
// Parents: 
// - /components/TheHeader.vue ($id_d18d7003)
// - /node_modules/@nuxtjs/color-mode/dist/runtime/composables.mjs ($id_9d5ba8e3)
// - /components/TheHome.vue ($id_370723ed)
// - /pages/manga/index.vue?macro=true ($id_811fac0c)
// - /pages/manga/read/[slug]/[chapter]/[id].vue?macro=true ($id_6e06068f)
// - /pages/manga/index.vue ($id_f3f97c4e)
// - /pages/manga/read/[slug]/[chapter]/[id].vue ($id_b9cb4a69)
// - /node_modules/@nuxtjs/color-mode/dist/runtime/plugin.server.mjs ($id_a217e6ae)
// - /node_modules/@nuxt/ui-templates/dist/templates/error-404.vue ($id_b90d4d0f)
// - /node_modules/@nuxt/ui-templates/dist/templates/error-500.vue ($id_14c8b574)
// - /node_modules/@nuxt/ui-templates/dist/templates/error-dev.vue ($id_bc2d74a1)
// - /app.vue ($id_2b46e842)
// Dependencies: 
// - /node_modules/nuxt/dist/head/runtime/index.mjs ($id_b7351483)
// - /node_modules/nuxt/dist/app/compat/vue-demi.mjs ($id_a8110be7)
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/@vueuse/core/index.mjs ($id_e8934cdc)
// - /composables/useSource.ts ($id_fd16ee2a)
// - /node_modules/@nuxtjs/color-mode/dist/runtime/composables.mjs ($id_9d5ba8e3)
// - /node_modules/nuxt/dist/pages/runtime/composables.mjs ($id_ff6ed455)
// --------------------
const $id_fe38f457 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/nuxt/dist/head/runtime/index.mjs");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/compat/vue-demi.mjs");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/index.mjs");

const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_4__ = await __vite_ssr_import__("/node_modules/@vueuse/core/index.mjs");

const __vite_ssr_import_5__ = await __vite_ssr_import__("/composables/useSource.ts");

const __vite_ssr_import_6__ = await __vite_ssr_import__("/composables/useSource.ts");

const __vite_ssr_import_7__ = await __vite_ssr_import__("/node_modules/@nuxtjs/color-mode/dist/runtime/composables.mjs");

const __vite_ssr_import_8__ = await __vite_ssr_import__("/node_modules/nuxt/dist/pages/runtime/composables.mjs");

const __vite_ssr_import_9__ = await __vite_ssr_import__("/node_modules/nuxt/dist/head/runtime/index.mjs");

Object.defineProperty(__vite_ssr_exports__, "useHead", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_9__.useHead }});
Object.defineProperty(__vite_ssr_exports__, "useMeta", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_9__.useMeta }});
const __vite_ssr_import_10__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/compat/vue-demi.mjs");

Object.defineProperty(__vite_ssr_exports__, "isVue2", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_10__.isVue2 }});
Object.defineProperty(__vite_ssr_exports__, "isVue3", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_10__.isVue3 }});
const __vite_ssr_import_11__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/index.mjs");

Object.defineProperty(__vite_ssr_exports__, "useAsyncData", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_11__.useAsyncData }});
Object.defineProperty(__vite_ssr_exports__, "useLazyAsyncData", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_11__.useLazyAsyncData }});
Object.defineProperty(__vite_ssr_exports__, "refreshNuxtData", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_11__.refreshNuxtData }});
Object.defineProperty(__vite_ssr_exports__, "defineNuxtComponent", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_11__.defineNuxtComponent }});
Object.defineProperty(__vite_ssr_exports__, "useNuxtApp", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_11__.useNuxtApp }});
Object.defineProperty(__vite_ssr_exports__, "defineNuxtPlugin", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_11__.defineNuxtPlugin }});
Object.defineProperty(__vite_ssr_exports__, "useRuntimeConfig", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_11__.useRuntimeConfig }});
Object.defineProperty(__vite_ssr_exports__, "useState", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_11__.useState }});
Object.defineProperty(__vite_ssr_exports__, "useFetch", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_11__.useFetch }});
Object.defineProperty(__vite_ssr_exports__, "useLazyFetch", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_11__.useLazyFetch }});
Object.defineProperty(__vite_ssr_exports__, "useCookie", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_11__.useCookie }});
Object.defineProperty(__vite_ssr_exports__, "useRequestHeaders", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_11__.useRequestHeaders }});
Object.defineProperty(__vite_ssr_exports__, "useRequestEvent", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_11__.useRequestEvent }});
Object.defineProperty(__vite_ssr_exports__, "useRouter", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_11__.useRouter }});
Object.defineProperty(__vite_ssr_exports__, "useRoute", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_11__.useRoute }});
Object.defineProperty(__vite_ssr_exports__, "useActiveRoute", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_11__.useActiveRoute }});
Object.defineProperty(__vite_ssr_exports__, "defineNuxtRouteMiddleware", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_11__.defineNuxtRouteMiddleware }});
Object.defineProperty(__vite_ssr_exports__, "navigateTo", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_11__.navigateTo }});
Object.defineProperty(__vite_ssr_exports__, "abortNavigation", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_11__.abortNavigation }});
Object.defineProperty(__vite_ssr_exports__, "addRouteMiddleware", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_11__.addRouteMiddleware }});
Object.defineProperty(__vite_ssr_exports__, "throwError", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_11__.throwError }});
Object.defineProperty(__vite_ssr_exports__, "clearError", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_11__.clearError }});
Object.defineProperty(__vite_ssr_exports__, "useError", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_11__.useError }});
Object.defineProperty(__vite_ssr_exports__, "defineNuxtLink", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_11__.defineNuxtLink }});
const __vite_ssr_import_12__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

Object.defineProperty(__vite_ssr_exports__, "withCtx", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.withCtx }});
Object.defineProperty(__vite_ssr_exports__, "withDirectives", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.withDirectives }});
Object.defineProperty(__vite_ssr_exports__, "withKeys", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.withKeys }});
Object.defineProperty(__vite_ssr_exports__, "withMemo", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.withMemo }});
Object.defineProperty(__vite_ssr_exports__, "withModifiers", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.withModifiers }});
Object.defineProperty(__vite_ssr_exports__, "withScopeId", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.withScopeId }});
Object.defineProperty(__vite_ssr_exports__, "onActivated", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.onActivated }});
Object.defineProperty(__vite_ssr_exports__, "onBeforeMount", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.onBeforeMount }});
Object.defineProperty(__vite_ssr_exports__, "onBeforeUnmount", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.onBeforeUnmount }});
Object.defineProperty(__vite_ssr_exports__, "onBeforeUpdate", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.onBeforeUpdate }});
Object.defineProperty(__vite_ssr_exports__, "onDeactivated", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.onDeactivated }});
Object.defineProperty(__vite_ssr_exports__, "onErrorCaptured", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.onErrorCaptured }});
Object.defineProperty(__vite_ssr_exports__, "onMounted", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.onMounted }});
Object.defineProperty(__vite_ssr_exports__, "onRenderTracked", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.onRenderTracked }});
Object.defineProperty(__vite_ssr_exports__, "onRenderTriggered", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.onRenderTriggered }});
Object.defineProperty(__vite_ssr_exports__, "onServerPrefetch", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.onServerPrefetch }});
Object.defineProperty(__vite_ssr_exports__, "onUnmounted", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.onUnmounted }});
Object.defineProperty(__vite_ssr_exports__, "onUpdated", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.onUpdated }});
Object.defineProperty(__vite_ssr_exports__, "computed", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.computed }});
Object.defineProperty(__vite_ssr_exports__, "customRef", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.customRef }});
Object.defineProperty(__vite_ssr_exports__, "isProxy", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.isProxy }});
Object.defineProperty(__vite_ssr_exports__, "isReactive", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.isReactive }});
Object.defineProperty(__vite_ssr_exports__, "isReadonly", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.isReadonly }});
Object.defineProperty(__vite_ssr_exports__, "isRef", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.isRef }});
Object.defineProperty(__vite_ssr_exports__, "markRaw", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.markRaw }});
Object.defineProperty(__vite_ssr_exports__, "proxyRefs", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.proxyRefs }});
Object.defineProperty(__vite_ssr_exports__, "reactive", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.reactive }});
Object.defineProperty(__vite_ssr_exports__, "readonly", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.readonly }});
Object.defineProperty(__vite_ssr_exports__, "ref", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.ref }});
Object.defineProperty(__vite_ssr_exports__, "shallowReactive", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.shallowReactive }});
Object.defineProperty(__vite_ssr_exports__, "shallowReadonly", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.shallowReadonly }});
Object.defineProperty(__vite_ssr_exports__, "shallowRef", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.shallowRef }});
Object.defineProperty(__vite_ssr_exports__, "toRaw", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.toRaw }});
Object.defineProperty(__vite_ssr_exports__, "toRef", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.toRef }});
Object.defineProperty(__vite_ssr_exports__, "toRefs", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.toRefs }});
Object.defineProperty(__vite_ssr_exports__, "triggerRef", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.triggerRef }});
Object.defineProperty(__vite_ssr_exports__, "unref", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.unref }});
Object.defineProperty(__vite_ssr_exports__, "watch", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.watch }});
Object.defineProperty(__vite_ssr_exports__, "watchEffect", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.watchEffect }});
Object.defineProperty(__vite_ssr_exports__, "isShallow", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.isShallow }});
Object.defineProperty(__vite_ssr_exports__, "effect", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.effect }});
Object.defineProperty(__vite_ssr_exports__, "effectScope", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.effectScope }});
Object.defineProperty(__vite_ssr_exports__, "getCurrentScope", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.getCurrentScope }});
Object.defineProperty(__vite_ssr_exports__, "onScopeDispose", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.onScopeDispose }});
Object.defineProperty(__vite_ssr_exports__, "defineComponent", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.defineComponent }});
Object.defineProperty(__vite_ssr_exports__, "defineAsyncComponent", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.defineAsyncComponent }});
Object.defineProperty(__vite_ssr_exports__, "resolveComponent", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.resolveComponent }});
Object.defineProperty(__vite_ssr_exports__, "getCurrentInstance", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.getCurrentInstance }});
Object.defineProperty(__vite_ssr_exports__, "h", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.h }});
Object.defineProperty(__vite_ssr_exports__, "inject", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.inject }});
Object.defineProperty(__vite_ssr_exports__, "nextTick", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.nextTick }});
Object.defineProperty(__vite_ssr_exports__, "provide", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.provide }});
Object.defineProperty(__vite_ssr_exports__, "useAttrs", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.useAttrs }});
Object.defineProperty(__vite_ssr_exports__, "useCssModule", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.useCssModule }});
Object.defineProperty(__vite_ssr_exports__, "useCssVars", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.useCssVars }});
Object.defineProperty(__vite_ssr_exports__, "useSlots", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.useSlots }});
Object.defineProperty(__vite_ssr_exports__, "useTransitionState", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.useTransitionState }});
const __vite_ssr_import_13__ = await __vite_ssr_import__("/node_modules/@vueuse/core/index.mjs");

Object.defineProperty(__vite_ssr_exports__, "computedAsync", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.computedAsync }});
Object.defineProperty(__vite_ssr_exports__, "asyncComputed", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.asyncComputed }});
Object.defineProperty(__vite_ssr_exports__, "computedEager", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.computedEager }});
Object.defineProperty(__vite_ssr_exports__, "eagerComputed", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.eagerComputed }});
Object.defineProperty(__vite_ssr_exports__, "computedInject", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.computedInject }});
Object.defineProperty(__vite_ssr_exports__, "computedWithControl", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.computedWithControl }});
Object.defineProperty(__vite_ssr_exports__, "controlledComputed", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.controlledComputed }});
Object.defineProperty(__vite_ssr_exports__, "createEventHook", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.createEventHook }});
Object.defineProperty(__vite_ssr_exports__, "createGlobalState", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.createGlobalState }});
Object.defineProperty(__vite_ssr_exports__, "createInjectionState", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.createInjectionState }});
Object.defineProperty(__vite_ssr_exports__, "createSharedComposable", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.createSharedComposable }});
Object.defineProperty(__vite_ssr_exports__, "createUnrefFn", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.createUnrefFn }});
Object.defineProperty(__vite_ssr_exports__, "extendRef", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.extendRef }});
Object.defineProperty(__vite_ssr_exports__, "isDefined", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.isDefined }});
Object.defineProperty(__vite_ssr_exports__, "logicAnd", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.logicAnd }});
Object.defineProperty(__vite_ssr_exports__, "logicNot", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.logicNot }});
Object.defineProperty(__vite_ssr_exports__, "logicOr", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.logicOr }});
Object.defineProperty(__vite_ssr_exports__, "makeDestructurable", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.makeDestructurable }});
Object.defineProperty(__vite_ssr_exports__, "onClickOutside", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.onClickOutside }});
Object.defineProperty(__vite_ssr_exports__, "onKeyStroke", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.onKeyStroke }});
Object.defineProperty(__vite_ssr_exports__, "onLongPress", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.onLongPress }});
Object.defineProperty(__vite_ssr_exports__, "onStartTyping", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.onStartTyping }});
Object.defineProperty(__vite_ssr_exports__, "reactify", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.reactify }});
Object.defineProperty(__vite_ssr_exports__, "createReactiveFn", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.createReactiveFn }});
Object.defineProperty(__vite_ssr_exports__, "reactifyObject", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.reactifyObject }});
Object.defineProperty(__vite_ssr_exports__, "reactiveComputed", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.reactiveComputed }});
Object.defineProperty(__vite_ssr_exports__, "reactiveOmit", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.reactiveOmit }});
Object.defineProperty(__vite_ssr_exports__, "reactivePick", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.reactivePick }});
Object.defineProperty(__vite_ssr_exports__, "refAutoReset", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.refAutoReset }});
Object.defineProperty(__vite_ssr_exports__, "autoResetRef", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.autoResetRef }});
Object.defineProperty(__vite_ssr_exports__, "refDebounced", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.refDebounced }});
Object.defineProperty(__vite_ssr_exports__, "useDebounce", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useDebounce }});
Object.defineProperty(__vite_ssr_exports__, "debouncedRef", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.debouncedRef }});
Object.defineProperty(__vite_ssr_exports__, "refDefault", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.refDefault }});
Object.defineProperty(__vite_ssr_exports__, "refThrottled", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.refThrottled }});
Object.defineProperty(__vite_ssr_exports__, "useThrottle", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useThrottle }});
Object.defineProperty(__vite_ssr_exports__, "throttledRef", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.throttledRef }});
Object.defineProperty(__vite_ssr_exports__, "refWithControl", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.refWithControl }});
Object.defineProperty(__vite_ssr_exports__, "controlledRef", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.controlledRef }});
Object.defineProperty(__vite_ssr_exports__, "syncRef", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.syncRef }});
Object.defineProperty(__vite_ssr_exports__, "syncRefs", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.syncRefs }});
Object.defineProperty(__vite_ssr_exports__, "templateRef", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.templateRef }});
Object.defineProperty(__vite_ssr_exports__, "toReactive", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.toReactive }});
Object.defineProperty(__vite_ssr_exports__, "tryOnBeforeMount", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.tryOnBeforeMount }});
Object.defineProperty(__vite_ssr_exports__, "tryOnBeforeUnmount", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.tryOnBeforeUnmount }});
Object.defineProperty(__vite_ssr_exports__, "tryOnMounted", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.tryOnMounted }});
Object.defineProperty(__vite_ssr_exports__, "tryOnScopeDispose", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.tryOnScopeDispose }});
Object.defineProperty(__vite_ssr_exports__, "tryOnUnmounted", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.tryOnUnmounted }});
Object.defineProperty(__vite_ssr_exports__, "unrefElement", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.unrefElement }});
Object.defineProperty(__vite_ssr_exports__, "until", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.until }});
Object.defineProperty(__vite_ssr_exports__, "useActiveElement", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useActiveElement }});
Object.defineProperty(__vite_ssr_exports__, "useAsyncQueue", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useAsyncQueue }});
Object.defineProperty(__vite_ssr_exports__, "useAsyncState", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useAsyncState }});
Object.defineProperty(__vite_ssr_exports__, "useBase64", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useBase64 }});
Object.defineProperty(__vite_ssr_exports__, "useBattery", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useBattery }});
Object.defineProperty(__vite_ssr_exports__, "useBluetooth", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useBluetooth }});
Object.defineProperty(__vite_ssr_exports__, "useBreakpoints", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useBreakpoints }});
Object.defineProperty(__vite_ssr_exports__, "useBroadcastChannel", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useBroadcastChannel }});
Object.defineProperty(__vite_ssr_exports__, "useBrowserLocation", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useBrowserLocation }});
Object.defineProperty(__vite_ssr_exports__, "useCached", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useCached }});
Object.defineProperty(__vite_ssr_exports__, "useClamp", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useClamp }});
Object.defineProperty(__vite_ssr_exports__, "useClipboard", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useClipboard }});
Object.defineProperty(__vite_ssr_exports__, "useConfirmDialog", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useConfirmDialog }});
Object.defineProperty(__vite_ssr_exports__, "useCounter", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useCounter }});
Object.defineProperty(__vite_ssr_exports__, "useCssVar", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useCssVar }});
Object.defineProperty(__vite_ssr_exports__, "useCurrentElement", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useCurrentElement }});
Object.defineProperty(__vite_ssr_exports__, "useCycleList", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useCycleList }});
Object.defineProperty(__vite_ssr_exports__, "useDark", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useDark }});
Object.defineProperty(__vite_ssr_exports__, "useDateFormat", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useDateFormat }});
Object.defineProperty(__vite_ssr_exports__, "useDebouncedRefHistory", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useDebouncedRefHistory }});
Object.defineProperty(__vite_ssr_exports__, "useDebounceFn", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useDebounceFn }});
Object.defineProperty(__vite_ssr_exports__, "useDeviceMotion", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useDeviceMotion }});
Object.defineProperty(__vite_ssr_exports__, "useDeviceOrientation", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useDeviceOrientation }});
Object.defineProperty(__vite_ssr_exports__, "useDevicePixelRatio", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useDevicePixelRatio }});
Object.defineProperty(__vite_ssr_exports__, "useDevicesList", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useDevicesList }});
Object.defineProperty(__vite_ssr_exports__, "useDisplayMedia", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useDisplayMedia }});
Object.defineProperty(__vite_ssr_exports__, "useDocumentVisibility", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useDocumentVisibility }});
Object.defineProperty(__vite_ssr_exports__, "useDraggable", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useDraggable }});
Object.defineProperty(__vite_ssr_exports__, "useDropZone", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useDropZone }});
Object.defineProperty(__vite_ssr_exports__, "useElementBounding", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useElementBounding }});
Object.defineProperty(__vite_ssr_exports__, "useElementByPoint", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useElementByPoint }});
Object.defineProperty(__vite_ssr_exports__, "useElementHover", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useElementHover }});
Object.defineProperty(__vite_ssr_exports__, "useElementSize", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useElementSize }});
Object.defineProperty(__vite_ssr_exports__, "useElementVisibility", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useElementVisibility }});
Object.defineProperty(__vite_ssr_exports__, "useEventBus", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useEventBus }});
Object.defineProperty(__vite_ssr_exports__, "useEventListener", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useEventListener }});
Object.defineProperty(__vite_ssr_exports__, "useEventSource", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useEventSource }});
Object.defineProperty(__vite_ssr_exports__, "useEyeDropper", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useEyeDropper }});
Object.defineProperty(__vite_ssr_exports__, "useFavicon", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useFavicon }});
Object.defineProperty(__vite_ssr_exports__, "useFileSystemAccess", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useFileSystemAccess }});
Object.defineProperty(__vite_ssr_exports__, "useFocus", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useFocus }});
Object.defineProperty(__vite_ssr_exports__, "useFocusWithin", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useFocusWithin }});
Object.defineProperty(__vite_ssr_exports__, "useFps", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useFps }});
Object.defineProperty(__vite_ssr_exports__, "useFullscreen", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useFullscreen }});
Object.defineProperty(__vite_ssr_exports__, "useGamepad", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useGamepad }});
Object.defineProperty(__vite_ssr_exports__, "useGeolocation", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useGeolocation }});
Object.defineProperty(__vite_ssr_exports__, "useIdle", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useIdle }});
Object.defineProperty(__vite_ssr_exports__, "useImage", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useImage }});
Object.defineProperty(__vite_ssr_exports__, "useInfiniteScroll", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useInfiniteScroll }});
Object.defineProperty(__vite_ssr_exports__, "useIntersectionObserver", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useIntersectionObserver }});
Object.defineProperty(__vite_ssr_exports__, "useInterval", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useInterval }});
Object.defineProperty(__vite_ssr_exports__, "useIntervalFn", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useIntervalFn }});
Object.defineProperty(__vite_ssr_exports__, "useKeyModifier", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useKeyModifier }});
Object.defineProperty(__vite_ssr_exports__, "useLastChanged", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useLastChanged }});
Object.defineProperty(__vite_ssr_exports__, "useLocalStorage", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useLocalStorage }});
Object.defineProperty(__vite_ssr_exports__, "useMagicKeys", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useMagicKeys }});
Object.defineProperty(__vite_ssr_exports__, "useManualRefHistory", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useManualRefHistory }});
Object.defineProperty(__vite_ssr_exports__, "useMediaControls", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useMediaControls }});
Object.defineProperty(__vite_ssr_exports__, "useMediaQuery", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useMediaQuery }});
Object.defineProperty(__vite_ssr_exports__, "useMemoize", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useMemoize }});
Object.defineProperty(__vite_ssr_exports__, "useMemory", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useMemory }});
Object.defineProperty(__vite_ssr_exports__, "useMounted", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useMounted }});
Object.defineProperty(__vite_ssr_exports__, "useMouse", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useMouse }});
Object.defineProperty(__vite_ssr_exports__, "useMouseInElement", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useMouseInElement }});
Object.defineProperty(__vite_ssr_exports__, "useMousePressed", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useMousePressed }});
Object.defineProperty(__vite_ssr_exports__, "useMutationObserver", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useMutationObserver }});
Object.defineProperty(__vite_ssr_exports__, "useNavigatorLanguage", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useNavigatorLanguage }});
Object.defineProperty(__vite_ssr_exports__, "useNetwork", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useNetwork }});
Object.defineProperty(__vite_ssr_exports__, "useNow", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useNow }});
Object.defineProperty(__vite_ssr_exports__, "useOffsetPagination", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useOffsetPagination }});
Object.defineProperty(__vite_ssr_exports__, "useOnline", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useOnline }});
Object.defineProperty(__vite_ssr_exports__, "usePageLeave", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.usePageLeave }});
Object.defineProperty(__vite_ssr_exports__, "useParallax", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useParallax }});
Object.defineProperty(__vite_ssr_exports__, "usePermission", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.usePermission }});
Object.defineProperty(__vite_ssr_exports__, "usePointer", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.usePointer }});
Object.defineProperty(__vite_ssr_exports__, "usePointerSwipe", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.usePointerSwipe }});
Object.defineProperty(__vite_ssr_exports__, "usePreferredColorScheme", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.usePreferredColorScheme }});
Object.defineProperty(__vite_ssr_exports__, "usePreferredDark", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.usePreferredDark }});
Object.defineProperty(__vite_ssr_exports__, "usePreferredLanguages", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.usePreferredLanguages }});
Object.defineProperty(__vite_ssr_exports__, "useRafFn", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useRafFn }});
Object.defineProperty(__vite_ssr_exports__, "useRefHistory", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useRefHistory }});
Object.defineProperty(__vite_ssr_exports__, "useResizeObserver", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useResizeObserver }});
Object.defineProperty(__vite_ssr_exports__, "useScreenOrientation", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useScreenOrientation }});
Object.defineProperty(__vite_ssr_exports__, "useScreenSafeArea", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useScreenSafeArea }});
Object.defineProperty(__vite_ssr_exports__, "useScriptTag", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useScriptTag }});
Object.defineProperty(__vite_ssr_exports__, "useScroll", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useScroll }});
Object.defineProperty(__vite_ssr_exports__, "useScrollLock", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useScrollLock }});
Object.defineProperty(__vite_ssr_exports__, "useSessionStorage", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useSessionStorage }});
Object.defineProperty(__vite_ssr_exports__, "useShare", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useShare }});
Object.defineProperty(__vite_ssr_exports__, "useSpeechRecognition", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useSpeechRecognition }});
Object.defineProperty(__vite_ssr_exports__, "useSpeechSynthesis", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useSpeechSynthesis }});
Object.defineProperty(__vite_ssr_exports__, "useStorageAsync", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useStorageAsync }});
Object.defineProperty(__vite_ssr_exports__, "useStyleTag", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useStyleTag }});
Object.defineProperty(__vite_ssr_exports__, "useSwipe", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useSwipe }});
Object.defineProperty(__vite_ssr_exports__, "useTemplateRefsList", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useTemplateRefsList }});
Object.defineProperty(__vite_ssr_exports__, "useTextSelection", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useTextSelection }});
Object.defineProperty(__vite_ssr_exports__, "useThrottledRefHistory", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useThrottledRefHistory }});
Object.defineProperty(__vite_ssr_exports__, "useThrottleFn", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useThrottleFn }});
Object.defineProperty(__vite_ssr_exports__, "useTimeAgo", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useTimeAgo }});
Object.defineProperty(__vite_ssr_exports__, "useTimeout", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useTimeout }});
Object.defineProperty(__vite_ssr_exports__, "useTimeoutFn", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useTimeoutFn }});
Object.defineProperty(__vite_ssr_exports__, "useTimeoutPoll", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useTimeoutPoll }});
Object.defineProperty(__vite_ssr_exports__, "useTimestamp", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useTimestamp }});
Object.defineProperty(__vite_ssr_exports__, "useToggle", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useToggle }});
Object.defineProperty(__vite_ssr_exports__, "useTransition", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useTransition }});
Object.defineProperty(__vite_ssr_exports__, "useUrlSearchParams", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useUrlSearchParams }});
Object.defineProperty(__vite_ssr_exports__, "useUserMedia", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useUserMedia }});
Object.defineProperty(__vite_ssr_exports__, "useVibrate", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useVibrate }});
Object.defineProperty(__vite_ssr_exports__, "useVirtualList", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useVirtualList }});
Object.defineProperty(__vite_ssr_exports__, "useVModel", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useVModel }});
Object.defineProperty(__vite_ssr_exports__, "useVModels", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useVModels }});
Object.defineProperty(__vite_ssr_exports__, "useWakeLock", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useWakeLock }});
Object.defineProperty(__vite_ssr_exports__, "useWebNotification", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useWebNotification }});
Object.defineProperty(__vite_ssr_exports__, "useWebSocket", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useWebSocket }});
Object.defineProperty(__vite_ssr_exports__, "useWebWorker", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useWebWorker }});
Object.defineProperty(__vite_ssr_exports__, "useWebWorkerFn", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useWebWorkerFn }});
Object.defineProperty(__vite_ssr_exports__, "useWindowFocus", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useWindowFocus }});
Object.defineProperty(__vite_ssr_exports__, "useWindowScroll", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useWindowScroll }});
Object.defineProperty(__vite_ssr_exports__, "useWindowSize", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.useWindowSize }});
Object.defineProperty(__vite_ssr_exports__, "watchAtMost", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.watchAtMost }});
Object.defineProperty(__vite_ssr_exports__, "watchDebounced", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.watchDebounced }});
Object.defineProperty(__vite_ssr_exports__, "debouncedWatch", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.debouncedWatch }});
Object.defineProperty(__vite_ssr_exports__, "watchIgnorable", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.watchIgnorable }});
Object.defineProperty(__vite_ssr_exports__, "ignorableWatch", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.ignorableWatch }});
Object.defineProperty(__vite_ssr_exports__, "watchOnce", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.watchOnce }});
Object.defineProperty(__vite_ssr_exports__, "watchPausable", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.watchPausable }});
Object.defineProperty(__vite_ssr_exports__, "pausableWatch", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.pausableWatch }});
Object.defineProperty(__vite_ssr_exports__, "watchThrottled", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.watchThrottled }});
Object.defineProperty(__vite_ssr_exports__, "throttledWatch", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.throttledWatch }});
Object.defineProperty(__vite_ssr_exports__, "watchWithFilter", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.watchWithFilter }});
Object.defineProperty(__vite_ssr_exports__, "whenever", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.whenever }});
const __vite_ssr_import_14__ = await __vite_ssr_import__("/composables/useSource.ts");

Object.defineProperty(__vite_ssr_exports__, "useSource", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_14__.default }});
Object.defineProperty(__vite_ssr_exports__, "DEFAULT_SRC", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_14__.DEFAULT_SRC }});
Object.defineProperty(__vite_ssr_exports__, "MANGA_RESOURCE", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_14__.MANGA_RESOURCE }});
const __vite_ssr_import_15__ = await __vite_ssr_import__("/node_modules/@nuxtjs/color-mode/dist/runtime/composables.mjs");

Object.defineProperty(__vite_ssr_exports__, "useColorMode", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_15__.useColorMode }});
const __vite_ssr_import_16__ = await __vite_ssr_import__("/node_modules/nuxt/dist/pages/runtime/composables.mjs");

Object.defineProperty(__vite_ssr_exports__, "definePageMeta", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_16__.definePageMeta }});;
}


// --------------------
// Request: /node_modules/nuxt/dist/app/compat/vue-demi.mjs
// Parents: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs ($id_fe38f457)
// - /node_modules/@vueuse/shared/index.mjs ($id_d77aacc8)
// - /node_modules/@vueuse/core/index.mjs ($id_e8934cdc)
// Dependencies: 
// - /node_modules/nuxt/dist/app/compat/capi.mjs ($id_0c5717a4)
// --------------------
const $id_a8110be7 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/compat/capi.mjs");
__vite_ssr_exportAll__(__vite_ssr_import_0__);
const Vue2 = void 0;
Object.defineProperty(__vite_ssr_exports__, "Vue2", { enumerable: true, configurable: true, get(){ return Vue2 }});
const isVue2 = false;
Object.defineProperty(__vite_ssr_exports__, "isVue2", { enumerable: true, configurable: true, get(){ return isVue2 }});
const isVue3 = true;
Object.defineProperty(__vite_ssr_exports__, "isVue3", { enumerable: true, configurable: true, get(){ return isVue3 }});
;
}


// --------------------
// Request: /node_modules/nuxt/dist/app/compat/capi.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/compat/vue-demi.mjs ($id_a8110be7)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// --------------------
const $id_0c5717a4 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");
__vite_ssr_exportAll__(__vite_ssr_import_0__);
const install = () => {
};
Object.defineProperty(__vite_ssr_exports__, "install", { enumerable: true, configurable: true, get(){ return install }});
function set(target, key, val) {
  if (Array.isArray(target)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val;
  }
  target[key] = val;
  return val;
}
Object.defineProperty(__vite_ssr_exports__, "set", { enumerable: true, configurable: true, get(){ return set }});
function del(target, key) {
  if (Array.isArray(target)) {
    target.splice(key, 1);
    return;
  }
  delete target[key];
}
Object.defineProperty(__vite_ssr_exports__, "del", { enumerable: true, configurable: true, get(){ return del }});
;
}


// --------------------
// Request: /node_modules/@vueuse/core/index.mjs
// Parents: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs ($id_fe38f457)
// Dependencies: 
// - /node_modules/@vueuse/shared/index.mjs ($id_d77aacc8)
// - /node_modules/nuxt/dist/app/compat/vue-demi.mjs ($id_a8110be7)
// --------------------
const $id_e8934cdc = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/@vueuse/shared/index.mjs");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/@vueuse/shared/index.mjs");
__vite_ssr_exportAll__(__vite_ssr_import_2__);
const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/compat/vue-demi.mjs");


function computedAsync(evaluationCallback, initialState, optionsOrRef) {
  let options;
  if (__vite_ssr_import_1__.isRef(optionsOrRef)) {
    options = {
      evaluating: optionsOrRef
    };
  } else {
    options = optionsOrRef || {};
  }
  const {
    lazy = false,
    evaluating = void 0,
    onError = __vite_ssr_import_0__.noop
  } = options;
  const started = __vite_ssr_import_1__.ref(!lazy);
  const current = __vite_ssr_import_1__.ref(initialState);
  let counter = 0;
  __vite_ssr_import_1__.watchEffect(async (onInvalidate) => {
    if (!started.value)
      return;
    counter++;
    const counterAtBeginning = counter;
    let hasFinished = false;
    if (evaluating) {
      Promise.resolve().then(() => {
        evaluating.value = true;
      });
    }
    try {
      const result = await evaluationCallback((cancelCallback) => {
        onInvalidate(() => {
          if (evaluating)
            evaluating.value = false;
          if (!hasFinished)
            cancelCallback();
        });
      });
      if (counterAtBeginning === counter)
        current.value = result;
    } catch (e) {
      onError(e);
    } finally {
      if (evaluating && counterAtBeginning === counter)
        evaluating.value = false;
      hasFinished = true;
    }
  });
  if (lazy) {
    return __vite_ssr_import_1__.computed(() => {
      started.value = true;
      return current.value;
    });
  } else {
    return current;
  }
}

function computedInject(key, options, defaultSource, treatDefaultAsFactory) {
  let source = __vite_ssr_import_1__.inject(key);
  if (defaultSource)
    source = __vite_ssr_import_1__.inject(key, defaultSource);
  if (treatDefaultAsFactory)
    source = __vite_ssr_import_1__.inject(key, defaultSource, treatDefaultAsFactory);
  if (typeof options === "function") {
    return __vite_ssr_import_1__.computed((ctx) => options(source, ctx));
  } else {
    return __vite_ssr_import_1__.computed({
      get: (ctx) => options.get(source, ctx),
      set: options.set
    });
  }
}

const createUnrefFn = (fn) => {
  return function(...args) {
    return fn.apply(this, args.map((i) => __vite_ssr_import_1__.unref(i)));
  };
};

function unrefElement(elRef) {
  var _a;
  const plain = __vite_ssr_import_1__.unref(elRef);
  return (_a = plain == null ? void 0 : plain.$el) != null ? _a : plain;
}

const defaultWindow = __vite_ssr_import_0__.isClient ? window : void 0;
const defaultDocument = __vite_ssr_import_0__.isClient ? window.document : void 0;
const defaultNavigator = __vite_ssr_import_0__.isClient ? window.navigator : void 0;
const defaultLocation = __vite_ssr_import_0__.isClient ? window.location : void 0;

function useEventListener(...args) {
  let target;
  let event;
  let listener;
  let options;
  if (__vite_ssr_import_0__.isString(args[0])) {
    [event, listener, options] = args;
    target = defaultWindow;
  } else {
    [target, event, listener, options] = args;
  }
  if (!target)
    return __vite_ssr_import_0__.noop;
  let cleanup = __vite_ssr_import_0__.noop;
  const stopWatch = __vite_ssr_import_1__.watch(() => unrefElement(target), (el) => {
    cleanup();
    if (!el)
      return;
    el.addEventListener(event, listener, options);
    cleanup = () => {
      el.removeEventListener(event, listener, options);
      cleanup = __vite_ssr_import_0__.noop;
    };
  }, { immediate: true, flush: "post" });
  const stop = () => {
    stopWatch();
    cleanup();
  };
  __vite_ssr_import_0__.tryOnScopeDispose(stop);
  return stop;
}

function onClickOutside(target, handler, options = {}) {
  const { window = defaultWindow, ignore, capture = true } = options;
  if (!window)
    return;
  const shouldListen = __vite_ssr_import_1__.ref(true);
  let fallback;
  const listener = (event) => {
    window.clearTimeout(fallback);
    const el = unrefElement(target);
    const composedPath = event.composedPath();
    if (!el || el === event.target || composedPath.includes(el) || !shouldListen.value)
      return;
    if (ignore && ignore.length > 0) {
      if (ignore.some((target2) => {
        const el2 = unrefElement(target2);
        return el2 && (event.target === el2 || composedPath.includes(el2));
      }))
        return;
    }
    handler(event);
  };
  const cleanup = [
    useEventListener(window, "click", listener, { passive: true, capture }),
    useEventListener(window, "pointerdown", (e) => {
      const el = unrefElement(target);
      shouldListen.value = !!el && !e.composedPath().includes(el);
    }, { passive: true }),
    useEventListener(window, "pointerup", (e) => {
      if (e.button === 0) {
        const path = e.composedPath();
        e.composedPath = () => path;
        fallback = window.setTimeout(() => listener(e), 50);
      }
    }, { passive: true })
  ];
  const stop = () => cleanup.forEach((fn) => fn());
  return stop;
}

var __defProp$i = Object.defineProperty;
var __defProps$8 = Object.defineProperties;
var __getOwnPropDescs$8 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols$k = Object.getOwnPropertySymbols;
var __hasOwnProp$k = Object.prototype.hasOwnProperty;
var __propIsEnum$k = Object.prototype.propertyIsEnumerable;
var __defNormalProp$i = (obj, key, value) => key in obj ? __defProp$i(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$i = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$k.call(b, prop))
      __defNormalProp$i(a, prop, b[prop]);
  if (__getOwnPropSymbols$k)
    for (var prop of __getOwnPropSymbols$k(b)) {
      if (__propIsEnum$k.call(b, prop))
        __defNormalProp$i(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps$8 = (a, b) => __defProps$8(a, __getOwnPropDescs$8(b));
const createKeyPredicate = (keyFilter) => {
  if (typeof keyFilter === "function")
    return keyFilter;
  else if (typeof keyFilter === "string")
    return (event) => event.key === keyFilter;
  else if (Array.isArray(keyFilter))
    return (event) => keyFilter.includes(event.key);
  else if (keyFilter)
    return () => true;
  else
    return () => false;
};
function onKeyStroke(key, handler, options = {}) {
  const { target = defaultWindow, eventName = "keydown", passive = false } = options;
  const predicate = createKeyPredicate(key);
  const listener = (e) => {
    if (predicate(e))
      handler(e);
  };
  return useEventListener(target, eventName, listener, passive);
}
function onKeyDown(key, handler, options = {}) {
  return onKeyStroke(key, handler, __spreadProps$8(__spreadValues$i({}, options), { eventName: "keydown" }));
}
function onKeyPressed(key, handler, options = {}) {
  return onKeyStroke(key, handler, __spreadProps$8(__spreadValues$i({}, options), { eventName: "keypress" }));
}
function onKeyUp(key, handler, options = {}) {
  return onKeyStroke(key, handler, __spreadProps$8(__spreadValues$i({}, options), { eventName: "keyup" }));
}

const DEFAULT_DELAY = 500;
function onLongPress(target, handler, options) {
  const elementRef = __vite_ssr_import_1__.computed(() => unrefElement(target));
  let timeout = null;
  function clear() {
    if (timeout != null) {
      clearTimeout(timeout);
      timeout = null;
    }
  }
  function onDown(ev) {
    var _a;
    clear();
    timeout = setTimeout(() => handler(ev), (_a = options == null ? void 0 : options.delay) != null ? _a : DEFAULT_DELAY);
  }
  useEventListener(elementRef, "pointerdown", onDown);
  useEventListener(elementRef, "pointerup", clear);
  useEventListener(elementRef, "pointerleave", clear);
}

const isFocusedElementEditable = () => {
  const { activeElement, body } = document;
  if (!activeElement)
    return false;
  if (activeElement === body)
    return false;
  switch (activeElement.tagName) {
    case "INPUT":
    case "TEXTAREA":
      return true;
  }
  return activeElement.hasAttribute("contenteditable");
};
const isTypedCharValid = ({
  keyCode,
  metaKey,
  ctrlKey,
  altKey
}) => {
  if (metaKey || ctrlKey || altKey)
    return false;
  if (keyCode >= 48 && keyCode <= 57 || keyCode >= 96 && keyCode <= 105)
    return true;
  if (keyCode >= 65 && keyCode <= 90)
    return true;
  return false;
};
function onStartTyping(callback, options = {}) {
  const { document: document2 = defaultDocument } = options;
  const keydown = (event) => {
    !isFocusedElementEditable() && isTypedCharValid(event) && callback(event);
  };
  if (document2)
    useEventListener(document2, "keydown", keydown, { passive: true });
}

function templateRef(key, initialValue = null) {
  const instance = __vite_ssr_import_1__.getCurrentInstance();
  let _trigger = () => {
  };
  const element = __vite_ssr_import_1__.customRef((track, trigger) => {
    _trigger = trigger;
    return {
      get() {
        var _a, _b;
        track();
        return (_b = (_a = instance == null ? void 0 : instance.proxy) == null ? void 0 : _a.$refs[key]) != null ? _b : initialValue;
      },
      set() {
      }
    };
  });
  __vite_ssr_import_0__.tryOnMounted(_trigger);
  __vite_ssr_import_1__.onUpdated(_trigger);
  return element;
}

function useActiveElement(options = {}) {
  const { window = defaultWindow } = options;
  const counter = __vite_ssr_import_1__.ref(0);
  if (window) {
    useEventListener(window, "blur", () => counter.value += 1, true);
    useEventListener(window, "focus", () => counter.value += 1, true);
  }
  return __vite_ssr_import_1__.computed(() => {
    counter.value;
    return window == null ? void 0 : window.document.activeElement;
  });
}

function useAsyncQueue(tasks, options = {}) {
  const {
    interrupt = true,
    onError = __vite_ssr_import_0__.noop,
    onFinished = __vite_ssr_import_0__.noop
  } = options;
  const promiseState = {
    pending: "pending",
    rejected: "rejected",
    fulfilled: "fulfilled"
  };
  const initialResult = Array.from(new Array(tasks.length), () => ({ state: promiseState.pending, data: null }));
  const result = __vite_ssr_import_1__.reactive(initialResult);
  const activeIndex = __vite_ssr_import_1__.ref(-1);
  if (!tasks || tasks.length === 0) {
    onFinished();
    return {
      activeIndex,
      result
    };
  }
  function updateResult(state, res) {
    activeIndex.value++;
    result[activeIndex.value].data = res;
    result[activeIndex.value].state = state;
  }
  tasks.reduce((prev, curr) => {
    return prev.then((prevRes) => {
      var _a;
      if (((_a = result[activeIndex.value]) == null ? void 0 : _a.state) === promiseState.rejected && interrupt) {
        onFinished();
        return;
      }
      return curr(prevRes).then((currentRes) => {
        updateResult(promiseState.fulfilled, currentRes);
        activeIndex.value === tasks.length - 1 && onFinished();
        return currentRes;
      });
    }).catch((e) => {
      updateResult(promiseState.rejected, e);
      onError();
      return e;
    });
  }, Promise.resolve());
  return {
    activeIndex,
    result
  };
}

function useAsyncState(promise, initialState, options) {
  const {
    immediate = true,
    delay = 0,
    onError = __vite_ssr_import_0__.noop,
    resetOnExecute = true,
    shallow = true
  } = options != null ? options : {};
  const state = shallow ? __vite_ssr_import_1__.shallowRef(initialState) : __vite_ssr_import_1__.ref(initialState);
  const isReady = __vite_ssr_import_1__.ref(false);
  const isLoading = __vite_ssr_import_1__.ref(false);
  const error = __vite_ssr_import_1__.ref(void 0);
  async function execute(delay2 = 0, ...args) {
    if (resetOnExecute)
      state.value = initialState;
    error.value = void 0;
    isReady.value = false;
    isLoading.value = true;
    if (delay2 > 0)
      await __vite_ssr_import_0__.promiseTimeout(delay2);
    const _promise = typeof promise === "function" ? promise(...args) : promise;
    try {
      const data = await _promise;
      state.value = data;
      isReady.value = true;
    } catch (e) {
      error.value = e;
      onError(e);
    } finally {
      isLoading.value = false;
    }
    return state.value;
  }
  if (immediate)
    execute(delay);
  return {
    state,
    isReady,
    isLoading,
    error,
    execute
  };
}

function useBase64(target, options) {
  const base64 = __vite_ssr_import_1__.ref("");
  const promise = __vite_ssr_import_1__.ref();
  function execute() {
    if (!__vite_ssr_import_0__.isClient)
      return;
    promise.value = new Promise((resolve, reject) => {
      try {
        const _target = __vite_ssr_import_1__.unref(target);
        if (_target === void 0 || _target === null) {
          resolve("");
        } else if (typeof _target === "string") {
          resolve(blobToBase64(new Blob([_target], { type: "text/plain" })));
        } else if (_target instanceof Blob) {
          resolve(blobToBase64(_target));
        } else if (_target instanceof ArrayBuffer) {
          resolve(window.btoa(String.fromCharCode(...new Uint8Array(_target))));
        } else if (_target instanceof HTMLCanvasElement) {
          resolve(_target.toDataURL(options == null ? void 0 : options.type, options == null ? void 0 : options.quality));
        } else if (_target instanceof HTMLImageElement) {
          const img = _target.cloneNode(false);
          img.crossOrigin = "Anonymous";
          imgLoaded(img).then(() => {
            const canvas = document.createElement("canvas");
            const ctx = canvas.getContext("2d");
            canvas.width = img.width;
            canvas.height = img.height;
            ctx.drawImage(img, 0, 0, canvas.width, canvas.height);
            resolve(canvas.toDataURL(options == null ? void 0 : options.type, options == null ? void 0 : options.quality));
          }).catch(reject);
        } else {
          reject(new Error("target is unsupported types"));
        }
      } catch (error) {
        reject(error);
      }
    });
    promise.value.then((res) => base64.value = res);
    return promise.value;
  }
  __vite_ssr_import_1__.watch(target, execute, { immediate: true });
  return {
    base64,
    promise,
    execute
  };
}
function imgLoaded(img) {
  return new Promise((resolve, reject) => {
    if (!img.complete) {
      img.onload = () => {
        resolve();
      };
      img.onerror = reject;
    } else {
      resolve();
    }
  });
}
function blobToBase64(blob) {
  return new Promise((resolve, reject) => {
    const fr = new FileReader();
    fr.onload = (e) => {
      resolve(e.target.result);
    };
    fr.onerror = reject;
    fr.readAsDataURL(blob);
  });
}

function useBattery({ navigator = defaultNavigator } = {}) {
  const events = ["chargingchange", "chargingtimechange", "dischargingtimechange", "levelchange"];
  const isSupported = navigator && "getBattery" in navigator;
  const charging = __vite_ssr_import_1__.ref(false);
  const chargingTime = __vite_ssr_import_1__.ref(0);
  const dischargingTime = __vite_ssr_import_1__.ref(0);
  const level = __vite_ssr_import_1__.ref(1);
  let battery;
  function updateBatteryInfo() {
    charging.value = this.charging;
    chargingTime.value = this.chargingTime || 0;
    dischargingTime.value = this.dischargingTime || 0;
    level.value = this.level;
  }
  if (isSupported) {
    navigator.getBattery().then((_battery) => {
      battery = _battery;
      updateBatteryInfo.call(battery);
      for (const event of events)
        useEventListener(battery, event, updateBatteryInfo, { passive: true });
    });
  }
  return {
    isSupported,
    charging,
    chargingTime,
    dischargingTime,
    level
  };
}

function useBluetooth(options) {
  let {
    acceptAllDevices = false
  } = options || {};
  const {
    filters = void 0,
    optionalServices = void 0,
    navigator = defaultNavigator
  } = options || {};
  const isSupported = navigator && "bluetooth" in navigator;
  const device = __vite_ssr_import_1__.ref(void 0);
  const error = __vite_ssr_import_1__.ref(null);
  __vite_ssr_import_1__.watch(device, () => {
    connectToBluetoothGATTServer();
  });
  async function requestDevice() {
    if (!isSupported)
      return;
    error.value = null;
    if (filters && filters.length > 0)
      acceptAllDevices = false;
    try {
      device.value = await (navigator == null ? void 0 : navigator.bluetooth.requestDevice({
        acceptAllDevices,
        filters,
        optionalServices
      }));
    } catch (err) {
      error.value = err;
    }
  }
  const server = __vite_ssr_import_1__.ref();
  const isConnected = __vite_ssr_import_1__.computed(() => {
    var _a;
    return ((_a = server.value) == null ? void 0 : _a.connected) || false;
  });
  async function connectToBluetoothGATTServer() {
    error.value = null;
    if (device.value && device.value.gatt) {
      device.value.addEventListener("gattserverdisconnected", () => {
      });
      try {
        server.value = await device.value.gatt.connect();
      } catch (err) {
        error.value = err;
      }
    }
  }
  __vite_ssr_import_0__.tryOnMounted(() => {
    var _a;
    if (device.value)
      (_a = device.value.gatt) == null ? void 0 : _a.connect();
  });
  __vite_ssr_import_0__.tryOnScopeDispose(() => {
    var _a;
    if (device.value)
      (_a = device.value.gatt) == null ? void 0 : _a.disconnect();
  });
  return {
    isSupported,
    isConnected,
    device,
    requestDevice,
    server,
    error
  };
}

function useMediaQuery(query, options = {}) {
  const { window = defaultWindow } = options;
  const isSupported = Boolean(window && "matchMedia" in window);
  let mediaQuery;
  const matches = __vite_ssr_import_1__.ref(false);
  const update = () => {
    if (!isSupported)
      return;
    if (!mediaQuery)
      mediaQuery = window.matchMedia(query);
    matches.value = mediaQuery.matches;
  };
  __vite_ssr_import_0__.tryOnBeforeMount(() => {
    update();
    if (!mediaQuery)
      return;
    if ("addEventListener" in mediaQuery)
      mediaQuery.addEventListener("change", update);
    else
      mediaQuery.addListener(update);
    __vite_ssr_import_0__.tryOnScopeDispose(() => {
      if ("removeEventListener" in mediaQuery)
        mediaQuery.removeEventListener("change", update);
      else
        mediaQuery.removeListener(update);
    });
  });
  return matches;
}

const breakpointsTailwind = {
  "sm": 640,
  "md": 768,
  "lg": 1024,
  "xl": 1280,
  "2xl": 1536
};
const breakpointsBootstrapV5 = {
  sm: 576,
  md: 768,
  lg: 992,
  xl: 1200,
  xxl: 1400
};
const breakpointsVuetify = {
  xs: 600,
  sm: 960,
  md: 1264,
  lg: 1904
};
const breakpointsAntDesign = {
  xs: 480,
  sm: 576,
  md: 768,
  lg: 992,
  xl: 1200,
  xxl: 1600
};
const breakpointsQuasar = {
  xs: 600,
  sm: 1024,
  md: 1440,
  lg: 1920
};
const breakpointsSematic = {
  mobileS: 320,
  mobileM: 375,
  mobileL: 425,
  tablet: 768,
  laptop: 1024,
  laptopL: 1440,
  desktop4K: 2560
};

var __defProp$h = Object.defineProperty;
var __getOwnPropSymbols$j = Object.getOwnPropertySymbols;
var __hasOwnProp$j = Object.prototype.hasOwnProperty;
var __propIsEnum$j = Object.prototype.propertyIsEnumerable;
var __defNormalProp$h = (obj, key, value) => key in obj ? __defProp$h(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$h = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$j.call(b, prop))
      __defNormalProp$h(a, prop, b[prop]);
  if (__getOwnPropSymbols$j)
    for (var prop of __getOwnPropSymbols$j(b)) {
      if (__propIsEnum$j.call(b, prop))
        __defNormalProp$h(a, prop, b[prop]);
    }
  return a;
};
function useBreakpoints(breakpoints, options = {}) {
  function getValue(k, delta) {
    let v = breakpoints[k];
    if (delta != null)
      v = __vite_ssr_import_0__.increaseWithUnit(v, delta);
    if (typeof v === "number")
      v = `${v}px`;
    return v;
  }
  const { window = defaultWindow } = options;
  function match(query) {
    if (!window)
      return false;
    return window.matchMedia(query).matches;
  }
  const greater = (k) => {
    return useMediaQuery(`(min-width: ${getValue(k)})`, options);
  };
  const shortcutMethods = Object.keys(breakpoints).reduce((shortcuts, k) => {
    Object.defineProperty(shortcuts, k, {
      get: () => greater(k),
      enumerable: true,
      configurable: true
    });
    return shortcuts;
  }, {});
  return __spreadValues$h({
    greater,
    smaller(k) {
      return useMediaQuery(`(max-width: ${getValue(k, -0.1)})`, options);
    },
    between(a, b) {
      return useMediaQuery(`(min-width: ${getValue(a)}) and (max-width: ${getValue(b, -0.1)})`, options);
    },
    isGreater(k) {
      return match(`(min-width: ${getValue(k)})`);
    },
    isSmaller(k) {
      return match(`(max-width: ${getValue(k, -0.1)})`);
    },
    isInBetween(a, b) {
      return match(`(min-width: ${getValue(a)}) and (max-width: ${getValue(b, -0.1)})`);
    }
  }, shortcutMethods);
}

const useBroadcastChannel = (options) => {
  const {
    name,
    window = defaultWindow
  } = options;
  const isSupported = window && "BroadcastChannel" in window;
  const isClosed = __vite_ssr_import_1__.ref(false);
  const channel = __vite_ssr_import_1__.ref();
  const data = __vite_ssr_import_1__.ref();
  const error = __vite_ssr_import_1__.ref(null);
  const post = (data2) => {
    if (channel.value)
      channel.value.postMessage(data2);
  };
  const close = () => {
    if (channel.value)
      channel.value.close();
    isClosed.value = true;
  };
  if (isSupported) {
    __vite_ssr_import_0__.tryOnMounted(() => {
      error.value = null;
      channel.value = new BroadcastChannel(name);
      channel.value.addEventListener("message", (e) => {
        data.value = e.data;
      }, { passive: true });
      channel.value.addEventListener("messageerror", (e) => {
        error.value = e;
      }, { passive: true });
      channel.value.addEventListener("close", () => {
        isClosed.value = true;
      });
    });
  }
  __vite_ssr_import_0__.tryOnScopeDispose(() => {
    close();
  });
  return {
    isSupported,
    channel,
    data,
    post,
    close,
    error,
    isClosed
  };
};

function useBrowserLocation({ window = defaultWindow } = {}) {
  const buildState = (trigger) => {
    const { state: state2, length } = (window == null ? void 0 : window.history) || {};
    const { hash, host, hostname, href, origin, pathname, port, protocol, search } = (window == null ? void 0 : window.location) || {};
    return {
      trigger,
      state: state2,
      length,
      hash,
      host,
      hostname,
      href,
      origin,
      pathname,
      port,
      protocol,
      search
    };
  };
  const state = __vite_ssr_import_1__.ref(buildState("load"));
  if (window) {
    useEventListener(window, "popstate", () => state.value = buildState("popstate"), { passive: true });
    useEventListener(window, "hashchange", () => state.value = buildState("hashchange"), { passive: true });
  }
  return state;
}

function useCached(refValue, comparator = (a, b) => a === b, watchOptions) {
  const cachedValue = __vite_ssr_import_1__.ref(refValue.value);
  __vite_ssr_import_1__.watch(() => refValue.value, (value) => {
    if (!comparator(value, cachedValue.value))
      cachedValue.value = value;
  }, watchOptions);
  return cachedValue;
}

function useClamp(value, min, max) {
  const _value = __vite_ssr_import_1__.ref(value);
  return __vite_ssr_import_1__.computed({
    get() {
      return _value.value = __vite_ssr_import_0__.clamp(_value.value, __vite_ssr_import_1__.unref(min), __vite_ssr_import_1__.unref(max));
    },
    set(value2) {
      _value.value = __vite_ssr_import_0__.clamp(value2, __vite_ssr_import_1__.unref(min), __vite_ssr_import_1__.unref(max));
    }
  });
}

function useClipboard(options = {}) {
  const {
    navigator = defaultNavigator,
    read = false,
    source,
    copiedDuring = 1500
  } = options;
  const events = ["copy", "cut"];
  const isSupported = Boolean(navigator && "clipboard" in navigator);
  const text = __vite_ssr_import_1__.ref("");
  const copied = __vite_ssr_import_1__.ref(false);
  const timeout = __vite_ssr_import_0__.useTimeoutFn(() => copied.value = false, copiedDuring);
  function updateText() {
    navigator.clipboard.readText().then((value) => {
      text.value = value;
    });
  }
  if (isSupported && read) {
    for (const event of events)
      useEventListener(event, updateText);
  }
  async function copy(value = __vite_ssr_import_1__.unref(source)) {
    if (isSupported && value != null) {
      await navigator.clipboard.writeText(value);
      text.value = value;
      copied.value = true;
      timeout.start();
    }
  }
  return {
    isSupported,
    text,
    copied,
    copy
  };
}

const _global = typeof globalThis !== "undefined" ? globalThis : "undefined" !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
const globalKey = "__vueuse_ssr_handlers__";
_global[globalKey] = _global[globalKey] || {};
const handlers = _global[globalKey];
function getSSRHandler(key, fallback) {
  return handlers[key] || fallback;
}
function setSSRHandler(key, fn) {
  handlers[key] = fn;
}

function guessSerializerType(rawInit) {
  return rawInit == null ? "any" : rawInit instanceof Set ? "set" : rawInit instanceof Map ? "map" : rawInit instanceof Date ? "date" : typeof rawInit === "boolean" ? "boolean" : typeof rawInit === "string" ? "string" : typeof rawInit === "object" ? "object" : Array.isArray(rawInit) ? "object" : !Number.isNaN(rawInit) ? "number" : "any";
}

const StorageSerializers = {
  boolean: {
    read: (v) => v === "true",
    write: (v) => String(v)
  },
  object: {
    read: (v) => JSON.parse(v),
    write: (v) => JSON.stringify(v)
  },
  number: {
    read: (v) => Number.parseFloat(v),
    write: (v) => String(v)
  },
  any: {
    read: (v) => v,
    write: (v) => String(v)
  },
  string: {
    read: (v) => v,
    write: (v) => String(v)
  },
  map: {
    read: (v) => new Map(JSON.parse(v)),
    write: (v) => JSON.stringify(Array.from(v.entries()))
  },
  set: {
    read: (v) => new Set(JSON.parse(v)),
    write: (v) => JSON.stringify(Array.from(v))
  },
  date: {
    read: (v) => new Date(v),
    write: (v) => v.toISOString()
  }
};
function useStorage(key, initialValue, storage, options = {}) {
  var _a;
  const {
    flush = "pre",
    deep = true,
    listenToStorageChanges = true,
    writeDefaults = true,
    shallow,
    window = defaultWindow,
    eventFilter,
    onError = (e) => {
      console.error(e);
    }
  } = options;
  const data = (shallow ? __vite_ssr_import_1__.shallowRef : __vite_ssr_import_1__.ref)(initialValue);
  if (!storage) {
    try {
      storage = getSSRHandler("getDefaultStorage", () => {
        var _a2;
        return (_a2 = defaultWindow) == null ? void 0 : _a2.localStorage;
      })();
    } catch (e) {
      onError(e);
    }
  }
  if (!storage)
    return data;
  const rawInit = __vite_ssr_import_1__.unref(initialValue);
  const type = guessSerializerType(rawInit);
  const serializer = (_a = options.serializer) != null ? _a : StorageSerializers[type];
  const { pause: pauseWatch, resume: resumeWatch } = __vite_ssr_import_0__.pausableWatch(data, () => write(data.value), { flush, deep, eventFilter });
  if (window && listenToStorageChanges)
    useEventListener(window, "storage", update);
  update();
  return data;
  function write(v) {
    try {
      if (v == null)
        storage.removeItem(key);
      else
        storage.setItem(key, serializer.write(v));
    } catch (e) {
      onError(e);
    }
  }
  function read(event) {
    if (event && event.key !== key)
      return;
    pauseWatch();
    try {
      const rawValue = event ? event.newValue : storage.getItem(key);
      if (rawValue == null) {
        if (writeDefaults && rawInit !== null)
          storage.setItem(key, serializer.write(rawInit));
        return rawInit;
      } else if (typeof rawValue !== "string") {
        return rawValue;
      } else {
        return serializer.read(rawValue);
      }
    } catch (e) {
      onError(e);
    } finally {
      resumeWatch();
    }
  }
  function update(event) {
    if (event && event.key !== key)
      return;
    data.value = read(event);
  }
}

function usePreferredDark(options) {
  return useMediaQuery("(prefers-color-scheme: dark)", options);
}

var __defProp$g = Object.defineProperty;
var __getOwnPropSymbols$i = Object.getOwnPropertySymbols;
var __hasOwnProp$i = Object.prototype.hasOwnProperty;
var __propIsEnum$i = Object.prototype.propertyIsEnumerable;
var __defNormalProp$g = (obj, key, value) => key in obj ? __defProp$g(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$g = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$i.call(b, prop))
      __defNormalProp$g(a, prop, b[prop]);
  if (__getOwnPropSymbols$i)
    for (var prop of __getOwnPropSymbols$i(b)) {
      if (__propIsEnum$i.call(b, prop))
        __defNormalProp$g(a, prop, b[prop]);
    }
  return a;
};
function useColorMode(options = {}) {
  const {
    selector = "html",
    attribute = "class",
    window = defaultWindow,
    storage,
    storageKey = "vueuse-color-scheme",
    listenToStorageChanges = true,
    storageRef
  } = options;
  const modes = __spreadValues$g({
    auto: "",
    light: "light",
    dark: "dark"
  }, options.modes || {});
  const preferredDark = usePreferredDark({ window });
  const preferredMode = __vite_ssr_import_1__.computed(() => preferredDark.value ? "dark" : "light");
  const store = storageRef || (storageKey == null ? __vite_ssr_import_1__.ref("auto") : useStorage(storageKey, "auto", storage, { window, listenToStorageChanges }));
  const state = __vite_ssr_import_1__.computed({
    get() {
      return store.value === "auto" ? preferredMode.value : store.value;
    },
    set(v) {
      store.value = v;
    }
  });
  const updateHTMLAttrs = getSSRHandler("updateHTMLAttrs", (selector2, attribute2, value) => {
    const el = window == null ? void 0 : window.document.querySelector(selector2);
    if (!el)
      return;
    if (attribute2 === "class") {
      const current = value.split(/\s/g);
      Object.values(modes).flatMap((i) => (i || "").split(/\s/g)).filter(Boolean).forEach((v) => {
        if (current.includes(v))
          el.classList.add(v);
        else
          el.classList.remove(v);
      });
    } else {
      el.setAttribute(attribute2, value);
    }
  });
  function defaultOnChanged(mode) {
    var _a;
    updateHTMLAttrs(selector, attribute, (_a = modes[mode]) != null ? _a : mode);
  }
  function onChanged(mode) {
    if (options.onChanged)
      options.onChanged(mode, defaultOnChanged);
    else
      defaultOnChanged(mode);
  }
  __vite_ssr_import_1__.watch(state, onChanged, { flush: "post", immediate: true });
  __vite_ssr_import_0__.tryOnMounted(() => onChanged(state.value));
  return state;
}

function useConfirmDialog(revealed = __vite_ssr_import_1__.ref(false)) {
  const confirmHook = __vite_ssr_import_0__.createEventHook();
  const cancelHook = __vite_ssr_import_0__.createEventHook();
  const revealHook = __vite_ssr_import_0__.createEventHook();
  let _resolve = __vite_ssr_import_0__.noop;
  const reveal = (data) => {
    revealHook.trigger(data);
    revealed.value = true;
    return new Promise((resolve) => {
      _resolve = resolve;
    });
  };
  const confirm = (data) => {
    revealed.value = false;
    confirmHook.trigger(data);
    _resolve({ data, isCanceled: false });
  };
  const cancel = (data) => {
    revealed.value = false;
    cancelHook.trigger(data);
    _resolve({ data, isCanceled: true });
  };
  return {
    isRevealed: __vite_ssr_import_1__.computed(() => revealed.value),
    reveal,
    confirm,
    cancel,
    onReveal: revealHook.on,
    onConfirm: confirmHook.on,
    onCancel: cancelHook.on
  };
}

function useCssVar(prop, target, { window = defaultWindow, initialValue = "" } = {}) {
  const variable = __vite_ssr_import_1__.ref(initialValue);
  const elRef = __vite_ssr_import_1__.computed(() => {
    var _a;
    return unrefElement(target) || ((_a = window == null ? void 0 : window.document) == null ? void 0 : _a.documentElement);
  });
  __vite_ssr_import_1__.watch([elRef, () => __vite_ssr_import_1__.unref(prop)], ([el, prop2]) => {
    if (el && window) {
      const value = window.getComputedStyle(el).getPropertyValue(prop2);
      variable.value = value || initialValue;
    }
  }, { immediate: true });
  __vite_ssr_import_1__.watch(variable, (val) => {
    var _a;
    if ((_a = elRef.value) == null ? void 0 : _a.style)
      elRef.value.style.setProperty(__vite_ssr_import_1__.unref(prop), val);
  });
  return variable;
}

function useCurrentElement() {
  const vm = __vite_ssr_import_1__.getCurrentInstance();
  const count = __vite_ssr_import_1__.ref(0);
  __vite_ssr_import_1__.onUpdated(() => {
    count.value += 1;
  });
  __vite_ssr_import_1__.onMounted(() => {
    count.value += 1;
  });
  return __vite_ssr_import_1__.computed(() => {
    count.value;
    return vm.proxy.$el;
  });
}

function useCycleList(list, options) {
  var _a;
  const state = __vite_ssr_import_1__.shallowRef((_a = options == null ? void 0 : options.initialValue) != null ? _a : list[0]);
  const index = __vite_ssr_import_1__.computed({
    get() {
      var _a2;
      let index2 = (options == null ? void 0 : options.getIndexOf) ? options.getIndexOf(state.value, list) : list.indexOf(state.value);
      if (index2 < 0)
        index2 = (_a2 = options == null ? void 0 : options.fallbackIndex) != null ? _a2 : 0;
      return index2;
    },
    set(v) {
      set(v);
    }
  });
  function set(i) {
    const length = list.length;
    const index2 = (i % length + length) % length;
    const value = list[index2];
    state.value = value;
    return value;
  }
  function shift(delta = 1) {
    return set(index.value + delta);
  }
  function next(n = 1) {
    return shift(n);
  }
  function prev(n = 1) {
    return shift(-n);
  }
  return {
    state,
    index,
    next,
    prev
  };
}

var __defProp$f = Object.defineProperty;
var __defProps$7 = Object.defineProperties;
var __getOwnPropDescs$7 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols$h = Object.getOwnPropertySymbols;
var __hasOwnProp$h = Object.prototype.hasOwnProperty;
var __propIsEnum$h = Object.prototype.propertyIsEnumerable;
var __defNormalProp$f = (obj, key, value) => key in obj ? __defProp$f(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$f = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$h.call(b, prop))
      __defNormalProp$f(a, prop, b[prop]);
  if (__getOwnPropSymbols$h)
    for (var prop of __getOwnPropSymbols$h(b)) {
      if (__propIsEnum$h.call(b, prop))
        __defNormalProp$f(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps$7 = (a, b) => __defProps$7(a, __getOwnPropDescs$7(b));
function useDark(options = {}) {
  const {
    valueDark = "dark",
    valueLight = "",
    window = defaultWindow
  } = options;
  const mode = useColorMode(__spreadProps$7(__spreadValues$f({}, options), {
    onChanged: (mode2, defaultHandler) => {
      var _a;
      if (options.onChanged)
        (_a = options.onChanged) == null ? void 0 : _a.call(options, mode2 === "dark");
      else
        defaultHandler(mode2);
    },
    modes: {
      dark: valueDark,
      light: valueLight
    }
  }));
  const preferredDark = usePreferredDark({ window });
  const isDark = __vite_ssr_import_1__.computed({
    get() {
      return mode.value === "dark";
    },
    set(v) {
      if (v === preferredDark.value)
        mode.value = "auto";
      else
        mode.value = v ? "dark" : "light";
    }
  });
  return isDark;
}

const fnClone = (v) => JSON.parse(JSON.stringify(v));
const fnBypass = (v) => v;
const fnSetSource = (source, value) => source.value = value;
function defaultDump(clone) {
  return clone ? __vite_ssr_import_0__.isFunction(clone) ? clone : fnClone : fnBypass;
}
function defaultParse(clone) {
  return clone ? __vite_ssr_import_0__.isFunction(clone) ? clone : fnClone : fnBypass;
}
function useManualRefHistory(source, options = {}) {
  const {
    clone = false,
    dump = defaultDump(clone),
    parse = defaultParse(clone),
    setSource = fnSetSource
  } = options;
  function _createHistoryRecord() {
    return __vite_ssr_import_1__.markRaw({
      snapshot: dump(source.value),
      timestamp: __vite_ssr_import_0__.timestamp()
    });
  }
  const last = __vite_ssr_import_1__.ref(_createHistoryRecord());
  const undoStack = __vite_ssr_import_1__.ref([]);
  const redoStack = __vite_ssr_import_1__.ref([]);
  const _setSource = (record) => {
    setSource(source, parse(record.snapshot));
    last.value = record;
  };
  const commit = () => {
    undoStack.value.unshift(last.value);
    last.value = _createHistoryRecord();
    if (options.capacity && undoStack.value.length > options.capacity)
      undoStack.value.splice(options.capacity, Infinity);
    if (redoStack.value.length)
      redoStack.value.splice(0, redoStack.value.length);
  };
  const clear = () => {
    undoStack.value.splice(0, undoStack.value.length);
    redoStack.value.splice(0, redoStack.value.length);
  };
  const undo = () => {
    const state = undoStack.value.shift();
    if (state) {
      redoStack.value.unshift(last.value);
      _setSource(state);
    }
  };
  const redo = () => {
    const state = redoStack.value.shift();
    if (state) {
      undoStack.value.unshift(last.value);
      _setSource(state);
    }
  };
  const reset = () => {
    _setSource(last.value);
  };
  const history = __vite_ssr_import_1__.computed(() => [last.value, ...undoStack.value]);
  const canUndo = __vite_ssr_import_1__.computed(() => undoStack.value.length > 0);
  const canRedo = __vite_ssr_import_1__.computed(() => redoStack.value.length > 0);
  return {
    source,
    undoStack,
    redoStack,
    last,
    history,
    canUndo,
    canRedo,
    clear,
    commit,
    reset,
    undo,
    redo
  };
}

var __defProp$e = Object.defineProperty;
var __defProps$6 = Object.defineProperties;
var __getOwnPropDescs$6 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols$g = Object.getOwnPropertySymbols;
var __hasOwnProp$g = Object.prototype.hasOwnProperty;
var __propIsEnum$g = Object.prototype.propertyIsEnumerable;
var __defNormalProp$e = (obj, key, value) => key in obj ? __defProp$e(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$e = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$g.call(b, prop))
      __defNormalProp$e(a, prop, b[prop]);
  if (__getOwnPropSymbols$g)
    for (var prop of __getOwnPropSymbols$g(b)) {
      if (__propIsEnum$g.call(b, prop))
        __defNormalProp$e(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps$6 = (a, b) => __defProps$6(a, __getOwnPropDescs$6(b));
function useRefHistory(source, options = {}) {
  const {
    deep = false,
    flush = "pre",
    eventFilter
  } = options;
  const {
    eventFilter: composedFilter,
    pause,
    resume: resumeTracking,
    isActive: isTracking
  } = __vite_ssr_import_0__.pausableFilter(eventFilter);
  const {
    ignoreUpdates,
    ignorePrevAsyncUpdates,
    stop
  } = __vite_ssr_import_0__.watchIgnorable(source, commit, { deep, flush, eventFilter: composedFilter });
  function setSource(source2, value) {
    ignorePrevAsyncUpdates();
    ignoreUpdates(() => {
      source2.value = value;
    });
  }
  const manualHistory = useManualRefHistory(source, __spreadProps$6(__spreadValues$e({}, options), { clone: options.clone || deep, setSource }));
  const { clear, commit: manualCommit } = manualHistory;
  function commit() {
    ignorePrevAsyncUpdates();
    manualCommit();
  }
  function resume(commitNow) {
    resumeTracking();
    if (commitNow)
      commit();
  }
  function batch(fn) {
    let canceled = false;
    const cancel = () => canceled = true;
    ignoreUpdates(() => {
      fn(cancel);
    });
    if (!canceled)
      commit();
  }
  function dispose() {
    stop();
    clear();
  }
  return __spreadProps$6(__spreadValues$e({}, manualHistory), {
    isTracking,
    pause,
    resume,
    commit,
    batch,
    dispose
  });
}

var __defProp$d = Object.defineProperty;
var __defProps$5 = Object.defineProperties;
var __getOwnPropDescs$5 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols$f = Object.getOwnPropertySymbols;
var __hasOwnProp$f = Object.prototype.hasOwnProperty;
var __propIsEnum$f = Object.prototype.propertyIsEnumerable;
var __defNormalProp$d = (obj, key, value) => key in obj ? __defProp$d(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$d = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$f.call(b, prop))
      __defNormalProp$d(a, prop, b[prop]);
  if (__getOwnPropSymbols$f)
    for (var prop of __getOwnPropSymbols$f(b)) {
      if (__propIsEnum$f.call(b, prop))
        __defNormalProp$d(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps$5 = (a, b) => __defProps$5(a, __getOwnPropDescs$5(b));
function useDebouncedRefHistory(source, options = {}) {
  const filter = options.debounce ? __vite_ssr_import_0__.debounceFilter(options.debounce) : void 0;
  const history = useRefHistory(source, __spreadProps$5(__spreadValues$d({}, options), { eventFilter: filter }));
  return __spreadValues$d({}, history);
}

function useDeviceMotion(options = {}) {
  const {
    window = defaultWindow,
    eventFilter = __vite_ssr_import_0__.bypassFilter
  } = options;
  const acceleration = __vite_ssr_import_1__.ref({ x: null, y: null, z: null });
  const rotationRate = __vite_ssr_import_1__.ref({ alpha: null, beta: null, gamma: null });
  const interval = __vite_ssr_import_1__.ref(0);
  const accelerationIncludingGravity = __vite_ssr_import_1__.ref({
    x: null,
    y: null,
    z: null
  });
  if (window) {
    const onDeviceMotion = __vite_ssr_import_0__.createFilterWrapper(eventFilter, (event) => {
      acceleration.value = event.acceleration;
      accelerationIncludingGravity.value = event.accelerationIncludingGravity;
      rotationRate.value = event.rotationRate;
      interval.value = event.interval;
    });
    useEventListener(window, "devicemotion", onDeviceMotion);
  }
  return {
    acceleration,
    accelerationIncludingGravity,
    rotationRate,
    interval
  };
}

function useDeviceOrientation(options = {}) {
  const { window = defaultWindow } = options;
  const isSupported = Boolean(window && "DeviceOrientationEvent" in window);
  const isAbsolute = __vite_ssr_import_1__.ref(false);
  const alpha = __vite_ssr_import_1__.ref(null);
  const beta = __vite_ssr_import_1__.ref(null);
  const gamma = __vite_ssr_import_1__.ref(null);
  if (window && isSupported) {
    useEventListener(window, "deviceorientation", (event) => {
      isAbsolute.value = event.absolute;
      alpha.value = event.alpha;
      beta.value = event.beta;
      gamma.value = event.gamma;
    });
  }
  return {
    isSupported,
    isAbsolute,
    alpha,
    beta,
    gamma
  };
}

const DEVICE_PIXEL_RATIO_SCALES = [
  1,
  1.325,
  1.4,
  1.5,
  1.8,
  2,
  2.4,
  2.5,
  2.75,
  3,
  3.5,
  4
];
function useDevicePixelRatio({
  window = defaultWindow
} = {}) {
  if (!window) {
    return {
      pixelRatio: __vite_ssr_import_1__.ref(1)
    };
  }
  const pixelRatio = __vite_ssr_import_1__.ref(window.devicePixelRatio);
  const handleDevicePixelRatio = () => {
    pixelRatio.value = window.devicePixelRatio;
  };
  useEventListener(window, "resize", handleDevicePixelRatio, { passive: true });
  DEVICE_PIXEL_RATIO_SCALES.forEach((dppx) => {
    const mqlMin = useMediaQuery(`screen and (min-resolution: ${dppx}dppx)`);
    const mqlMax = useMediaQuery(`screen and (max-resolution: ${dppx}dppx)`);
    __vite_ssr_import_1__.watch([mqlMin, mqlMax], handleDevicePixelRatio);
  });
  return { pixelRatio };
}

function usePermission(permissionDesc, options = {}) {
  const {
    controls = false,
    navigator = defaultNavigator
  } = options;
  const isSupported = Boolean(navigator && "permissions" in navigator);
  let permissionStatus;
  const desc = typeof permissionDesc === "string" ? { name: permissionDesc } : permissionDesc;
  const state = __vite_ssr_import_1__.ref();
  const onChange = () => {
    if (permissionStatus)
      state.value = permissionStatus.state;
  };
  const query = __vite_ssr_import_0__.createSingletonPromise(async () => {
    if (!isSupported)
      return;
    if (!permissionStatus) {
      try {
        permissionStatus = await navigator.permissions.query(desc);
        useEventListener(permissionStatus, "change", onChange);
        onChange();
      } catch (e) {
        state.value = "prompt";
      }
    }
    return permissionStatus;
  });
  query();
  if (controls) {
    return {
      state,
      isSupported,
      query
    };
  } else {
    return state;
  }
}

function useDevicesList(options = {}) {
  const {
    navigator = defaultNavigator,
    requestPermissions = false,
    constraints = { audio: true, video: true },
    onUpdated
  } = options;
  const devices = __vite_ssr_import_1__.ref([]);
  const videoInputs = __vite_ssr_import_1__.computed(() => devices.value.filter((i) => i.kind === "videoinput"));
  const audioInputs = __vite_ssr_import_1__.computed(() => devices.value.filter((i) => i.kind === "audioinput"));
  const audioOutputs = __vite_ssr_import_1__.computed(() => devices.value.filter((i) => i.kind === "audiooutput"));
  let isSupported = false;
  const permissionGranted = __vite_ssr_import_1__.ref(false);
  async function update() {
    if (!isSupported)
      return;
    devices.value = await navigator.mediaDevices.enumerateDevices();
    onUpdated == null ? void 0 : onUpdated(devices.value);
  }
  async function ensurePermissions() {
    if (!isSupported)
      return false;
    if (permissionGranted.value)
      return true;
    const { state, query } = usePermission("camera", { controls: true });
    await query();
    if (state.value !== "granted") {
      const stream = await navigator.mediaDevices.getUserMedia(constraints);
      stream.getTracks().forEach((t) => t.stop());
      update();
      permissionGranted.value = true;
    } else {
      permissionGranted.value = true;
    }
    return permissionGranted.value;
  }
  if (navigator) {
    isSupported = Boolean(navigator.mediaDevices && navigator.mediaDevices.enumerateDevices);
    if (isSupported) {
      if (requestPermissions)
        ensurePermissions();
      useEventListener(navigator.mediaDevices, "devicechange", update);
      update();
    }
  }
  return {
    devices,
    ensurePermissions,
    permissionGranted,
    videoInputs,
    audioInputs,
    audioOutputs,
    isSupported
  };
}

function useDisplayMedia(options = {}) {
  var _a, _b;
  const enabled = __vite_ssr_import_1__.ref((_a = options.enabled) != null ? _a : false);
  const video = options.video;
  const audio = options.audio;
  const { navigator = defaultNavigator } = options;
  const isSupported = Boolean((_b = navigator == null ? void 0 : navigator.mediaDevices) == null ? void 0 : _b.getDisplayMedia);
  const constraint = { audio, video };
  const stream = __vite_ssr_import_1__.shallowRef();
  async function _start() {
    if (!isSupported || stream.value)
      return;
    stream.value = await navigator.mediaDevices.getDisplayMedia(constraint);
    return stream.value;
  }
  async function _stop() {
    var _a2;
    (_a2 = stream.value) == null ? void 0 : _a2.getTracks().forEach((t) => t.stop());
    stream.value = void 0;
  }
  function stop() {
    _stop();
    enabled.value = false;
  }
  async function start() {
    await _start();
    if (stream.value)
      enabled.value = true;
    return stream.value;
  }
  __vite_ssr_import_1__.watch(enabled, (v) => {
    if (v)
      _start();
    else
      _stop();
  }, { immediate: true });
  return {
    isSupported,
    stream,
    start,
    stop,
    enabled
  };
}

function useDocumentVisibility({ document = defaultDocument } = {}) {
  if (!document)
    return __vite_ssr_import_1__.ref("visible");
  const visibility = __vite_ssr_import_1__.ref(document.visibilityState);
  useEventListener(document, "visibilitychange", () => {
    visibility.value = document.visibilityState;
  });
  return visibility;
}

var __defProp$c = Object.defineProperty;
var __defProps$4 = Object.defineProperties;
var __getOwnPropDescs$4 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols$e = Object.getOwnPropertySymbols;
var __hasOwnProp$e = Object.prototype.hasOwnProperty;
var __propIsEnum$e = Object.prototype.propertyIsEnumerable;
var __defNormalProp$c = (obj, key, value) => key in obj ? __defProp$c(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$c = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$e.call(b, prop))
      __defNormalProp$c(a, prop, b[prop]);
  if (__getOwnPropSymbols$e)
    for (var prop of __getOwnPropSymbols$e(b)) {
      if (__propIsEnum$e.call(b, prop))
        __defNormalProp$c(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps$4 = (a, b) => __defProps$4(a, __getOwnPropDescs$4(b));
function useDraggable(target, options = {}) {
  var _a, _b;
  const draggingElement = (_a = options.draggingElement) != null ? _a : defaultWindow;
  const position = __vite_ssr_import_1__.ref((_b = options.initialValue) != null ? _b : { x: 0, y: 0 });
  const pressedDelta = __vite_ssr_import_1__.ref();
  const filterEvent = (e) => {
    if (options.pointerTypes)
      return options.pointerTypes.includes(e.pointerType);
    return true;
  };
  const handleEvent = (e) => {
    if (__vite_ssr_import_1__.unref(options.preventDefault))
      e.preventDefault();
    if (__vite_ssr_import_1__.unref(options.stopPropagation))
      e.stopPropagation();
  };
  const start = (e) => {
    var _a2;
    if (!filterEvent(e))
      return;
    if (__vite_ssr_import_1__.unref(options.exact) && e.target !== __vite_ssr_import_1__.unref(target))
      return;
    const rect = __vite_ssr_import_1__.unref(target).getBoundingClientRect();
    const pos = {
      x: e.pageX - rect.left,
      y: e.pageY - rect.top
    };
    if (((_a2 = options.onStart) == null ? void 0 : _a2.call(options, pos, e)) === false)
      return;
    pressedDelta.value = pos;
    handleEvent(e);
  };
  const move = (e) => {
    var _a2;
    if (!filterEvent(e))
      return;
    if (!pressedDelta.value)
      return;
    position.value = {
      x: e.pageX - pressedDelta.value.x,
      y: e.pageY - pressedDelta.value.y
    };
    (_a2 = options.onMove) == null ? void 0 : _a2.call(options, position.value, e);
    handleEvent(e);
  };
  const end = (e) => {
    var _a2;
    if (!filterEvent(e))
      return;
    if (!pressedDelta.value)
      return;
    pressedDelta.value = void 0;
    (_a2 = options.onEnd) == null ? void 0 : _a2.call(options, position.value, e);
    handleEvent(e);
  };
  if (__vite_ssr_import_0__.isClient) {
    useEventListener(target, "pointerdown", start, true);
    useEventListener(draggingElement, "pointermove", move, true);
    useEventListener(draggingElement, "pointerup", end, true);
  }
  return __spreadProps$4(__spreadValues$c({}, __vite_ssr_import_0__.toRefs(position)), {
    position,
    isDragging: __vite_ssr_import_1__.computed(() => !!pressedDelta.value),
    style: __vite_ssr_import_1__.computed(() => `left:${position.value.x}px;top:${position.value.y}px;`)
  });
}

function useDropZone(target, onDrop) {
  const isOverDropZone = __vite_ssr_import_1__.ref(false);
  let counter = 0;
  if (__vite_ssr_import_0__.isClient) {
    useEventListener(target, "dragenter", (event) => {
      event.preventDefault();
      counter += 1;
      isOverDropZone.value = true;
    });
    useEventListener(target, "dragover", (event) => {
      event.preventDefault();
    });
    useEventListener(target, "dragleave", (event) => {
      event.preventDefault();
      counter -= 1;
      if (counter === 0)
        isOverDropZone.value = false;
    });
    useEventListener(target, "drop", (event) => {
      var _a, _b;
      event.preventDefault();
      counter = 0;
      isOverDropZone.value = false;
      const files = Array.from((_b = (_a = event.dataTransfer) == null ? void 0 : _a.files) != null ? _b : []);
      if (files.length === 0) {
        onDrop(null);
        return;
      }
      onDrop(files);
    });
  }
  return {
    isOverDropZone
  };
}

var __getOwnPropSymbols$d = Object.getOwnPropertySymbols;
var __hasOwnProp$d = Object.prototype.hasOwnProperty;
var __propIsEnum$d = Object.prototype.propertyIsEnumerable;
var __objRest$2 = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp$d.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols$d)
    for (var prop of __getOwnPropSymbols$d(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum$d.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
function useResizeObserver(target, callback, options = {}) {
  const _a = options, { window = defaultWindow } = _a, observerOptions = __objRest$2(_a, ["window"]);
  let observer;
  const isSupported = window && "ResizeObserver" in window;
  const cleanup = () => {
    if (observer) {
      observer.disconnect();
      observer = void 0;
    }
  };
  const stopWatch = __vite_ssr_import_1__.watch(() => unrefElement(target), (el) => {
    cleanup();
    if (isSupported && window && el) {
      observer = new ResizeObserver(callback);
      observer.observe(el, observerOptions);
    }
  }, { immediate: true, flush: "post" });
  const stop = () => {
    cleanup();
    stopWatch();
  };
  __vite_ssr_import_0__.tryOnScopeDispose(stop);
  return {
    isSupported,
    stop
  };
}

function useElementBounding(target, options = {}) {
  const {
    reset = true,
    windowResize = true,
    windowScroll = true,
    immediate = true
  } = options;
  const height = __vite_ssr_import_1__.ref(0);
  const bottom = __vite_ssr_import_1__.ref(0);
  const left = __vite_ssr_import_1__.ref(0);
  const right = __vite_ssr_import_1__.ref(0);
  const top = __vite_ssr_import_1__.ref(0);
  const width = __vite_ssr_import_1__.ref(0);
  const x = __vite_ssr_import_1__.ref(0);
  const y = __vite_ssr_import_1__.ref(0);
  function update() {
    const el = unrefElement(target);
    if (!el) {
      if (reset) {
        height.value = 0;
        bottom.value = 0;
        left.value = 0;
        right.value = 0;
        top.value = 0;
        width.value = 0;
        x.value = 0;
        y.value = 0;
      }
      return;
    }
    const rect = el.getBoundingClientRect();
    height.value = rect.height;
    bottom.value = rect.bottom;
    left.value = rect.left;
    right.value = rect.right;
    top.value = rect.top;
    width.value = rect.width;
    x.value = rect.x;
    y.value = rect.y;
  }
  useResizeObserver(target, update);
  __vite_ssr_import_1__.watch(() => unrefElement(target), (ele) => !ele && update());
  if (windowScroll)
    useEventListener("scroll", update, { passive: true });
  if (windowResize)
    useEventListener("resize", update, { passive: true });
  __vite_ssr_import_0__.tryOnMounted(() => {
    if (immediate)
      update();
  });
  return {
    height,
    bottom,
    left,
    right,
    top,
    width,
    x,
    y,
    update
  };
}

function useRafFn(fn, options = {}) {
  const {
    immediate = true,
    window = defaultWindow
  } = options;
  const isActive = __vite_ssr_import_1__.ref(false);
  let rafId = null;
  function loop() {
    if (!isActive.value || !window)
      return;
    fn();
    rafId = window.requestAnimationFrame(loop);
  }
  function resume() {
    if (!isActive.value && window) {
      isActive.value = true;
      loop();
    }
  }
  function pause() {
    isActive.value = false;
    if (rafId != null && window) {
      window.cancelAnimationFrame(rafId);
      rafId = null;
    }
  }
  if (immediate)
    resume();
  __vite_ssr_import_0__.tryOnScopeDispose(pause);
  return {
    isActive,
    pause,
    resume
  };
}

var __defProp$b = Object.defineProperty;
var __getOwnPropSymbols$c = Object.getOwnPropertySymbols;
var __hasOwnProp$c = Object.prototype.hasOwnProperty;
var __propIsEnum$c = Object.prototype.propertyIsEnumerable;
var __defNormalProp$b = (obj, key, value) => key in obj ? __defProp$b(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$b = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$c.call(b, prop))
      __defNormalProp$b(a, prop, b[prop]);
  if (__getOwnPropSymbols$c)
    for (var prop of __getOwnPropSymbols$c(b)) {
      if (__propIsEnum$c.call(b, prop))
        __defNormalProp$b(a, prop, b[prop]);
    }
  return a;
};
function useElementByPoint(options) {
  const element = __vite_ssr_import_1__.ref(null);
  const { x, y } = options;
  const controls = useRafFn(() => {
    element.value = document.elementFromPoint(__vite_ssr_import_1__.unref(x), __vite_ssr_import_1__.unref(y));
  });
  return __spreadValues$b({
    element
  }, controls);
}

function useElementHover(el) {
  const isHovered = __vite_ssr_import_1__.ref(false);
  useEventListener(el, "mouseenter", () => isHovered.value = true);
  useEventListener(el, "mouseleave", () => isHovered.value = false);
  return isHovered;
}

function useElementSize(target, initialSize = { width: 0, height: 0 }, options = {}) {
  const width = __vite_ssr_import_1__.ref(initialSize.width);
  const height = __vite_ssr_import_1__.ref(initialSize.height);
  useResizeObserver(target, ([entry]) => {
    width.value = entry.contentRect.width;
    height.value = entry.contentRect.height;
  }, options);
  __vite_ssr_import_1__.watch(() => unrefElement(target), (ele) => {
    width.value = ele ? initialSize.width : 0;
    height.value = ele ? initialSize.height : 0;
  });
  return {
    width,
    height
  };
}

function useElementVisibility(element, { window = defaultWindow, scrollTarget } = {}) {
  const elementIsVisible = __vite_ssr_import_1__.ref(false);
  const testBounding = () => {
    if (!window)
      return;
    const document = window.document;
    if (!__vite_ssr_import_1__.unref(element)) {
      elementIsVisible.value = false;
    } else {
      const rect = __vite_ssr_import_1__.unref(element).getBoundingClientRect();
      elementIsVisible.value = rect.top <= (window.innerHeight || document.documentElement.clientHeight) && rect.left <= (window.innerWidth || document.documentElement.clientWidth) && rect.bottom >= 0 && rect.right >= 0;
    }
  };
  __vite_ssr_import_0__.tryOnMounted(testBounding);
  if (window)
    __vite_ssr_import_0__.tryOnMounted(() => useEventListener(__vite_ssr_import_1__.unref(scrollTarget) || window, "scroll", testBounding, { capture: false, passive: true }));
  return elementIsVisible;
}

const events = new Map();

function useEventBus(key) {
  const scope = __vite_ssr_import_1__.getCurrentScope();
  function on(listener) {
    var _a;
    const listeners = events.get(key) || [];
    listeners.push(listener);
    events.set(key, listeners);
    const _off = () => off(listener);
    (_a = scope == null ? void 0 : scope.cleanups) == null ? void 0 : _a.push(_off);
    return _off;
  }
  function once(listener) {
    function _listener(...args) {
      off(_listener);
      listener(...args);
    }
    return on(_listener);
  }
  function off(listener) {
    const listeners = events.get(key);
    if (!listeners)
      return;
    const index = listeners.indexOf(listener);
    if (index > -1)
      listeners.splice(index, 1);
    if (!listeners.length)
      events.delete(key);
  }
  function reset() {
    events.delete(key);
  }
  function emit(event, payload) {
    var _a;
    (_a = events.get(key)) == null ? void 0 : _a.forEach((v) => v(event, payload));
  }
  return { on, once, off, emit, reset };
}

function useEventSource(url, events = [], options = {}) {
  const event = __vite_ssr_import_1__.ref(null);
  const data = __vite_ssr_import_1__.ref(null);
  const status = __vite_ssr_import_1__.ref("CONNECTING");
  const eventSource = __vite_ssr_import_1__.ref(null);
  const error = __vite_ssr_import_1__.ref(null);
  const {
    withCredentials = false
  } = options;
  const close = () => {
    if (eventSource.value) {
      eventSource.value.close();
      eventSource.value = null;
      status.value = "CLOSED";
    }
  };
  const es = new EventSource(url, { withCredentials });
  eventSource.value = es;
  es.onopen = () => {
    status.value = "OPEN";
    error.value = null;
  };
  es.onerror = (e) => {
    status.value = "CLOSED";
    error.value = e;
  };
  es.onmessage = (e) => {
    event.value = null;
    data.value = e.data;
  };
  for (const event_name of events) {
    useEventListener(es, event_name, (e) => {
      event.value = event_name;
      data.value = e.data || null;
    });
  }
  __vite_ssr_import_0__.tryOnScopeDispose(() => {
    close();
  });
  return {
    eventSource,
    event,
    data,
    status,
    error,
    close
  };
}

function useEyeDropper(options = {}) {
  const { initialValue = "" } = options;
  const isSupported = Boolean("undefined" !== "undefined" && "EyeDropper" in window);
  const sRGBHex = __vite_ssr_import_1__.ref(initialValue);
  async function open(openOptions) {
    if (!isSupported)
      return;
    const eyeDropper = new window.EyeDropper();
    const result = await eyeDropper.open(openOptions);
    sRGBHex.value = result.sRGBHex;
    return result;
  }
  return { isSupported, sRGBHex, open };
}

function useFavicon(newIcon = null, options = {}) {
  const {
    baseUrl = "",
    rel = "icon",
    document = defaultDocument
  } = options;
  const favicon = __vite_ssr_import_1__.isRef(newIcon) ? newIcon : __vite_ssr_import_1__.ref(newIcon);
  const applyIcon = (icon) => {
    document == null ? void 0 : document.head.querySelectorAll(`link[rel*="${rel}"]`).forEach((el) => el.href = `${baseUrl}${icon}`);
  };
  __vite_ssr_import_1__.watch(favicon, (i, o) => {
    if (__vite_ssr_import_0__.isString(i) && i !== o)
      applyIcon(i);
  }, { immediate: true });
  return favicon;
}

var __defProp$a = Object.defineProperty;
var __defProps$3 = Object.defineProperties;
var __getOwnPropDescs$3 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols$b = Object.getOwnPropertySymbols;
var __hasOwnProp$b = Object.prototype.hasOwnProperty;
var __propIsEnum$b = Object.prototype.propertyIsEnumerable;
var __defNormalProp$a = (obj, key, value) => key in obj ? __defProp$a(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$a = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$b.call(b, prop))
      __defNormalProp$a(a, prop, b[prop]);
  if (__getOwnPropSymbols$b)
    for (var prop of __getOwnPropSymbols$b(b)) {
      if (__propIsEnum$b.call(b, prop))
        __defNormalProp$a(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps$3 = (a, b) => __defProps$3(a, __getOwnPropDescs$3(b));
const payloadMapping = {
  json: "application/json",
  text: "text/plain",
  formData: "multipart/form-data"
};
function isFetchOptions(obj) {
  return __vite_ssr_import_0__.containsProp(obj, "immediate", "refetch", "initialData", "timeout", "beforeFetch", "afterFetch", "onFetchError", "fetch");
}
function headersToObject(headers) {
  if (typeof Headers !== "undefined" && headers instanceof Headers)
    return Object.fromEntries([...headers.entries()]);
  return headers;
}
function createFetch(config = {}) {
  const _options = config.options || {};
  const _fetchOptions = config.fetchOptions || {};
  function useFactoryFetch(url, ...args) {
    const computedUrl = __vite_ssr_import_1__.computed(() => config.baseUrl ? joinPaths(__vite_ssr_import_1__.unref(config.baseUrl), __vite_ssr_import_1__.unref(url)) : __vite_ssr_import_1__.unref(url));
    let options = _options;
    let fetchOptions = _fetchOptions;
    if (args.length > 0) {
      if (isFetchOptions(args[0])) {
        options = __spreadValues$a(__spreadValues$a({}, options), args[0]);
      } else {
        fetchOptions = __spreadProps$3(__spreadValues$a(__spreadValues$a({}, fetchOptions), args[0]), {
          headers: __spreadValues$a(__spreadValues$a({}, headersToObject(fetchOptions.headers) || {}), headersToObject(args[0].headers) || {})
        });
      }
    }
    if (args.length > 1 && isFetchOptions(args[1]))
      options = __spreadValues$a(__spreadValues$a({}, options), args[1]);
    return useFetch(computedUrl, fetchOptions, options);
  }
  return useFactoryFetch;
}
function useFetch(url, ...args) {
  var _a;
  const supportsAbort = typeof AbortController === "function";
  let fetchOptions = {};
  let options = { immediate: true, refetch: false, timeout: 0 };
  const config = {
    method: "GET",
    type: "text",
    payload: void 0
  };
  if (args.length > 0) {
    if (isFetchOptions(args[0]))
      options = __spreadValues$a(__spreadValues$a({}, options), args[0]);
    else
      fetchOptions = args[0];
  }
  if (args.length > 1) {
    if (isFetchOptions(args[1]))
      options = __spreadValues$a(__spreadValues$a({}, options), args[1]);
  }
  const {
    fetch = (_a = defaultWindow) == null ? void 0 : _a.fetch,
    initialData,
    timeout
  } = options;
  const responseEvent = __vite_ssr_import_0__.createEventHook();
  const errorEvent = __vite_ssr_import_0__.createEventHook();
  const finallyEvent = __vite_ssr_import_0__.createEventHook();
  const isFinished = __vite_ssr_import_1__.ref(false);
  const isFetching = __vite_ssr_import_1__.ref(false);
  const aborted = __vite_ssr_import_1__.ref(false);
  const statusCode = __vite_ssr_import_1__.ref(null);
  const response = __vite_ssr_import_1__.shallowRef(null);
  const error = __vite_ssr_import_1__.shallowRef(null);
  const data = __vite_ssr_import_1__.shallowRef(initialData);
  const canAbort = __vite_ssr_import_1__.computed(() => supportsAbort && isFetching.value);
  let controller;
  let timer;
  const abort = () => {
    if (supportsAbort && controller)
      controller.abort();
  };
  const loading = (isLoading) => {
    isFetching.value = isLoading;
    isFinished.value = !isLoading;
  };
  if (timeout)
    timer = __vite_ssr_import_0__.useTimeoutFn(abort, timeout, { immediate: false });
  const execute = async (throwOnFailed = false) => {
    var _a2;
    loading(true);
    error.value = null;
    statusCode.value = null;
    aborted.value = false;
    controller = void 0;
    if (supportsAbort) {
      controller = new AbortController();
      controller.signal.onabort = () => aborted.value = true;
      fetchOptions = __spreadProps$3(__spreadValues$a({}, fetchOptions), {
        signal: controller.signal
      });
    }
    const defaultFetchOptions = {
      method: config.method,
      headers: {}
    };
    if (config.payload) {
      const headers = headersToObject(defaultFetchOptions.headers);
      if (config.payloadType)
        headers["Content-Type"] = (_a2 = payloadMapping[config.payloadType]) != null ? _a2 : config.payloadType;
      defaultFetchOptions.body = config.payloadType === "json" ? JSON.stringify(__vite_ssr_import_1__.unref(config.payload)) : __vite_ssr_import_1__.unref(config.payload);
    }
    let isCanceled = false;
    const context = { url: __vite_ssr_import_1__.unref(url), options: __spreadValues$a(__spreadValues$a({}, defaultFetchOptions), fetchOptions), cancel: () => {
      isCanceled = true;
    } };
    if (options.beforeFetch)
      Object.assign(context, await options.beforeFetch(context));
    if (isCanceled || !fetch) {
      loading(false);
      return Promise.resolve(null);
    }
    let responseData = null;
    if (timer)
      timer.start();
    return new Promise((resolve, reject) => {
      var _a3;
      fetch(context.url, __spreadProps$3(__spreadValues$a(__spreadValues$a({}, defaultFetchOptions), context.options), {
        headers: __spreadValues$a(__spreadValues$a({}, headersToObject(defaultFetchOptions.headers)), headersToObject((_a3 = context.options) == null ? void 0 : _a3.headers))
      })).then(async (fetchResponse) => {
        response.value = fetchResponse;
        statusCode.value = fetchResponse.status;
        responseData = await fetchResponse[config.type]();
        if (options.afterFetch && statusCode.value >= 200 && statusCode.value < 300)
          ({ data: responseData } = await options.afterFetch({ data: responseData, response: fetchResponse }));
        data.value = responseData;
        if (!fetchResponse.ok)
          throw new Error(fetchResponse.statusText);
        responseEvent.trigger(fetchResponse);
        return resolve(fetchResponse);
      }).catch(async (fetchError) => {
        let errorData = fetchError.message || fetchError.name;
        if (options.onFetchError)
          ({ data: responseData, error: errorData } = await options.onFetchError({ data: responseData, error: fetchError, response: response.value }));
        data.value = responseData;
        error.value = errorData;
        errorEvent.trigger(fetchError);
        if (throwOnFailed)
          return reject(fetchError);
        return resolve(null);
      }).finally(() => {
        loading(false);
        if (timer)
          timer.stop();
        finallyEvent.trigger(null);
      });
    });
  };
  __vite_ssr_import_1__.watch(() => [
    __vite_ssr_import_1__.unref(url),
    __vite_ssr_import_1__.unref(options.refetch)
  ], () => __vite_ssr_import_1__.unref(options.refetch) && execute(), { deep: true });
  const shell = {
    isFinished,
    statusCode,
    response,
    error,
    data,
    isFetching,
    canAbort,
    aborted,
    abort,
    execute,
    onFetchResponse: responseEvent.on,
    onFetchError: errorEvent.on,
    onFetchFinally: finallyEvent.on,
    get: setMethod("GET"),
    put: setMethod("PUT"),
    post: setMethod("POST"),
    delete: setMethod("DELETE"),
    patch: setMethod("PATCH"),
    head: setMethod("HEAD"),
    options: setMethod("OPTIONS"),
    json: setType("json"),
    text: setType("text"),
    blob: setType("blob"),
    arrayBuffer: setType("arrayBuffer"),
    formData: setType("formData")
  };
  function setMethod(method) {
    return (payload, payloadType) => {
      if (!isFetching.value) {
        config.method = method;
        config.payload = payload;
        config.payloadType = payloadType;
        if (__vite_ssr_import_1__.isRef(config.payload)) {
          __vite_ssr_import_1__.watch(() => [
            __vite_ssr_import_1__.unref(config.payload),
            __vite_ssr_import_1__.unref(options.refetch)
          ], () => __vite_ssr_import_1__.unref(options.refetch) && execute(), { deep: true });
        }
        if (!payloadType && __vite_ssr_import_1__.unref(payload) && Object.getPrototypeOf(__vite_ssr_import_1__.unref(payload)) === Object.prototype)
          config.payloadType = "json";
        return __spreadProps$3(__spreadValues$a({}, shell), {
          then(onFulfilled, onRejected) {
            return waitUntilFinished().then(onFulfilled, onRejected);
          }
        });
      }
      return void 0;
    };
  }
  function waitUntilFinished() {
    return new Promise((resolve, reject) => {
      __vite_ssr_import_0__.until(isFinished).toBe(true).then(() => resolve(shell)).catch((error2) => reject(error2));
    });
  }
  function setType(type) {
    return () => {
      if (!isFetching.value) {
        config.type = type;
        return __spreadProps$3(__spreadValues$a({}, shell), {
          then(onFulfilled, onRejected) {
            return waitUntilFinished().then(onFulfilled, onRejected);
          }
        });
      }
      return void 0;
    };
  }
  if (options.immediate)
    setTimeout(execute, 0);
  return __spreadProps$3(__spreadValues$a({}, shell), {
    then(onFulfilled, onRejected) {
      return waitUntilFinished().then(onFulfilled, onRejected);
    }
  });
}
function joinPaths(start, end) {
  if (!start.endsWith("/") && !end.startsWith("/"))
    return `${start}/${end}`;
  return `${start}${end}`;
}

var __defProp$9 = Object.defineProperty;
var __getOwnPropSymbols$a = Object.getOwnPropertySymbols;
var __hasOwnProp$a = Object.prototype.hasOwnProperty;
var __propIsEnum$a = Object.prototype.propertyIsEnumerable;
var __defNormalProp$9 = (obj, key, value) => key in obj ? __defProp$9(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$9 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$a.call(b, prop))
      __defNormalProp$9(a, prop, b[prop]);
  if (__getOwnPropSymbols$a)
    for (var prop of __getOwnPropSymbols$a(b)) {
      if (__propIsEnum$a.call(b, prop))
        __defNormalProp$9(a, prop, b[prop]);
    }
  return a;
};
function useFileSystemAccess(options = {}) {
  const {
    window: _window = defaultWindow,
    dataType = "Text"
  } = __vite_ssr_import_1__.unref(options);
  const window = _window;
  const isSupported = Boolean(window && "showSaveFilePicker" in window && "showOpenFilePicker" in window);
  const fileHandle = __vite_ssr_import_1__.ref();
  const data = __vite_ssr_import_1__.ref();
  const file = __vite_ssr_import_1__.ref();
  const fileName = __vite_ssr_import_1__.computed(() => {
    var _a, _b;
    return (_b = (_a = file.value) == null ? void 0 : _a.name) != null ? _b : "";
  });
  const fileMIME = __vite_ssr_import_1__.computed(() => {
    var _a, _b;
    return (_b = (_a = file.value) == null ? void 0 : _a.type) != null ? _b : "";
  });
  const fileSize = __vite_ssr_import_1__.computed(() => {
    var _a, _b;
    return (_b = (_a = file.value) == null ? void 0 : _a.size) != null ? _b : 0;
  });
  const fileLastModified = __vite_ssr_import_1__.computed(() => {
    var _a, _b;
    return (_b = (_a = file.value) == null ? void 0 : _a.lastModified) != null ? _b : 0;
  });
  async function open(_options = {}) {
    if (!isSupported)
      return;
    const [handle] = await window.showOpenFilePicker(__spreadValues$9(__spreadValues$9({}, __vite_ssr_import_1__.unref(options)), _options));
    fileHandle.value = handle;
    await updateFile();
    await updateData();
  }
  async function create(_options = {}) {
    if (!isSupported)
      return;
    fileHandle.value = await window.showSaveFilePicker(__spreadValues$9(__spreadValues$9({}, __vite_ssr_import_1__.unref(options)), _options));
    data.value = void 0;
    await updateFile();
    await updateData();
  }
  async function save(_options = {}) {
    if (!isSupported)
      return;
    if (!fileHandle.value)
      return saveAs(_options);
    if (data.value) {
      const writableStream = await fileHandle.value.createWritable();
      await writableStream.write(data.value);
      await writableStream.close();
    }
    await updateFile();
  }
  async function saveAs(_options = {}) {
    if (!isSupported)
      return;
    fileHandle.value = await window.showSaveFilePicker(__spreadValues$9(__spreadValues$9({}, __vite_ssr_import_1__.unref(options)), _options));
    if (data.value) {
      const writableStream = await fileHandle.value.createWritable();
      await writableStream.write(data.value);
      await writableStream.close();
    }
    await updateFile();
  }
  async function updateFile() {
    var _a;
    file.value = await ((_a = fileHandle.value) == null ? void 0 : _a.getFile());
  }
  async function updateData() {
    var _a, _b;
    if (__vite_ssr_import_1__.unref(dataType) === "Text")
      data.value = await ((_a = file.value) == null ? void 0 : _a.text());
    if (__vite_ssr_import_1__.unref(dataType) === "ArrayBuffer")
      data.value = await ((_b = file.value) == null ? void 0 : _b.arrayBuffer());
    if (__vite_ssr_import_1__.unref(dataType) === "Blob")
      data.value = file.value;
  }
  __vite_ssr_import_1__.watch(() => __vite_ssr_import_1__.unref(dataType), updateData);
  return {
    isSupported,
    data,
    file,
    fileName,
    fileMIME,
    fileSize,
    fileLastModified,
    open,
    create,
    save,
    saveAs,
    updateData
  };
}

function useFocus(target, options = {}) {
  const { initialValue = false } = options;
  const activeElement = useActiveElement(options);
  const targetElement = __vite_ssr_import_1__.computed(() => unrefElement(target));
  const focused = __vite_ssr_import_1__.computed({
    get() {
      return __vite_ssr_import_0__.isDef(activeElement.value) && __vite_ssr_import_0__.isDef(targetElement.value) && activeElement.value === targetElement.value;
    },
    set(value) {
      var _a, _b;
      if (!value && focused.value)
        (_a = targetElement.value) == null ? void 0 : _a.blur();
      if (value && !focused.value)
        (_b = targetElement.value) == null ? void 0 : _b.focus();
    }
  });
  __vite_ssr_import_1__.watch(targetElement, () => {
    focused.value = initialValue;
  }, { immediate: true, flush: "post" });
  return { focused };
}

function useFocusWithin(target, options = {}) {
  const activeElement = useActiveElement(options);
  const targetElement = __vite_ssr_import_1__.computed(() => unrefElement(target));
  const focused = __vite_ssr_import_1__.computed(() => targetElement.value && activeElement.value ? targetElement.value.contains(activeElement.value) : false);
  return { focused };
}

function useFps(options) {
  var _a;
  const fps = __vite_ssr_import_1__.ref(0);
  if (typeof performance === "undefined")
    return fps;
  const every = (_a = options == null ? void 0 : options.every) != null ? _a : 10;
  let last = performance.now();
  let ticks = 0;
  useRafFn(() => {
    ticks += 1;
    if (ticks >= every) {
      const now = performance.now();
      const diff = now - last;
      fps.value = Math.round(1e3 / (diff / ticks));
      last = now;
      ticks = 0;
    }
  });
  return fps;
}

const functionsMap = [
  [
    "requestFullscreen",
    "exitFullscreen",
    "fullscreenElement",
    "fullscreenEnabled",
    "fullscreenchange",
    "fullscreenerror"
  ],
  [
    "webkitRequestFullscreen",
    "webkitExitFullscreen",
    "webkitFullscreenElement",
    "webkitFullscreenEnabled",
    "webkitfullscreenchange",
    "webkitfullscreenerror"
  ],
  [
    "webkitRequestFullScreen",
    "webkitCancelFullScreen",
    "webkitCurrentFullScreenElement",
    "webkitCancelFullScreen",
    "webkitfullscreenchange",
    "webkitfullscreenerror"
  ],
  [
    "mozRequestFullScreen",
    "mozCancelFullScreen",
    "mozFullScreenElement",
    "mozFullScreenEnabled",
    "mozfullscreenchange",
    "mozfullscreenerror"
  ],
  [
    "msRequestFullscreen",
    "msExitFullscreen",
    "msFullscreenElement",
    "msFullscreenEnabled",
    "MSFullscreenChange",
    "MSFullscreenError"
  ]
];
function useFullscreen(target, options = {}) {
  const { document = defaultDocument, autoExit = false } = options;
  const targetRef = target || (document == null ? void 0 : document.querySelector("html"));
  const isFullscreen = __vite_ssr_import_1__.ref(false);
  let isSupported = false;
  let map = functionsMap[0];
  if (!document) {
    isSupported = false;
  } else {
    for (const m of functionsMap) {
      if (m[1] in document) {
        map = m;
        isSupported = true;
        break;
      }
    }
  }
  const [REQUEST, EXIT, ELEMENT, , EVENT] = map;
  async function exit() {
    if (!isSupported)
      return;
    if (document == null ? void 0 : document[ELEMENT])
      await document[EXIT]();
    isFullscreen.value = false;
  }
  async function enter() {
    if (!isSupported)
      return;
    await exit();
    const target2 = unrefElement(targetRef);
    if (target2) {
      await target2[REQUEST]();
      isFullscreen.value = true;
    }
  }
  async function toggle() {
    if (isFullscreen.value)
      await exit();
    else
      await enter();
  }
  if (document) {
    useEventListener(document, EVENT, () => {
      isFullscreen.value = !!(document == null ? void 0 : document[ELEMENT]);
    }, false);
  }
  if (autoExit)
    __vite_ssr_import_0__.tryOnScopeDispose(exit);
  return {
    isSupported,
    isFullscreen,
    enter,
    exit,
    toggle
  };
}

function mapGamepadToXbox360Controller(gamepad) {
  return __vite_ssr_import_1__.computed(() => {
    if (gamepad.value) {
      return {
        buttons: {
          a: gamepad.value.buttons[0],
          b: gamepad.value.buttons[1],
          x: gamepad.value.buttons[2],
          y: gamepad.value.buttons[3]
        },
        bumper: {
          left: gamepad.value.buttons[4],
          right: gamepad.value.buttons[5]
        },
        triggers: {
          left: gamepad.value.buttons[6],
          right: gamepad.value.buttons[7]
        },
        stick: {
          left: {
            horizontal: gamepad.value.axes[0],
            vertical: gamepad.value.axes[1],
            button: gamepad.value.buttons[10]
          },
          right: {
            horizontal: gamepad.value.axes[2],
            vertical: gamepad.value.axes[3],
            button: gamepad.value.buttons[11]
          }
        },
        dpad: {
          up: gamepad.value.buttons[12],
          down: gamepad.value.buttons[13],
          left: gamepad.value.buttons[14],
          right: gamepad.value.buttons[15]
        },
        back: gamepad.value.buttons[8],
        start: gamepad.value.buttons[9]
      };
    }
    return null;
  });
}
function useGamepad(options = {}) {
  const {
    navigator = defaultNavigator
  } = options;
  const isSupported = navigator && "getGamepads" in navigator;
  const gamepads = __vite_ssr_import_1__.ref([]);
  const onConnectedHook = __vite_ssr_import_0__.createEventHook();
  const onDisconnectedHook = __vite_ssr_import_0__.createEventHook();
  const stateFromGamepad = (gamepad) => {
    const hapticActuators = [];
    const vibrationActuator = "vibrationActuator" in gamepad ? gamepad.vibrationActuator : null;
    if (vibrationActuator)
      hapticActuators.push(vibrationActuator);
    if (gamepad.hapticActuators)
      hapticActuators.push(...gamepad.hapticActuators);
    return {
      id: gamepad.id,
      hapticActuators,
      index: gamepad.index,
      mapping: gamepad.mapping,
      connected: gamepad.connected,
      timestamp: gamepad.timestamp,
      axes: gamepad.axes.map((axes) => axes),
      buttons: gamepad.buttons.map((button) => ({ pressed: button.pressed, touched: button.touched, value: button.value }))
    };
  };
  const updateGamepadState = () => {
    const _gamepads = (navigator == null ? void 0 : navigator.getGamepads()) || [];
    for (let i = 0; i < _gamepads.length; ++i) {
      const gamepad = _gamepads[i];
      if (gamepad) {
        const index = gamepads.value.findIndex(({ index: index2 }) => index2 === gamepad.index);
        if (index > -1)
          gamepads.value[index] = stateFromGamepad(gamepad);
      }
    }
  };
  const { isActive, pause, resume } = useRafFn(updateGamepadState);
  const onGamepadConnected = (gamepad) => {
    if (!gamepads.value.some(({ index }) => index === gamepad.index)) {
      gamepads.value.push(stateFromGamepad(gamepad));
      onConnectedHook.trigger(gamepad.index);
    }
    resume();
  };
  const onGamepadDisconnected = (gamepad) => {
    gamepads.value = gamepads.value.filter((x) => x.index !== gamepad.index);
    onDisconnectedHook.trigger(gamepad.index);
  };
  useEventListener("gamepadconnected", (e) => onGamepadConnected(e.gamepad));
  useEventListener("gamepaddisconnected", (e) => onGamepadDisconnected(e.gamepad));
  __vite_ssr_import_0__.tryOnMounted(() => {
    const _gamepads = (navigator == null ? void 0 : navigator.getGamepads()) || [];
    if (_gamepads) {
      for (let i = 0; i < _gamepads.length; ++i) {
        const gamepad = _gamepads[i];
        if (gamepad)
          onGamepadConnected(gamepad);
      }
    }
  });
  pause();
  return {
    isSupported,
    onConnected: onConnectedHook.on,
    onDisconnected: onDisconnectedHook.on,
    gamepads,
    pause,
    resume,
    isActive
  };
}

function useGeolocation(options = {}) {
  const {
    enableHighAccuracy = true,
    maximumAge = 3e4,
    timeout = 27e3,
    navigator = defaultNavigator
  } = options;
  const isSupported = navigator && "geolocation" in navigator;
  const locatedAt = __vite_ssr_import_1__.ref(null);
  const error = __vite_ssr_import_1__.ref(null);
  const coords = __vite_ssr_import_1__.ref({
    accuracy: 0,
    latitude: Infinity,
    longitude: Infinity,
    altitude: null,
    altitudeAccuracy: null,
    heading: null,
    speed: null
  });
  function updatePosition(position) {
    locatedAt.value = position.timestamp;
    coords.value = position.coords;
    error.value = null;
  }
  let watcher;
  if (isSupported) {
    watcher = navigator.geolocation.watchPosition(updatePosition, (err) => error.value = err, {
      enableHighAccuracy,
      maximumAge,
      timeout
    });
  }
  __vite_ssr_import_0__.tryOnScopeDispose(() => {
    if (watcher && navigator)
      navigator.geolocation.clearWatch(watcher);
  });
  return {
    isSupported,
    coords,
    locatedAt,
    error
  };
}

const defaultEvents$1 = ["mousemove", "mousedown", "resize", "keydown", "touchstart", "wheel"];
const oneMinute = 6e4;
function useIdle(timeout = oneMinute, options = {}) {
  const {
    initialState = false,
    listenForVisibilityChange = true,
    events = defaultEvents$1,
    window = defaultWindow,
    eventFilter = __vite_ssr_import_0__.throttleFilter(50)
  } = options;
  const idle = __vite_ssr_import_1__.ref(initialState);
  const lastActive = __vite_ssr_import_1__.ref(__vite_ssr_import_0__.timestamp());
  let timer;
  const onEvent = __vite_ssr_import_0__.createFilterWrapper(eventFilter, () => {
    idle.value = false;
    lastActive.value = __vite_ssr_import_0__.timestamp();
    clearTimeout(timer);
    timer = setTimeout(() => idle.value = true, timeout);
  });
  if (window) {
    const document = window.document;
    for (const event of events)
      useEventListener(window, event, onEvent, { passive: true });
    if (listenForVisibilityChange) {
      useEventListener(document, "visibilitychange", () => {
        if (!document.hidden)
          onEvent();
      });
    }
  }
  timer = setTimeout(() => idle.value = true, timeout);
  return { idle, lastActive };
}

var __defProp$8 = Object.defineProperty;
var __getOwnPropSymbols$9 = Object.getOwnPropertySymbols;
var __hasOwnProp$9 = Object.prototype.hasOwnProperty;
var __propIsEnum$9 = Object.prototype.propertyIsEnumerable;
var __defNormalProp$8 = (obj, key, value) => key in obj ? __defProp$8(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$8 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$9.call(b, prop))
      __defNormalProp$8(a, prop, b[prop]);
  if (__getOwnPropSymbols$9)
    for (var prop of __getOwnPropSymbols$9(b)) {
      if (__propIsEnum$9.call(b, prop))
        __defNormalProp$8(a, prop, b[prop]);
    }
  return a;
};
async function loadImage(options) {
  return new Promise((resolve, reject) => {
    const img = new Image();
    const { src, srcset, sizes } = options;
    img.src = src;
    if (srcset)
      img.srcset = srcset;
    if (sizes)
      img.sizes = sizes;
    img.onload = () => resolve(img);
    img.onerror = reject;
  });
}
const useImage = (options, asyncStateOptions = {}) => {
  const state = useAsyncState(() => loadImage(__vite_ssr_import_1__.unref(options)), void 0, __spreadValues$8({
    resetOnExecute: true
  }, asyncStateOptions));
  __vite_ssr_import_1__.watch(() => __vite_ssr_import_1__.unref(options), () => state.execute(asyncStateOptions.delay), { deep: true });
  return state;
};

function useScroll(element, options = {}) {
  const {
    throttle = 0,
    idle = 200,
    onStop = __vite_ssr_import_0__.noop,
    onScroll = __vite_ssr_import_0__.noop,
    offset = {
      left: 0,
      right: 0,
      top: 0,
      bottom: 0
    },
    eventListenerOptions = {
      capture: false,
      passive: true
    }
  } = options;
  const x = __vite_ssr_import_1__.ref(0);
  const y = __vite_ssr_import_1__.ref(0);
  const isScrolling = __vite_ssr_import_1__.ref(false);
  const arrivedState = __vite_ssr_import_1__.reactive({
    left: true,
    right: false,
    top: true,
    bottom: false
  });
  const directions = __vite_ssr_import_1__.reactive({
    left: false,
    right: false,
    top: false,
    bottom: false
  });
  if (element) {
    const onScrollEnd = __vite_ssr_import_0__.useDebounceFn((e) => {
      isScrolling.value = false;
      directions.left = false;
      directions.right = false;
      directions.top = false;
      directions.bottom = false;
      onStop(e);
    }, throttle + idle);
    const onScrollHandler = (e) => {
      const eventTarget = e.target === document ? e.target.documentElement : e.target;
      const scrollLeft = eventTarget.scrollLeft;
      directions.left = scrollLeft < x.value;
      directions.right = scrollLeft > x.value;
      arrivedState.left = scrollLeft <= 0 + (offset.left || 0);
      arrivedState.right = scrollLeft + eventTarget.clientWidth >= eventTarget.scrollWidth - (offset.right || 0);
      x.value = scrollLeft;
      let scrollTop = eventTarget.scrollTop;
      if (e.target === document && !scrollTop)
        scrollTop = document.body.scrollTop;
      directions.top = scrollTop < y.value;
      directions.bottom = scrollTop > y.value;
      arrivedState.top = scrollTop <= 0 + (offset.top || 0);
      arrivedState.bottom = scrollTop + eventTarget.clientHeight >= eventTarget.scrollHeight - (offset.bottom || 0);
      y.value = scrollTop;
      isScrolling.value = true;
      onScrollEnd(e);
      onScroll(e);
    };
    useEventListener(element, "scroll", throttle ? __vite_ssr_import_0__.useThrottleFn(onScrollHandler, throttle) : onScrollHandler, eventListenerOptions);
  }
  return {
    x,
    y,
    isScrolling,
    arrivedState,
    directions
  };
}

var __defProp$7 = Object.defineProperty;
var __defProps$2 = Object.defineProperties;
var __getOwnPropDescs$2 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols$8 = Object.getOwnPropertySymbols;
var __hasOwnProp$8 = Object.prototype.hasOwnProperty;
var __propIsEnum$8 = Object.prototype.propertyIsEnumerable;
var __defNormalProp$7 = (obj, key, value) => key in obj ? __defProp$7(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$7 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$8.call(b, prop))
      __defNormalProp$7(a, prop, b[prop]);
  if (__getOwnPropSymbols$8)
    for (var prop of __getOwnPropSymbols$8(b)) {
      if (__propIsEnum$8.call(b, prop))
        __defNormalProp$7(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps$2 = (a, b) => __defProps$2(a, __getOwnPropDescs$2(b));
function useInfiniteScroll(element, onLoadMore, options = {}) {
  var _a, _b;
  const direction = (_a = options.direction) != null ? _a : "bottom";
  const state = __vite_ssr_import_1__.reactive(useScroll(element, __spreadProps$2(__spreadValues$7({}, options), {
    offset: __spreadValues$7({
      [direction]: (_b = options.distance) != null ? _b : 0
    }, options.offset)
  })));
  __vite_ssr_import_1__.watch(() => state.arrivedState[direction], async (v) => {
    var _a2, _b2;
    if (v) {
      const elem = __vite_ssr_import_1__.unref(element);
      const previous = {
        height: (_a2 = elem == null ? void 0 : elem.scrollHeight) != null ? _a2 : 0,
        width: (_b2 = elem == null ? void 0 : elem.scrollWidth) != null ? _b2 : 0
      };
      await onLoadMore(state);
      if (options.preserveScrollPosition && elem) {
        __vite_ssr_import_1__.nextTick(() => {
          elem.scrollTo({
            top: elem.scrollHeight - previous.height,
            left: elem.scrollWidth - previous.width
          });
        });
      }
    }
  });
}

function useIntersectionObserver(target, callback, options = {}) {
  const {
    root,
    rootMargin = "0px",
    threshold = 0.1,
    window = defaultWindow
  } = options;
  const isSupported = window && "IntersectionObserver" in window;
  let cleanup = __vite_ssr_import_0__.noop;
  const stopWatch = isSupported ? __vite_ssr_import_1__.watch(() => ({
    el: unrefElement(target),
    root: unrefElement(root)
  }), ({ el, root: root2 }) => {
    cleanup();
    if (!el)
      return;
    const observer = new IntersectionObserver(callback, {
      root: root2,
      rootMargin,
      threshold
    });
    observer.observe(el);
    cleanup = () => {
      observer.disconnect();
      cleanup = __vite_ssr_import_0__.noop;
    };
  }, { immediate: true, flush: "post" }) : __vite_ssr_import_0__.noop;
  const stop = () => {
    cleanup();
    stopWatch();
  };
  __vite_ssr_import_0__.tryOnScopeDispose(stop);
  return {
    isSupported,
    stop
  };
}

const defaultEvents = ["mousedown", "mouseup", "keydown", "keyup"];
function useKeyModifier(modifier, options = {}) {
  const {
    events = defaultEvents,
    document = defaultDocument,
    initial = null
  } = options;
  const state = __vite_ssr_import_1__.ref(initial);
  if (document) {
    events.forEach((listenerEvent) => {
      useEventListener(document, listenerEvent, (evt) => {
        if (typeof evt.getModifierState === "function")
          state.value = evt.getModifierState(modifier);
      });
    });
  }
  return state;
}

function useLocalStorage(key, initialValue, options = {}) {
  const { window = defaultWindow } = options;
  return useStorage(key, initialValue, window == null ? void 0 : window.localStorage, options);
}

const DefaultMagicKeysAliasMap = {
  ctrl: "control",
  command: "meta",
  cmd: "meta",
  option: "alt",
  up: "arrowup",
  down: "arrowdown",
  left: "arrowleft",
  right: "arrowright"
};

function useMagicKeys(options = {}) {
  const {
    reactive: useReactive = false,
    target = defaultWindow,
    aliasMap = DefaultMagicKeysAliasMap,
    passive = true,
    onEventFired = __vite_ssr_import_0__.noop
  } = options;
  const current = __vite_ssr_import_1__.reactive(new Set());
  const obj = { toJSON() {
    return {};
  }, current };
  const refs = useReactive ? __vite_ssr_import_1__.reactive(obj) : obj;
  const metaDeps = new Set();
  function setRefs(key, value) {
    if (key in refs) {
      if (useReactive)
        refs[key] = value;
      else
        refs[key].value = value;
    }
  }
  function updateRefs(e, value) {
    var _a, _b;
    const key = (_a = e.key) == null ? void 0 : _a.toLowerCase();
    const code = (_b = e.code) == null ? void 0 : _b.toLowerCase();
    const values = [code, key].filter(Boolean);
    if (code) {
      if (value)
        current.add(e.code);
      else
        current.delete(e.code);
    }
    for (const key2 of values)
      setRefs(key2, value);
    if (key === "meta" && !value) {
      metaDeps.forEach((key2) => {
        current.delete(key2);
        setRefs(key2, false);
      });
      metaDeps.clear();
    } else if (typeof e.getModifierState === "function" && e.getModifierState("Meta") && value) {
      [...current, ...values].forEach((key2) => metaDeps.add(key2));
    }
  }
  if (target) {
    useEventListener(target, "keydown", (e) => {
      updateRefs(e, true);
      return onEventFired(e);
    }, { passive });
    useEventListener(target, "keyup", (e) => {
      updateRefs(e, false);
      return onEventFired(e);
    }, { passive });
  }
  const proxy = new Proxy(refs, {
    get(target2, prop, rec) {
      if (typeof prop !== "string")
        return Reflect.get(target2, prop, rec);
      prop = prop.toLowerCase();
      if (prop in aliasMap)
        prop = aliasMap[prop];
      if (!(prop in refs)) {
        if (/[+_-]/.test(prop)) {
          const keys = prop.split(/[+_-]/g).map((i) => i.trim());
          refs[prop] = __vite_ssr_import_1__.computed(() => keys.every((key) => __vite_ssr_import_1__.unref(proxy[key])));
        } else {
          refs[prop] = __vite_ssr_import_1__.ref(false);
        }
      }
      const r = Reflect.get(target2, prop, rec);
      return useReactive ? __vite_ssr_import_1__.unref(r) : r;
    }
  });
  return proxy;
}

var __defProp$6 = Object.defineProperty;
var __getOwnPropSymbols$7 = Object.getOwnPropertySymbols;
var __hasOwnProp$7 = Object.prototype.hasOwnProperty;
var __propIsEnum$7 = Object.prototype.propertyIsEnumerable;
var __defNormalProp$6 = (obj, key, value) => key in obj ? __defProp$6(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$6 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$7.call(b, prop))
      __defNormalProp$6(a, prop, b[prop]);
  if (__getOwnPropSymbols$7)
    for (var prop of __getOwnPropSymbols$7(b)) {
      if (__propIsEnum$7.call(b, prop))
        __defNormalProp$6(a, prop, b[prop]);
    }
  return a;
};
function usingElRef(source, cb) {
  if (__vite_ssr_import_1__.unref(source))
    cb(__vite_ssr_import_1__.unref(source));
}
function timeRangeToArray(timeRanges) {
  let ranges = [];
  for (let i = 0; i < timeRanges.length; ++i)
    ranges = [...ranges, [timeRanges.start(i), timeRanges.end(i)]];
  return ranges;
}
function tracksToArray(tracks) {
  return Array.from(tracks).map(({ label, kind, language, mode, activeCues, cues, inBandMetadataTrackDispatchType }, id) => ({ id, label, kind, language, mode, activeCues, cues, inBandMetadataTrackDispatchType }));
}
const defaultOptions = {
  src: "",
  tracks: []
};
function useMediaControls(target, options = {}) {
  options = __spreadValues$6(__spreadValues$6({}, defaultOptions), options);
  const {
    document = defaultDocument
  } = options;
  const currentTime = __vite_ssr_import_1__.ref(0);
  const duration = __vite_ssr_import_1__.ref(0);
  const seeking = __vite_ssr_import_1__.ref(false);
  const volume = __vite_ssr_import_1__.ref(1);
  const waiting = __vite_ssr_import_1__.ref(false);
  const ended = __vite_ssr_import_1__.ref(false);
  const playing = __vite_ssr_import_1__.ref(false);
  const rate = __vite_ssr_import_1__.ref(1);
  const stalled = __vite_ssr_import_1__.ref(false);
  const buffered = __vite_ssr_import_1__.ref([]);
  const tracks = __vite_ssr_import_1__.ref([]);
  const selectedTrack = __vite_ssr_import_1__.ref(-1);
  const isPictureInPicture = __vite_ssr_import_1__.ref(false);
  const muted = __vite_ssr_import_1__.ref(false);
  const supportsPictureInPicture = document && "pictureInPictureEnabled" in document;
  const sourceErrorEvent = __vite_ssr_import_0__.createEventHook();
  const disableTrack = (track) => {
    usingElRef(target, (el) => {
      if (track) {
        const id = __vite_ssr_import_0__.isNumber(track) ? track : track.id;
        el.textTracks[id].mode = "disabled";
      } else {
        for (let i = 0; i < el.textTracks.length; ++i)
          el.textTracks[i].mode = "disabled";
      }
      selectedTrack.value = -1;
    });
  };
  const enableTrack = (track, disableTracks = true) => {
    usingElRef(target, (el) => {
      const id = __vite_ssr_import_0__.isNumber(track) ? track : track.id;
      if (disableTracks)
        disableTrack();
      el.textTracks[id].mode = "showing";
      selectedTrack.value = id;
    });
  };
  const togglePictureInPicture = () => {
    return new Promise((resolve, reject) => {
      usingElRef(target, async (el) => {
        if (supportsPictureInPicture) {
          if (!isPictureInPicture.value) {
            el.requestPictureInPicture().then(resolve).catch(reject);
          } else {
            document.exitPictureInPicture().then(resolve).catch(reject);
          }
        }
      });
    });
  };
  __vite_ssr_import_1__.watchEffect(() => {
    if (!document)
      return;
    const el = __vite_ssr_import_1__.unref(target);
    if (!el)
      return;
    const src = __vite_ssr_import_1__.unref(options.src);
    let sources = [];
    if (!src)
      return;
    if (__vite_ssr_import_0__.isString(src))
      sources = [{ src }];
    else if (Array.isArray(src))
      sources = src;
    else if (__vite_ssr_import_0__.isObject(src))
      sources = [src];
    el.querySelectorAll("source").forEach((e) => {
      e.removeEventListener("error", sourceErrorEvent.trigger);
      e.remove();
    });
    sources.forEach(({ src: src2, type }) => {
      const source = document.createElement("source");
      source.setAttribute("src", src2);
      source.setAttribute("type", type || "");
      source.addEventListener("error", sourceErrorEvent.trigger);
      el.appendChild(source);
    });
    el.load();
  });
  __vite_ssr_import_0__.tryOnScopeDispose(() => {
    const el = __vite_ssr_import_1__.unref(target);
    if (!el)
      return;
    el.querySelectorAll("source").forEach((e) => e.removeEventListener("error", sourceErrorEvent.trigger));
  });
  __vite_ssr_import_1__.watch(volume, (vol) => {
    const el = __vite_ssr_import_1__.unref(target);
    if (!el)
      return;
    el.volume = vol;
  });
  __vite_ssr_import_1__.watch(muted, (mute) => {
    const el = __vite_ssr_import_1__.unref(target);
    if (!el)
      return;
    el.muted = mute;
  });
  __vite_ssr_import_1__.watch(rate, (rate2) => {
    const el = __vite_ssr_import_1__.unref(target);
    if (!el)
      return;
    el.playbackRate = rate2;
  });
  __vite_ssr_import_1__.watchEffect(() => {
    if (!document)
      return;
    const textTracks = __vite_ssr_import_1__.unref(options.tracks);
    const el = __vite_ssr_import_1__.unref(target);
    if (!textTracks || !textTracks.length || !el)
      return;
    el.querySelectorAll("track").forEach((e) => e.remove());
    textTracks.forEach(({ default: isDefault, kind, label, src, srcLang }, i) => {
      const track = document.createElement("track");
      track.default = isDefault || false;
      track.kind = kind;
      track.label = label;
      track.src = src;
      track.srclang = srcLang;
      if (track.default)
        selectedTrack.value = i;
      el.appendChild(track);
    });
  });
  const { ignoreUpdates: ignoreCurrentTimeUpdates } = __vite_ssr_import_0__.watchIgnorable(currentTime, (time) => {
    const el = __vite_ssr_import_1__.unref(target);
    if (!el)
      return;
    el.currentTime = time;
  });
  const { ignoreUpdates: ignorePlayingUpdates } = __vite_ssr_import_0__.watchIgnorable(playing, (isPlaying) => {
    const el = __vite_ssr_import_1__.unref(target);
    if (!el)
      return;
    isPlaying ? el.play() : el.pause();
  });
  useEventListener(target, "timeupdate", () => ignoreCurrentTimeUpdates(() => currentTime.value = __vite_ssr_import_1__.unref(target).currentTime));
  useEventListener(target, "durationchange", () => duration.value = __vite_ssr_import_1__.unref(target).duration);
  useEventListener(target, "progress", () => buffered.value = timeRangeToArray(__vite_ssr_import_1__.unref(target).buffered));
  useEventListener(target, "seeking", () => seeking.value = true);
  useEventListener(target, "seeked", () => seeking.value = false);
  useEventListener(target, "waiting", () => waiting.value = true);
  useEventListener(target, "playing", () => waiting.value = false);
  useEventListener(target, "ratechange", () => rate.value = __vite_ssr_import_1__.unref(target).playbackRate);
  useEventListener(target, "stalled", () => stalled.value = true);
  useEventListener(target, "ended", () => ended.value = true);
  useEventListener(target, "pause", () => ignorePlayingUpdates(() => playing.value = false));
  useEventListener(target, "play", () => ignorePlayingUpdates(() => playing.value = true));
  useEventListener(target, "enterpictureinpicture", () => isPictureInPicture.value = true);
  useEventListener(target, "leavepictureinpicture", () => isPictureInPicture.value = false);
  useEventListener(target, "volumechange", () => {
    const el = __vite_ssr_import_1__.unref(target);
    if (!el)
      return;
    volume.value = el.volume;
    muted.value = el.muted;
  });
  const listeners = [];
  const stop = __vite_ssr_import_1__.watch([target], () => {
    const el = __vite_ssr_import_1__.unref(target);
    if (!el)
      return;
    stop();
    listeners[0] = useEventListener(el.textTracks, "addtrack", () => tracks.value = tracksToArray(el.textTracks));
    listeners[1] = useEventListener(el.textTracks, "removetrack", () => tracks.value = tracksToArray(el.textTracks));
    listeners[2] = useEventListener(el.textTracks, "change", () => tracks.value = tracksToArray(el.textTracks));
  });
  __vite_ssr_import_0__.tryOnScopeDispose(() => listeners.forEach((listener) => listener()));
  return {
    currentTime,
    duration,
    waiting,
    seeking,
    ended,
    stalled,
    buffered,
    playing,
    rate,
    volume,
    muted,
    tracks,
    selectedTrack,
    enableTrack,
    disableTrack,
    supportsPictureInPicture,
    togglePictureInPicture,
    isPictureInPicture,
    onSourceError: sourceErrorEvent.on
  };
}

const getMapVue2Compat = () => {
  const data = __vite_ssr_import_1__.reactive({});
  return {
    get: (key) => data[key],
    set: (key, value) => __vite_ssr_import_1__.set(data, key, value),
    has: (key) => Object.prototype.hasOwnProperty.call(data, key),
    delete: (key) => __vite_ssr_import_1__.del(data, key),
    clear: () => {
      Object.keys(data).forEach((key) => {
        __vite_ssr_import_1__.del(data, key);
      });
    }
  };
};
function useMemoize(resolver, options) {
  const initCache = () => {
    if (options == null ? void 0 : options.cache)
      return __vite_ssr_import_1__.reactive(options.cache);
    if (__vite_ssr_import_1__.isVue2)
      return getMapVue2Compat();
    return __vite_ssr_import_1__.reactive(new Map());
  };
  const cache = initCache();
  const generateKey = (...args) => (options == null ? void 0 : options.getKey) ? options.getKey(...args) : JSON.stringify(args);
  const _loadData = (key, ...args) => {
    cache.set(key, resolver(...args));
    return cache.get(key);
  };
  const loadData = (...args) => _loadData(generateKey(...args), ...args);
  const deleteData = (...args) => {
    cache.delete(generateKey(...args));
  };
  const clearData = () => {
    cache.clear();
  };
  const memoized = (...args) => {
    const key = generateKey(...args);
    if (cache.has(key))
      return cache.get(key);
    return _loadData(key, ...args);
  };
  memoized.load = loadData;
  memoized.delete = deleteData;
  memoized.clear = clearData;
  memoized.generateKey = generateKey;
  memoized.cache = cache;
  return memoized;
}

function useMemory(options = {}) {
  const memory = __vite_ssr_import_1__.ref();
  const isSupported = typeof performance !== "undefined" && "memory" in performance;
  if (isSupported) {
    const { interval = 1e3 } = options;
    __vite_ssr_import_0__.useIntervalFn(() => {
      memory.value = performance.memory;
    }, interval, { immediate: options.immediate, immediateCallback: options.immediateCallback });
  }
  return { isSupported, memory };
}

function useMounted() {
  const isMounted = __vite_ssr_import_1__.ref(false);
  __vite_ssr_import_1__.onMounted(() => {
    isMounted.value = true;
  });
  return isMounted;
}

function useMouse(options = {}) {
  const {
    type = "page",
    touch = true,
    resetOnTouchEnds = false,
    initialValue = { x: 0, y: 0 },
    window = defaultWindow,
    eventFilter
  } = options;
  const x = __vite_ssr_import_1__.ref(initialValue.x);
  const y = __vite_ssr_import_1__.ref(initialValue.y);
  const sourceType = __vite_ssr_import_1__.ref(null);
  const mouseHandler = (event) => {
    if (type === "page") {
      x.value = event.pageX;
      y.value = event.pageY;
    } else if (type === "client") {
      x.value = event.clientX;
      y.value = event.clientY;
    }
    sourceType.value = "mouse";
  };
  const reset = () => {
    x.value = initialValue.x;
    y.value = initialValue.y;
  };
  const touchHandler = (event) => {
    if (event.touches.length > 0) {
      const touch2 = event.touches[0];
      if (type === "page") {
        x.value = touch2.pageX;
        y.value = touch2.pageY;
      } else if (type === "client") {
        x.value = touch2.clientX;
        y.value = touch2.clientY;
      }
      sourceType.value = "touch";
    }
  };
  const mouseHandlerWrapper = (event) => {
    return eventFilter === void 0 ? mouseHandler(event) : eventFilter(() => mouseHandler(event), {});
  };
  const touchHandlerWrapper = (event) => {
    return eventFilter === void 0 ? touchHandler(event) : eventFilter(() => touchHandler(event), {});
  };
  if (window) {
    useEventListener(window, "mousemove", mouseHandlerWrapper, { passive: true });
    useEventListener(window, "dragover", mouseHandlerWrapper, { passive: true });
    if (touch) {
      useEventListener(window, "touchstart", touchHandlerWrapper, { passive: true });
      useEventListener(window, "touchmove", touchHandlerWrapper, { passive: true });
      if (resetOnTouchEnds)
        useEventListener(window, "touchend", reset, { passive: true });
    }
  }
  return {
    x,
    y,
    sourceType
  };
}

function useMouseInElement(target, options = {}) {
  const {
    handleOutside = true,
    window = defaultWindow
  } = options;
  const { x, y, sourceType } = useMouse(options);
  const targetRef = __vite_ssr_import_1__.ref(target != null ? target : window == null ? void 0 : window.document.body);
  const elementX = __vite_ssr_import_1__.ref(0);
  const elementY = __vite_ssr_import_1__.ref(0);
  const elementPositionX = __vite_ssr_import_1__.ref(0);
  const elementPositionY = __vite_ssr_import_1__.ref(0);
  const elementHeight = __vite_ssr_import_1__.ref(0);
  const elementWidth = __vite_ssr_import_1__.ref(0);
  const isOutside = __vite_ssr_import_1__.ref(true);
  let stop = () => {
  };
  if (window) {
    stop = __vite_ssr_import_1__.watch([targetRef, x, y], () => {
      const el = unrefElement(targetRef);
      if (!el)
        return;
      const {
        left,
        top,
        width,
        height
      } = el.getBoundingClientRect();
      elementPositionX.value = left + window.pageXOffset;
      elementPositionY.value = top + window.pageYOffset;
      elementHeight.value = height;
      elementWidth.value = width;
      const elX = x.value - elementPositionX.value;
      const elY = y.value - elementPositionY.value;
      isOutside.value = width === 0 || height === 0 || elX < 0 || elY < 0 || elX > width || elY > height;
      if (handleOutside || !isOutside.value) {
        elementX.value = elX;
        elementY.value = elY;
      }
    }, { immediate: true });
  }
  return {
    x,
    y,
    sourceType,
    elementX,
    elementY,
    elementPositionX,
    elementPositionY,
    elementHeight,
    elementWidth,
    isOutside,
    stop
  };
}

function useMousePressed(options = {}) {
  const {
    touch = true,
    drag = true,
    initialValue = false,
    window = defaultWindow
  } = options;
  const pressed = __vite_ssr_import_1__.ref(initialValue);
  const sourceType = __vite_ssr_import_1__.ref(null);
  if (!window) {
    return {
      pressed,
      sourceType
    };
  }
  const onPressed = (srcType) => () => {
    pressed.value = true;
    sourceType.value = srcType;
  };
  const onReleased = () => {
    pressed.value = false;
    sourceType.value = null;
  };
  const target = __vite_ssr_import_1__.computed(() => unrefElement(options.target) || window);
  useEventListener(target, "mousedown", onPressed("mouse"), { passive: true });
  useEventListener(window, "mouseleave", onReleased, { passive: true });
  useEventListener(window, "mouseup", onReleased, { passive: true });
  if (drag) {
    useEventListener(target, "dragstart", onPressed("mouse"), { passive: true });
    useEventListener(window, "drop", onReleased, { passive: true });
    useEventListener(window, "dragend", onReleased, { passive: true });
  }
  if (touch) {
    useEventListener(target, "touchstart", onPressed("touch"), { passive: true });
    useEventListener(window, "touchend", onReleased, { passive: true });
    useEventListener(window, "touchcancel", onReleased, { passive: true });
  }
  return {
    pressed,
    sourceType
  };
}

var __getOwnPropSymbols$6 = Object.getOwnPropertySymbols;
var __hasOwnProp$6 = Object.prototype.hasOwnProperty;
var __propIsEnum$6 = Object.prototype.propertyIsEnumerable;
var __objRest$1 = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp$6.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols$6)
    for (var prop of __getOwnPropSymbols$6(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum$6.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
function useMutationObserver(target, callback, options = {}) {
  const _a = options, { window = defaultWindow } = _a, mutationOptions = __objRest$1(_a, ["window"]);
  let observer;
  const isSupported = window && "MutationObserver" in window;
  const cleanup = () => {
    if (observer) {
      observer.disconnect();
      observer = void 0;
    }
  };
  const stopWatch = __vite_ssr_import_1__.watch(() => unrefElement(target), (el) => {
    cleanup();
    if (isSupported && window && el) {
      observer = new MutationObserver(callback);
      observer.observe(el, mutationOptions);
    }
  }, { immediate: true });
  const stop = () => {
    cleanup();
    stopWatch();
  };
  __vite_ssr_import_0__.tryOnScopeDispose(stop);
  return {
    isSupported,
    stop
  };
}

const useNavigatorLanguage = (options = {}) => {
  const { window = defaultWindow } = options;
  const navigator = window == null ? void 0 : window.navigator;
  const isSupported = Boolean(navigator && "language" in navigator);
  const language = __vite_ssr_import_1__.ref(navigator == null ? void 0 : navigator.language);
  useEventListener(window, "languagechange", () => {
    if (navigator)
      language.value = navigator.language;
  });
  return {
    isSupported,
    language
  };
};

function useNetwork(options = {}) {
  const { window = defaultWindow } = options;
  const navigator = window == null ? void 0 : window.navigator;
  const isSupported = Boolean(navigator && "connection" in navigator);
  const isOnline = __vite_ssr_import_1__.ref(true);
  const saveData = __vite_ssr_import_1__.ref(false);
  const offlineAt = __vite_ssr_import_1__.ref(void 0);
  const onlineAt = __vite_ssr_import_1__.ref(void 0);
  const downlink = __vite_ssr_import_1__.ref(void 0);
  const downlinkMax = __vite_ssr_import_1__.ref(void 0);
  const rtt = __vite_ssr_import_1__.ref(void 0);
  const effectiveType = __vite_ssr_import_1__.ref(void 0);
  const type = __vite_ssr_import_1__.ref("unknown");
  const connection = isSupported && navigator.connection;
  function updateNetworkInformation() {
    if (!navigator)
      return;
    isOnline.value = navigator.onLine;
    offlineAt.value = isOnline.value ? void 0 : Date.now();
    onlineAt.value = isOnline.value ? Date.now() : void 0;
    if (connection) {
      downlink.value = connection.downlink;
      downlinkMax.value = connection.downlinkMax;
      effectiveType.value = connection.effectiveType;
      rtt.value = connection.rtt;
      saveData.value = connection.saveData;
      type.value = connection.type;
    }
  }
  if (window) {
    useEventListener(window, "offline", () => {
      isOnline.value = false;
      offlineAt.value = Date.now();
    });
    useEventListener(window, "online", () => {
      isOnline.value = true;
      onlineAt.value = Date.now();
    });
  }
  if (connection)
    useEventListener(connection, "change", updateNetworkInformation, false);
  updateNetworkInformation();
  return {
    isSupported,
    isOnline,
    saveData,
    offlineAt,
    onlineAt,
    downlink,
    downlinkMax,
    effectiveType,
    rtt,
    type
  };
}

var __defProp$5 = Object.defineProperty;
var __getOwnPropSymbols$5 = Object.getOwnPropertySymbols;
var __hasOwnProp$5 = Object.prototype.hasOwnProperty;
var __propIsEnum$5 = Object.prototype.propertyIsEnumerable;
var __defNormalProp$5 = (obj, key, value) => key in obj ? __defProp$5(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$5 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$5.call(b, prop))
      __defNormalProp$5(a, prop, b[prop]);
  if (__getOwnPropSymbols$5)
    for (var prop of __getOwnPropSymbols$5(b)) {
      if (__propIsEnum$5.call(b, prop))
        __defNormalProp$5(a, prop, b[prop]);
    }
  return a;
};
function useNow(options = {}) {
  const {
    controls: exposeControls = false,
    interval = "requestAnimationFrame"
  } = options;
  const now = __vite_ssr_import_1__.ref(new Date());
  const update = () => now.value = new Date();
  const controls = interval === "requestAnimationFrame" ? useRafFn(update, { immediate: true }) : __vite_ssr_import_0__.useIntervalFn(update, interval, { immediate: true });
  if (exposeControls) {
    return __spreadValues$5({
      now
    }, controls);
  } else {
    return now;
  }
}

function useOffsetPagination(options) {
  const {
    total = Infinity,
    pageSize = 10,
    page = 1,
    onPageChange = __vite_ssr_import_0__.noop,
    onPageSizeChange = __vite_ssr_import_0__.noop,
    onPageCountChange = __vite_ssr_import_0__.noop
  } = options;
  const currentPageSize = useClamp(pageSize, 1, Infinity);
  const pageCount = __vite_ssr_import_1__.computed(() => Math.ceil(__vite_ssr_import_1__.unref(total) / __vite_ssr_import_1__.unref(currentPageSize)));
  const currentPage = useClamp(page, 1, pageCount);
  const isFirstPage = __vite_ssr_import_1__.computed(() => currentPage.value === 1);
  const isLastPage = __vite_ssr_import_1__.computed(() => currentPage.value === pageCount.value);
  if (__vite_ssr_import_1__.isRef(page))
    __vite_ssr_import_0__.syncRef(page, currentPage);
  if (__vite_ssr_import_1__.isRef(pageSize))
    __vite_ssr_import_0__.syncRef(pageSize, currentPageSize);
  function prev() {
    currentPage.value--;
  }
  function next() {
    currentPage.value++;
  }
  const returnValue = {
    currentPage,
    currentPageSize,
    pageCount,
    isFirstPage,
    isLastPage,
    prev,
    next
  };
  __vite_ssr_import_1__.watch(currentPage, () => {
    onPageChange(__vite_ssr_import_1__.reactive(returnValue));
  });
  __vite_ssr_import_1__.watch(currentPageSize, () => {
    onPageSizeChange(__vite_ssr_import_1__.reactive(returnValue));
  });
  __vite_ssr_import_1__.watch(pageCount, () => {
    onPageCountChange(__vite_ssr_import_1__.reactive(returnValue));
  });
  return returnValue;
}

function useOnline(options = {}) {
  const { isOnline } = useNetwork(options);
  return isOnline;
}

function usePageLeave(options = {}) {
  const { window = defaultWindow } = options;
  const isLeft = __vite_ssr_import_1__.ref(false);
  const handler = (event) => {
    if (!window)
      return;
    event = event || window.event;
    const from = event.relatedTarget || event.toElement;
    isLeft.value = !from;
  };
  if (window) {
    useEventListener(window, "mouseout", handler, { passive: true });
    useEventListener(window.document, "mouseleave", handler, { passive: true });
    useEventListener(window.document, "mouseenter", handler, { passive: true });
  }
  return isLeft;
}

function useParallax(target, options = {}) {
  const {
    deviceOrientationTiltAdjust = (i) => i,
    deviceOrientationRollAdjust = (i) => i,
    mouseTiltAdjust = (i) => i,
    mouseRollAdjust = (i) => i,
    window = defaultWindow
  } = options;
  const orientation = __vite_ssr_import_1__.reactive(useDeviceOrientation({ window }));
  const {
    elementX: x,
    elementY: y,
    elementWidth: width,
    elementHeight: height
  } = useMouseInElement(target, { handleOutside: false, window });
  const source = __vite_ssr_import_1__.computed(() => {
    if (orientation.isSupported && (orientation.alpha != null && orientation.alpha !== 0 || orientation.gamma != null && orientation.gamma !== 0))
      return "deviceOrientation";
    return "mouse";
  });
  const roll = __vite_ssr_import_1__.computed(() => {
    if (source.value === "deviceOrientation") {
      const value = -orientation.beta / 90;
      return deviceOrientationRollAdjust(value);
    } else {
      const value = -(y.value - height.value / 2) / height.value;
      return mouseRollAdjust(value);
    }
  });
  const tilt = __vite_ssr_import_1__.computed(() => {
    if (source.value === "deviceOrientation") {
      const value = orientation.gamma / 90;
      return deviceOrientationTiltAdjust(value);
    } else {
      const value = (x.value - width.value / 2) / width.value;
      return mouseTiltAdjust(value);
    }
  });
  return { roll, tilt, source };
}

var __defProp$4 = Object.defineProperty;
var __defProps$1 = Object.defineProperties;
var __getOwnPropDescs$1 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols$4 = Object.getOwnPropertySymbols;
var __hasOwnProp$4 = Object.prototype.hasOwnProperty;
var __propIsEnum$4 = Object.prototype.propertyIsEnumerable;
var __defNormalProp$4 = (obj, key, value) => key in obj ? __defProp$4(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$4 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$4.call(b, prop))
      __defNormalProp$4(a, prop, b[prop]);
  if (__getOwnPropSymbols$4)
    for (var prop of __getOwnPropSymbols$4(b)) {
      if (__propIsEnum$4.call(b, prop))
        __defNormalProp$4(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps$1 = (a, b) => __defProps$1(a, __getOwnPropDescs$1(b));
const defaultState = {
  x: 0,
  y: 0,
  pointerId: 0,
  pressure: 0,
  tiltX: 0,
  tiltY: 0,
  width: 0,
  height: 0,
  twist: 0,
  pointerType: null
};
const keys = /* @__PURE__ */ Object.keys(defaultState);
function usePointer(options = {}) {
  const {
    target = defaultWindow
  } = options;
  const isInside = __vite_ssr_import_1__.ref(false);
  const state = __vite_ssr_import_1__.ref(options.initialValue || {});
  Object.assign(state.value, defaultState, state.value);
  const handler = (event) => {
    isInside.value = true;
    if (options.pointerTypes && !options.pointerTypes.includes(event.pointerType))
      return;
    state.value = __vite_ssr_import_0__.objectPick(event, keys, false);
  };
  if (target) {
    useEventListener(target, "pointerdown", handler, { passive: true });
    useEventListener(target, "pointermove", handler, { passive: true });
    useEventListener(target, "pointerleave", () => isInside.value = false, { passive: true });
  }
  return __spreadProps$1(__spreadValues$4({}, __vite_ssr_import_0__.toRefs(state)), {
    isInside
  });
}

var SwipeDirection;
(function(SwipeDirection2) {
  SwipeDirection2["UP"] = "UP";
  SwipeDirection2["RIGHT"] = "RIGHT";
  SwipeDirection2["DOWN"] = "DOWN";
  SwipeDirection2["LEFT"] = "LEFT";
  SwipeDirection2["NONE"] = "NONE";
})(SwipeDirection || (SwipeDirection = {}));
function useSwipe(target, options = {}) {
  const {
    threshold = 50,
    onSwipe,
    onSwipeEnd,
    onSwipeStart,
    passive = true,
    window = defaultWindow
  } = options;
  const coordsStart = __vite_ssr_import_1__.reactive({ x: 0, y: 0 });
  const coordsEnd = __vite_ssr_import_1__.reactive({ x: 0, y: 0 });
  const diffX = __vite_ssr_import_1__.computed(() => coordsStart.x - coordsEnd.x);
  const diffY = __vite_ssr_import_1__.computed(() => coordsStart.y - coordsEnd.y);
  const { max, abs } = Math;
  const isThresholdExceeded = __vite_ssr_import_1__.computed(() => max(abs(diffX.value), abs(diffY.value)) >= threshold);
  const isSwiping = __vite_ssr_import_1__.ref(false);
  const direction = __vite_ssr_import_1__.computed(() => {
    if (!isThresholdExceeded.value)
      return SwipeDirection.NONE;
    if (abs(diffX.value) > abs(diffY.value)) {
      return diffX.value > 0 ? SwipeDirection.LEFT : SwipeDirection.RIGHT;
    } else {
      return diffY.value > 0 ? SwipeDirection.UP : SwipeDirection.DOWN;
    }
  });
  const getTouchEventCoords = (e) => [e.touches[0].clientX, e.touches[0].clientY];
  const updateCoordsStart = (x, y) => {
    coordsStart.x = x;
    coordsStart.y = y;
  };
  const updateCoordsEnd = (x, y) => {
    coordsEnd.x = x;
    coordsEnd.y = y;
  };
  let listenerOptions;
  const isPassiveEventSupported = checkPassiveEventSupport(window == null ? void 0 : window.document);
  if (!passive)
    listenerOptions = isPassiveEventSupported ? { passive: false, capture: true } : { capture: true };
  else
    listenerOptions = isPassiveEventSupported ? { passive: true } : { capture: false };
  const onTouchEnd = (e) => {
    if (isSwiping.value)
      onSwipeEnd == null ? void 0 : onSwipeEnd(e, direction.value);
    isSwiping.value = false;
  };
  const stops = [
    useEventListener(target, "touchstart", (e) => {
      if (listenerOptions.capture && !listenerOptions.passive)
        e.preventDefault();
      const [x, y] = getTouchEventCoords(e);
      updateCoordsStart(x, y);
      updateCoordsEnd(x, y);
      onSwipeStart == null ? void 0 : onSwipeStart(e);
    }, listenerOptions),
    useEventListener(target, "touchmove", (e) => {
      const [x, y] = getTouchEventCoords(e);
      updateCoordsEnd(x, y);
      if (!isSwiping.value && isThresholdExceeded.value)
        isSwiping.value = true;
      if (isSwiping.value)
        onSwipe == null ? void 0 : onSwipe(e);
    }, listenerOptions),
    useEventListener(target, "touchend", onTouchEnd, listenerOptions),
    useEventListener(target, "touchcancel", onTouchEnd, listenerOptions)
  ];
  const stop = () => stops.forEach((s) => s());
  return {
    isPassiveEventSupported,
    isSwiping,
    direction,
    coordsStart,
    coordsEnd,
    lengthX: diffX,
    lengthY: diffY,
    stop
  };
}
function checkPassiveEventSupport(document) {
  if (!document)
    return false;
  let supportsPassive = false;
  const optionsBlock = {
    get passive() {
      supportsPassive = true;
      return false;
    }
  };
  document.addEventListener("x", __vite_ssr_import_0__.noop, optionsBlock);
  document.removeEventListener("x", __vite_ssr_import_0__.noop);
  return supportsPassive;
}

function usePointerSwipe(target, options = {}) {
  const targetRef = __vite_ssr_import_1__.ref(target);
  const {
    threshold = 50,
    onSwipe,
    onSwipeEnd,
    onSwipeStart
  } = options;
  const posStart = __vite_ssr_import_1__.reactive({ x: 0, y: 0 });
  const updatePosStart = (x, y) => {
    posStart.x = x;
    posStart.y = y;
  };
  const posEnd = __vite_ssr_import_1__.reactive({ x: 0, y: 0 });
  const updatePosEnd = (x, y) => {
    posEnd.x = x;
    posEnd.y = y;
  };
  const distanceX = __vite_ssr_import_1__.computed(() => posStart.x - posEnd.x);
  const distanceY = __vite_ssr_import_1__.computed(() => posStart.y - posEnd.y);
  const { max, abs } = Math;
  const isThresholdExceeded = __vite_ssr_import_1__.computed(() => max(abs(distanceX.value), abs(distanceY.value)) >= threshold);
  const isSwiping = __vite_ssr_import_1__.ref(false);
  const isPointerDown = __vite_ssr_import_1__.ref(false);
  const direction = __vite_ssr_import_1__.computed(() => {
    if (!isThresholdExceeded.value)
      return SwipeDirection.NONE;
    if (abs(distanceX.value) > abs(distanceY.value)) {
      return distanceX.value > 0 ? SwipeDirection.LEFT : SwipeDirection.RIGHT;
    } else {
      return distanceY.value > 0 ? SwipeDirection.UP : SwipeDirection.DOWN;
    }
  });
  const filterEvent = (e) => {
    if (options.pointerTypes)
      return options.pointerTypes.includes(e.pointerType);
    return true;
  };
  const stops = [
    useEventListener(target, "pointerdown", (e) => {
      var _a, _b;
      if (!filterEvent(e))
        return;
      isPointerDown.value = true;
      (_b = (_a = targetRef.value) == null ? void 0 : _a.style) == null ? void 0 : _b.setProperty("touch-action", "none");
      const eventTarget = e.target;
      eventTarget == null ? void 0 : eventTarget.setPointerCapture(e.pointerId);
      const { clientX: x, clientY: y } = e;
      updatePosStart(x, y);
      updatePosEnd(x, y);
      onSwipeStart == null ? void 0 : onSwipeStart(e);
    }),
    useEventListener(target, "pointermove", (e) => {
      if (!filterEvent(e))
        return;
      if (!isPointerDown.value)
        return;
      const { clientX: x, clientY: y } = e;
      updatePosEnd(x, y);
      if (!isSwiping.value && isThresholdExceeded.value)
        isSwiping.value = true;
      if (isSwiping.value)
        onSwipe == null ? void 0 : onSwipe(e);
    }),
    useEventListener(target, "pointerup", (e) => {
      var _a, _b;
      if (!filterEvent(e))
        return;
      if (isSwiping.value)
        onSwipeEnd == null ? void 0 : onSwipeEnd(e, direction.value);
      isPointerDown.value = false;
      isSwiping.value = false;
      (_b = (_a = targetRef.value) == null ? void 0 : _a.style) == null ? void 0 : _b.setProperty("touch-action", "initial");
    })
  ];
  const stop = () => stops.forEach((s) => s());
  return {
    isSwiping: __vite_ssr_import_1__.readonly(isSwiping),
    direction: __vite_ssr_import_1__.readonly(direction),
    posStart: __vite_ssr_import_1__.readonly(posStart),
    posEnd: __vite_ssr_import_1__.readonly(posEnd),
    distanceX,
    distanceY,
    stop
  };
}

function usePreferredColorScheme(options) {
  const isLight = useMediaQuery("(prefers-color-scheme: light)", options);
  const isDark = useMediaQuery("(prefers-color-scheme: dark)", options);
  return __vite_ssr_import_1__.computed(() => {
    if (isDark.value)
      return "dark";
    if (isLight.value)
      return "light";
    return "no-preference";
  });
}

function usePreferredLanguages(options = {}) {
  const { window = defaultWindow } = options;
  if (!window)
    return __vite_ssr_import_1__.ref(["en"]);
  const navigator = window.navigator;
  const value = __vite_ssr_import_1__.ref(navigator.languages);
  useEventListener(window, "languagechange", () => {
    value.value = navigator.languages;
  });
  return value;
}

const useScreenOrientation = (options = {}) => {
  const {
    window = defaultWindow
  } = options;
  const isSupported = !!(window && "screen" in window && "orientation" in window.screen);
  const screenOrientation = isSupported ? window.screen.orientation : {};
  const orientation = __vite_ssr_import_1__.ref(screenOrientation.type);
  const angle = __vite_ssr_import_1__.ref(screenOrientation.angle || 0);
  if (isSupported) {
    useEventListener(window, "orientationchange", () => {
      orientation.value = screenOrientation.type;
      angle.value = screenOrientation.angle;
    });
  }
  const lockOrientation = (type) => {
    if (!isSupported)
      return Promise.reject(new Error("Not supported"));
    return screenOrientation.lock(type);
  };
  const unlockOrientation = () => {
    if (isSupported)
      screenOrientation.unlock();
  };
  return {
    isSupported,
    orientation,
    angle,
    lockOrientation,
    unlockOrientation
  };
};

const topVarName = "--vueuse-safe-area-top";
const rightVarName = "--vueuse-safe-area-right";
const bottomVarName = "--vueuse-safe-area-bottom";
const leftVarName = "--vueuse-safe-area-left";
function useScreenSafeArea() {
  const top = __vite_ssr_import_1__.ref("");
  const right = __vite_ssr_import_1__.ref("");
  const bottom = __vite_ssr_import_1__.ref("");
  const left = __vite_ssr_import_1__.ref("");
  if (__vite_ssr_import_0__.isClient) {
    const topCssVar = useCssVar(topVarName);
    const rightCssVar = useCssVar(rightVarName);
    const bottomCssVar = useCssVar(bottomVarName);
    const leftCssVar = useCssVar(leftVarName);
    topCssVar.value = "env(safe-area-inset-top, 0px)";
    rightCssVar.value = "env(safe-area-inset-right, 0px)";
    bottomCssVar.value = "env(safe-area-inset-bottom, 0px)";
    leftCssVar.value = "env(safe-area-inset-left, 0px)";
    update();
    useEventListener("resize", __vite_ssr_import_0__.useDebounceFn(update));
  }
  function update() {
    top.value = getValue(topVarName);
    right.value = getValue(rightVarName);
    bottom.value = getValue(bottomVarName);
    left.value = getValue(leftVarName);
  }
  return {
    top,
    right,
    bottom,
    left,
    update
  };
}
function getValue(position) {
  return getComputedStyle(document.documentElement).getPropertyValue(position);
}

function useScriptTag(src, onLoaded = __vite_ssr_import_0__.noop, options = {}) {
  const {
    immediate = true,
    manual = false,
    type = "text/javascript",
    async = true,
    crossOrigin,
    referrerPolicy,
    noModule,
    defer,
    document = defaultDocument,
    attrs = {}
  } = options;
  const scriptTag = __vite_ssr_import_1__.ref(null);
  let _promise = null;
  const loadScript = (waitForScriptLoad) => new Promise((resolve, reject) => {
    const resolveWithElement = (el2) => {
      scriptTag.value = el2;
      resolve(el2);
      return el2;
    };
    if (!document) {
      resolve(false);
      return;
    }
    let shouldAppend = false;
    let el = document.querySelector(`script[src="${src}"]`);
    if (!el) {
      el = document.createElement("script");
      el.type = type;
      el.async = async;
      el.src = __vite_ssr_import_1__.unref(src);
      if (defer)
        el.defer = defer;
      if (crossOrigin)
        el.crossOrigin = crossOrigin;
      if (noModule)
        el.noModule = noModule;
      if (referrerPolicy)
        el.referrerPolicy = referrerPolicy;
      Object.entries(attrs).forEach(([name, value]) => el == null ? void 0 : el.setAttribute(name, value));
      shouldAppend = true;
    } else if (el.hasAttribute("data-loaded")) {
      resolveWithElement(el);
    }
    el.addEventListener("error", (event) => reject(event));
    el.addEventListener("abort", (event) => reject(event));
    el.addEventListener("load", () => {
      el.setAttribute("data-loaded", "true");
      onLoaded(el);
      resolveWithElement(el);
    });
    if (shouldAppend)
      el = document.head.appendChild(el);
    if (!waitForScriptLoad)
      resolveWithElement(el);
  });
  const load = (waitForScriptLoad = true) => {
    if (!_promise)
      _promise = loadScript(waitForScriptLoad);
    return _promise;
  };
  const unload = () => {
    if (!document)
      return;
    _promise = null;
    if (scriptTag.value)
      scriptTag.value = null;
    const el = document.querySelector(`script[src="${src}"]`);
    if (el)
      document.head.removeChild(el);
  };
  if (immediate && !manual)
    __vite_ssr_import_0__.tryOnMounted(load);
  if (!manual)
    __vite_ssr_import_0__.tryOnUnmounted(unload);
  return { scriptTag, load, unload };
}

function preventDefault(rawEvent) {
  const e = rawEvent || window.event;
  if (e.touches.length > 1)
    return true;
  if (e.preventDefault)
    e.preventDefault();
  return false;
}
function useScrollLock(element, initialState = false) {
  const isLocked = __vite_ssr_import_1__.ref(initialState);
  let stopTouchMoveListener = null;
  let initialOverflow;
  __vite_ssr_import_1__.watch(() => __vite_ssr_import_1__.unref(element), (el) => {
    if (el) {
      const ele = el;
      initialOverflow = ele.style.overflow;
      if (isLocked.value)
        ele.style.overflow = "hidden";
    }
  }, {
    immediate: true
  });
  const lock = () => {
    const ele = __vite_ssr_import_1__.unref(element);
    if (!ele || isLocked.value)
      return;
    if (__vite_ssr_import_0__.isIOS) {
      stopTouchMoveListener = useEventListener(ele, "touchmove", preventDefault, { passive: false });
    }
    ele.style.overflow = "hidden";
    isLocked.value = true;
  };
  const unlock = () => {
    const ele = __vite_ssr_import_1__.unref(element);
    if (!ele || !isLocked.value)
      return;
    __vite_ssr_import_0__.isIOS && (stopTouchMoveListener == null ? void 0 : stopTouchMoveListener());
    ele.style.overflow = initialOverflow;
    isLocked.value = false;
  };
  __vite_ssr_import_0__.tryOnScopeDispose(unlock);
  return __vite_ssr_import_1__.computed({
    get() {
      return isLocked.value;
    },
    set(v) {
      if (v)
        lock();
      else
        unlock();
    }
  });
}

function useSessionStorage(key, initialValue, options = {}) {
  const { window = defaultWindow } = options;
  return useStorage(key, initialValue, window == null ? void 0 : window.sessionStorage, options);
}

var __defProp$3 = Object.defineProperty;
var __getOwnPropSymbols$3 = Object.getOwnPropertySymbols;
var __hasOwnProp$3 = Object.prototype.hasOwnProperty;
var __propIsEnum$3 = Object.prototype.propertyIsEnumerable;
var __defNormalProp$3 = (obj, key, value) => key in obj ? __defProp$3(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$3 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$3.call(b, prop))
      __defNormalProp$3(a, prop, b[prop]);
  if (__getOwnPropSymbols$3)
    for (var prop of __getOwnPropSymbols$3(b)) {
      if (__propIsEnum$3.call(b, prop))
        __defNormalProp$3(a, prop, b[prop]);
    }
  return a;
};
function useShare(shareOptions = {}, options = {}) {
  const { navigator = defaultNavigator } = options;
  const _navigator = navigator;
  const isSupported = _navigator && "canShare" in _navigator;
  const share = async (overrideOptions = {}) => {
    if (isSupported) {
      const data = __spreadValues$3(__spreadValues$3({}, __vite_ssr_import_1__.unref(shareOptions)), __vite_ssr_import_1__.unref(overrideOptions));
      let granted = true;
      if (data.files && _navigator.canShare)
        granted = _navigator.canShare({ files: data.files });
      if (granted)
        return _navigator.share(data);
    }
  };
  return {
    isSupported,
    share
  };
}

function useSpeechRecognition(options = {}) {
  const {
    interimResults = true,
    continuous = true,
    window = defaultWindow
  } = options;
  const lang = __vite_ssr_import_1__.ref(options.lang || "en-US");
  const isListening = __vite_ssr_import_1__.ref(false);
  const isFinal = __vite_ssr_import_1__.ref(false);
  const result = __vite_ssr_import_1__.ref("");
  const error = __vite_ssr_import_1__.shallowRef(void 0);
  const toggle = (value = !isListening.value) => {
    isListening.value = value;
  };
  const start = () => {
    isListening.value = true;
  };
  const stop = () => {
    isListening.value = false;
  };
  const SpeechRecognition = window && (window.SpeechRecognition || window.webkitSpeechRecognition);
  const isSupported = Boolean(SpeechRecognition);
  let recognition;
  if (isSupported) {
    recognition = new SpeechRecognition();
    recognition.continuous = continuous;
    recognition.interimResults = interimResults;
    recognition.lang = __vite_ssr_import_1__.unref(lang);
    recognition.onstart = () => {
      isFinal.value = false;
    };
    __vite_ssr_import_1__.watch(lang, (lang2) => {
      if (recognition && !isListening.value)
        recognition.lang = lang2;
    });
    recognition.onresult = (event) => {
      const transcript = Array.from(event.results).map((result2) => {
        isFinal.value = result2.isFinal;
        return result2[0];
      }).map((result2) => result2.transcript).join("");
      result.value = transcript;
      error.value = void 0;
    };
    recognition.onerror = (event) => {
      error.value = event;
    };
    recognition.onend = () => {
      isListening.value = false;
      recognition.lang = __vite_ssr_import_1__.unref(lang);
    };
    __vite_ssr_import_1__.watch(isListening, () => {
      if (isListening.value)
        recognition.start();
      else
        recognition.stop();
    });
  }
  __vite_ssr_import_0__.tryOnScopeDispose(() => {
    isListening.value = false;
  });
  return {
    isSupported,
    isListening,
    isFinal,
    recognition,
    result,
    error,
    toggle,
    start,
    stop
  };
}

function useSpeechSynthesis(text, options = {}) {
  var _a, _b;
  const {
    pitch = 1,
    rate = 1,
    volume = 1,
    window = defaultWindow
  } = options;
  const synth = window && window.speechSynthesis;
  const isSupported = Boolean(synth);
  const isPlaying = __vite_ssr_import_1__.ref(false);
  const status = __vite_ssr_import_1__.ref("init");
  const voiceInfo = {
    lang: ((_a = options.voice) == null ? void 0 : _a.lang) || "default",
    name: ((_b = options.voice) == null ? void 0 : _b.name) || ""
  };
  const spokenText = __vite_ssr_import_1__.ref(text || "");
  const lang = __vite_ssr_import_1__.ref(options.lang || "en-US");
  const error = __vite_ssr_import_1__.shallowRef(void 0);
  const toggle = (value = !isPlaying.value) => {
    isPlaying.value = value;
  };
  const bindEventsForUtterance = (utterance2) => {
    utterance2.lang = __vite_ssr_import_1__.unref(lang);
    options.voice && (utterance2.voice = options.voice);
    utterance2.pitch = pitch;
    utterance2.rate = rate;
    utterance2.volume = volume;
    utterance2.onstart = () => {
      isPlaying.value = true;
      status.value = "play";
    };
    utterance2.onpause = () => {
      isPlaying.value = false;
      status.value = "pause";
    };
    utterance2.onresume = () => {
      isPlaying.value = true;
      status.value = "play";
    };
    utterance2.onend = () => {
      isPlaying.value = false;
      status.value = "end";
    };
    utterance2.onerror = (event) => {
      error.value = event;
    };
    utterance2.onend = () => {
      isPlaying.value = false;
      utterance2.lang = __vite_ssr_import_1__.unref(lang);
    };
  };
  const utterance = __vite_ssr_import_1__.computed(() => {
    isPlaying.value = false;
    status.value = "init";
    const newUtterance = new SpeechSynthesisUtterance(spokenText.value);
    bindEventsForUtterance(newUtterance);
    return newUtterance;
  });
  const speak = () => {
    synth.cancel();
    utterance && synth.speak(utterance.value);
  };
  if (isSupported) {
    bindEventsForUtterance(utterance.value);
    __vite_ssr_import_1__.watch(lang, (lang2) => {
      if (utterance.value && !isPlaying.value)
        utterance.value.lang = lang2;
    });
    __vite_ssr_import_1__.watch(isPlaying, () => {
      if (isPlaying.value)
        synth.resume();
      else
        synth.pause();
    });
  }
  __vite_ssr_import_0__.tryOnScopeDispose(() => {
    isPlaying.value = false;
  });
  return {
    isSupported,
    isPlaying,
    status,
    voiceInfo,
    utterance,
    error,
    toggle,
    speak
  };
}

function useStorageAsync(key, initialValue, storage, options = {}) {
  var _a;
  const {
    flush = "pre",
    deep = true,
    listenToStorageChanges = true,
    writeDefaults = true,
    shallow,
    window = defaultWindow,
    eventFilter,
    onError = (e) => {
      console.error(e);
    }
  } = options;
  const rawInit = __vite_ssr_import_1__.unref(initialValue);
  const type = guessSerializerType(rawInit);
  const data = (shallow ? __vite_ssr_import_1__.shallowRef : __vite_ssr_import_1__.ref)(initialValue);
  const serializer = (_a = options.serializer) != null ? _a : StorageSerializers[type];
  if (!storage) {
    try {
      storage = getSSRHandler("getDefaultStorage", () => {
        var _a2;
        return (_a2 = defaultWindow) == null ? void 0 : _a2.localStorage;
      })();
    } catch (e) {
      onError(e);
    }
  }
  async function read(event) {
    if (!storage || event && event.key !== key)
      return;
    try {
      const rawValue = event ? event.newValue : await storage.getItem(key);
      if (rawValue == null) {
        data.value = rawInit;
        if (writeDefaults && rawInit !== null)
          await storage.setItem(key, await serializer.write(rawInit));
      } else {
        data.value = await serializer.read(rawValue);
      }
    } catch (e) {
      onError(e);
    }
  }
  read();
  if (window && listenToStorageChanges)
    useEventListener(window, "storage", (e) => setTimeout(() => read(e), 0));
  if (storage) {
    __vite_ssr_import_0__.watchWithFilter(data, async () => {
      try {
        if (data.value == null)
          await storage.removeItem(key);
        else
          await storage.setItem(key, await serializer.write(data.value));
      } catch (e) {
        onError(e);
      }
    }, {
      flush,
      deep,
      eventFilter
    });
  }
  return data;
}

let _id = 0;
function useStyleTag(css, options = {}) {
  const isLoaded = __vite_ssr_import_1__.ref(false);
  const {
    document = defaultDocument,
    immediate = true,
    manual = false,
    id = `vueuse_styletag_${++_id}`
  } = options;
  const cssRef = __vite_ssr_import_1__.ref(css);
  let stop = () => {
  };
  const load = () => {
    if (!document)
      return;
    const el = document.getElementById(id) || document.createElement("style");
    el.type = "text/css";
    el.id = id;
    if (options.media)
      el.media = options.media;
    document.head.appendChild(el);
    if (isLoaded.value)
      return;
    stop = __vite_ssr_import_1__.watch(cssRef, (value) => {
      el.innerText = value;
    }, { immediate: true });
    isLoaded.value = true;
  };
  const unload = () => {
    if (!document || !isLoaded.value)
      return;
    stop();
    document.head.removeChild(document.getElementById(id));
    isLoaded.value = false;
  };
  if (immediate && !manual)
    load();
  if (!manual)
    __vite_ssr_import_0__.tryOnScopeDispose(unload);
  return {
    id,
    css: cssRef,
    unload,
    load,
    isLoaded: __vite_ssr_import_1__.readonly(isLoaded)
  };
}

function useTemplateRefsList() {
  const refs = __vite_ssr_import_1__.ref([]);
  refs.value.set = (el) => {
    if (el)
      refs.value.push(el);
  };
  __vite_ssr_import_1__.onBeforeUpdate(() => {
    refs.value.length = 0;
  });
  return refs;
}

function getRangesFromSelection(selection) {
  var _a;
  const rangeCount = (_a = selection.rangeCount) != null ? _a : 0;
  const ranges = new Array(rangeCount);
  for (let i = 0; i < rangeCount; i++) {
    const range = selection.getRangeAt(i);
    ranges[i] = range;
  }
  return ranges;
}
function useTextSelection(options = {}) {
  const {
    window = defaultWindow
  } = options;
  const selection = __vite_ssr_import_1__.ref(null);
  const text = __vite_ssr_import_1__.computed(() => {
    var _a, _b;
    return (_b = (_a = selection.value) == null ? void 0 : _a.toString()) != null ? _b : "";
  });
  const ranges = __vite_ssr_import_1__.computed(() => selection.value ? getRangesFromSelection(selection.value) : []);
  const rects = __vite_ssr_import_1__.computed(() => ranges.value.map((range) => range.getBoundingClientRect()));
  function onSelectionChange() {
    selection.value = null;
    if (window)
      selection.value = window.getSelection();
  }
  if (window)
    useEventListener(window.document, "selectionchange", onSelectionChange);
  return {
    text,
    rects,
    ranges,
    selection
  };
}

var __defProp$2 = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols$2 = Object.getOwnPropertySymbols;
var __hasOwnProp$2 = Object.prototype.hasOwnProperty;
var __propIsEnum$2 = Object.prototype.propertyIsEnumerable;
var __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$2 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$2.call(b, prop))
      __defNormalProp$2(a, prop, b[prop]);
  if (__getOwnPropSymbols$2)
    for (var prop of __getOwnPropSymbols$2(b)) {
      if (__propIsEnum$2.call(b, prop))
        __defNormalProp$2(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
function useThrottledRefHistory(source, options = {}) {
  const { throttle = 200, trailing = true } = options;
  const filter = __vite_ssr_import_0__.throttleFilter(throttle, trailing);
  const history = useRefHistory(source, __spreadProps(__spreadValues$2({}, options), { eventFilter: filter }));
  return __spreadValues$2({}, history);
}

var __defProp$1 = Object.defineProperty;
var __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;
var __hasOwnProp$1 = Object.prototype.hasOwnProperty;
var __propIsEnum$1 = Object.prototype.propertyIsEnumerable;
var __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$1 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$1.call(b, prop))
      __defNormalProp$1(a, prop, b[prop]);
  if (__getOwnPropSymbols$1)
    for (var prop of __getOwnPropSymbols$1(b)) {
      if (__propIsEnum$1.call(b, prop))
        __defNormalProp$1(a, prop, b[prop]);
    }
  return a;
};
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp$1.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols$1)
    for (var prop of __getOwnPropSymbols$1(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum$1.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
const UNITS = [
  { max: 6e4, value: 1e3, name: "second" },
  { max: 276e4, value: 6e4, name: "minute" },
  { max: 72e6, value: 36e5, name: "hour" },
  { max: 5184e5, value: 864e5, name: "day" },
  { max: 24192e5, value: 6048e5, name: "week" },
  { max: 28512e6, value: 2592e6, name: "month" },
  { max: Infinity, value: 31536e6, name: "year" }
];
const DEFAULT_MESSAGES = {
  justNow: "just now",
  past: (n) => n.match(/\d/) ? `${n} ago` : n,
  future: (n) => n.match(/\d/) ? `in ${n}` : n,
  month: (n, past) => n === 1 ? past ? "last month" : "next month" : `${n} month${n > 1 ? "s" : ""}`,
  year: (n, past) => n === 1 ? past ? "last year" : "next year" : `${n} year${n > 1 ? "s" : ""}`,
  day: (n, past) => n === 1 ? past ? "yesterday" : "tomorrow" : `${n} day${n > 1 ? "s" : ""}`,
  week: (n, past) => n === 1 ? past ? "last week" : "next week" : `${n} week${n > 1 ? "s" : ""}`,
  hour: (n) => `${n} hour${n > 1 ? "s" : ""}`,
  minute: (n) => `${n} minute${n > 1 ? "s" : ""}`,
  second: (n) => `${n} second${n > 1 ? "s" : ""}`
};
const DEFAULT_FORMATTER = (date) => date.toISOString().slice(0, 10);
function useTimeAgo(time, options = {}) {
  const {
    controls: exposeControls = false,
    max,
    updateInterval = 3e4,
    messages = DEFAULT_MESSAGES,
    fullDateFormatter = DEFAULT_FORMATTER
  } = options;
  const { abs, round } = Math;
  const _a = useNow({ interval: updateInterval, controls: true }), { now } = _a, controls = __objRest(_a, ["now"]);
  function getTimeago(from, now2) {
    var _a2;
    const diff = +now2 - +from;
    const absDiff = abs(diff);
    if (absDiff < 6e4)
      return messages.justNow;
    if (typeof max === "number" && absDiff > max)
      return fullDateFormatter(new Date(from));
    if (typeof max === "string") {
      const unitMax = (_a2 = UNITS.find((i) => i.name === max)) == null ? void 0 : _a2.max;
      if (unitMax && absDiff > unitMax)
        return fullDateFormatter(new Date(from));
    }
    for (const unit of UNITS) {
      if (absDiff < unit.max)
        return format(diff, unit);
    }
  }
  function applyFormat(name, val, isPast) {
    const formatter = messages[name];
    if (typeof formatter === "function")
      return formatter(val, isPast);
    return formatter.replace("{0}", val.toString());
  }
  function format(diff, unit) {
    const val = round(abs(diff) / unit.value);
    const past = diff > 0;
    const str = applyFormat(unit.name, val, past);
    return applyFormat(past ? "past" : "future", str, past);
  }
  const timeAgo = __vite_ssr_import_1__.computed(() => getTimeago(new Date(__vite_ssr_import_1__.unref(time)), __vite_ssr_import_1__.unref(now.value)));
  if (exposeControls) {
    return __spreadValues$1({
      timeAgo
    }, controls);
  } else {
    return timeAgo;
  }
}

function useTimeoutPoll(fn, interval, timeoutPollOptions) {
  const { start } = __vite_ssr_import_0__.useTimeoutFn(loop, interval);
  const isActive = __vite_ssr_import_1__.ref(false);
  async function loop() {
    if (!isActive.value)
      return;
    await fn();
    start();
  }
  function resume() {
    if (!isActive.value) {
      isActive.value = true;
      loop();
    }
  }
  function pause() {
    isActive.value = false;
  }
  if (timeoutPollOptions == null ? void 0 : timeoutPollOptions.immediate)
    resume();
  __vite_ssr_import_0__.tryOnScopeDispose(pause);
  return {
    isActive,
    pause,
    resume
  };
}

var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
function useTimestamp(options = {}) {
  const {
    controls: exposeControls = false,
    offset = 0,
    immediate = true,
    interval = "requestAnimationFrame"
  } = options;
  const ts = __vite_ssr_import_1__.ref(__vite_ssr_import_0__.timestamp() + offset);
  const update = () => ts.value = __vite_ssr_import_0__.timestamp() + offset;
  const controls = interval === "requestAnimationFrame" ? useRafFn(update, { immediate }) : __vite_ssr_import_0__.useIntervalFn(update, interval, { immediate });
  if (exposeControls) {
    return __spreadValues({
      timestamp: ts
    }, controls);
  } else {
    return ts;
  }
}

function useTitle(newTitle = null, options = {}) {
  var _a, _b;
  const {
    document = defaultDocument,
    observe = false,
    titleTemplate = "%s"
  } = options;
  const title = __vite_ssr_import_1__.ref((_a = newTitle != null ? newTitle : document == null ? void 0 : document.title) != null ? _a : null);
  __vite_ssr_import_1__.watch(title, (t, o) => {
    if (__vite_ssr_import_0__.isString(t) && t !== o && document)
      document.title = titleTemplate.replace("%s", t);
  }, { immediate: true });
  if (observe && document) {
    useMutationObserver((_b = document.head) == null ? void 0 : _b.querySelector("title"), () => {
      if (document && document.title !== title.value)
        title.value = titleTemplate.replace("%s", document.title);
    }, { childList: true });
  }
  return title;
}

const TransitionPresets = {
  linear: __vite_ssr_import_0__.identity,
  easeInSine: [0.12, 0, 0.39, 0],
  easeOutSine: [0.61, 1, 0.88, 1],
  easeInOutSine: [0.37, 0, 0.63, 1],
  easeInQuad: [0.11, 0, 0.5, 0],
  easeOutQuad: [0.5, 1, 0.89, 1],
  easeInOutQuad: [0.45, 0, 0.55, 1],
  easeInCubic: [0.32, 0, 0.67, 0],
  easeOutCubic: [0.33, 1, 0.68, 1],
  easeInOutCubic: [0.65, 0, 0.35, 1],
  easeInQuart: [0.5, 0, 0.75, 0],
  easeOutQuart: [0.25, 1, 0.5, 1],
  easeInOutQuart: [0.76, 0, 0.24, 1],
  easeInQuint: [0.64, 0, 0.78, 0],
  easeOutQuint: [0.22, 1, 0.36, 1],
  easeInOutQuint: [0.83, 0, 0.17, 1],
  easeInExpo: [0.7, 0, 0.84, 0],
  easeOutExpo: [0.16, 1, 0.3, 1],
  easeInOutExpo: [0.87, 0, 0.13, 1],
  easeInCirc: [0.55, 0, 1, 0.45],
  easeOutCirc: [0, 0.55, 0.45, 1],
  easeInOutCirc: [0.85, 0, 0.15, 1],
  easeInBack: [0.36, 0, 0.66, -0.56],
  easeOutBack: [0.34, 1.56, 0.64, 1],
  easeInOutBack: [0.68, -0.6, 0.32, 1.6]
};
function createEasingFunction([p0, p1, p2, p3]) {
  const a = (a1, a2) => 1 - 3 * a2 + 3 * a1;
  const b = (a1, a2) => 3 * a2 - 6 * a1;
  const c = (a1) => 3 * a1;
  const calcBezier = (t, a1, a2) => ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;
  const getSlope = (t, a1, a2) => 3 * a(a1, a2) * t * t + 2 * b(a1, a2) * t + c(a1);
  const getTforX = (x) => {
    let aGuessT = x;
    for (let i = 0; i < 4; ++i) {
      const currentSlope = getSlope(aGuessT, p0, p2);
      if (currentSlope === 0)
        return aGuessT;
      const currentX = calcBezier(aGuessT, p0, p2) - x;
      aGuessT -= currentX / currentSlope;
    }
    return aGuessT;
  };
  return (x) => p0 === p1 && p2 === p3 ? x : calcBezier(getTforX(x), p1, p3);
}
function useTransition(source, options = {}) {
  const {
    delay = 0,
    disabled = false,
    duration = 1e3,
    onFinished = __vite_ssr_import_0__.noop,
    onStarted = __vite_ssr_import_0__.noop,
    transition = __vite_ssr_import_0__.identity
  } = options;
  const currentTransition = __vite_ssr_import_1__.computed(() => {
    const t = __vite_ssr_import_1__.unref(transition);
    return __vite_ssr_import_0__.isFunction(t) ? t : createEasingFunction(t);
  });
  const sourceValue = __vite_ssr_import_1__.computed(() => {
    const s = __vite_ssr_import_1__.unref(source);
    return __vite_ssr_import_0__.isNumber(s) ? s : s.map(__vite_ssr_import_1__.unref);
  });
  const sourceVector = __vite_ssr_import_1__.computed(() => __vite_ssr_import_0__.isNumber(sourceValue.value) ? [sourceValue.value] : sourceValue.value);
  const outputVector = __vite_ssr_import_1__.ref(sourceVector.value.slice(0));
  let currentDuration;
  let diffVector;
  let endAt;
  let startAt;
  let startVector;
  const { resume, pause } = useRafFn(() => {
    const now = Date.now();
    const progress = __vite_ssr_import_0__.clamp(1 - (endAt - now) / currentDuration, 0, 1);
    outputVector.value = startVector.map((val, i) => {
      var _a;
      return val + ((_a = diffVector[i]) != null ? _a : 0) * currentTransition.value(progress);
    });
    if (progress >= 1) {
      pause();
      onFinished();
    }
  }, { immediate: false });
  const start = () => {
    pause();
    currentDuration = __vite_ssr_import_1__.unref(duration);
    diffVector = outputVector.value.map((n, i) => {
      var _a, _b;
      return ((_a = sourceVector.value[i]) != null ? _a : 0) - ((_b = outputVector.value[i]) != null ? _b : 0);
    });
    startVector = outputVector.value.slice(0);
    startAt = Date.now();
    endAt = startAt + currentDuration;
    resume();
    onStarted();
  };
  const timeout = __vite_ssr_import_0__.useTimeoutFn(start, delay, { immediate: false });
  __vite_ssr_import_1__.watch(sourceVector, () => {
    if (__vite_ssr_import_1__.unref(disabled)) {
      outputVector.value = sourceVector.value.slice(0);
    } else {
      if (__vite_ssr_import_1__.unref(delay) <= 0)
        start();
      else
        timeout.start();
    }
  }, { deep: true });
  return __vite_ssr_import_1__.computed(() => {
    const targetVector = __vite_ssr_import_1__.unref(disabled) ? sourceVector : outputVector;
    return __vite_ssr_import_0__.isNumber(sourceValue.value) ? targetVector.value[0] : targetVector.value;
  });
}

function useUrlSearchParams(mode = "history", options = {}) {
  const {
    initialValue = {},
    removeNullishValues = true,
    removeFalsyValues = false,
    window = defaultWindow
  } = options;
  if (!window)
    return __vite_ssr_import_1__.reactive(initialValue);
  const state = __vite_ssr_import_1__.reactive({});
  function getRawParams() {
    if (mode === "history") {
      return window.location.search || "";
    } else if (mode === "hash") {
      const hash = window.location.hash || "";
      const index = hash.indexOf("?");
      return index > 0 ? hash.slice(index) : "";
    } else {
      return (window.location.hash || "").replace(/^#/, "");
    }
  }
  function constructQuery(params) {
    const stringified = params.toString();
    if (mode === "history")
      return `${stringified ? `?${stringified}` : ""}${location.hash || ""}`;
    if (mode === "hash-params")
      return `${location.search || ""}${stringified ? `#${stringified}` : ""}`;
    const hash = window.location.hash || "#";
    const index = hash.indexOf("?");
    if (index > 0)
      return `${hash.slice(0, index)}${stringified ? `?${stringified}` : ""}`;
    return `${hash}${stringified ? `?${stringified}` : ""}`;
  }
  function read() {
    return new URLSearchParams(getRawParams());
  }
  function updateState(params) {
    const unusedKeys = new Set(Object.keys(state));
    for (const key of params.keys()) {
      const paramsForKey = params.getAll(key);
      state[key] = paramsForKey.length > 1 ? paramsForKey : params.get(key) || "";
      unusedKeys.delete(key);
    }
    Array.from(unusedKeys).forEach((key) => delete state[key]);
  }
  const { pause, resume } = __vite_ssr_import_0__.pausableWatch(state, () => {
    const params = new URLSearchParams("");
    Object.keys(state).forEach((key) => {
      const mapEntry = state[key];
      if (Array.isArray(mapEntry))
        mapEntry.forEach((value) => params.append(key, value));
      else if (removeNullishValues && mapEntry == null)
        params.delete(key);
      else if (removeFalsyValues && !mapEntry)
        params.delete(key);
      else
        params.set(key, mapEntry);
    });
    write(params);
  }, { deep: true });
  function write(params, shouldUpdate) {
    pause();
    if (shouldUpdate)
      updateState(params);
    window.history.replaceState(window.history.state, window.document.title, window.location.pathname + constructQuery(params));
    resume();
  }
  function onChanged() {
    write(read(), true);
  }
  useEventListener(window, "popstate", onChanged, false);
  if (mode !== "history")
    useEventListener(window, "hashchange", onChanged, false);
  const initial = read();
  if (initial.keys().next().value)
    updateState(initial);
  else
    Object.assign(state, initialValue);
  return state;
}

function useUserMedia(options = {}) {
  var _a, _b, _c;
  const enabled = __vite_ssr_import_1__.ref((_a = options.enabled) != null ? _a : false);
  const autoSwitch = __vite_ssr_import_1__.ref((_b = options.autoSwitch) != null ? _b : true);
  const videoDeviceId = __vite_ssr_import_1__.ref(options.videoDeviceId);
  const audioDeviceId = __vite_ssr_import_1__.ref(options.audioDeviceId);
  const { navigator = defaultNavigator } = options;
  const isSupported = Boolean((_c = navigator == null ? void 0 : navigator.mediaDevices) == null ? void 0 : _c.getUserMedia);
  const stream = __vite_ssr_import_1__.shallowRef();
  function getDeviceOptions(device) {
    if (device.value === "none" || device.value === false)
      return false;
    if (device.value == null)
      return true;
    return {
      deviceId: device.value
    };
  }
  async function _start() {
    if (!isSupported || stream.value)
      return;
    stream.value = await navigator.mediaDevices.getUserMedia({
      video: getDeviceOptions(videoDeviceId),
      audio: getDeviceOptions(audioDeviceId)
    });
    return stream.value;
  }
  async function _stop() {
    var _a2;
    (_a2 = stream.value) == null ? void 0 : _a2.getTracks().forEach((t) => t.stop());
    stream.value = void 0;
  }
  function stop() {
    _stop();
    enabled.value = false;
  }
  async function start() {
    await _start();
    if (stream.value)
      enabled.value = true;
    return stream.value;
  }
  async function restart() {
    _stop();
    return await start();
  }
  __vite_ssr_import_1__.watch(enabled, (v) => {
    if (v)
      _start();
    else
      _stop();
  }, { immediate: true });
  __vite_ssr_import_1__.watch([videoDeviceId, audioDeviceId], () => {
    if (autoSwitch.value && stream.value)
      restart();
  }, { immediate: true });
  return {
    isSupported,
    stream,
    start,
    stop,
    restart,
    videoDeviceId,
    audioDeviceId,
    enabled,
    autoSwitch
  };
}

function useVModel(props, key, emit, options = {}) {
  var _a, _b, _c;
  const {
    passive = false,
    eventName,
    deep = false,
    defaultValue
  } = options;
  const vm = __vite_ssr_import_1__.getCurrentInstance();
  const _emit = emit || (vm == null ? void 0 : vm.emit) || ((_a = vm == null ? void 0 : vm.$emit) == null ? void 0 : _a.bind(vm));
  let event = eventName;
  if (!key) {
    if (__vite_ssr_import_1__.isVue2) {
      const modelOptions = (_c = (_b = vm == null ? void 0 : vm.proxy) == null ? void 0 : _b.$options) == null ? void 0 : _c.model;
      key = (modelOptions == null ? void 0 : modelOptions.value) || "value";
      if (!eventName)
        event = (modelOptions == null ? void 0 : modelOptions.event) || "input";
    } else {
      key = "modelValue";
    }
  }
  event = eventName || event || `update:${key.toString()}`;
  const getValue = () => __vite_ssr_import_0__.isDef(props[key]) ? props[key] : defaultValue;
  if (passive) {
    const proxy = __vite_ssr_import_1__.ref(getValue());
    __vite_ssr_import_1__.watch(() => props[key], (v) => proxy.value = v);
    __vite_ssr_import_1__.watch(proxy, (v) => {
      if (v !== props[key] || deep)
        _emit(event, v);
    }, {
      deep
    });
    return proxy;
  } else {
    return __vite_ssr_import_1__.computed({
      get() {
        return getValue();
      },
      set(value) {
        _emit(event, value);
      }
    });
  }
}

function useVModels(props, emit, options = {}) {
  const ret = {};
  for (const key in props)
    ret[key] = useVModel(props, key, emit, options);
  return ret;
}

function useVibrate(options) {
  const {
    pattern = [],
    interval = 0,
    navigator = defaultNavigator
  } = options || {};
  const isSupported = "undefined" !== "undefined" && "vibrate" in navigator;
  const patternRef = __vite_ssr_import_1__.ref(pattern);
  let intervalControls;
  const vibrate = (pattern2 = patternRef.value) => {
    if (isSupported)
      navigator.vibrate(pattern2);
  };
  const stop = () => {
    if (isSupported)
      navigator.vibrate(0);
    intervalControls == null ? void 0 : intervalControls.pause();
  };
  if (interval > 0) {
    intervalControls = __vite_ssr_import_0__.useIntervalFn(vibrate, interval, {
      immediate: false,
      immediateCallback: false
    });
  }
  return {
    isSupported,
    pattern,
    intervalControls,
    vibrate,
    stop
  };
}

function useVirtualList(list, options) {
  const containerRef = __vite_ssr_import_1__.ref();
  const size = useElementSize(containerRef);
  const currentList = __vite_ssr_import_1__.ref([]);
  const source = __vite_ssr_import_1__.shallowRef(list);
  const state = __vite_ssr_import_1__.ref({ start: 0, end: 10 });
  const { itemHeight, overscan = 5 } = options;
  const getViewCapacity = (containerHeight) => {
    if (typeof itemHeight === "number")
      return Math.ceil(containerHeight / itemHeight);
    const { start = 0 } = state.value;
    let sum = 0;
    let capacity = 0;
    for (let i = start; i < source.value.length; i++) {
      const height = itemHeight(i);
      sum += height;
      if (sum >= containerHeight) {
        capacity = i;
        break;
      }
    }
    return capacity - start;
  };
  const getOffset = (scrollTop) => {
    if (typeof itemHeight === "number")
      return Math.floor(scrollTop / itemHeight) + 1;
    let sum = 0;
    let offset = 0;
    for (let i = 0; i < source.value.length; i++) {
      const height = itemHeight(i);
      sum += height;
      if (sum >= scrollTop) {
        offset = i;
        break;
      }
    }
    return offset + 1;
  };
  const calculateRange = () => {
    const element = containerRef.value;
    if (element) {
      const offset = getOffset(element.scrollTop);
      const viewCapacity = getViewCapacity(element.clientHeight);
      const from = offset - overscan;
      const to = offset + viewCapacity + overscan;
      state.value = {
        start: from < 0 ? 0 : from,
        end: to > source.value.length ? source.value.length : to
      };
      currentList.value = source.value.slice(state.value.start, state.value.end).map((ele, index) => ({
        data: ele,
        index: index + state.value.start
      }));
    }
  };
  __vite_ssr_import_1__.watch([size.width, size.height, list], () => {
    calculateRange();
  });
  const totalHeight = __vite_ssr_import_1__.computed(() => {
    if (typeof itemHeight === "number")
      return source.value.length * itemHeight;
    return source.value.reduce((sum, _, index) => sum + itemHeight(index), 0);
  });
  const getDistanceTop = (index) => {
    if (typeof itemHeight === "number") {
      const height2 = index * itemHeight;
      return height2;
    }
    const height = source.value.slice(0, index).reduce((sum, _, i) => sum + itemHeight(i), 0);
    return height;
  };
  const scrollTo = (index) => {
    if (containerRef.value) {
      containerRef.value.scrollTop = getDistanceTop(index);
      calculateRange();
    }
  };
  const offsetTop = __vite_ssr_import_1__.computed(() => getDistanceTop(state.value.start));
  const wrapperProps = __vite_ssr_import_1__.computed(() => {
    return {
      style: {
        width: "100%",
        height: `${totalHeight.value - offsetTop.value}px`,
        marginTop: `${offsetTop.value}px`
      }
    };
  });
  const containerStyle = { overflowY: "auto" };
  return {
    list: currentList,
    scrollTo,
    containerProps: {
      ref: containerRef,
      onScroll: () => {
        calculateRange();
      },
      style: containerStyle
    },
    wrapperProps
  };
}

const useWakeLock = (options = {}) => {
  const {
    navigator = defaultNavigator,
    document = defaultDocument
  } = options;
  let wakeLock;
  const isSupported = navigator && "wakeLock" in navigator;
  const isActive = __vite_ssr_import_1__.ref(false);
  async function onVisibilityChange() {
    if (!isSupported || !wakeLock)
      return;
    if (document && document.visibilityState === "visible")
      wakeLock = await navigator.wakeLock.request("screen");
    isActive.value = !wakeLock.released;
  }
  if (document)
    useEventListener(document, "visibilitychange", onVisibilityChange, { passive: true });
  async function request(type) {
    if (!isSupported)
      return;
    wakeLock = await navigator.wakeLock.request(type);
    isActive.value = !wakeLock.released;
  }
  async function release() {
    if (!isSupported || !wakeLock)
      return;
    await wakeLock.release();
    isActive.value = !wakeLock.released;
    wakeLock = null;
  }
  return {
    isSupported,
    isActive,
    request,
    release
  };
};

const useWebNotification = (defaultOptions = {}) => {
  const {
    window = defaultWindow
  } = defaultOptions;
  const isSupported = !!window && "Notification" in window;
  const notification = __vite_ssr_import_1__.ref(null);
  const requestPermission = async () => {
    if (!isSupported)
      return;
    if ("permission" in Notification && Notification.permission !== "denied")
      await Notification.requestPermission();
  };
  const onClick = __vite_ssr_import_0__.createEventHook();
  const onShow = __vite_ssr_import_0__.createEventHook();
  const onError = __vite_ssr_import_0__.createEventHook();
  const onClose = __vite_ssr_import_0__.createEventHook();
  const show = async (overrides) => {
    if (!isSupported)
      return;
    await requestPermission();
    const options = Object.assign({}, defaultOptions, overrides);
    notification.value = new Notification(options.title || "", options);
    notification.value.onclick = (event) => onClick.trigger(event);
    notification.value.onshow = (event) => onShow.trigger(event);
    notification.value.onerror = (event) => onError.trigger(event);
    notification.value.onclose = (event) => onClose.trigger(event);
    return notification.value;
  };
  const close = () => {
    if (notification.value)
      notification.value.close();
    notification.value = null;
  };
  __vite_ssr_import_0__.tryOnMounted(async () => {
    if (isSupported)
      await requestPermission();
  });
  __vite_ssr_import_0__.tryOnScopeDispose(close);
  if (isSupported && window) {
    const document = window.document;
    useEventListener(document, "visibilitychange", (e) => {
      e.preventDefault();
      if (document.visibilityState === "visible") {
        close();
      }
    });
  }
  return {
    isSupported,
    notification,
    show,
    close,
    onClick,
    onShow,
    onError,
    onClose
  };
};

function resolveNestedOptions(options) {
  if (options === true)
    return {};
  return options;
}
function useWebSocket(url, options = {}) {
  const {
    onConnected,
    onDisconnected,
    onError,
    onMessage,
    immediate = true,
    autoClose = true,
    protocols = []
  } = options;
  const data = __vite_ssr_import_1__.ref(null);
  const status = __vite_ssr_import_1__.ref("CONNECTING");
  const wsRef = __vite_ssr_import_1__.ref();
  let heartbeatPause;
  let heartbeatResume;
  let explicitlyClosed = false;
  let retried = 0;
  let bufferedData = [];
  const close = (code = 1e3, reason) => {
    if (!wsRef.value)
      return;
    explicitlyClosed = true;
    heartbeatPause == null ? void 0 : heartbeatPause();
    wsRef.value.close(code, reason);
  };
  const _sendBuffer = () => {
    if (bufferedData.length && wsRef.value && status.value === "OPEN") {
      for (const buffer of bufferedData)
        wsRef.value.send(buffer);
      bufferedData = [];
    }
  };
  const send = (data2, useBuffer = true) => {
    if (!wsRef.value || status.value !== "OPEN") {
      if (useBuffer)
        bufferedData.push(data2);
      return false;
    }
    _sendBuffer();
    wsRef.value.send(data2);
    return true;
  };
  const _init = () => {
    const ws = new WebSocket(url, protocols);
    wsRef.value = ws;
    status.value = "CONNECTING";
    explicitlyClosed = false;
    ws.onopen = () => {
      status.value = "OPEN";
      onConnected == null ? void 0 : onConnected(ws);
      heartbeatResume == null ? void 0 : heartbeatResume();
      _sendBuffer();
    };
    ws.onclose = (ev) => {
      status.value = "CLOSED";
      wsRef.value = void 0;
      onDisconnected == null ? void 0 : onDisconnected(ws, ev);
      if (!explicitlyClosed && options.autoReconnect) {
        const {
          retries = -1,
          delay = 1e3,
          onFailed
        } = resolveNestedOptions(options.autoReconnect);
        retried += 1;
        if (typeof retries === "number" && (retries < 0 || retried < retries))
          setTimeout(_init, delay);
        else if (typeof retries === "function" && retries())
          setTimeout(_init, delay);
        else
          onFailed == null ? void 0 : onFailed();
      }
    };
    ws.onerror = (e) => {
      onError == null ? void 0 : onError(ws, e);
    };
    ws.onmessage = (e) => {
      data.value = e.data;
      onMessage == null ? void 0 : onMessage(ws, e);
    };
  };
  if (options.heartbeat) {
    const {
      message = "ping",
      interval = 1e3
    } = resolveNestedOptions(options.heartbeat);
    const { pause, resume } = __vite_ssr_import_0__.useIntervalFn(() => send(message, false), interval, { immediate: false });
    heartbeatPause = pause;
    heartbeatResume = resume;
  }
  if (immediate)
    _init();
  if (autoClose) {
    useEventListener(window, "beforeunload", () => close());
    __vite_ssr_import_0__.tryOnScopeDispose(close);
  }
  const open = () => {
    close();
    retried = 0;
    _init();
  };
  return {
    data,
    status,
    close,
    send,
    open,
    ws: wsRef
  };
}

function useWebWorker(url, workerOptions, options = {}) {
  const {
    window = defaultWindow
  } = options;
  const data = __vite_ssr_import_1__.ref(null);
  const worker = __vite_ssr_import_1__.shallowRef();
  const post = function post2(val) {
    if (!worker.value)
      return;
    worker.value.postMessage(val);
  };
  const terminate = function terminate2() {
    if (!worker.value)
      return;
    worker.value.terminate();
  };
  if (window) {
    worker.value = new Worker(url, workerOptions);
    worker.value.onmessage = (e) => {
      data.value = e.data;
    };
    __vite_ssr_import_0__.tryOnScopeDispose(() => {
      if (worker.value)
        worker.value.terminate();
    });
  }
  return {
    data,
    post,
    terminate,
    worker
  };
}

const jobRunner = (userFunc) => (e) => {
  const userFuncArgs = e.data[0];
  return Promise.resolve(userFunc.apply(void 0, userFuncArgs)).then((result) => {
    postMessage(["SUCCESS", result]);
  }).catch((error) => {
    postMessage(["ERROR", error]);
  });
};

const depsParser = (deps) => {
  if (deps.length === 0)
    return "";
  const depsString = deps.map((dep) => `'${dep}'`).toString();
  return `importScripts(${depsString})`;
};

const createWorkerBlobUrl = (fn, deps) => {
  const blobCode = `${depsParser(deps)}; onmessage=(${jobRunner})(${fn})`;
  const blob = new Blob([blobCode], { type: "text/javascript" });
  const url = URL.createObjectURL(blob);
  return url;
};

const useWebWorkerFn = (fn, options = {}) => {
  const {
    dependencies = [],
    timeout,
    window = defaultWindow
  } = options;
  const worker = __vite_ssr_import_1__.ref();
  const workerStatus = __vite_ssr_import_1__.ref("PENDING");
  const promise = __vite_ssr_import_1__.ref({});
  const timeoutId = __vite_ssr_import_1__.ref();
  const workerTerminate = (status = "PENDING") => {
    if (worker.value && worker.value._url && window) {
      worker.value.terminate();
      URL.revokeObjectURL(worker.value._url);
      promise.value = {};
      worker.value = void 0;
      window.clearTimeout(timeoutId.value);
      workerStatus.value = status;
    }
  };
  workerTerminate();
  __vite_ssr_import_0__.tryOnScopeDispose(workerTerminate);
  const generateWorker = () => {
    const blobUrl = createWorkerBlobUrl(fn, dependencies);
    const newWorker = new Worker(blobUrl);
    newWorker._url = blobUrl;
    newWorker.onmessage = (e) => {
      const { resolve = () => {
      }, reject = () => {
      } } = promise.value;
      const [status, result] = e.data;
      switch (status) {
        case "SUCCESS":
          resolve(result);
          workerTerminate(status);
          break;
        default:
          reject(result);
          workerTerminate("ERROR");
          break;
      }
    };
    newWorker.onerror = (e) => {
      const { reject = () => {
      } } = promise.value;
      reject(e);
      workerTerminate("ERROR");
    };
    if (timeout) {
      timeoutId.value = setTimeout(() => workerTerminate("TIMEOUT_EXPIRED"), timeout);
    }
    return newWorker;
  };
  const callWorker = (...fnArgs) => new Promise((resolve, reject) => {
    promise.value = {
      resolve,
      reject
    };
    worker.value && worker.value.postMessage([[...fnArgs]]);
    workerStatus.value = "RUNNING";
  });
  const workerFn = (...fnArgs) => {
    if (workerStatus.value === "RUNNING") {
      console.error("[useWebWorkerFn] You can only run one instance of the worker at a time.");
      return Promise.reject();
    }
    worker.value = generateWorker();
    return callWorker(...fnArgs);
  };
  return {
    workerFn,
    workerStatus,
    workerTerminate
  };
};

function useWindowFocus({ window = defaultWindow } = {}) {
  if (!window)
    return __vite_ssr_import_1__.ref(false);
  const focused = __vite_ssr_import_1__.ref(window.document.hasFocus());
  useEventListener(window, "blur", () => {
    focused.value = false;
  });
  useEventListener(window, "focus", () => {
    focused.value = true;
  });
  return focused;
}

function useWindowScroll({ window = defaultWindow } = {}) {
  if (!window) {
    return {
      x: __vite_ssr_import_1__.ref(0),
      y: __vite_ssr_import_1__.ref(0)
    };
  }
  const x = __vite_ssr_import_1__.ref(window.pageXOffset);
  const y = __vite_ssr_import_1__.ref(window.pageYOffset);
  useEventListener("scroll", () => {
    x.value = window.pageXOffset;
    y.value = window.pageYOffset;
  }, {
    capture: false,
    passive: true
  });
  return { x, y };
}

function useWindowSize({ window = defaultWindow, initialWidth = Infinity, initialHeight = Infinity } = {}) {
  const width = __vite_ssr_import_1__.ref(initialWidth);
  const height = __vite_ssr_import_1__.ref(initialHeight);
  const update = () => {
    if (window) {
      width.value = window.innerWidth;
      height.value = window.innerHeight;
    }
  };
  update();
  __vite_ssr_import_0__.tryOnMounted(update);
  useEventListener("resize", update, { passive: true });
  return { width, height };
}


Object.defineProperty(__vite_ssr_exports__, "DefaultMagicKeysAliasMap", { enumerable: true, configurable: true, get(){ return DefaultMagicKeysAliasMap }});
Object.defineProperty(__vite_ssr_exports__, "StorageSerializers", { enumerable: true, configurable: true, get(){ return StorageSerializers }});
Object.defineProperty(__vite_ssr_exports__, "SwipeDirection", { enumerable: true, configurable: true, get(){ return SwipeDirection }});
Object.defineProperty(__vite_ssr_exports__, "TransitionPresets", { enumerable: true, configurable: true, get(){ return TransitionPresets }});
Object.defineProperty(__vite_ssr_exports__, "asyncComputed", { enumerable: true, configurable: true, get(){ return computedAsync }});
Object.defineProperty(__vite_ssr_exports__, "breakpointsAntDesign", { enumerable: true, configurable: true, get(){ return breakpointsAntDesign }});
Object.defineProperty(__vite_ssr_exports__, "breakpointsBootstrapV5", { enumerable: true, configurable: true, get(){ return breakpointsBootstrapV5 }});
Object.defineProperty(__vite_ssr_exports__, "breakpointsQuasar", { enumerable: true, configurable: true, get(){ return breakpointsQuasar }});
Object.defineProperty(__vite_ssr_exports__, "breakpointsSematic", { enumerable: true, configurable: true, get(){ return breakpointsSematic }});
Object.defineProperty(__vite_ssr_exports__, "breakpointsTailwind", { enumerable: true, configurable: true, get(){ return breakpointsTailwind }});
Object.defineProperty(__vite_ssr_exports__, "breakpointsVuetify", { enumerable: true, configurable: true, get(){ return breakpointsVuetify }});
Object.defineProperty(__vite_ssr_exports__, "computedAsync", { enumerable: true, configurable: true, get(){ return computedAsync }});
Object.defineProperty(__vite_ssr_exports__, "computedInject", { enumerable: true, configurable: true, get(){ return computedInject }});
Object.defineProperty(__vite_ssr_exports__, "createFetch", { enumerable: true, configurable: true, get(){ return createFetch }});
Object.defineProperty(__vite_ssr_exports__, "createUnrefFn", { enumerable: true, configurable: true, get(){ return createUnrefFn }});
Object.defineProperty(__vite_ssr_exports__, "defaultDocument", { enumerable: true, configurable: true, get(){ return defaultDocument }});
Object.defineProperty(__vite_ssr_exports__, "defaultLocation", { enumerable: true, configurable: true, get(){ return defaultLocation }});
Object.defineProperty(__vite_ssr_exports__, "defaultNavigator", { enumerable: true, configurable: true, get(){ return defaultNavigator }});
Object.defineProperty(__vite_ssr_exports__, "defaultWindow", { enumerable: true, configurable: true, get(){ return defaultWindow }});
Object.defineProperty(__vite_ssr_exports__, "getSSRHandler", { enumerable: true, configurable: true, get(){ return getSSRHandler }});
Object.defineProperty(__vite_ssr_exports__, "mapGamepadToXbox360Controller", { enumerable: true, configurable: true, get(){ return mapGamepadToXbox360Controller }});
Object.defineProperty(__vite_ssr_exports__, "onClickOutside", { enumerable: true, configurable: true, get(){ return onClickOutside }});
Object.defineProperty(__vite_ssr_exports__, "onKeyDown", { enumerable: true, configurable: true, get(){ return onKeyDown }});
Object.defineProperty(__vite_ssr_exports__, "onKeyPressed", { enumerable: true, configurable: true, get(){ return onKeyPressed }});
Object.defineProperty(__vite_ssr_exports__, "onKeyStroke", { enumerable: true, configurable: true, get(){ return onKeyStroke }});
Object.defineProperty(__vite_ssr_exports__, "onKeyUp", { enumerable: true, configurable: true, get(){ return onKeyUp }});
Object.defineProperty(__vite_ssr_exports__, "onLongPress", { enumerable: true, configurable: true, get(){ return onLongPress }});
Object.defineProperty(__vite_ssr_exports__, "onStartTyping", { enumerable: true, configurable: true, get(){ return onStartTyping }});
Object.defineProperty(__vite_ssr_exports__, "setSSRHandler", { enumerable: true, configurable: true, get(){ return setSSRHandler }});
Object.defineProperty(__vite_ssr_exports__, "templateRef", { enumerable: true, configurable: true, get(){ return templateRef }});
Object.defineProperty(__vite_ssr_exports__, "unrefElement", { enumerable: true, configurable: true, get(){ return unrefElement }});
Object.defineProperty(__vite_ssr_exports__, "useActiveElement", { enumerable: true, configurable: true, get(){ return useActiveElement }});
Object.defineProperty(__vite_ssr_exports__, "useAsyncQueue", { enumerable: true, configurable: true, get(){ return useAsyncQueue }});
Object.defineProperty(__vite_ssr_exports__, "useAsyncState", { enumerable: true, configurable: true, get(){ return useAsyncState }});
Object.defineProperty(__vite_ssr_exports__, "useBase64", { enumerable: true, configurable: true, get(){ return useBase64 }});
Object.defineProperty(__vite_ssr_exports__, "useBattery", { enumerable: true, configurable: true, get(){ return useBattery }});
Object.defineProperty(__vite_ssr_exports__, "useBluetooth", { enumerable: true, configurable: true, get(){ return useBluetooth }});
Object.defineProperty(__vite_ssr_exports__, "useBreakpoints", { enumerable: true, configurable: true, get(){ return useBreakpoints }});
Object.defineProperty(__vite_ssr_exports__, "useBroadcastChannel", { enumerable: true, configurable: true, get(){ return useBroadcastChannel }});
Object.defineProperty(__vite_ssr_exports__, "useBrowserLocation", { enumerable: true, configurable: true, get(){ return useBrowserLocation }});
Object.defineProperty(__vite_ssr_exports__, "useCached", { enumerable: true, configurable: true, get(){ return useCached }});
Object.defineProperty(__vite_ssr_exports__, "useClamp", { enumerable: true, configurable: true, get(){ return useClamp }});
Object.defineProperty(__vite_ssr_exports__, "useClipboard", { enumerable: true, configurable: true, get(){ return useClipboard }});
Object.defineProperty(__vite_ssr_exports__, "useColorMode", { enumerable: true, configurable: true, get(){ return useColorMode }});
Object.defineProperty(__vite_ssr_exports__, "useConfirmDialog", { enumerable: true, configurable: true, get(){ return useConfirmDialog }});
Object.defineProperty(__vite_ssr_exports__, "useCssVar", { enumerable: true, configurable: true, get(){ return useCssVar }});
Object.defineProperty(__vite_ssr_exports__, "useCurrentElement", { enumerable: true, configurable: true, get(){ return useCurrentElement }});
Object.defineProperty(__vite_ssr_exports__, "useCycleList", { enumerable: true, configurable: true, get(){ return useCycleList }});
Object.defineProperty(__vite_ssr_exports__, "useDark", { enumerable: true, configurable: true, get(){ return useDark }});
Object.defineProperty(__vite_ssr_exports__, "useDebouncedRefHistory", { enumerable: true, configurable: true, get(){ return useDebouncedRefHistory }});
Object.defineProperty(__vite_ssr_exports__, "useDeviceMotion", { enumerable: true, configurable: true, get(){ return useDeviceMotion }});
Object.defineProperty(__vite_ssr_exports__, "useDeviceOrientation", { enumerable: true, configurable: true, get(){ return useDeviceOrientation }});
Object.defineProperty(__vite_ssr_exports__, "useDevicePixelRatio", { enumerable: true, configurable: true, get(){ return useDevicePixelRatio }});
Object.defineProperty(__vite_ssr_exports__, "useDevicesList", { enumerable: true, configurable: true, get(){ return useDevicesList }});
Object.defineProperty(__vite_ssr_exports__, "useDisplayMedia", { enumerable: true, configurable: true, get(){ return useDisplayMedia }});
Object.defineProperty(__vite_ssr_exports__, "useDocumentVisibility", { enumerable: true, configurable: true, get(){ return useDocumentVisibility }});
Object.defineProperty(__vite_ssr_exports__, "useDraggable", { enumerable: true, configurable: true, get(){ return useDraggable }});
Object.defineProperty(__vite_ssr_exports__, "useDropZone", { enumerable: true, configurable: true, get(){ return useDropZone }});
Object.defineProperty(__vite_ssr_exports__, "useElementBounding", { enumerable: true, configurable: true, get(){ return useElementBounding }});
Object.defineProperty(__vite_ssr_exports__, "useElementByPoint", { enumerable: true, configurable: true, get(){ return useElementByPoint }});
Object.defineProperty(__vite_ssr_exports__, "useElementHover", { enumerable: true, configurable: true, get(){ return useElementHover }});
Object.defineProperty(__vite_ssr_exports__, "useElementSize", { enumerable: true, configurable: true, get(){ return useElementSize }});
Object.defineProperty(__vite_ssr_exports__, "useElementVisibility", { enumerable: true, configurable: true, get(){ return useElementVisibility }});
Object.defineProperty(__vite_ssr_exports__, "useEventBus", { enumerable: true, configurable: true, get(){ return useEventBus }});
Object.defineProperty(__vite_ssr_exports__, "useEventListener", { enumerable: true, configurable: true, get(){ return useEventListener }});
Object.defineProperty(__vite_ssr_exports__, "useEventSource", { enumerable: true, configurable: true, get(){ return useEventSource }});
Object.defineProperty(__vite_ssr_exports__, "useEyeDropper", { enumerable: true, configurable: true, get(){ return useEyeDropper }});
Object.defineProperty(__vite_ssr_exports__, "useFavicon", { enumerable: true, configurable: true, get(){ return useFavicon }});
Object.defineProperty(__vite_ssr_exports__, "useFetch", { enumerable: true, configurable: true, get(){ return useFetch }});
Object.defineProperty(__vite_ssr_exports__, "useFileSystemAccess", { enumerable: true, configurable: true, get(){ return useFileSystemAccess }});
Object.defineProperty(__vite_ssr_exports__, "useFocus", { enumerable: true, configurable: true, get(){ return useFocus }});
Object.defineProperty(__vite_ssr_exports__, "useFocusWithin", { enumerable: true, configurable: true, get(){ return useFocusWithin }});
Object.defineProperty(__vite_ssr_exports__, "useFps", { enumerable: true, configurable: true, get(){ return useFps }});
Object.defineProperty(__vite_ssr_exports__, "useFullscreen", { enumerable: true, configurable: true, get(){ return useFullscreen }});
Object.defineProperty(__vite_ssr_exports__, "useGamepad", { enumerable: true, configurable: true, get(){ return useGamepad }});
Object.defineProperty(__vite_ssr_exports__, "useGeolocation", { enumerable: true, configurable: true, get(){ return useGeolocation }});
Object.defineProperty(__vite_ssr_exports__, "useIdle", { enumerable: true, configurable: true, get(){ return useIdle }});
Object.defineProperty(__vite_ssr_exports__, "useImage", { enumerable: true, configurable: true, get(){ return useImage }});
Object.defineProperty(__vite_ssr_exports__, "useInfiniteScroll", { enumerable: true, configurable: true, get(){ return useInfiniteScroll }});
Object.defineProperty(__vite_ssr_exports__, "useIntersectionObserver", { enumerable: true, configurable: true, get(){ return useIntersectionObserver }});
Object.defineProperty(__vite_ssr_exports__, "useKeyModifier", { enumerable: true, configurable: true, get(){ return useKeyModifier }});
Object.defineProperty(__vite_ssr_exports__, "useLocalStorage", { enumerable: true, configurable: true, get(){ return useLocalStorage }});
Object.defineProperty(__vite_ssr_exports__, "useMagicKeys", { enumerable: true, configurable: true, get(){ return useMagicKeys }});
Object.defineProperty(__vite_ssr_exports__, "useManualRefHistory", { enumerable: true, configurable: true, get(){ return useManualRefHistory }});
Object.defineProperty(__vite_ssr_exports__, "useMediaControls", { enumerable: true, configurable: true, get(){ return useMediaControls }});
Object.defineProperty(__vite_ssr_exports__, "useMediaQuery", { enumerable: true, configurable: true, get(){ return useMediaQuery }});
Object.defineProperty(__vite_ssr_exports__, "useMemoize", { enumerable: true, configurable: true, get(){ return useMemoize }});
Object.defineProperty(__vite_ssr_exports__, "useMemory", { enumerable: true, configurable: true, get(){ return useMemory }});
Object.defineProperty(__vite_ssr_exports__, "useMounted", { enumerable: true, configurable: true, get(){ return useMounted }});
Object.defineProperty(__vite_ssr_exports__, "useMouse", { enumerable: true, configurable: true, get(){ return useMouse }});
Object.defineProperty(__vite_ssr_exports__, "useMouseInElement", { enumerable: true, configurable: true, get(){ return useMouseInElement }});
Object.defineProperty(__vite_ssr_exports__, "useMousePressed", { enumerable: true, configurable: true, get(){ return useMousePressed }});
Object.defineProperty(__vite_ssr_exports__, "useMutationObserver", { enumerable: true, configurable: true, get(){ return useMutationObserver }});
Object.defineProperty(__vite_ssr_exports__, "useNavigatorLanguage", { enumerable: true, configurable: true, get(){ return useNavigatorLanguage }});
Object.defineProperty(__vite_ssr_exports__, "useNetwork", { enumerable: true, configurable: true, get(){ return useNetwork }});
Object.defineProperty(__vite_ssr_exports__, "useNow", { enumerable: true, configurable: true, get(){ return useNow }});
Object.defineProperty(__vite_ssr_exports__, "useOffsetPagination", { enumerable: true, configurable: true, get(){ return useOffsetPagination }});
Object.defineProperty(__vite_ssr_exports__, "useOnline", { enumerable: true, configurable: true, get(){ return useOnline }});
Object.defineProperty(__vite_ssr_exports__, "usePageLeave", { enumerable: true, configurable: true, get(){ return usePageLeave }});
Object.defineProperty(__vite_ssr_exports__, "useParallax", { enumerable: true, configurable: true, get(){ return useParallax }});
Object.defineProperty(__vite_ssr_exports__, "usePermission", { enumerable: true, configurable: true, get(){ return usePermission }});
Object.defineProperty(__vite_ssr_exports__, "usePointer", { enumerable: true, configurable: true, get(){ return usePointer }});
Object.defineProperty(__vite_ssr_exports__, "usePointerSwipe", { enumerable: true, configurable: true, get(){ return usePointerSwipe }});
Object.defineProperty(__vite_ssr_exports__, "usePreferredColorScheme", { enumerable: true, configurable: true, get(){ return usePreferredColorScheme }});
Object.defineProperty(__vite_ssr_exports__, "usePreferredDark", { enumerable: true, configurable: true, get(){ return usePreferredDark }});
Object.defineProperty(__vite_ssr_exports__, "usePreferredLanguages", { enumerable: true, configurable: true, get(){ return usePreferredLanguages }});
Object.defineProperty(__vite_ssr_exports__, "useRafFn", { enumerable: true, configurable: true, get(){ return useRafFn }});
Object.defineProperty(__vite_ssr_exports__, "useRefHistory", { enumerable: true, configurable: true, get(){ return useRefHistory }});
Object.defineProperty(__vite_ssr_exports__, "useResizeObserver", { enumerable: true, configurable: true, get(){ return useResizeObserver }});
Object.defineProperty(__vite_ssr_exports__, "useScreenOrientation", { enumerable: true, configurable: true, get(){ return useScreenOrientation }});
Object.defineProperty(__vite_ssr_exports__, "useScreenSafeArea", { enumerable: true, configurable: true, get(){ return useScreenSafeArea }});
Object.defineProperty(__vite_ssr_exports__, "useScriptTag", { enumerable: true, configurable: true, get(){ return useScriptTag }});
Object.defineProperty(__vite_ssr_exports__, "useScroll", { enumerable: true, configurable: true, get(){ return useScroll }});
Object.defineProperty(__vite_ssr_exports__, "useScrollLock", { enumerable: true, configurable: true, get(){ return useScrollLock }});
Object.defineProperty(__vite_ssr_exports__, "useSessionStorage", { enumerable: true, configurable: true, get(){ return useSessionStorage }});
Object.defineProperty(__vite_ssr_exports__, "useShare", { enumerable: true, configurable: true, get(){ return useShare }});
Object.defineProperty(__vite_ssr_exports__, "useSpeechRecognition", { enumerable: true, configurable: true, get(){ return useSpeechRecognition }});
Object.defineProperty(__vite_ssr_exports__, "useSpeechSynthesis", { enumerable: true, configurable: true, get(){ return useSpeechSynthesis }});
Object.defineProperty(__vite_ssr_exports__, "useStorage", { enumerable: true, configurable: true, get(){ return useStorage }});
Object.defineProperty(__vite_ssr_exports__, "useStorageAsync", { enumerable: true, configurable: true, get(){ return useStorageAsync }});
Object.defineProperty(__vite_ssr_exports__, "useStyleTag", { enumerable: true, configurable: true, get(){ return useStyleTag }});
Object.defineProperty(__vite_ssr_exports__, "useSwipe", { enumerable: true, configurable: true, get(){ return useSwipe }});
Object.defineProperty(__vite_ssr_exports__, "useTemplateRefsList", { enumerable: true, configurable: true, get(){ return useTemplateRefsList }});
Object.defineProperty(__vite_ssr_exports__, "useTextSelection", { enumerable: true, configurable: true, get(){ return useTextSelection }});
Object.defineProperty(__vite_ssr_exports__, "useThrottledRefHistory", { enumerable: true, configurable: true, get(){ return useThrottledRefHistory }});
Object.defineProperty(__vite_ssr_exports__, "useTimeAgo", { enumerable: true, configurable: true, get(){ return useTimeAgo }});
Object.defineProperty(__vite_ssr_exports__, "useTimeoutPoll", { enumerable: true, configurable: true, get(){ return useTimeoutPoll }});
Object.defineProperty(__vite_ssr_exports__, "useTimestamp", { enumerable: true, configurable: true, get(){ return useTimestamp }});
Object.defineProperty(__vite_ssr_exports__, "useTitle", { enumerable: true, configurable: true, get(){ return useTitle }});
Object.defineProperty(__vite_ssr_exports__, "useTransition", { enumerable: true, configurable: true, get(){ return useTransition }});
Object.defineProperty(__vite_ssr_exports__, "useUrlSearchParams", { enumerable: true, configurable: true, get(){ return useUrlSearchParams }});
Object.defineProperty(__vite_ssr_exports__, "useUserMedia", { enumerable: true, configurable: true, get(){ return useUserMedia }});
Object.defineProperty(__vite_ssr_exports__, "useVModel", { enumerable: true, configurable: true, get(){ return useVModel }});
Object.defineProperty(__vite_ssr_exports__, "useVModels", { enumerable: true, configurable: true, get(){ return useVModels }});
Object.defineProperty(__vite_ssr_exports__, "useVibrate", { enumerable: true, configurable: true, get(){ return useVibrate }});
Object.defineProperty(__vite_ssr_exports__, "useVirtualList", { enumerable: true, configurable: true, get(){ return useVirtualList }});
Object.defineProperty(__vite_ssr_exports__, "useWakeLock", { enumerable: true, configurable: true, get(){ return useWakeLock }});
Object.defineProperty(__vite_ssr_exports__, "useWebNotification", { enumerable: true, configurable: true, get(){ return useWebNotification }});
Object.defineProperty(__vite_ssr_exports__, "useWebSocket", { enumerable: true, configurable: true, get(){ return useWebSocket }});
Object.defineProperty(__vite_ssr_exports__, "useWebWorker", { enumerable: true, configurable: true, get(){ return useWebWorker }});
Object.defineProperty(__vite_ssr_exports__, "useWebWorkerFn", { enumerable: true, configurable: true, get(){ return useWebWorkerFn }});
Object.defineProperty(__vite_ssr_exports__, "useWindowFocus", { enumerable: true, configurable: true, get(){ return useWindowFocus }});
Object.defineProperty(__vite_ssr_exports__, "useWindowScroll", { enumerable: true, configurable: true, get(){ return useWindowScroll }});
Object.defineProperty(__vite_ssr_exports__, "useWindowSize", { enumerable: true, configurable: true, get(){ return useWindowSize }});
;
}


// --------------------
// Request: /node_modules/@vueuse/shared/index.mjs
// Parents: 
// - /node_modules/@vueuse/core/index.mjs ($id_e8934cdc)
// Dependencies: 
// - /node_modules/nuxt/dist/app/compat/vue-demi.mjs ($id_a8110be7)
// --------------------
const $id_d77aacc8 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/compat/vue-demi.mjs");


var __defProp$8 = Object.defineProperty;
var __defProps$5 = Object.defineProperties;
var __getOwnPropDescs$5 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols$a = Object.getOwnPropertySymbols;
var __hasOwnProp$a = Object.prototype.hasOwnProperty;
var __propIsEnum$a = Object.prototype.propertyIsEnumerable;
var __defNormalProp$8 = (obj, key, value) => key in obj ? __defProp$8(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$8 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$a.call(b, prop))
      __defNormalProp$8(a, prop, b[prop]);
  if (__getOwnPropSymbols$a)
    for (var prop of __getOwnPropSymbols$a(b)) {
      if (__propIsEnum$a.call(b, prop))
        __defNormalProp$8(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps$5 = (a, b) => __defProps$5(a, __getOwnPropDescs$5(b));
function computedEager(fn, options) {
  var _a;
  const result = __vite_ssr_import_0__.shallowRef();
  __vite_ssr_import_0__.watchEffect(() => {
    result.value = fn();
  }, __spreadProps$5(__spreadValues$8({}, options), {
    flush: (_a = options == null ? void 0 : options.flush) != null ? _a : "sync"
  }));
  return __vite_ssr_import_0__.readonly(result);
}

function computedWithControl(source, fn) {
  let v = void 0;
  let track;
  let trigger;
  const dirty = __vite_ssr_import_0__.ref(true);
  __vite_ssr_import_0__.watch(source, () => {
    dirty.value = true;
    trigger();
  }, { flush: "sync" });
  return __vite_ssr_import_0__.customRef((_track, _trigger) => {
    track = _track;
    trigger = _trigger;
    return {
      get() {
        if (dirty.value) {
          v = fn();
          dirty.value = false;
        }
        track();
        return v;
      },
      set() {
      }
    };
  });
}

function createEventHook() {
  const fns = [];
  const off = (fn) => {
    const index = fns.indexOf(fn);
    if (index !== -1)
      fns.splice(index, 1);
  };
  const on = (fn) => {
    fns.push(fn);
    return {
      off: () => off(fn)
    };
  };
  const trigger = (param) => {
    fns.forEach((fn) => fn(param));
  };
  return {
    on,
    off,
    trigger
  };
}

function createGlobalState(stateFactory) {
  let initialized = false;
  let state;
  const scope = __vite_ssr_import_0__.effectScope(true);
  return () => {
    if (!initialized) {
      state = scope.run(stateFactory);
      initialized = true;
    }
    return state;
  };
}

function createInjectionState(composable) {
  const key = Symbol("InjectionState");
  const useProvidingState = (...args) => {
    __vite_ssr_import_0__.provide(key, composable(...args));
  };
  const useInjectedState = () => __vite_ssr_import_0__.inject(key);
  return [useProvidingState, useInjectedState];
}

function tryOnScopeDispose(fn) {
  if (__vite_ssr_import_0__.getCurrentScope()) {
    __vite_ssr_import_0__.onScopeDispose(fn);
    return true;
  }
  return false;
}

function createSharedComposable(composable) {
  let subscribers = 0;
  let state;
  let scope;
  const dispose = () => {
    subscribers -= 1;
    if (scope && subscribers <= 0) {
      scope.stop();
      state = void 0;
      scope = void 0;
    }
  };
  return (...args) => {
    subscribers += 1;
    if (!state) {
      scope = __vite_ssr_import_0__.effectScope(true);
      state = scope.run(() => composable(...args));
    }
    tryOnScopeDispose(dispose);
    return state;
  };
}

function __onlyVue3(name = "this function") {
  if (__vite_ssr_import_0__.isVue3)
    return;
  throw new Error(`[VueUse] ${name} is only works on Vue 3.`);
}
const directiveHooks = {
  mounted: __vite_ssr_import_0__.isVue3 ? "mounted" : "inserted",
  updated: __vite_ssr_import_0__.isVue3 ? "updated" : "componentUpdated",
  unmounted: __vite_ssr_import_0__.isVue3 ? "unmounted" : "unbind"
};

function extendRef(ref, extend, { enumerable = false, unwrap = true } = {}) {
  __onlyVue3();
  for (const [key, value] of Object.entries(extend)) {
    if (key === "value")
      continue;
    if (__vite_ssr_import_0__.isRef(value) && unwrap) {
      Object.defineProperty(ref, key, {
        get() {
          return value.value;
        },
        set(v) {
          value.value = v;
        },
        enumerable
      });
    } else {
      Object.defineProperty(ref, key, { value, enumerable });
    }
  }
  return ref;
}

function get(obj, key) {
  if (key == null)
    return __vite_ssr_import_0__.unref(obj);
  return __vite_ssr_import_0__.unref(obj)[key];
}

function isDefined(v) {
  return __vite_ssr_import_0__.unref(v) != null;
}

function logicAnd(...args) {
  return __vite_ssr_import_0__.computed(() => args.every((i) => __vite_ssr_import_0__.unref(i)));
}

function logicNot(v) {
  return __vite_ssr_import_0__.computed(() => !__vite_ssr_import_0__.unref(v));
}

function logicOr(...args) {
  return __vite_ssr_import_0__.computed(() => args.some((i) => __vite_ssr_import_0__.unref(i)));
}

var __defProp$7 = Object.defineProperty;
var __getOwnPropSymbols$9 = Object.getOwnPropertySymbols;
var __hasOwnProp$9 = Object.prototype.hasOwnProperty;
var __propIsEnum$9 = Object.prototype.propertyIsEnumerable;
var __defNormalProp$7 = (obj, key, value) => key in obj ? __defProp$7(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$7 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$9.call(b, prop))
      __defNormalProp$7(a, prop, b[prop]);
  if (__getOwnPropSymbols$9)
    for (var prop of __getOwnPropSymbols$9(b)) {
      if (__propIsEnum$9.call(b, prop))
        __defNormalProp$7(a, prop, b[prop]);
    }
  return a;
};
function makeDestructurable(obj, arr) {
  if (typeof Symbol !== "undefined") {
    const clone = __spreadValues$7({}, obj);
    Object.defineProperty(clone, Symbol.iterator, {
      enumerable: false,
      value() {
        let index = 0;
        return {
          next: () => ({
            value: arr[index++],
            done: index > arr.length
          })
        };
      }
    });
    return clone;
  } else {
    return Object.assign([...arr], obj);
  }
}

function reactify(fn) {
  return function(...args) {
    return __vite_ssr_import_0__.computed(() => fn.apply(this, args.map((i) => __vite_ssr_import_0__.unref(i))));
  };
}

function reactifyObject(obj, optionsOrKeys = {}) {
  let keys = [];
  if (Array.isArray(optionsOrKeys)) {
    keys = optionsOrKeys;
  } else {
    const { includeOwnProperties = true } = optionsOrKeys;
    keys.push(...Object.keys(obj));
    if (includeOwnProperties)
      keys.push(...Object.getOwnPropertyNames(obj));
  }
  return Object.fromEntries(keys.map((key) => {
    const value = obj[key];
    return [
      key,
      typeof value === "function" ? reactify(value.bind(obj)) : value
    ];
  }));
}

function toReactive(objectRef) {
  if (!__vite_ssr_import_0__.isRef(objectRef))
    return __vite_ssr_import_0__.reactive(objectRef);
  const proxy = new Proxy({}, {
    get(_, p, receiver) {
      return __vite_ssr_import_0__.unref(Reflect.get(objectRef.value, p, receiver));
    },
    set(_, p, value) {
      if (__vite_ssr_import_0__.isRef(objectRef.value[p]) && !__vite_ssr_import_0__.isRef(value))
        objectRef.value[p].value = value;
      else
        objectRef.value[p] = value;
      return true;
    },
    deleteProperty(_, p) {
      return Reflect.deleteProperty(objectRef.value, p);
    },
    has(_, p) {
      return Reflect.has(objectRef.value, p);
    },
    ownKeys() {
      return Object.keys(objectRef.value);
    },
    getOwnPropertyDescriptor() {
      return {
        enumerable: true,
        configurable: true
      };
    }
  });
  return __vite_ssr_import_0__.reactive(proxy);
}

function reactiveComputed(fn) {
  return toReactive(__vite_ssr_import_0__.computed(fn));
}

function reactiveOmit(obj, ...keys) {
  return reactiveComputed(() => Object.fromEntries(Object.entries(__vite_ssr_import_0__.toRefs(obj)).filter((e) => !keys.includes(e[0]))));
}

function reactivePick(obj, ...keys) {
  return __vite_ssr_import_0__.reactive(Object.fromEntries(keys.map((k) => [k, __vite_ssr_import_0__.toRef(obj, k)])));
}

function refAutoReset(defaultValue, afterMs = 1e4) {
  return __vite_ssr_import_0__.customRef((track, trigger) => {
    let value = defaultValue;
    let timer;
    const resetAfter = () => setTimeout(() => {
      value = defaultValue;
      trigger();
    }, __vite_ssr_import_0__.unref(afterMs));
    tryOnScopeDispose(() => {
      clearTimeout(timer);
    });
    return {
      get() {
        track();
        return value;
      },
      set(newValue) {
        value = newValue;
        trigger();
        clearTimeout(timer);
        timer = resetAfter();
      }
    };
  });
}

var _a;
const isClient = "undefined" !== "undefined";
const isDef = (val) => typeof val !== "undefined";
const assert = (condition, ...infos) => {
  if (!condition)
    console.warn(...infos);
};
const toString = Object.prototype.toString;
const isBoolean = (val) => typeof val === "boolean";
const isFunction = (val) => typeof val === "function";
const isNumber = (val) => typeof val === "number";
const isString = (val) => typeof val === "string";
const isObject = (val) => toString.call(val) === "[object Object]";
const isWindow = (val) => "undefined" !== "undefined" && toString.call(val) === "[object Window]";
const now = () => Date.now();
const timestamp = () => +Date.now();
const clamp = (n, min, max) => Math.min(max, Math.max(min, n));
const noop = () => {
};
const rand = (min, max) => {
  min = Math.ceil(min);
  max = Math.floor(max);
  return Math.floor(Math.random() * (max - min + 1)) + min;
};
const isIOS = isClient && ((_a = window == null ? void 0 : window.navigator) == null ? void 0 : _a.userAgent) && /iP(ad|hone|od)/.test(window.navigator.userAgent);

function createFilterWrapper(filter, fn) {
  function wrapper(...args) {
    filter(() => fn.apply(this, args), { fn, thisArg: this, args });
  }
  return wrapper;
}
const bypassFilter = (invoke) => {
  return invoke();
};
function debounceFilter(ms, options = {}) {
  let timer;
  let maxTimer;
  const filter = (invoke) => {
    const duration = __vite_ssr_import_0__.unref(ms);
    const maxDuration = __vite_ssr_import_0__.unref(options.maxWait);
    if (timer)
      clearTimeout(timer);
    if (duration <= 0 || maxDuration !== void 0 && maxDuration <= 0) {
      if (maxTimer) {
        clearTimeout(maxTimer);
        maxTimer = null;
      }
      return invoke();
    }
    if (maxDuration && !maxTimer) {
      maxTimer = setTimeout(() => {
        if (timer)
          clearTimeout(timer);
        maxTimer = null;
        invoke();
      }, maxDuration);
    }
    timer = setTimeout(() => {
      if (maxTimer)
        clearTimeout(maxTimer);
      maxTimer = null;
      invoke();
    }, duration);
  };
  return filter;
}
function throttleFilter(ms, trailing = true, leading = true) {
  let lastExec = 0;
  let timer;
  let isLeading = true;
  const clear = () => {
    if (timer) {
      clearTimeout(timer);
      timer = void 0;
    }
  };
  const filter = (invoke) => {
    const duration = __vite_ssr_import_0__.unref(ms);
    const elapsed = Date.now() - lastExec;
    clear();
    if (duration <= 0) {
      lastExec = Date.now();
      return invoke();
    }
    if (elapsed > duration && (leading || !isLeading)) {
      lastExec = Date.now();
      invoke();
    } else if (trailing) {
      timer = setTimeout(() => {
        lastExec = Date.now();
        isLeading = true;
        clear();
        invoke();
      }, duration);
    }
    if (!leading && !timer)
      timer = setTimeout(() => isLeading = true, duration);
    isLeading = false;
  };
  return filter;
}
function pausableFilter(extendFilter = bypassFilter) {
  const isActive = __vite_ssr_import_0__.ref(true);
  function pause() {
    isActive.value = false;
  }
  function resume() {
    isActive.value = true;
  }
  const eventFilter = (...args) => {
    if (isActive.value)
      extendFilter(...args);
  };
  return { isActive, pause, resume, eventFilter };
}

function promiseTimeout(ms, throwOnTimeout = false, reason = "Timeout") {
  return new Promise((resolve, reject) => {
    if (throwOnTimeout)
      setTimeout(() => reject(reason), ms);
    else
      setTimeout(resolve, ms);
  });
}
function identity(arg) {
  return arg;
}
function createSingletonPromise(fn) {
  let _promise;
  function wrapper() {
    if (!_promise)
      _promise = fn();
    return _promise;
  }
  wrapper.reset = async () => {
    const _prev = _promise;
    _promise = void 0;
    if (_prev)
      await _prev;
  };
  return wrapper;
}
function invoke(fn) {
  return fn();
}
function containsProp(obj, ...props) {
  return props.some((k) => k in obj);
}
function increaseWithUnit(target, delta) {
  var _a;
  if (typeof target === "number")
    return target + delta;
  const value = ((_a = target.match(/^-?[0-9]+\.?[0-9]*/)) == null ? void 0 : _a[0]) || "";
  const unit = target.slice(value.length);
  const result = parseFloat(value) + delta;
  if (Number.isNaN(result))
    return target;
  return result + unit;
}
function objectPick(obj, keys, omitUndefined = false) {
  return keys.reduce((n, k) => {
    if (k in obj) {
      if (!omitUndefined || obj[k] !== void 0)
        n[k] = obj[k];
    }
    return n;
  }, {});
}

function useDebounceFn(fn, ms = 200, options = {}) {
  return createFilterWrapper(debounceFilter(ms, options), fn);
}

function refDebounced(value, ms = 200, options = {}) {
  if (ms <= 0)
    return value;
  const debounced = __vite_ssr_import_0__.ref(value.value);
  const updater = useDebounceFn(() => {
    debounced.value = value.value;
  }, ms, options);
  __vite_ssr_import_0__.watch(value, () => updater());
  return debounced;
}

function refDefault(source, defaultValue) {
  return __vite_ssr_import_0__.computed({
    get() {
      var _a;
      return (_a = source.value) != null ? _a : defaultValue;
    },
    set(value) {
      source.value = value;
    }
  });
}

function useThrottleFn(fn, ms = 200, trailing = true, leading = true) {
  return createFilterWrapper(throttleFilter(ms, trailing, leading), fn);
}

function refThrottled(value, delay = 200, trailing = true, leading = true) {
  if (delay <= 0)
    return value;
  const throttled = __vite_ssr_import_0__.ref(value.value);
  const updater = useThrottleFn(() => {
    throttled.value = value.value;
  }, delay, trailing, leading);
  __vite_ssr_import_0__.watch(value, () => updater());
  return throttled;
}

function refWithControl(initial, options = {}) {
  let source = initial;
  let track;
  let trigger;
  const ref = __vite_ssr_import_0__.customRef((_track, _trigger) => {
    track = _track;
    trigger = _trigger;
    return {
      get() {
        return get();
      },
      set(v) {
        set(v);
      }
    };
  });
  function get(tracking = true) {
    if (tracking)
      track();
    return source;
  }
  function set(value, triggering = true) {
    var _a, _b;
    if (value === source)
      return;
    const old = source;
    if (((_a = options.onBeforeChange) == null ? void 0 : _a.call(options, value, old)) === false)
      return;
    source = value;
    (_b = options.onChanged) == null ? void 0 : _b.call(options, value, old);
    if (triggering)
      trigger();
  }
  const untrackedGet = () => get(false);
  const silentSet = (v) => set(v, false);
  const peek = () => get(false);
  const lay = (v) => set(v, false);
  return extendRef(ref, {
    get,
    set,
    untrackedGet,
    silentSet,
    peek,
    lay
  }, { enumerable: true });
}
const controlledRef = refWithControl;

function set(...args) {
  if (args.length === 2) {
    const [ref, value] = args;
    ref.value = value;
  }
  if (args.length === 3) {
    if (__vite_ssr_import_0__.isVue2) {
      __vite_ssr_import_0__.set(...args);
    } else {
      const [target, key, value] = args;
      target[key] = value;
    }
  }
}

function syncRef(left, right, options = {}) {
  const {
    flush = "sync",
    deep = false,
    immediate = true,
    direction = "both"
  } = options;
  let stop1, stop2;
  if (direction === "both" || direction === "ltr") {
    stop1 = __vite_ssr_import_0__.watch(left, (newValue) => right.value = newValue, { flush, deep, immediate });
  }
  if (direction === "both" || direction === "rtl") {
    stop2 = __vite_ssr_import_0__.watch(right, (newValue) => left.value = newValue, { flush, deep, immediate });
  }
  return () => {
    stop1 == null ? void 0 : stop1();
    stop2 == null ? void 0 : stop2();
  };
}

function syncRefs(source, targets, options = {}) {
  const {
    flush = "sync",
    deep = false,
    immediate = true
  } = options;
  if (!Array.isArray(targets))
    targets = [targets];
  return __vite_ssr_import_0__.watch(source, (newValue) => targets.forEach((target) => target.value = newValue), { flush, deep, immediate });
}

var __defProp$6 = Object.defineProperty;
var __defProps$4 = Object.defineProperties;
var __getOwnPropDescs$4 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols$8 = Object.getOwnPropertySymbols;
var __hasOwnProp$8 = Object.prototype.hasOwnProperty;
var __propIsEnum$8 = Object.prototype.propertyIsEnumerable;
var __defNormalProp$6 = (obj, key, value) => key in obj ? __defProp$6(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$6 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$8.call(b, prop))
      __defNormalProp$6(a, prop, b[prop]);
  if (__getOwnPropSymbols$8)
    for (var prop of __getOwnPropSymbols$8(b)) {
      if (__propIsEnum$8.call(b, prop))
        __defNormalProp$6(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps$4 = (a, b) => __defProps$4(a, __getOwnPropDescs$4(b));
function toRefs(objectRef) {
  if (!__vite_ssr_import_0__.isRef(objectRef))
    return __vite_ssr_import_0__.toRefs(objectRef);
  const result = Array.isArray(objectRef.value) ? new Array(objectRef.value.length) : {};
  for (const key in objectRef.value) {
    result[key] = __vite_ssr_import_0__.customRef(() => ({
      get() {
        return objectRef.value[key];
      },
      set(v) {
        if (Array.isArray(objectRef.value)) {
          const copy = [...objectRef.value];
          copy[key] = v;
          objectRef.value = copy;
        } else {
          const newObject = __spreadProps$4(__spreadValues$6({}, objectRef.value), { [key]: v });
          Object.setPrototypeOf(newObject, objectRef.value);
          objectRef.value = newObject;
        }
      }
    }));
  }
  return result;
}

function tryOnBeforeMount(fn, sync = true) {
  if (__vite_ssr_import_0__.getCurrentInstance())
    __vite_ssr_import_0__.onBeforeMount(fn);
  else if (sync)
    fn();
  else
    __vite_ssr_import_0__.nextTick(fn);
}

function tryOnBeforeUnmount(fn) {
  if (__vite_ssr_import_0__.getCurrentInstance())
    __vite_ssr_import_0__.onBeforeUnmount(fn);
}

function tryOnMounted(fn, sync = true) {
  if (__vite_ssr_import_0__.getCurrentInstance())
    __vite_ssr_import_0__.onMounted(fn);
  else if (sync)
    fn();
  else
    __vite_ssr_import_0__.nextTick(fn);
}

function tryOnUnmounted(fn) {
  if (__vite_ssr_import_0__.getCurrentInstance())
    __vite_ssr_import_0__.onUnmounted(fn);
}

function until(r) {
  let isNot = false;
  function toMatch(condition, { flush = "sync", deep = false, timeout, throwOnTimeout } = {}) {
    let stop = null;
    const watcher = new Promise((resolve) => {
      stop = __vite_ssr_import_0__.watch(r, (v) => {
        if (condition(v) !== isNot) {
          stop == null ? void 0 : stop();
          resolve(v);
        }
      }, {
        flush,
        deep,
        immediate: true
      });
    });
    const promises = [watcher];
    if (timeout != null) {
      promises.push(promiseTimeout(timeout, throwOnTimeout).then(() => __vite_ssr_import_0__.unref(r)).finally(() => stop == null ? void 0 : stop()));
    }
    return Promise.race(promises);
  }
  function toBe(value, options) {
    if (!__vite_ssr_import_0__.isRef(value))
      return toMatch((v) => v === value, options);
    const { flush = "sync", deep = false, timeout, throwOnTimeout } = options != null ? options : {};
    let stop = null;
    const watcher = new Promise((resolve) => {
      stop = __vite_ssr_import_0__.watch([r, value], ([v1, v2]) => {
        if (isNot !== (v1 === v2)) {
          stop == null ? void 0 : stop();
          resolve(v1);
        }
      }, {
        flush,
        deep,
        immediate: true
      });
    });
    const promises = [watcher];
    if (timeout != null) {
      promises.push(promiseTimeout(timeout, throwOnTimeout).then(() => __vite_ssr_import_0__.unref(r)).finally(() => {
        stop == null ? void 0 : stop();
        return __vite_ssr_import_0__.unref(r);
      }));
    }
    return Promise.race(promises);
  }
  function toBeTruthy(options) {
    return toMatch((v) => Boolean(v), options);
  }
  function toBeNull(options) {
    return toBe(null, options);
  }
  function toBeUndefined(options) {
    return toBe(void 0, options);
  }
  function toBeNaN(options) {
    return toMatch(Number.isNaN, options);
  }
  function toContains(value, options) {
    return toMatch((v) => {
      const array = Array.from(v);
      return array.includes(value) || array.includes(__vite_ssr_import_0__.unref(value));
    }, options);
  }
  function changed(options) {
    return changedTimes(1, options);
  }
  function changedTimes(n = 1, options) {
    let count = -1;
    return toMatch(() => {
      count += 1;
      return count >= n;
    }, options);
  }
  if (Array.isArray(__vite_ssr_import_0__.unref(r))) {
    const instance = {
      toMatch,
      toContains,
      changed,
      changedTimes,
      get not() {
        isNot = !isNot;
        return this;
      }
    };
    return instance;
  } else {
    const instance = {
      toMatch,
      toBe,
      toBeTruthy,
      toBeNull,
      toBeNaN,
      toBeUndefined,
      changed,
      changedTimes,
      get not() {
        isNot = !isNot;
        return this;
      }
    };
    return instance;
  }
}

function useCounter(initialValue = 0, options = {}) {
  const count = __vite_ssr_import_0__.ref(initialValue);
  const {
    max = Infinity,
    min = -Infinity
  } = options;
  const inc = (delta = 1) => count.value = Math.min(max, count.value + delta);
  const dec = (delta = 1) => count.value = Math.max(min, count.value - delta);
  const get = () => count.value;
  const set = (val) => count.value = val;
  const reset = (val = initialValue) => {
    initialValue = val;
    return set(val);
  };
  return { count, inc, dec, get, set, reset };
}

const REGEX_PARSE = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/;
const REGEX_FORMAT = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g;
const formatDate = (date, formatStr) => {
  const years = date.getFullYear();
  const month = date.getMonth();
  const days = date.getDate();
  const hours = date.getHours();
  const minutes = date.getMinutes();
  const seconds = date.getSeconds();
  const milliseconds = date.getMilliseconds();
  const day = date.getDay();
  const matches = {
    YY: String(years).slice(-2),
    YYYY: years,
    M: month + 1,
    MM: `${month + 1}`.padStart(2, "0"),
    D: String(days),
    DD: `${days}`.padStart(2, "0"),
    H: String(hours),
    HH: `${hours}`.padStart(2, "0"),
    h: `${hours % 12 || 12}`.padStart(1, "0"),
    hh: `${hours % 12 || 12}`.padStart(2, "0"),
    m: String(minutes),
    mm: `${minutes}`.padStart(2, "0"),
    s: String(seconds),
    ss: `${seconds}`.padStart(2, "0"),
    SSS: `${milliseconds}`.padStart(3, "0"),
    d: day
  };
  return formatStr.replace(REGEX_FORMAT, (match, $1) => $1 || matches[match]);
};
const normalizeDate = (date) => {
  if (date === null)
    return new Date(NaN);
  if (date === void 0)
    return new Date();
  if (date instanceof Date)
    return new Date(date);
  if (typeof date === "string" && !/Z$/i.test(date)) {
    const d = date.match(REGEX_PARSE);
    if (d) {
      const m = d[2] - 1 || 0;
      const ms = (d[7] || "0").substring(0, 3);
      return new Date(d[1], m, d[3] || 1, d[4] || 0, d[5] || 0, d[6] || 0, ms);
    }
  }
  return new Date(date);
};
function useDateFormat(date, formatStr = "HH:mm:ss") {
  return __vite_ssr_import_0__.computed(() => formatDate(normalizeDate(__vite_ssr_import_0__.unref(date)), __vite_ssr_import_0__.unref(formatStr)));
}

function useIntervalFn(cb, interval = 1e3, options = {}) {
  const {
    immediate = true,
    immediateCallback = false
  } = options;
  let timer = null;
  const isActive = __vite_ssr_import_0__.ref(false);
  function clean() {
    if (timer) {
      clearInterval(timer);
      timer = null;
    }
  }
  function pause() {
    isActive.value = false;
    clean();
  }
  function resume() {
    if (__vite_ssr_import_0__.unref(interval) <= 0)
      return;
    isActive.value = true;
    if (immediateCallback)
      cb();
    clean();
    timer = setInterval(cb, __vite_ssr_import_0__.unref(interval));
  }
  if (immediate && isClient)
    resume();
  if (__vite_ssr_import_0__.isRef(interval)) {
    const stopWatch = __vite_ssr_import_0__.watch(interval, () => {
      if (isActive.value && isClient)
        resume();
    });
    tryOnScopeDispose(stopWatch);
  }
  tryOnScopeDispose(pause);
  return {
    isActive,
    pause,
    resume
  };
}

var __defProp$5 = Object.defineProperty;
var __getOwnPropSymbols$7 = Object.getOwnPropertySymbols;
var __hasOwnProp$7 = Object.prototype.hasOwnProperty;
var __propIsEnum$7 = Object.prototype.propertyIsEnumerable;
var __defNormalProp$5 = (obj, key, value) => key in obj ? __defProp$5(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$5 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$7.call(b, prop))
      __defNormalProp$5(a, prop, b[prop]);
  if (__getOwnPropSymbols$7)
    for (var prop of __getOwnPropSymbols$7(b)) {
      if (__propIsEnum$7.call(b, prop))
        __defNormalProp$5(a, prop, b[prop]);
    }
  return a;
};
function useInterval(interval = 1e3, options = {}) {
  const {
    controls: exposeControls = false,
    immediate = true
  } = options;
  const counter = __vite_ssr_import_0__.ref(0);
  const controls = useIntervalFn(() => counter.value += 1, interval, { immediate });
  if (exposeControls) {
    return __spreadValues$5({
      counter
    }, controls);
  } else {
    return counter;
  }
}

function useLastChanged(source, options = {}) {
  var _a;
  const ms = __vite_ssr_import_0__.ref((_a = options.initialValue) != null ? _a : null);
  __vite_ssr_import_0__.watch(source, () => ms.value = timestamp(), options);
  return ms;
}

function useTimeoutFn(cb, interval, options = {}) {
  const {
    immediate = true
  } = options;
  const isPending = __vite_ssr_import_0__.ref(false);
  let timer = null;
  function clear() {
    if (timer) {
      clearTimeout(timer);
      timer = null;
    }
  }
  function stop() {
    isPending.value = false;
    clear();
  }
  function start(...args) {
    clear();
    isPending.value = true;
    timer = setTimeout(() => {
      isPending.value = false;
      timer = null;
      cb(...args);
    }, __vite_ssr_import_0__.unref(interval));
  }
  if (immediate) {
    isPending.value = true;
    if (isClient)
      start();
  }
  tryOnScopeDispose(stop);
  return {
    isPending,
    start,
    stop
  };
}

var __defProp$4 = Object.defineProperty;
var __getOwnPropSymbols$6 = Object.getOwnPropertySymbols;
var __hasOwnProp$6 = Object.prototype.hasOwnProperty;
var __propIsEnum$6 = Object.prototype.propertyIsEnumerable;
var __defNormalProp$4 = (obj, key, value) => key in obj ? __defProp$4(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$4 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$6.call(b, prop))
      __defNormalProp$4(a, prop, b[prop]);
  if (__getOwnPropSymbols$6)
    for (var prop of __getOwnPropSymbols$6(b)) {
      if (__propIsEnum$6.call(b, prop))
        __defNormalProp$4(a, prop, b[prop]);
    }
  return a;
};
function useTimeout(interval = 1e3, options = {}) {
  const {
    controls: exposeControls = false
  } = options;
  const controls = useTimeoutFn(noop, interval, options);
  const ready = __vite_ssr_import_0__.computed(() => !controls.isPending.value);
  if (exposeControls) {
    return __spreadValues$4({
      ready
    }, controls);
  } else {
    return ready;
  }
}

function useToggle(initialValue = false, options = {}) {
  const {
    truthyValue = true,
    falsyValue = false
  } = options;
  const valueIsRef = __vite_ssr_import_0__.isRef(initialValue);
  const innerValue = __vite_ssr_import_0__.ref(initialValue);
  function toggle(value) {
    if (arguments.length) {
      innerValue.value = value;
      return innerValue.value;
    } else {
      innerValue.value = innerValue.value === __vite_ssr_import_0__.unref(truthyValue) ? __vite_ssr_import_0__.unref(falsyValue) : __vite_ssr_import_0__.unref(truthyValue);
      return innerValue.value;
    }
  }
  if (valueIsRef)
    return toggle;
  else
    return [innerValue, toggle];
}

var __getOwnPropSymbols$5 = Object.getOwnPropertySymbols;
var __hasOwnProp$5 = Object.prototype.hasOwnProperty;
var __propIsEnum$5 = Object.prototype.propertyIsEnumerable;
var __objRest$5 = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp$5.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols$5)
    for (var prop of __getOwnPropSymbols$5(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum$5.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
function watchWithFilter(source, cb, options = {}) {
  const _a = options, {
    eventFilter = bypassFilter
  } = _a, watchOptions = __objRest$5(_a, [
    "eventFilter"
  ]);
  return __vite_ssr_import_0__.watch(source, createFilterWrapper(eventFilter, cb), watchOptions);
}

var __getOwnPropSymbols$4 = Object.getOwnPropertySymbols;
var __hasOwnProp$4 = Object.prototype.hasOwnProperty;
var __propIsEnum$4 = Object.prototype.propertyIsEnumerable;
var __objRest$4 = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp$4.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols$4)
    for (var prop of __getOwnPropSymbols$4(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum$4.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
function watchAtMost(source, cb, options) {
  const _a = options, {
    count
  } = _a, watchOptions = __objRest$4(_a, [
    "count"
  ]);
  const current = __vite_ssr_import_0__.ref(0);
  const stop = watchWithFilter(source, (...args) => {
    current.value += 1;
    if (current.value >= __vite_ssr_import_0__.unref(count))
      __vite_ssr_import_0__.nextTick(() => stop());
    cb(...args);
  }, watchOptions);
  return { count: current, stop };
}

var __defProp$3 = Object.defineProperty;
var __defProps$3 = Object.defineProperties;
var __getOwnPropDescs$3 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols$3 = Object.getOwnPropertySymbols;
var __hasOwnProp$3 = Object.prototype.hasOwnProperty;
var __propIsEnum$3 = Object.prototype.propertyIsEnumerable;
var __defNormalProp$3 = (obj, key, value) => key in obj ? __defProp$3(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$3 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$3.call(b, prop))
      __defNormalProp$3(a, prop, b[prop]);
  if (__getOwnPropSymbols$3)
    for (var prop of __getOwnPropSymbols$3(b)) {
      if (__propIsEnum$3.call(b, prop))
        __defNormalProp$3(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps$3 = (a, b) => __defProps$3(a, __getOwnPropDescs$3(b));
var __objRest$3 = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp$3.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols$3)
    for (var prop of __getOwnPropSymbols$3(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum$3.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
function watchDebounced(source, cb, options = {}) {
  const _a = options, {
    debounce = 0,
    maxWait = void 0
  } = _a, watchOptions = __objRest$3(_a, [
    "debounce",
    "maxWait"
  ]);
  return watchWithFilter(source, cb, __spreadProps$3(__spreadValues$3({}, watchOptions), {
    eventFilter: debounceFilter(debounce, { maxWait })
  }));
}

var __defProp$2 = Object.defineProperty;
var __defProps$2 = Object.defineProperties;
var __getOwnPropDescs$2 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols$2 = Object.getOwnPropertySymbols;
var __hasOwnProp$2 = Object.prototype.hasOwnProperty;
var __propIsEnum$2 = Object.prototype.propertyIsEnumerable;
var __defNormalProp$2 = (obj, key, value) => key in obj ? __defProp$2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$2 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$2.call(b, prop))
      __defNormalProp$2(a, prop, b[prop]);
  if (__getOwnPropSymbols$2)
    for (var prop of __getOwnPropSymbols$2(b)) {
      if (__propIsEnum$2.call(b, prop))
        __defNormalProp$2(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps$2 = (a, b) => __defProps$2(a, __getOwnPropDescs$2(b));
var __objRest$2 = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp$2.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols$2)
    for (var prop of __getOwnPropSymbols$2(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum$2.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
function watchIgnorable(source, cb, options = {}) {
  const _a = options, {
    eventFilter = bypassFilter
  } = _a, watchOptions = __objRest$2(_a, [
    "eventFilter"
  ]);
  const filteredCb = createFilterWrapper(eventFilter, cb);
  let ignoreUpdates;
  let ignorePrevAsyncUpdates;
  let stop;
  if (watchOptions.flush === "sync") {
    const ignore = __vite_ssr_import_0__.ref(false);
    ignorePrevAsyncUpdates = () => {
    };
    ignoreUpdates = (updater) => {
      ignore.value = true;
      updater();
      ignore.value = false;
    };
    stop = __vite_ssr_import_0__.watch(source, (...args) => {
      if (!ignore.value)
        filteredCb(...args);
    }, watchOptions);
  } else {
    const disposables = [];
    const ignoreCounter = __vite_ssr_import_0__.ref(0);
    const syncCounter = __vite_ssr_import_0__.ref(0);
    ignorePrevAsyncUpdates = () => {
      ignoreCounter.value = syncCounter.value;
    };
    disposables.push(__vite_ssr_import_0__.watch(source, () => {
      syncCounter.value++;
    }, __spreadProps$2(__spreadValues$2({}, watchOptions), { flush: "sync" })));
    ignoreUpdates = (updater) => {
      const syncCounterPrev = syncCounter.value;
      updater();
      ignoreCounter.value += syncCounter.value - syncCounterPrev;
    };
    disposables.push(__vite_ssr_import_0__.watch(source, (...args) => {
      const ignore = ignoreCounter.value > 0 && ignoreCounter.value === syncCounter.value;
      ignoreCounter.value = 0;
      syncCounter.value = 0;
      if (ignore)
        return;
      filteredCb(...args);
    }, watchOptions));
    stop = () => {
      disposables.forEach((fn) => fn());
    };
  }
  return { stop, ignoreUpdates, ignorePrevAsyncUpdates };
}

function watchOnce(source, cb, options) {
  const stop = __vite_ssr_import_0__.watch(source, (...args) => {
    __vite_ssr_import_0__.nextTick(() => stop());
    return cb(...args);
  }, options);
}

var __defProp$1 = Object.defineProperty;
var __defProps$1 = Object.defineProperties;
var __getOwnPropDescs$1 = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;
var __hasOwnProp$1 = Object.prototype.hasOwnProperty;
var __propIsEnum$1 = Object.prototype.propertyIsEnumerable;
var __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$1 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$1.call(b, prop))
      __defNormalProp$1(a, prop, b[prop]);
  if (__getOwnPropSymbols$1)
    for (var prop of __getOwnPropSymbols$1(b)) {
      if (__propIsEnum$1.call(b, prop))
        __defNormalProp$1(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps$1 = (a, b) => __defProps$1(a, __getOwnPropDescs$1(b));
var __objRest$1 = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp$1.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols$1)
    for (var prop of __getOwnPropSymbols$1(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum$1.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
function watchPausable(source, cb, options = {}) {
  const _a = options, {
    eventFilter: filter
  } = _a, watchOptions = __objRest$1(_a, [
    "eventFilter"
  ]);
  const { eventFilter, pause, resume, isActive } = pausableFilter(filter);
  const stop = watchWithFilter(source, cb, __spreadProps$1(__spreadValues$1({}, watchOptions), {
    eventFilter
  }));
  return { stop, pause, resume, isActive };
}

var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
function watchThrottled(source, cb, options = {}) {
  const _a = options, {
    throttle = 0,
    trailing = true,
    leading = true
  } = _a, watchOptions = __objRest(_a, [
    "throttle",
    "trailing",
    "leading"
  ]);
  return watchWithFilter(source, cb, __spreadProps(__spreadValues({}, watchOptions), {
    eventFilter: throttleFilter(throttle, trailing, leading)
  }));
}

function whenever(source, cb, options) {
  return __vite_ssr_import_0__.watch(source, (v, ov, onInvalidate) => {
    if (v)
      cb(v, ov, onInvalidate);
  }, options);
}


Object.defineProperty(__vite_ssr_exports__, "__onlyVue3", { enumerable: true, configurable: true, get(){ return __onlyVue3 }});
Object.defineProperty(__vite_ssr_exports__, "and", { enumerable: true, configurable: true, get(){ return logicAnd }});
Object.defineProperty(__vite_ssr_exports__, "assert", { enumerable: true, configurable: true, get(){ return assert }});
Object.defineProperty(__vite_ssr_exports__, "autoResetRef", { enumerable: true, configurable: true, get(){ return refAutoReset }});
Object.defineProperty(__vite_ssr_exports__, "bypassFilter", { enumerable: true, configurable: true, get(){ return bypassFilter }});
Object.defineProperty(__vite_ssr_exports__, "clamp", { enumerable: true, configurable: true, get(){ return clamp }});
Object.defineProperty(__vite_ssr_exports__, "computedEager", { enumerable: true, configurable: true, get(){ return computedEager }});
Object.defineProperty(__vite_ssr_exports__, "computedWithControl", { enumerable: true, configurable: true, get(){ return computedWithControl }});
Object.defineProperty(__vite_ssr_exports__, "containsProp", { enumerable: true, configurable: true, get(){ return containsProp }});
Object.defineProperty(__vite_ssr_exports__, "controlledComputed", { enumerable: true, configurable: true, get(){ return computedWithControl }});
Object.defineProperty(__vite_ssr_exports__, "controlledRef", { enumerable: true, configurable: true, get(){ return controlledRef }});
Object.defineProperty(__vite_ssr_exports__, "createEventHook", { enumerable: true, configurable: true, get(){ return createEventHook }});
Object.defineProperty(__vite_ssr_exports__, "createFilterWrapper", { enumerable: true, configurable: true, get(){ return createFilterWrapper }});
Object.defineProperty(__vite_ssr_exports__, "createGlobalState", { enumerable: true, configurable: true, get(){ return createGlobalState }});
Object.defineProperty(__vite_ssr_exports__, "createInjectionState", { enumerable: true, configurable: true, get(){ return createInjectionState }});
Object.defineProperty(__vite_ssr_exports__, "createReactiveFn", { enumerable: true, configurable: true, get(){ return reactify }});
Object.defineProperty(__vite_ssr_exports__, "createSharedComposable", { enumerable: true, configurable: true, get(){ return createSharedComposable }});
Object.defineProperty(__vite_ssr_exports__, "createSingletonPromise", { enumerable: true, configurable: true, get(){ return createSingletonPromise }});
Object.defineProperty(__vite_ssr_exports__, "debounceFilter", { enumerable: true, configurable: true, get(){ return debounceFilter }});
Object.defineProperty(__vite_ssr_exports__, "debouncedRef", { enumerable: true, configurable: true, get(){ return refDebounced }});
Object.defineProperty(__vite_ssr_exports__, "debouncedWatch", { enumerable: true, configurable: true, get(){ return watchDebounced }});
Object.defineProperty(__vite_ssr_exports__, "directiveHooks", { enumerable: true, configurable: true, get(){ return directiveHooks }});
Object.defineProperty(__vite_ssr_exports__, "eagerComputed", { enumerable: true, configurable: true, get(){ return computedEager }});
Object.defineProperty(__vite_ssr_exports__, "extendRef", { enumerable: true, configurable: true, get(){ return extendRef }});
Object.defineProperty(__vite_ssr_exports__, "formatDate", { enumerable: true, configurable: true, get(){ return formatDate }});
Object.defineProperty(__vite_ssr_exports__, "get", { enumerable: true, configurable: true, get(){ return get }});
Object.defineProperty(__vite_ssr_exports__, "identity", { enumerable: true, configurable: true, get(){ return identity }});
Object.defineProperty(__vite_ssr_exports__, "ignorableWatch", { enumerable: true, configurable: true, get(){ return watchIgnorable }});
Object.defineProperty(__vite_ssr_exports__, "increaseWithUnit", { enumerable: true, configurable: true, get(){ return increaseWithUnit }});
Object.defineProperty(__vite_ssr_exports__, "invoke", { enumerable: true, configurable: true, get(){ return invoke }});
Object.defineProperty(__vite_ssr_exports__, "isBoolean", { enumerable: true, configurable: true, get(){ return isBoolean }});
Object.defineProperty(__vite_ssr_exports__, "isClient", { enumerable: true, configurable: true, get(){ return isClient }});
Object.defineProperty(__vite_ssr_exports__, "isDef", { enumerable: true, configurable: true, get(){ return isDef }});
Object.defineProperty(__vite_ssr_exports__, "isDefined", { enumerable: true, configurable: true, get(){ return isDefined }});
Object.defineProperty(__vite_ssr_exports__, "isFunction", { enumerable: true, configurable: true, get(){ return isFunction }});
Object.defineProperty(__vite_ssr_exports__, "isIOS", { enumerable: true, configurable: true, get(){ return isIOS }});
Object.defineProperty(__vite_ssr_exports__, "isNumber", { enumerable: true, configurable: true, get(){ return isNumber }});
Object.defineProperty(__vite_ssr_exports__, "isObject", { enumerable: true, configurable: true, get(){ return isObject }});
Object.defineProperty(__vite_ssr_exports__, "isString", { enumerable: true, configurable: true, get(){ return isString }});
Object.defineProperty(__vite_ssr_exports__, "isWindow", { enumerable: true, configurable: true, get(){ return isWindow }});
Object.defineProperty(__vite_ssr_exports__, "logicAnd", { enumerable: true, configurable: true, get(){ return logicAnd }});
Object.defineProperty(__vite_ssr_exports__, "logicNot", { enumerable: true, configurable: true, get(){ return logicNot }});
Object.defineProperty(__vite_ssr_exports__, "logicOr", { enumerable: true, configurable: true, get(){ return logicOr }});
Object.defineProperty(__vite_ssr_exports__, "makeDestructurable", { enumerable: true, configurable: true, get(){ return makeDestructurable }});
Object.defineProperty(__vite_ssr_exports__, "noop", { enumerable: true, configurable: true, get(){ return noop }});
Object.defineProperty(__vite_ssr_exports__, "normalizeDate", { enumerable: true, configurable: true, get(){ return normalizeDate }});
Object.defineProperty(__vite_ssr_exports__, "not", { enumerable: true, configurable: true, get(){ return logicNot }});
Object.defineProperty(__vite_ssr_exports__, "now", { enumerable: true, configurable: true, get(){ return now }});
Object.defineProperty(__vite_ssr_exports__, "objectPick", { enumerable: true, configurable: true, get(){ return objectPick }});
Object.defineProperty(__vite_ssr_exports__, "or", { enumerable: true, configurable: true, get(){ return logicOr }});
Object.defineProperty(__vite_ssr_exports__, "pausableFilter", { enumerable: true, configurable: true, get(){ return pausableFilter }});
Object.defineProperty(__vite_ssr_exports__, "pausableWatch", { enumerable: true, configurable: true, get(){ return watchPausable }});
Object.defineProperty(__vite_ssr_exports__, "promiseTimeout", { enumerable: true, configurable: true, get(){ return promiseTimeout }});
Object.defineProperty(__vite_ssr_exports__, "rand", { enumerable: true, configurable: true, get(){ return rand }});
Object.defineProperty(__vite_ssr_exports__, "reactify", { enumerable: true, configurable: true, get(){ return reactify }});
Object.defineProperty(__vite_ssr_exports__, "reactifyObject", { enumerable: true, configurable: true, get(){ return reactifyObject }});
Object.defineProperty(__vite_ssr_exports__, "reactiveComputed", { enumerable: true, configurable: true, get(){ return reactiveComputed }});
Object.defineProperty(__vite_ssr_exports__, "reactiveOmit", { enumerable: true, configurable: true, get(){ return reactiveOmit }});
Object.defineProperty(__vite_ssr_exports__, "reactivePick", { enumerable: true, configurable: true, get(){ return reactivePick }});
Object.defineProperty(__vite_ssr_exports__, "refAutoReset", { enumerable: true, configurable: true, get(){ return refAutoReset }});
Object.defineProperty(__vite_ssr_exports__, "refDebounced", { enumerable: true, configurable: true, get(){ return refDebounced }});
Object.defineProperty(__vite_ssr_exports__, "refDefault", { enumerable: true, configurable: true, get(){ return refDefault }});
Object.defineProperty(__vite_ssr_exports__, "refThrottled", { enumerable: true, configurable: true, get(){ return refThrottled }});
Object.defineProperty(__vite_ssr_exports__, "refWithControl", { enumerable: true, configurable: true, get(){ return refWithControl }});
Object.defineProperty(__vite_ssr_exports__, "set", { enumerable: true, configurable: true, get(){ return set }});
Object.defineProperty(__vite_ssr_exports__, "syncRef", { enumerable: true, configurable: true, get(){ return syncRef }});
Object.defineProperty(__vite_ssr_exports__, "syncRefs", { enumerable: true, configurable: true, get(){ return syncRefs }});
Object.defineProperty(__vite_ssr_exports__, "throttleFilter", { enumerable: true, configurable: true, get(){ return throttleFilter }});
Object.defineProperty(__vite_ssr_exports__, "throttledRef", { enumerable: true, configurable: true, get(){ return refThrottled }});
Object.defineProperty(__vite_ssr_exports__, "throttledWatch", { enumerable: true, configurable: true, get(){ return watchThrottled }});
Object.defineProperty(__vite_ssr_exports__, "timestamp", { enumerable: true, configurable: true, get(){ return timestamp }});
Object.defineProperty(__vite_ssr_exports__, "toReactive", { enumerable: true, configurable: true, get(){ return toReactive }});
Object.defineProperty(__vite_ssr_exports__, "toRefs", { enumerable: true, configurable: true, get(){ return toRefs }});
Object.defineProperty(__vite_ssr_exports__, "tryOnBeforeMount", { enumerable: true, configurable: true, get(){ return tryOnBeforeMount }});
Object.defineProperty(__vite_ssr_exports__, "tryOnBeforeUnmount", { enumerable: true, configurable: true, get(){ return tryOnBeforeUnmount }});
Object.defineProperty(__vite_ssr_exports__, "tryOnMounted", { enumerable: true, configurable: true, get(){ return tryOnMounted }});
Object.defineProperty(__vite_ssr_exports__, "tryOnScopeDispose", { enumerable: true, configurable: true, get(){ return tryOnScopeDispose }});
Object.defineProperty(__vite_ssr_exports__, "tryOnUnmounted", { enumerable: true, configurable: true, get(){ return tryOnUnmounted }});
Object.defineProperty(__vite_ssr_exports__, "until", { enumerable: true, configurable: true, get(){ return until }});
Object.defineProperty(__vite_ssr_exports__, "useCounter", { enumerable: true, configurable: true, get(){ return useCounter }});
Object.defineProperty(__vite_ssr_exports__, "useDateFormat", { enumerable: true, configurable: true, get(){ return useDateFormat }});
Object.defineProperty(__vite_ssr_exports__, "useDebounce", { enumerable: true, configurable: true, get(){ return refDebounced }});
Object.defineProperty(__vite_ssr_exports__, "useDebounceFn", { enumerable: true, configurable: true, get(){ return useDebounceFn }});
Object.defineProperty(__vite_ssr_exports__, "useInterval", { enumerable: true, configurable: true, get(){ return useInterval }});
Object.defineProperty(__vite_ssr_exports__, "useIntervalFn", { enumerable: true, configurable: true, get(){ return useIntervalFn }});
Object.defineProperty(__vite_ssr_exports__, "useLastChanged", { enumerable: true, configurable: true, get(){ return useLastChanged }});
Object.defineProperty(__vite_ssr_exports__, "useThrottle", { enumerable: true, configurable: true, get(){ return refThrottled }});
Object.defineProperty(__vite_ssr_exports__, "useThrottleFn", { enumerable: true, configurable: true, get(){ return useThrottleFn }});
Object.defineProperty(__vite_ssr_exports__, "useTimeout", { enumerable: true, configurable: true, get(){ return useTimeout }});
Object.defineProperty(__vite_ssr_exports__, "useTimeoutFn", { enumerable: true, configurable: true, get(){ return useTimeoutFn }});
Object.defineProperty(__vite_ssr_exports__, "useToggle", { enumerable: true, configurable: true, get(){ return useToggle }});
Object.defineProperty(__vite_ssr_exports__, "watchAtMost", { enumerable: true, configurable: true, get(){ return watchAtMost }});
Object.defineProperty(__vite_ssr_exports__, "watchDebounced", { enumerable: true, configurable: true, get(){ return watchDebounced }});
Object.defineProperty(__vite_ssr_exports__, "watchIgnorable", { enumerable: true, configurable: true, get(){ return watchIgnorable }});
Object.defineProperty(__vite_ssr_exports__, "watchOnce", { enumerable: true, configurable: true, get(){ return watchOnce }});
Object.defineProperty(__vite_ssr_exports__, "watchPausable", { enumerable: true, configurable: true, get(){ return watchPausable }});
Object.defineProperty(__vite_ssr_exports__, "watchThrottled", { enumerable: true, configurable: true, get(){ return watchThrottled }});
Object.defineProperty(__vite_ssr_exports__, "watchWithFilter", { enumerable: true, configurable: true, get(){ return watchWithFilter }});
Object.defineProperty(__vite_ssr_exports__, "whenever", { enumerable: true, configurable: true, get(){ return whenever }});
;
}


// --------------------
// Request: /composables/useSource.ts
// Parents: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs ($id_fe38f457)
// Dependencies: 

// --------------------
const $id_fd16ee2a = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const DEFAULT_SRC = "nt";
Object.defineProperty(__vite_ssr_exports__, "DEFAULT_SRC", { enumerable: true, configurable: true, get(){ return DEFAULT_SRC }});
const MANGA_RESOURCE = [
  {
    sourceName: "NT",
    sourceId: "nt"
  }
];
Object.defineProperty(__vite_ssr_exports__, "MANGA_RESOURCE", { enumerable: true, configurable: true, get(){ return MANGA_RESOURCE }});
function useSource() {
  const srcId = DEFAULT_SRC;
  const srcName = MANGA_RESOURCE.find((src) => src.sourceId === srcId)?.sourceName || MANGA_RESOURCE[0].sourceName;
  return [srcId, srcName];
}

Object.defineProperty(__vite_ssr_exports__, "default", { enumerable: true, value: useSource });;
}


// --------------------
// Request: /node_modules/@nuxtjs/color-mode/dist/runtime/composables.mjs
// Parents: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs ($id_fe38f457)
// Dependencies: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs ($id_fe38f457)
// --------------------
const $id_9d5ba8e3 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs");

const useColorMode = () => {
  return __vite_ssr_import_0__.useState("color-mode").value;
};
Object.defineProperty(__vite_ssr_exports__, "useColorMode", { enumerable: true, configurable: true, get(){ return useColorMode }});
;
}


// --------------------
// Request: /node_modules/nuxt/dist/pages/runtime/composables.mjs
// Parents: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs ($id_fe38f457)
// Dependencies: 

// --------------------
const $id_ff6ed455 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const warnRuntimeUsage = (method) => console.warn(`${method}() is a compiler-hint helper that is only usable inside the script block of a single file component. Its arguments should be compiled away and passing it at runtime has no effect.`);
const definePageMeta = (meta) => {
  if (true) {
    warnRuntimeUsage("definePageMeta");
  }
};
Object.defineProperty(__vite_ssr_exports__, "definePageMeta", { enumerable: true, configurable: true, get(){ return definePageMeta }});
;
}


// --------------------
// Request: /components/TheHeader.vue?vue&type=style&index=0&scoped=true&lang.scss
// Parents: 
// - /components/TheHeader.vue ($id_d18d7003)
// Dependencies: 

// --------------------
const $id_aa6519fd = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
__vite_ssr_exports__.default = ".header-content[data-v-72292c93]{overflow:hidden}";
}


// --------------------
// Request: /components/TheFooter.vue
// Parents: 
// - /layouts/default.vue ($id_7689e89d)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/vue/server-renderer/index.js ($id_b215fa1c)
// - /@id/plugin-vue:export-helper ($id_bbb863c1)
// --------------------
const $id_cdfd5170 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const _sfc_main = {}
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/vue/server-renderer/index.js");


function _sfc_ssrRender(_ctx, _push, _parent, _attrs) {
  _push(`<footer${
    __vite_ssr_import_1__.ssrRenderAttrs(__vite_ssr_import_0__.mergeProps({ class: "my-6 bg-background pb-6 text-white" }, _attrs))
  }><figure class="relative flex min-h-[150px] w-full items-center justify-center"><svg viewBox="0 0 494.011 82.093" xmlns="http://www.w3.org/2000/svg" class="z-10 h-[40px] w-[130px] fill-white md:h-[50px] md:w-[200px]"><g id="svgGroup" stroke-linecap="round" fill-rule="evenodd" font-size="9pt" stroke="#ffffff" stroke-width="0.25mm" fill="#ffffff"><path d="M 14.142 61.944 C 14.12 61.935 14.095 61.926 14.064 61.922 A 0.278 0.278 0 0 0 14.026 61.919 A 0.037 0.037 0 0 1 14.024 61.919 C 13.976 61.917 13.928 61.82 13.928 61.626 C 13.928 61.431 13.928 61.187 13.977 60.894 A 4.229 4.229 0 0 0 13.99 60.813 C 14.046 60.427 14.036 60.108 13.96 59.873 A 0.781 0.781 0 0 0 13.831 59.624 C 13.66 59.411 13.489 59.421 13.253 59.656 A 1.965 1.965 0 0 0 13.147 59.771 A 1.155 1.155 0 0 1 13.094 59.855 C 12.943 60.073 12.821 60.033 12.702 59.707 A 2.365 2.365 0 0 1 12.659 59.576 C 12.512 59.087 12.463 58.55 12.561 58.013 A 3.462 3.462 0 0 1 12.588 57.881 C 12.692 57.411 12.879 57.061 13.147 56.792 C 13.44 56.548 13.538 56.353 13.538 56.255 A 0.237 0.237 0 0 0 13.535 56.224 C 13.521 56.114 13.432 55.98 13.268 55.821 A 3.003 3.003 0 0 0 13.098 55.669 A 6.57 6.57 0 0 1 12.916 55.438 C 12.469 54.843 12.431 54.526 12.826 54.461 A 1.087 1.087 0 0 1 13 54.449 A 0.45 0.45 0 0 0 13.01 54.449 C 13.231 54.444 13.368 54.276 13.311 53.907 A 1.458 1.458 0 0 0 13.293 53.814 C 13.245 53.667 13.196 53.521 13.147 53.423 A 0.926 0.926 0 0 1 13.13 53.415 C 13.052 53.373 13.005 53.336 12.928 53.363 A 0.228 0.228 0 0 0 12.903 53.374 A 0.442 0.442 0 0 1 12.824 53.424 C 12.494 53.583 12.319 52.985 12.247 51.655 A 24.884 24.884 0 0 1 12.219 50.933 A 272.374 272.374 0 0 1 12.219 50.573 C 12.22 50.063 12.224 49.722 12.245 49.538 A 0.628 0.628 0 0 1 12.268 49.419 A 0.267 0.267 0 0 1 12.277 49.395 C 12.329 49.279 12.426 49.339 12.61 49.615 C 12.683 49.712 12.744 49.786 12.805 49.847 A 1.233 1.233 0 0 0 13 50.005 A 0.387 0.387 0 0 0 13.02 50.024 C 13.111 50.103 13.199 50.1 13.245 50.054 A 0.829 0.829 0 0 0 13.343 49.86 C 13.375 49.766 13.391 49.658 13.391 49.517 A 6.039 6.039 0 0 0 13.359 49.363 A 2.061 2.061 0 0 0 13.196 48.882 A 1.019 1.019 0 0 0 13.185 48.862 C 13.102 48.705 13.018 48.652 12.902 48.674 A 0.375 0.375 0 0 0 12.854 48.687 A 0.26 0.26 0 0 1 12.839 48.694 C 12.649 48.774 12.461 48.574 12.366 48.003 C 12.289 47.584 12.273 47.045 12.316 46.387 A 14.691 14.691 0 0 1 12.366 45.806 C 12.448 45.311 12.461 44.921 12.434 44.664 A 1.432 1.432 0 0 0 12.415 44.537 A 0.782 0.782 0 0 0 12.412 44.476 C 12.397 44.276 12.3 44.195 12.122 44.195 A 1.01 1.01 0 0 0 11.675 44.305 A 1.464 1.464 0 0 0 11.292 44.585 A 1.978 1.978 0 0 0 10.972 45.097 A 1.773 1.773 0 0 0 10.852 45.562 C 10.852 45.789 10.823 45.927 10.787 45.979 A 0.043 0.043 0 0 1 10.754 46.001 A 0.05 0.05 0 0 1 10.723 45.982 C 10.668 45.925 10.581 45.744 10.461 45.464 A 3.813 3.813 0 0 0 10.372 45.286 C 10.068 44.719 9.867 44.785 9.797 45.456 A 4.654 4.654 0 0 0 9.778 45.708 A 7.651 7.651 0 0 0 9.753 46.031 C 9.702 46.931 9.728 48.501 9.812 50.74 A 298.464 298.464 0 0 0 9.875 52.3 L 9.875 52.788 A 153.286 153.286 0 0 0 9.934 53.786 C 9.951 54.063 9.968 54.322 9.985 54.56 A 42.824 42.824 0 0 0 10.022 55.035 C 10.022 55.483 10.051 55.846 10.064 56.145 A 5.785 5.785 0 0 1 10.071 56.402 A 3.674 3.674 0 0 0 10.073 56.518 C 10.079 56.721 10.101 56.888 10.112 57.029 A 1.91 1.91 0 0 1 10.12 57.183 C 10.12 57.302 10.152 57.421 10.164 57.514 A 0.47 0.47 0 0 1 10.168 57.574 A 0.336 0.336 0 0 0 10.18 57.659 C 10.19 57.698 10.207 57.735 10.226 57.766 A 0.29 0.29 0 0 0 10.266 57.818 L 10.266 57.867 A 0.734 0.734 0 0 1 10.277 57.902 C 10.31 58.02 10.341 58.224 10.355 58.485 A 5.6 5.6 0 0 1 10.364 58.794 C 10.413 59.283 10.461 59.771 10.461 60.357 A 23.974 23.974 0 0 1 10.467 60.445 C 10.549 61.747 10.469 62.233 10.264 61.906 A 1.02 1.02 0 0 1 10.217 61.822 C 10.12 61.627 10.071 61.287 9.926 60.705 A 16.055 16.055 0 0 0 9.924 60.699 C 9.827 60.162 9.729 59.527 9.68 58.843 A 19.358 19.358 0 0 1 9.646 58.591 C 9.614 58.344 9.589 58.109 9.57 57.885 A 10.413 10.413 0 0 1 9.534 57.037 A 10.003 10.003 0 0 0 9.522 57.012 C 9.477 56.923 9.428 56.833 9.338 56.744 A 0.145 0.145 0 0 0 9.271 56.679 C 9.22 56.653 9.153 56.648 9.094 56.646 A 2.212 2.212 0 0 0 9.045 56.646 C 8.645 56.646 8.609 56.565 8.902 56.403 A 2.516 2.516 0 0 1 8.997 56.353 A 1.663 1.663 0 0 0 9.137 56.2 A 0.629 0.629 0 0 0 9.241 56.011 A 1.439 1.439 0 0 0 9.274 55.894 C 9.298 55.795 9.319 55.669 9.33 55.517 A 3.275 3.275 0 0 0 9.338 55.279 C 9.298 54.994 9.291 54.641 9.233 54.164 A 9.381 9.381 0 0 0 9.192 53.863 A 332.436 332.436 0 0 1 9.118 52.883 A 139.354 139.354 0 0 1 9.045 51.861 L 9.045 50.152 A 8.487 8.487 0 0 0 9.07 49.785 C 9.092 49.332 9.084 48.82 9.045 48.247 A 15.874 15.874 0 0 0 9.024 47.969 C 8.972 47.351 8.893 46.798 8.85 46.246 C 8.775 45.797 8.701 45.491 8.626 45.307 A 0.769 0.769 0 0 0 8.557 45.171 C 8.514 45.129 8.397 45.123 8.205 45.155 A 2.749 2.749 0 0 0 8.118 45.171 A 12.144 12.144 0 0 0 7.6 45.265 A 5.928 5.928 0 0 0 7.19 45.367 C 6.799 45.464 6.506 45.513 6.213 45.513 A 1.075 1.075 0 0 1 6.191 45.517 C 5.997 45.552 5.837 45.525 5.761 45.488 A 0.135 0.135 0 0 1 5.725 45.464 A 0.971 0.971 0 0 0 5.65 45.394 C 5.632 45.38 5.613 45.366 5.591 45.352 A 0.709 0.709 0 0 0 5.53 45.318 A 0.117 0.117 0 0 0 5.508 45.301 C 5.456 45.269 5.377 45.269 5.334 45.269 A 2.411 2.411 0 0 1 4.892 45.179 C 4.098 44.94 3.269 44.28 2.405 43.169 A 14.706 14.706 0 0 1 1.239 41.235 A 16.842 16.842 0 0 1 0.11 38.335 C -0.037 37.945 -0.037 37.603 0.11 37.408 A 0.361 0.361 0 0 1 0.161 37.321 C 0.281 37.166 0.551 37.032 0.955 36.921 A 6.139 6.139 0 0 1 1.379 36.822 C 1.892 36.675 2.679 36.529 3.741 36.341 A 8188.696 8188.696 0 0 1 4.895 36.138 C 5.872 35.943 6.75 35.796 7.434 35.601 C 8.029 35.442 8.399 35.316 8.569 35.248 A 1.221 1.221 0 0 0 8.655 35.21 A 1.084 1.084 0 0 0 8.705 35.037 C 8.754 34.804 8.785 34.438 8.796 33.938 A 21.305 21.305 0 0 0 8.801 33.453 A 34.979 34.979 0 0 0 8.792 32.687 A 99.677 99.677 0 0 0 8.704 30.376 A 75.883 75.883 0 0 0 8.698 30.31 C 8.602 29.268 8.505 28.459 8.362 27.837 C 8.265 27.546 8.168 26.966 8.023 26.145 A 206.795 206.795 0 0 0 8.02 26.128 C 7.874 25.249 7.825 24.371 7.776 23.492 A 2.027 2.027 0 0 0 7.772 23.376 C 7.76 23.155 7.712 22.888 7.629 22.515 A 11.933 11.933 0 0 1 7.434 21.85 C 7.404 21.737 7.373 21.622 7.341 21.506 A 15.73 15.73 0 0 0 7.239 21.148 C 7.093 20.712 6.996 20.324 6.899 19.984 A 13.774 13.774 0 0 0 6.897 19.976 A 8.382 8.382 0 0 0 6.835 19.744 C 6.762 19.483 6.702 19.299 6.702 19.146 C 6.702 19.057 6.742 19.009 6.749 19.001 A 0.04 0.04 0 0 1 6.75 18.999 A 0.094 0.094 0 0 1 6.785 19.007 C 6.824 19.022 6.87 19.059 6.944 19.096 A 0.852 0.852 0 0 0 6.946 19.097 L 7.141 19.292 C 7.239 19.39 7.288 19.439 7.385 19.488 C 7.434 19.585 7.483 19.585 7.532 19.585 C 7.532 19.585 7.581 19.537 7.581 19.488 A 11.431 11.431 0 0 0 7.549 19.224 C 7.509 18.927 7.462 18.713 7.385 18.56 A 3.553 3.553 0 0 0 7.357 18.455 A 1.288 1.288 0 0 0 7.19 18.072 A 1.056 1.056 0 0 1 7.167 18.023 C 7.15 17.984 7.133 17.941 7.117 17.895 A 8.585 8.585 0 0 1 7.043 17.681 C 7.043 17.535 6.995 17.339 7.043 17.095 C 7.043 16.9 7.031 16.717 7.007 16.546 A 2.721 2.721 0 0 0 6.897 16.07 L 6.311 14.947 L 7.239 14.556 A 13.902 13.902 0 0 0 7.492 14.48 C 7.571 14.456 7.645 14.434 7.715 14.415 A 1.381 1.381 0 0 1 8.069 14.361 A 1.073 1.073 0 0 1 8.263 14.38 A 2.913 2.913 0 0 1 8.801 14.556 A 10.38 10.38 0 0 0 8.984 14.646 A 2.196 2.196 0 0 0 9.387 14.8 C 9.631 14.8 9.778 14.8 9.924 14.751 A 0.801 0.801 0 0 1 10.019 14.726 C 10.09 14.712 10.162 14.706 10.242 14.704 A 6.187 6.187 0 0 1 10.413 14.703 A 7.661 7.661 0 0 0 10.53 14.74 C 10.571 14.753 10.614 14.767 10.657 14.782 A 1.122 1.122 0 0 1 10.901 14.898 C 11.011 14.934 11.176 14.999 11.395 15.07 A 7.295 7.295 0 0 0 11.633 15.142 A 2.843 2.843 0 0 0 11.861 15.207 A 8.076 8.076 0 0 0 12.61 15.337 C 12.903 15.402 13.152 15.424 13.402 15.431 A 13.106 13.106 0 0 0 13.782 15.435 A 3.161 3.161 0 0 1 13.823 15.431 C 14 15.413 14.169 15.412 14.33 15.427 A 2.05 2.05 0 0 1 14.954 15.581 A 0.603 0.603 0 0 1 15.203 15.75 C 15.381 15.942 15.52 16.276 15.588 16.753 A 1.724 1.724 0 0 1 15.596 16.788 C 15.679 17.202 15.724 18.137 15.698 19.527 A 50.324 50.324 0 0 1 15.686 20.025 A 95.915 95.915 0 0 1 15.686 20.201 C 15.683 21.913 15.634 23.809 15.54 25.933 A 941.918 941.918 0 0 1 15.536 26.092 C 15.501 27.675 15.465 29.077 15.43 30.279 A 304.325 304.325 0 0 1 15.393 31.451 A 940.617 940.617 0 0 0 15.393 31.989 C 15.394 32.984 15.398 33.573 15.426 33.774 A 0.253 0.253 0 0 0 15.442 33.843 A 0.22 0.22 0 0 0 15.498 33.882 C 15.604 33.935 15.803 33.969 16.071 33.983 A 5.902 5.902 0 0 0 16.37 33.99 A 8.046 8.046 0 0 0 17.126 33.953 A 7.527 7.527 0 0 0 17.883 33.843 C 18.228 33.774 18.475 33.705 18.642 33.619 A 0.669 0.669 0 0 0 18.811 33.501 A 1.253 1.253 0 0 1 18.821 33.481 C 18.865 33.398 18.956 33.239 19.058 33.004 A 4.98 4.98 0 0 0 19.153 32.769 C 19.244 32.525 19.355 32.262 19.461 31.979 A 8.285 8.285 0 0 0 19.641 31.451 A 17.517 17.517 0 0 0 19.712 31.27 C 19.781 31.091 19.846 30.918 19.91 30.749 A 12.614 12.614 0 0 1 20.178 30.083 C 20.29 29.784 20.403 29.542 20.493 29.38 A 1.846 1.846 0 0 1 20.569 29.253 C 20.618 29.107 20.764 28.863 20.959 28.472 A 70.864 70.864 0 0 0 21.179 28.03 A 22.106 22.106 0 0 0 21.545 27.251 A 34.359 34.359 0 0 1 22.636 25.185 A 43.528 43.528 0 0 1 24.231 22.613 C 25.305 21.05 26.282 19.781 27.209 18.853 A 0.893 0.893 0 0 0 27.22 18.842 C 27.293 18.767 27.391 18.64 27.516 18.463 A 10.87 10.87 0 0 0 27.649 18.267 A 4.323 4.323 0 0 0 27.901 17.919 A 3.54 3.54 0 0 0 28.186 17.388 A 15.668 15.668 0 0 1 28.331 17.174 C 28.417 17.051 28.509 16.92 28.609 16.782 A 31.132 31.132 0 0 1 28.918 16.363 C 29.163 16.021 29.456 15.679 29.7 15.386 C 32.488 12.504 34.087 11.085 34.497 11.085 A 0.135 0.135 0 0 1 34.534 11.089 L 34.485 11.089 A 0.559 0.559 0 0 1 34.491 11.091 C 34.783 11.193 35.266 11.626 36.034 12.25 A 46.621 46.621 0 0 0 36.047 12.261 A 43.577 43.577 0 0 1 38.196 14.361 A 39.14 39.14 0 0 1 38.31 14.488 C 38.686 14.91 38.941 15.221 39.075 15.533 A 1.426 1.426 0 0 1 39.148 15.706 C 39.235 15.958 39.251 16.242 39.172 16.558 A 1.408 1.408 0 0 1 39.124 16.928 A 1.526 1.526 0 0 1 38.831 17.486 A 2.037 2.037 0 0 1 38.687 17.616 C 38.442 17.818 38.092 18.026 37.61 18.267 C 37.199 18.491 36.587 18.945 35.775 19.627 A 46.598 46.598 0 0 0 34.973 20.318 A 61.235 61.235 0 0 0 33.901 21.247 A 92.666 92.666 0 0 0 31.116 23.833 C 30.243 24.706 29.486 25.487 28.859 26.175 A 27.118 27.118 0 0 0 28.088 27.056 A 39.343 39.343 0 0 1 27.679 27.536 C 26.892 28.443 26.394 28.912 26.184 28.912 C 26.105 28.912 26.025 28.976 25.92 29.105 A 3.002 3.002 0 0 0 25.842 29.204 A 1.997 1.997 0 0 0 25.821 29.226 C 25.753 29.296 25.676 29.386 25.598 29.485 A 3.633 3.633 0 0 0 25.354 29.839 A 3.402 3.402 0 0 1 25.324 29.883 C 25.139 30.152 24.953 30.337 24.768 30.523 C 24.661 30.63 24.569 30.693 24.483 30.728 A 0.521 0.521 0 0 1 24.28 30.767 A 0.159 0.159 0 0 0 24.245 30.772 C 24.132 30.798 23.906 30.932 23.602 31.105 A 53.335 53.335 0 0 1 23.596 31.109 A 4.867 4.867 0 0 0 23.019 31.493 A 4.793 4.793 0 0 0 22.571 31.89 C 22.229 32.183 21.887 32.427 21.594 32.671 A 32.546 32.546 0 0 1 21.459 32.761 C 21.317 32.855 21.218 32.916 21.144 32.945 A 0.243 0.243 0 0 1 21.057 32.964 A 0.189 0.189 0 0 1 21.036 32.963 C 20.923 32.95 20.914 32.83 20.947 32.602 A 4.026 4.026 0 0 1 20.959 32.525 C 21.024 32.333 21.109 32.098 21.229 31.836 A 6.181 6.181 0 0 1 21.448 31.402 A 17.658 17.658 0 0 1 21.796 30.865 A 13.683 13.683 0 0 1 22.327 30.132 A 28.612 28.612 0 0 1 22.357 30.089 C 22.595 29.758 22.872 29.384 23.059 29.009 C 23.303 28.57 23.45 28.228 23.547 27.984 C 23.596 27.691 23.694 27.496 23.792 27.3 A 1.593 1.593 0 0 1 23.834 27.24 C 23.916 27.128 23.994 27.056 24.036 27.056 A 0.11 0.11 0 0 0 24.066 27.051 C 24.107 27.039 24.164 27.004 24.225 26.933 A 0.744 0.744 0 0 0 24.28 26.861 C 24.377 26.763 24.426 26.617 24.475 26.421 A 3.256 3.256 0 0 0 24.487 26.386 C 24.611 25.999 24.572 25.854 24.37 25.878 A 0.505 0.505 0 0 0 24.329 25.884 A 0.528 0.528 0 0 0 24.234 25.947 C 24.055 26.092 23.825 26.409 23.457 26.899 A 93.465 93.465 0 0 1 23.45 26.91 A 22.443 22.443 0 0 0 22.327 28.716 A 11.646 11.646 0 0 0 22.125 29.056 C 21.934 29.391 21.81 29.652 21.743 29.83 A 1.422 1.422 0 0 0 21.692 29.986 A 0.633 0.633 0 0 1 21.692 30.004 C 21.688 30.117 21.655 30.203 21.59 30.335 A 10.557 10.557 0 0 1 21.545 30.425 A 1.633 1.633 0 0 1 21.53 30.449 C 21.437 30.582 21.342 30.675 21.204 30.767 A 1.922 1.922 0 0 0 21.079 30.904 A 3.585 3.585 0 0 0 20.862 31.206 A 14.183 14.183 0 0 0 20.827 31.259 C 20.766 31.351 20.71 31.44 20.683 31.515 A 0.247 0.247 0 0 0 20.667 31.597 C 20.667 31.702 20.641 31.782 20.609 31.837 A 0.265 0.265 0 0 1 20.569 31.89 A 37.593 37.593 0 0 1 20.563 31.896 C 20.488 31.971 20.442 32.016 20.377 32.031 A 0.23 0.23 0 0 1 20.325 32.037 A 0.269 0.269 0 0 0 20.299 32.038 C 20.218 32.045 20.174 32.09 20.129 32.134 A 1.946 1.946 0 0 0 20.129 32.149 C 20.13 32.201 20.134 32.285 20.178 32.329 C 20.219 32.532 20.158 32.634 19.997 32.663 A 0.643 0.643 0 0 1 19.885 32.671 C 19.788 32.671 19.641 32.72 19.495 32.769 A 1.663 1.663 0 0 0 19.354 32.922 A 0.629 0.629 0 0 0 19.25 33.111 A 0.355 0.355 0 0 0 19.238 33.138 C 19.208 33.214 19.213 33.29 19.299 33.366 A 0.458 0.458 0 0 0 19.348 33.404 A 1.042 1.042 0 0 0 19.429 33.427 C 19.556 33.458 19.749 33.486 20.021 33.497 A 6.402 6.402 0 0 0 20.276 33.501 A 6.522 6.522 0 0 0 20.694 33.532 C 20.953 33.544 21.259 33.548 21.615 33.549 A 156.98 156.98 0 0 0 22.229 33.55 A 37.448 37.448 0 0 1 23.621 33.581 A 198.983 198.983 0 0 1 25.159 33.648 C 26.001 33.684 26.733 33.721 27.356 33.758 A 75.367 75.367 0 0 1 27.942 33.794 A 37.652 37.652 0 0 0 28.015 33.8 C 29.724 33.939 30.578 33.889 30.53 33.648 A 0.346 0.346 0 0 0 30.529 33.631 C 30.519 33.424 30.319 33.367 29.929 33.429 A 3.248 3.248 0 0 0 29.797 33.453 A 2.264 2.264 0 0 1 29.755 33.465 C 29.319 33.587 29.09 33.501 29.109 33.209 A 0.622 0.622 0 0 1 29.114 33.16 C 29.114 33.083 29.144 33.005 29.229 32.952 A 0.372 0.372 0 0 1 29.309 32.915 A 0.861 0.861 0 0 1 29.327 32.91 C 29.439 32.875 29.624 32.84 29.865 32.806 A 14.79 14.79 0 0 1 30.139 32.769 C 30.469 32.732 30.881 32.723 31.396 32.721 A 126.622 126.622 0 0 1 31.946 32.72 C 32.564 32.72 33.336 32.69 34.236 32.701 A 27.044 27.044 0 0 1 34.973 32.72 C 38.831 32.72 40.686 32.818 40.637 33.013 C 40.6 33.088 40.448 33.134 40.225 33.173 A 6.843 6.843 0 0 1 40.002 33.208 C 39.661 33.257 39.27 33.306 38.831 33.257 L 37.268 33.257 L 35.852 33.257 C 34.68 33.306 34.485 33.404 35.168 33.599 C 35.313 33.628 35.476 33.657 35.655 33.676 A 3.761 3.761 0 0 0 36.047 33.697 A 2.65 2.65 0 0 0 36.156 33.708 C 36.438 33.731 36.693 33.709 36.922 33.7 A 3.831 3.831 0 0 1 37.073 33.697 A 4.459 4.459 0 0 1 37.305 33.67 C 37.43 33.659 37.547 33.653 37.656 33.65 A 11.823 11.823 0 0 1 37.952 33.648 A 1.347 1.347 0 0 1 38.048 33.671 C 38.234 33.722 38.354 33.8 38.438 33.842 A 0.884 0.884 0 0 0 38.44 33.843 A 0.354 0.354 0 0 0 38.518 33.934 C 38.716 34.098 39.141 34.123 39.856 34.038 A 6.73 6.73 0 0 1 39.86 34.038 C 40.541 33.941 40.979 33.99 41.077 34.136 A 0.102 0.102 0 0 1 41.095 34.194 C 41.095 34.307 40.897 34.442 40.52 34.581 A 5.283 5.283 0 0 1 40.247 34.673 C 40.114 34.706 39.981 34.74 39.879 34.788 A 0.431 0.431 0 0 0 39.758 34.869 A 0.767 0.767 0 0 0 39.725 34.892 C 39.605 34.982 39.567 35.072 39.612 35.162 A 0.083 0.083 0 0 1 39.615 35.168 C 39.652 35.261 39.457 35.31 39.075 35.406 A 11.214 11.214 0 0 1 38.904 35.429 C 38.772 35.445 38.626 35.462 38.47 35.479 A 91.912 91.912 0 0 1 37.756 35.552 A 52.025 52.025 0 0 1 37.269 35.551 C 36.924 35.547 36.609 35.537 36.34 35.503 A 7.161 7.161 0 0 0 36.194 35.484 C 35.152 35.357 33.44 35.359 31.018 35.406 A 180.858 180.858 0 0 0 23.547 35.845 C 21.678 35.998 20.316 36.15 19.483 36.303 A 6.272 6.272 0 0 0 18.909 36.431 A 1.165 1.165 0 0 1 18.754 36.494 C 18.576 36.552 18.363 36.589 18.178 36.626 A 12.073 12.073 0 0 0 18.176 36.626 C 17.883 36.675 17.639 36.724 17.395 36.724 A 30.696 30.696 0 0 0 17.35 36.724 C 17.246 36.724 17.143 36.725 17.049 36.735 A 0.899 0.899 0 0 0 16.858 36.773 A 2.919 2.919 0 0 0 16.834 36.789 C 16.706 36.876 16.66 36.925 16.614 37.017 A 0.216 0.216 0 0 1 16.608 37.071 C 16.592 37.133 16.545 37.163 16.467 37.163 A 1.373 1.373 0 0 1 16.322 37.158 C 16.29 37.155 16.257 37.15 16.221 37.142 A 1.002 1.002 0 0 1 16.125 37.115 A 1.253 1.253 0 0 0 16.069 37.092 C 15.788 36.987 15.66 37.069 15.719 37.305 A 0.722 0.722 0 0 0 15.735 37.359 C 15.735 37.456 15.784 37.505 15.881 37.554 C 15.971 37.644 16.101 37.651 16.311 37.689 A 3.607 3.607 0 0 1 16.37 37.701 C 16.614 37.701 16.956 37.749 17.395 37.701 C 17.883 37.701 18.518 37.652 19.299 37.603 A 306.511 306.511 0 0 1 20.2 37.549 C 20.568 37.527 20.969 37.503 21.407 37.472 A 81.479 81.479 0 0 0 22.278 37.408 A 107.73 107.73 0 0 0 22.584 37.382 C 23.701 37.285 25.056 37.155 26.575 37.066 A 21.821 21.821 0 0 1 27.122 37.019 C 27.753 36.971 28.503 36.938 29.39 36.908 A 214.882 214.882 0 0 1 30.627 36.871 A 1592.408 1592.408 0 0 1 30.708 36.868 A 3578.276 3578.276 0 0 1 35.95 36.724 L 40.588 36.724 C 41.699 36.724 42.287 36.761 42.416 36.803 A 0.034 0.034 0 0 1 42.444 36.822 A 0.249 0.249 0 0 1 42.433 36.832 C 42.375 36.883 42.229 36.971 41.956 37.017 A 1.87 1.87 0 0 1 41.769 37.079 C 41.658 37.11 41.535 37.138 41.407 37.167 A 7.19 7.19 0 0 0 41.028 37.261 A 10.296 10.296 0 0 0 40.87 37.302 C 40.187 37.484 39.804 37.672 39.758 37.945 A 0.308 0.308 0 0 1 39.682 38.151 C 39.552 38.303 39.257 38.4 38.809 38.471 A 9.232 9.232 0 0 1 38.342 38.531 C 38.054 38.531 37.787 38.573 37.554 38.629 A 4.181 4.181 0 0 0 37.219 38.726 A 2.366 2.366 0 0 0 37.055 38.779 C 36.799 38.873 36.617 38.995 36.536 39.117 A 0.856 0.856 0 0 1 36.528 39.124 C 36.49 39.161 36.445 39.198 36.396 39.236 A 5.326 5.326 0 0 1 36.145 39.41 A 22.466 22.466 0 0 0 36.143 39.41 C 36.023 39.45 35.808 39.521 35.524 39.573 A 3.879 3.879 0 0 1 35.315 39.605 A 13.283 13.283 0 0 1 35.008 39.639 C 34.759 39.664 34.459 39.69 34.106 39.715 A 62.143 62.143 0 0 1 33.557 39.751 A 49.522 49.522 0 0 0 33.116 39.783 C 32.617 39.821 32.017 39.87 31.327 39.909 A 44.405 44.405 0 0 1 30.53 39.947 C 29.797 39.996 29.163 40.044 28.625 40.093 A 16.154 16.154 0 0 0 28.411 40.114 C 28.097 40.147 27.894 40.179 27.8 40.212 A 0.148 0.148 0 0 0 27.747 40.24 A 0.062 0.062 0 0 0 27.731 40.27 C 27.714 40.337 27.762 40.473 27.844 40.679 C 27.954 40.862 28.064 41.045 28.194 41.27 A 35.989 35.989 0 0 1 28.333 41.509 A 2.991 2.991 0 0 1 28.519 41.758 A 5.522 5.522 0 0 1 28.87 42.388 A 8.038 8.038 0 0 1 28.906 42.499 C 28.961 42.672 28.995 42.805 29.009 42.896 A 0.533 0.533 0 0 1 29.016 42.974 A 0.836 0.836 0 0 0 29.01 43.031 C 28.983 43.402 29.129 44.206 29.407 45.318 A 23.089 23.089 0 0 0 29.465 45.556 C 29.606 46.115 29.775 46.704 29.963 47.323 A 138.09 138.09 0 0 0 30.627 49.419 A 182.723 182.723 0 0 0 30.761 49.806 C 30.982 50.444 31.196 51.049 31.415 51.629 A 29.994 29.994 0 0 0 32.239 53.619 C 32.434 54.156 32.629 54.595 32.776 55.035 C 32.886 55.328 32.941 55.538 32.961 55.687 A 0.948 0.948 0 0 1 32.971 55.816 A 0.306 0.306 0 0 0 32.973 55.845 C 32.994 56.065 33.235 56.641 33.655 57.574 C 33.948 58.306 34.351 59.176 34.843 60.183 A 129.233 129.233 0 0 0 35.364 61.236 C 35.791 62.06 36.295 62.998 36.886 64.039 A 83.962 83.962 0 0 0 38.049 66.021 C 38.855 67.376 39.578 68.511 40.178 69.385 A 28.675 28.675 0 0 0 40.735 70.171 A 23.057 23.057 0 0 0 40.925 70.421 C 41.32 70.933 41.767 71.47 42.255 72.021 A 44.79 44.79 0 0 0 44.104 73.98 A 63.845 63.845 0 0 0 45.022 74.881 C 45.654 75.488 46.209 75.989 46.686 76.376 A 10.153 10.153 0 0 0 47.327 76.861 C 47.668 77.056 47.961 77.3 48.157 77.496 C 48.336 77.639 48.436 77.756 48.496 77.847 A 0.842 0.842 0 0 1 48.547 77.935 C 48.547 78.081 48.694 78.277 49.036 78.521 A 4.247 4.247 0 0 0 49.417 78.857 A 7.305 7.305 0 0 0 50.061 79.302 A 4.061 4.061 0 0 0 50.209 79.39 C 50.526 79.57 50.764 79.644 50.891 79.644 C 50.926 79.644 51.012 79.694 51.111 79.777 A 1.788 1.788 0 0 1 51.233 79.888 C 51.282 79.961 51.343 80.047 51.41 80.138 A 34.107 34.107 0 0 0 51.624 80.425 A 2.111 2.111 0 0 0 51.706 80.553 A 1.74 1.74 0 0 0 52.112 80.962 C 52.252 81.103 52.367 81.167 52.457 81.193 A 0.347 0.347 0 0 0 52.551 81.206 A 1.702 1.702 0 0 1 52.591 81.207 C 52.745 81.21 52.833 81.235 52.871 81.266 A 0.05 0.05 0 0 1 52.893 81.304 A 0.03 0.03 0 0 1 52.893 81.309 C 52.886 81.349 52.802 81.441 52.679 81.566 A 23.508 23.508 0 0 1 52.551 81.695 A 1.193 1.193 0 0 1 52.202 81.935 C 51.906 82.071 51.509 82.125 50.99 82.074 A 4.988 4.988 0 0 1 50.696 82.037 A 87.554 87.554 0 0 1 49.646 81.884 A 18.794 18.794 0 0 1 48.596 81.695 A 28.623 28.623 0 0 1 47.957 81.551 C 47.544 81.452 47.182 81.354 46.887 81.255 A 4.928 4.928 0 0 1 46.814 81.23 C 46.512 81.124 46.314 81.02 46.238 80.935 A 0.112 0.112 0 0 1 46.204 80.865 A 0.269 0.269 0 0 0 46.202 80.839 C 46.195 80.758 46.15 80.714 46.106 80.669 C 46.057 80.621 45.959 80.572 45.862 80.572 C 45.823 80.572 45.754 80.602 45.727 80.639 A 0.052 0.052 0 0 0 45.715 80.669 A 0.12 0.12 0 0 0 45.686 80.72 C 45.675 80.757 45.676 80.802 45.69 80.85 A 0.375 0.375 0 0 0 45.715 80.913 C 45.764 81.011 45.764 81.06 45.764 81.109 A 0.383 0.383 0 0 1 45.76 81.117 C 45.713 81.206 45.664 81.206 45.569 81.206 A 0.471 0.471 0 0 1 45.504 81.202 C 45.408 81.189 45.374 81.141 45.374 81.06 A 0.092 0.092 0 0 1 45.357 81.036 C 45.335 80.993 45.331 80.922 45.345 80.854 A 0.347 0.347 0 0 1 45.374 80.767 C 45.499 80.473 45.373 80.216 45.025 79.932 A 3.239 3.239 0 0 0 44.836 79.79 A 2.79 2.79 0 0 1 44.733 79.709 C 44.663 79.651 44.601 79.594 44.547 79.536 A 1.4 1.4 0 0 1 44.397 79.351 C 44.34 79.237 44.316 79.156 44.316 79.089 A 0.278 0.278 0 0 1 44.348 78.96 A 1.026 1.026 0 0 0 44.355 78.946 C 44.437 78.777 44.399 78.727 44.243 78.833 A 1.071 1.071 0 0 0 44.202 78.863 A 0.387 0.387 0 0 1 44.128 78.884 C 43.927 78.92 43.612 78.841 43.216 78.662 A 6.189 6.189 0 0 1 42.834 78.472 C 42.151 78.081 41.516 77.642 40.93 77.105 A 1.646 1.646 0 0 0 40.916 77.091 C 40.848 77.024 40.779 76.969 40.71 76.921 A 2.844 2.844 0 0 0 40.344 76.714 A 37.423 37.423 0 0 0 40.238 76.687 C 40.165 76.669 40.099 76.656 40.043 76.658 A 0.195 0.195 0 0 0 39.905 76.714 A 0.275 0.275 0 0 0 39.803 76.803 C 39.766 76.855 39.738 76.923 39.709 77.007 C 39.709 77.065 39.717 77.115 39.729 77.161 A 0.979 0.979 0 0 0 39.807 77.349 A 0.371 0.371 0 0 0 39.834 77.373 C 39.923 77.446 40.011 77.442 40.1 77.398 A 0.115 0.115 0 0 1 40.153 77.385 C 40.235 77.385 40.329 77.472 40.488 77.591 A 5.161 5.161 0 0 0 40.491 77.593 A 2.841 2.841 0 0 1 40.648 77.721 C 40.725 77.788 40.805 77.863 40.889 77.945 A 25.194 25.194 0 0 1 41.125 78.179 A 11.548 11.548 0 0 1 41.139 78.194 C 41.77 78.872 41.891 79.167 41.581 79.039 A 0.998 0.998 0 0 1 41.516 79.009 A 7.269 7.269 0 0 1 41.418 78.947 C 41.016 78.686 40.369 78.219 39.514 77.544 A 36.279 36.279 0 0 1 38.643 76.785 A 96.949 96.949 0 0 1 36.682 74.956 A 39.921 39.921 0 0 1 35.628 73.791 C 34.104 72.034 33.395 70.818 33.557 70.171 A 1.131 1.131 0 0 0 33.561 70.16 C 33.606 70.02 33.606 69.923 33.606 69.781 A 0.284 0.284 0 0 0 33.57 69.642 A 0.259 0.259 0 0 0 33.459 69.537 C 33.362 69.488 33.313 69.488 33.215 69.585 A 0.131 0.131 0 0 0 33.204 69.598 C 33.181 69.629 33.158 69.681 33.142 69.743 A 0.742 0.742 0 0 0 33.118 69.927 A 4.586 4.586 0 0 1 33.106 70.024 C 33.065 70.332 33.021 70.341 32.947 70.107 A 2.894 2.894 0 0 1 32.922 70.025 C 32.874 69.878 32.727 69.585 32.483 69.146 A 15.174 15.174 0 0 1 32.38 68.979 C 32.169 68.63 31.947 68.241 31.653 67.779 A 16.283 16.283 0 0 1 31.54 67.593 C 31.214 67.048 31.003 66.617 30.872 66.265 C 30.811 66.024 30.77 65.819 30.77 65.63 A 1.061 1.061 0 0 1 30.823 65.288 C 30.905 65.001 30.952 64.852 30.936 64.782 A 0.062 0.062 0 0 0 30.92 64.751 A 0.039 0.039 0 0 0 30.912 64.745 C 30.862 64.717 30.741 64.793 30.519 64.973 A 9.011 9.011 0 0 0 30.432 65.044 C 30.11 65.275 29.961 65.331 30.068 65.132 A 0.949 0.949 0 0 1 30.09 65.093 A 0.945 0.945 0 0 0 30.111 65.057 C 30.231 64.835 30.176 64.703 29.944 64.703 C 29.651 64.703 29.651 64.605 29.993 64.41 C 30.163 64.324 30.222 64.201 30.202 64.041 A 0.621 0.621 0 0 0 30.188 63.97 A 1.296 1.296 0 0 0 30.161 63.919 C 30.049 63.718 29.81 63.397 29.407 62.994 A 11.395 11.395 0 0 1 29.364 62.945 C 28.84 62.338 28.588 61.915 28.611 61.698 A 0.164 0.164 0 0 1 28.674 61.578 A 0.617 0.617 0 0 0 28.843 61.413 A 0.406 0.406 0 0 0 28.918 61.187 A 3.152 3.152 0 0 1 28.885 61.117 C 28.855 61.052 28.817 60.977 28.755 60.913 A 0.484 0.484 0 0 0 28.674 60.845 A 0.696 0.696 0 0 0 28.611 60.808 C 28.517 60.758 28.407 60.728 28.293 60.728 A 0.643 0.643 0 0 0 28.137 60.747 A 0.506 0.506 0 0 1 28.129 60.749 C 27.888 60.793 27.696 60.646 27.551 60.308 A 1.091 1.091 0 0 1 27.528 60.265 C 27.348 59.915 27.252 59.296 27.112 58.453 A 1.975 1.975 0 0 0 27.033 58.147 C 26.957 57.934 26.845 57.763 26.687 57.634 A 1.164 1.164 0 0 0 26.282 57.427 A 0.256 0.256 0 0 1 26.172 57.4 C 26.037 57.336 25.877 57.16 25.683 56.899 A 10.525 10.525 0 0 1 25.5 56.646 A 17.509 17.509 0 0 1 25.427 56.511 C 25.136 55.965 24.721 55.125 24.182 53.912 C 23.779 52.959 23.239 51.678 22.603 50.087 A 171.558 171.558 0 0 1 21.936 48.394 A 43.865 43.865 0 0 1 21.865 48.23 C 21.553 47.51 21.284 46.836 21.057 46.246 C 20.813 45.611 20.618 45.22 20.52 45.025 C 20.081 44.146 19.885 43.56 19.934 43.218 C 20.032 42.876 20.422 42.583 21.155 42.339 A 14.057 14.057 0 0 1 21.205 42.314 C 21.575 42.131 21.9 41.989 22.18 41.802 A 3.387 3.387 0 0 0 22.388 41.689 C 22.568 41.583 22.694 41.484 22.766 41.412 C 22.892 41.202 22.802 41.064 22.495 40.967 A 2.03 2.03 0 0 0 22.327 40.923 C 21.99 40.886 21.597 40.906 21.102 40.983 A 11.522 11.522 0 0 0 20.618 41.07 A 14.783 14.783 0 0 1 20.585 41.079 C 20.381 41.137 20.16 41.195 19.943 41.253 A 25.221 25.221 0 0 0 19.543 41.363 A 20.798 20.798 0 0 0 19.312 41.397 C 19.149 41.422 19.002 41.447 18.877 41.473 A 3.767 3.767 0 0 0 18.713 41.509 A 13.171 13.171 0 0 0 17.395 41.79 A 19.349 19.349 0 0 0 16.223 42.144 C 15.65 42.335 15.286 42.496 15.131 42.628 A 0.249 0.249 0 0 0 15.051 42.73 A 7.179 7.179 0 0 0 15.03 42.904 C 14.947 43.675 14.905 45.03 14.905 46.929 C 14.856 48.98 14.905 51.324 14.954 54.009 A 199.232 199.232 0 0 1 14.953 54.606 C 14.952 55.078 14.947 55.626 14.933 56.241 A 67.255 67.255 0 0 1 14.905 57.183 C 14.905 58.501 14.856 59.722 14.807 60.894 A 25.688 25.688 0 0 0 14.794 61.063 C 14.732 61.872 14.715 62.584 14.711 63.201 A 88.05 88.05 0 0 0 14.709 63.824 A 268.557 268.557 0 0 0 14.71 64.126 C 14.71 64.749 14.716 65.044 14.758 65.044 C 14.807 65.044 14.856 65.093 14.856 65.191 A 1.348 1.348 0 0 1 14.905 65.417 C 14.912 65.466 14.92 65.518 14.931 65.574 A 1.869 1.869 0 0 0 14.954 65.679 A 0.702 0.702 0 0 1 14.905 65.933 A 0.953 0.953 0 0 1 14.807 66.119 A 0.729 0.729 0 0 1 14.757 66.165 C 14.725 66.191 14.693 66.212 14.661 66.228 A 0.325 0.325 0 0 1 14.514 66.265 C 14.319 66.265 14.221 66.119 14.172 65.826 C 14.13 65.615 14.088 65.186 14.109 64.602 A 9.28 9.28 0 0 1 14.124 64.312 C 14.124 63.775 14.172 63.287 14.172 62.896 A 10.595 10.595 0 0 0 14.18 62.824 C 14.221 62.43 14.221 62.21 14.221 62.163 A 0.69 0.69 0 0 0 14.231 62.142 C 14.262 62.075 14.266 62.033 14.243 61.996 A 0.148 0.148 0 0 0 14.221 61.968 C 14.198 61.968 14.175 61.957 14.147 61.946 M 376.672 19.537 L 375.891 23.394 A 1.55 1.55 0 0 1 375.537 23.349 C 375.472 23.333 375.411 23.315 375.357 23.297 A 2.439 2.439 0 0 1 375.354 23.296 A 3.823 3.823 0 0 0 374.473 23.124 A 6.755 6.755 0 0 0 373.889 23.101 C 373.421 23.101 372.805 23.249 372.041 23.545 A 13.198 13.198 0 0 0 371.692 23.687 A 42.608 42.608 0 0 0 369.922 24.134 C 368.159 24.625 366.933 25.128 366.223 25.689 A 2.733 2.733 0 0 0 365.954 25.913 C 365.394 26.449 365.491 26.948 366.272 27.359 A 3.62 3.62 0 0 0 366.565 27.496 A 3.189 3.189 0 0 1 366.859 27.643 C 367.191 27.828 367.639 28.13 368.225 28.57 A 55.434 55.434 0 0 1 369.458 29.443 A 52.233 52.233 0 0 1 370.764 30.425 C 373.206 32.329 374.329 33.599 374.133 34.283 A 44.24 44.24 0 0 1 374.096 34.504 C 374.026 34.907 373.892 35.671 373.694 36.822 C 373.453 38.173 373.259 39.667 373.019 41.304 A 159.469 159.469 0 0 1 373.01 41.363 A 61.405 61.405 0 0 1 372.868 42.608 C 372.724 43.744 372.575 44.575 372.401 45.098 A 3.519 3.519 0 0 1 372.375 45.171 A 10.001 10.001 0 0 0 372.131 46.343 C 372.088 46.691 372.044 47.116 372.07 47.618 A 5.826 5.826 0 0 0 372.083 47.808 C 372.083 47.852 372.083 48.017 372.046 48.229 A 2.467 2.467 0 0 1 372.034 48.296 C 372.034 48.737 371.954 49.336 371.867 50.059 A 78.398 78.398 0 0 0 371.838 50.298 A 29.276 29.276 0 0 1 371.656 51.706 A 12.257 12.257 0 0 1 371.448 52.74 A 2.89 2.89 0 0 1 371.416 52.922 C 371.374 53.122 371.319 53.28 371.279 53.396 A 6.099 6.099 0 0 0 371.252 53.472 A 3.968 3.968 0 0 1 371.145 53.577 C 371.105 53.614 371.069 53.643 371.04 53.658 A 0.074 0.074 0 0 1 371.008 53.667 A 0.565 0.565 0 0 1 370.97 53.685 C 370.896 53.715 370.848 53.709 370.764 53.667 L 370.618 53.667 A 0.081 0.081 0 0 0 370.561 53.692 C 370.542 53.711 370.527 53.74 370.522 53.781 A 0.26 0.26 0 0 0 370.52 53.814 A 0.396 0.396 0 0 0 370.492 53.893 C 370.472 53.972 370.462 54.071 370.437 54.19 A 1.82 1.82 0 0 1 370.422 54.253 C 370.227 55.669 370.032 56.841 369.934 57.72 C 369.852 58.416 369.805 59.01 369.791 59.442 A 7.616 7.616 0 0 0 369.788 59.673 A 4.65 4.65 0 0 0 369.797 59.977 C 369.813 60.224 369.851 60.418 369.91 60.586 A 1.644 1.644 0 0 0 369.934 60.65 A 1.255 1.255 0 0 0 370.358 61.037 A 1.165 1.165 0 0 0 370.471 61.089 C 370.764 61.187 371.008 61.236 371.204 61.236 A 1.869 1.869 0 0 1 371.309 61.213 C 371.364 61.202 371.416 61.195 371.466 61.187 A 1.348 1.348 0 0 0 371.692 61.138 C 371.736 61.094 371.82 61.09 371.872 61.089 A 1.946 1.946 0 0 1 371.887 61.089 A 0.131 0.131 0 0 1 371.961 61.054 C 371.999 61.049 372.039 61.057 372.069 61.078 A 0.109 0.109 0 0 1 372.083 61.089 A 0.573 0.573 0 0 0 372.143 61.115 C 372.219 61.142 372.288 61.158 372.327 61.236 A 0.95 0.95 0 0 1 372.399 61.314 C 372.413 61.331 372.427 61.35 372.441 61.373 A 0.713 0.713 0 0 1 372.473 61.431 A 0.326 0.326 0 0 1 372.501 61.463 C 372.54 61.514 372.579 61.584 372.618 61.624 A 0.215 0.215 0 0 0 372.62 61.626 A 0.29 0.29 0 0 0 372.671 61.666 C 372.702 61.686 372.739 61.702 372.779 61.713 A 0.336 0.336 0 0 0 372.864 61.724 A 10.524 10.524 0 0 0 373.612 61.753 A 5.583 5.583 0 0 0 374.866 61.626 C 375.383 61.547 375.739 61.402 375.958 61.193 A 0.902 0.902 0 0 0 376.086 61.04 A 0.374 0.374 0 0 1 376.12 60.987 C 376.188 60.894 376.323 60.78 376.526 60.699 A 1.712 1.712 0 0 1 377.209 60.406 A 11.962 11.962 0 0 0 377.504 60.329 C 377.561 60.314 377.62 60.296 377.684 60.277 A 8.202 8.202 0 0 0 377.893 60.21 A 3.375 3.375 0 0 0 378.442 60.039 A 18.223 18.223 0 0 0 378.625 59.966 A 11.939 11.939 0 0 1 378.628 59.965 C 378.837 59.882 378.974 59.834 379.039 59.76 A 0.177 0.177 0 0 0 379.065 59.722 A 11.288 11.288 0 0 0 379.135 59.505 C 379.246 59.146 379.43 58.504 379.644 57.537 A 37.897 37.897 0 0 0 379.7 57.281 A 158.477 158.477 0 0 0 380.139 55.157 A 192.098 192.098 0 0 0 380.579 52.886 A 335.871 335.871 0 0 1 380.585 52.848 C 380.825 51.531 381.032 50.443 381.151 49.586 A 15.558 15.558 0 0 0 381.213 49.078 A 13.14 13.14 0 0 1 381.304 48.247 C 381.372 47.751 381.464 47.198 381.555 46.587 A 44.53 44.53 0 0 0 381.736 45.573 C 381.841 44.942 381.934 44.311 382.025 43.645 A 126.626 126.626 0 0 0 382.043 43.511 C 382.181 42.55 382.232 41.674 382.198 40.925 A 8.921 8.921 0 0 0 382.19 40.777 L 382.385 39.849 L 382.971 40.044 A 12.784 12.784 0 0 0 383.415 40.324 C 383.595 40.433 383.789 40.549 383.997 40.679 C 384.345 40.834 384.631 40.988 384.905 41.119 A 5.984 5.984 0 0 0 385.12 41.216 A 5.926 5.926 0 0 1 385.47 41.382 C 385.75 41.525 386.084 41.714 386.487 41.949 A 17.925 17.925 0 0 1 387.915 42.878 A 20.142 20.142 0 0 1 388.245 43.121 A 28.408 28.408 0 0 0 389.409 43.975 C 389.798 44.244 390.168 44.487 390.518 44.706 A 26.736 26.736 0 0 0 391.125 45.074 A 25.909 25.909 0 0 0 392.619 45.889 A 23.251 23.251 0 0 0 393.909 46.49 C 395.374 47.124 396.497 47.613 397.131 48.003 C 397.815 48.394 398.254 48.785 398.499 49.273 C 398.661 49.638 398.823 50.173 398.958 50.876 A 14.136 14.136 0 0 1 399.036 51.324 A 65.421 65.421 0 0 0 400.617 58.024 A 111.115 111.115 0 0 0 400.94 59.136 A 92.654 92.654 0 0 0 401.818 61.842 C 402.107 62.684 402.392 63.461 402.675 64.176 A 32.689 32.689 0 0 0 403.333 65.728 C 404.112 67.433 404.648 68.166 404.99 67.878 A 0.333 0.333 0 0 0 404.993 67.876 A 0.302 0.302 0 0 0 405.02 67.794 C 405.033 67.717 405.021 67.625 404.971 67.531 A 0.544 0.544 0 0 0 404.944 67.486 A 2.947 2.947 0 0 0 404.873 67.384 C 404.78 67.256 404.657 67.112 404.504 66.997 A 3.313 3.313 0 0 1 404.382 66.868 C 404.263 66.736 404.189 66.633 404.114 66.558 C 404.027 66.427 404.017 66.335 404.086 66.317 A 0.109 0.109 0 0 1 404.114 66.314 C 404.158 66.314 404.162 66.192 404.126 66.023 A 1.621 1.621 0 0 0 404.114 65.972 A 1.232 1.232 0 0 0 404.043 65.775 C 403.974 65.62 403.873 65.441 403.772 65.24 C 403.577 64.996 403.479 64.703 403.381 64.458 C 403.296 64.245 403.248 64.106 403.237 64.009 A 0.356 0.356 0 0 1 403.235 63.97 C 403.276 63.848 403.248 63.658 403.181 63.371 A 12.038 12.038 0 0 0 403.137 63.189 A 52.43 52.43 0 0 1 403.009 62.887 C 402.878 62.576 402.703 62.154 402.484 61.623 A 424.756 424.756 0 0 1 402.405 61.431 A 2.221 2.221 0 0 1 402.315 61.222 C 402.251 61.053 402.194 60.851 402.161 60.65 A 1.512 1.512 0 0 1 402.065 60.123 A 6.512 6.512 0 0 1 402.063 59.917 A 1.247 1.247 0 0 0 401.977 59.469 A 1.531 1.531 0 0 0 401.917 59.331 C 401.822 59.142 401.727 58.952 401.587 58.852 A 0.438 0.438 0 0 0 401.575 58.843 C 401.453 58.722 401.366 58.467 401.256 58.105 A 75.222 75.222 0 0 1 401.184 57.867 A 10.232 10.232 0 0 1 401.08 57.11 C 401.048 56.808 401.023 56.488 400.999 56.155 A 131.08 131.08 0 0 1 400.989 56.011 C 400.948 55.434 400.906 54.927 400.865 54.46 A 95.673 95.673 0 0 0 400.842 54.204 C 400.793 53.716 400.696 53.423 400.647 53.277 A 2.576 2.576 0 0 1 400.621 53.223 C 400.569 53.113 400.493 52.923 400.452 52.593 A 81.568 81.568 0 0 1 400.378 51.995 C 400.36 51.839 400.342 51.677 400.323 51.502 A 36.89 36.89 0 0 1 400.305 51.324 A 21.154 21.154 0 0 1 400.289 51.081 C 400.258 50.56 400.262 50.243 400.302 50.069 A 0.682 0.682 0 0 1 400.305 50.054 A 0.528 0.528 0 0 1 400.33 49.978 C 400.383 49.851 400.475 49.825 400.634 49.901 A 0.782 0.782 0 0 1 400.647 49.908 A 0.389 0.389 0 0 1 400.754 50.025 C 400.815 50.12 400.867 50.255 400.916 50.419 A 6.201 6.201 0 0 1 400.989 50.689 A 3.665 3.665 0 0 1 401.141 51.409 A 6.766 6.766 0 0 1 401.184 52.203 A 66.845 66.845 0 0 0 401.221 52.753 C 401.252 53.19 401.283 53.558 401.313 53.882 A 37.714 37.714 0 0 0 401.331 54.058 A 9.09 9.09 0 0 0 401.409 54.646 C 401.448 54.884 401.5 55.137 401.569 55.401 A 8.454 8.454 0 0 0 401.672 55.767 C 401.793 56.29 401.98 57.012 402.261 57.906 A 35.904 35.904 0 0 0 402.454 58.501 A 65.877 65.877 0 0 0 404.158 63.653 A 50.101 50.101 0 0 0 405.676 67.242 C 405.954 67.891 406.056 68.407 406.024 68.751 A 1.11 1.11 0 0 1 406.018 68.804 A 0.478 0.478 0 0 1 406.012 68.887 C 405.975 69.092 405.787 69.051 405.481 68.658 A 2.314 2.314 0 0 0 405.421 68.588 C 405.243 68.391 405.156 68.381 405.107 68.506 A 0.452 0.452 0 0 0 405.09 68.56 C 405.09 68.658 405.188 68.902 405.383 69.195 A 7.922 7.922 0 0 0 405.858 69.956 A 4.263 4.263 0 0 0 406.067 70.22 A 20.115 20.115 0 0 0 406.246 70.455 C 406.443 70.711 406.587 70.876 406.702 70.953 A 1.423 1.423 0 0 0 406.738 70.987 C 406.855 71.097 406.892 71.082 406.849 70.909 A 1.241 1.241 0 0 0 406.848 70.904 C 406.459 69.882 406.361 69.442 406.505 69.68 A 0.824 0.824 0 0 1 406.506 69.683 A 0.29 0.29 0 0 0 406.558 69.723 C 406.589 69.742 406.626 69.759 406.665 69.769 A 0.336 0.336 0 0 0 406.75 69.781 A 0.869 0.869 0 0 0 406.827 69.803 C 406.931 69.827 407.016 69.821 407.13 69.784 A 1.11 1.11 0 0 0 407.141 69.781 A 0.825 0.825 0 0 1 407.326 69.804 C 407.506 69.846 407.735 69.945 408.016 70.12 A 4.218 4.218 0 0 1 408.02 70.122 A 14.777 14.777 0 0 1 408.352 70.366 C 408.601 70.554 408.859 70.766 409.094 71.001 A 3.291 3.291 0 0 1 409.396 71.348 C 409.563 71.57 409.681 71.785 409.778 71.978 C 409.827 72.124 409.924 72.271 410.022 72.369 A 0.28 0.28 0 0 0 410.063 72.429 C 410.114 72.486 410.18 72.515 410.217 72.515 A 0.031 0.031 0 0 0 410.247 72.493 C 410.26 72.463 410.255 72.402 410.233 72.323 A 1.021 1.021 0 0 0 410.217 72.271 C 410.217 72.099 410.179 71.927 410.104 71.721 A 3.371 3.371 0 0 0 410.071 71.636 C 409.991 71.437 409.912 71.271 409.885 71.11 A 0.661 0.661 0 0 1 409.875 71.001 C 409.843 70.872 409.832 70.764 409.857 70.678 A 0.262 0.262 0 0 1 409.924 70.562 C 409.973 70.513 409.875 70.22 409.68 69.732 A 14.926 14.926 0 0 0 409.392 69.059 C 409.253 68.755 409.091 68.429 408.899 68.072 C 408.487 67.33 408.214 66.693 408.051 66.219 A 6.5 6.5 0 0 1 407.971 65.972 A 3.352 3.352 0 0 1 407.854 65.085 A 4.045 4.045 0 0 1 407.922 64.361 A 11.636 11.636 0 0 0 408.044 63.695 C 408.081 63.47 408.118 63.238 408.167 62.994 A 34.252 34.252 0 0 1 408.203 62.645 C 408.221 62.479 408.24 62.325 408.258 62.181 A 25.883 25.883 0 0 1 408.313 61.773 C 408.313 61.285 408.264 60.552 408.118 59.673 A 20.324 20.324 0 0 0 407.766 57.924 A 15.038 15.038 0 0 0 407.532 57.085 A 9.212 9.212 0 0 0 407.422 56.682 C 407.263 56.151 407.104 55.846 406.946 55.767 A 1.28 1.28 0 0 1 406.92 55.74 C 406.869 55.687 406.796 55.595 406.754 55.438 A 0.847 0.847 0 0 1 406.75 55.425 A 0.899 0.899 0 0 1 406.713 55.234 C 406.703 55.14 406.702 55.037 406.702 54.933 A 30.696 30.696 0 0 1 406.702 54.888 A 10.089 10.089 0 0 0 406.698 54.544 A 3.723 3.723 0 0 0 406.653 54.058 A 28.493 28.493 0 0 0 406.584 53.605 A 64.935 64.935 0 0 0 406.506 53.13 C 406.421 52.917 406.41 52.666 406.409 52.443 A 15.553 15.553 0 0 1 406.409 52.349 A 3.115 3.115 0 0 1 406.441 52.202 C 406.47 52.088 406.502 52.002 406.546 51.934 A 0.435 0.435 0 0 1 406.604 51.861 A 0.533 0.533 0 0 1 406.746 51.798 C 406.933 51.742 407.246 51.714 407.727 51.714 A 33.615 33.615 0 0 1 408.616 51.722 C 409.021 51.733 409.457 51.757 409.924 51.812 A 34.408 34.408 0 0 0 412.371 51.92 C 412.491 51.921 412.611 51.922 412.732 51.922 A 40.562 40.562 0 0 0 415.686 51.812 C 417.629 51.673 419.134 51.49 420.283 51.139 A 7.784 7.784 0 0 0 420.471 51.079 L 422.034 50.64 L 420.081 50.591 C 419.493 50.591 418.834 50.519 418.102 50.406 A 31.93 31.93 0 0 1 417.737 50.347 C 416.87 50.203 416.051 50.011 415.372 49.818 A 19.12 19.12 0 0 1 415.344 49.81 A 7.807 7.807 0 0 1 414.939 49.691 C 414.521 49.555 414.255 49.419 414.091 49.283 A 0.931 0.931 0 0 1 414.026 49.224 C 413.977 49.127 413.832 49.078 413.589 49.029 A 5.164 5.164 0 0 0 413.586 49.029 A 92.293 92.293 0 0 0 413.583 49.028 A 19.9 19.9 0 0 1 413.581 49.028 C 413.363 48.991 413.172 48.955 412.948 48.939 A 3.39 3.39 0 0 0 412.708 48.931 A 2.982 2.982 0 0 1 412.379 48.912 C 412.235 48.896 412.081 48.869 411.923 48.828 A 2.982 2.982 0 0 1 411.633 48.736 A 7.077 7.077 0 0 1 411.14 48.494 A 5.86 5.86 0 0 1 410.51 48.101 A 10.036 10.036 0 0 0 410.205 47.905 C 409.959 47.753 409.659 47.585 409.29 47.417 A 10.84 10.84 0 0 0 408.386 47.017 A 10.853 10.853 0 0 0 407.874 46.831 A 30.807 30.807 0 0 1 407.073 46.557 A 8.345 8.345 0 0 1 406.653 46.392 C 406.262 46.246 406.018 46.099 405.92 46.001 C 405.823 45.855 405.676 45.415 405.579 44.683 A 55.323 55.323 0 0 1 405.469 43.8 C 405.408 43.278 405.347 42.705 405.286 42.095 A 43.15 43.15 0 0 0 405.114 39.87 A 121.026 121.026 0 0 0 405.042 39.165 C 404.993 38.287 404.895 37.603 404.846 37.261 A 5.782 5.782 0 0 1 404.757 36.842 C 404.719 36.621 404.7 36.419 404.7 36.236 C 404.664 36.02 404.654 35.857 404.652 35.728 A 6.385 6.385 0 0 1 404.651 35.601 A 0.629 0.629 0 0 0 404.674 35.483 C 404.7 35.259 404.7 34.811 404.7 34.136 C 404.7 33.306 404.7 32.281 404.651 31.06 C 404.504 24.273 404.7 20.171 405.139 18.853 A 8.052 8.052 0 0 0 405.288 18.218 C 405.426 17.487 405.419 16.877 405.269 16.38 A 2.058 2.058 0 0 0 404.163 15.093 A 8.541 8.541 0 0 0 402.994 14.794 C 402.485 14.701 401.93 14.646 401.327 14.646 A 10.063 10.063 0 0 0 400.94 14.654 C 399.709 14.699 398.607 14.872 397.671 15.173 A 8.151 8.151 0 0 0 397.473 15.24 L 395.764 15.923 L 395.667 18.218 A 11.758 11.758 0 0 0 395.645 18.623 C 395.621 19.281 395.635 20.157 395.715 21.197 A 57.266 57.266 0 0 0 396.008 25.201 A 51.507 51.507 0 0 0 396.089 26.163 C 396.176 27.099 396.277 27.959 396.35 28.765 C 396.448 29.888 396.497 30.621 396.545 30.962 A 194.564 194.564 0 0 0 396.832 34.315 A 77.564 77.564 0 0 0 397.034 36.187 A 37.799 37.799 0 0 0 397.091 36.766 C 397.223 38.004 397.38 38.86 397.506 39.305 A 3.568 3.568 0 0 0 397.522 39.361 C 397.62 39.654 397.62 39.996 397.668 40.337 A 3.761 3.761 0 0 1 397.648 40.73 C 397.629 40.909 397.6 41.071 397.571 41.216 A 1.241 1.241 0 0 1 397.512 41.345 C 397.434 41.489 397.345 41.552 397.201 41.558 A 0.55 0.55 0 0 1 397.18 41.558 A 0.187 0.187 0 0 1 397.132 41.567 C 396.994 41.575 396.765 41.465 396.444 41.261 A 8.534 8.534 0 0 1 396.301 41.167 A 6.916 6.916 0 0 1 395.936 40.948 C 395.66 40.771 395.336 40.543 394.97 40.263 A 22.959 22.959 0 0 1 394.446 39.849 A 100.376 100.376 0 0 1 389.989 36.306 A 97.594 97.594 0 0 1 388.489 35.015 C 386.943 33.69 385.757 32.614 384.912 31.768 A 19.253 19.253 0 0 1 384.192 31.011 A 2.639 2.639 0 0 1 383.775 30.538 C 383.602 30.289 383.48 30.026 383.39 29.776 A 4.068 4.068 0 0 1 383.362 29.693 C 383.167 29.204 383.118 28.521 383.167 27.642 C 383.241 27.006 383.345 26.113 383.499 25.006 A 89.045 89.045 0 0 1 383.655 23.931 A 18.212 18.212 0 0 0 383.687 23.645 C 383.789 22.66 383.735 22.261 383.524 22.451 A 0.414 0.414 0 0 0 383.508 22.466 A 0.183 0.183 0 0 1 383.469 22.481 C 383.308 22.519 383.224 22.251 383.216 21.678 A 6.631 6.631 0 0 1 383.215 21.587 C 383.215 21.117 383.238 20.578 383.285 19.97 A 36.645 36.645 0 0 1 383.362 19.097 C 383.508 18.121 383.655 17.193 383.899 16.314 A 7.656 7.656 0 0 0 383.972 15.931 C 384.045 15.496 384.119 14.91 384.192 14.214 A 24.845 24.845 0 0 0 384.387 11.48 C 384.436 10.503 384.485 9.527 384.534 8.501 A 164.406 164.406 0 0 1 384.57 7.733 C 384.595 7.231 384.621 6.784 384.646 6.399 A 42.779 42.779 0 0 1 384.68 5.913 C 384.763 4.921 384.741 4.139 384.643 3.537 A 4.791 4.791 0 0 0 384.583 3.228 A 2.857 2.857 0 0 0 384.5 2.994 C 384.319 2.548 384.097 2.431 383.801 2.642 A 0.76 0.76 0 0 0 383.769 2.723 C 383.724 2.849 383.657 3.083 383.569 3.427 A 38.345 38.345 0 0 0 383.508 3.667 A 30.578 30.578 0 0 0 383.368 4.668 C 383.325 5.022 383.289 5.401 383.264 5.816 A 33.178 33.178 0 0 1 383.11 7.162 C 382.975 8.181 382.781 9.396 382.542 10.805 A 418.125 418.125 0 0 1 382.19 12.847 A 221.002 221.002 0 0 1 381.435 16.953 C 381.167 18.33 380.9 19.629 380.632 20.855 A 150.204 150.204 0 0 1 380.579 21.099 A 86.884 86.884 0 0 0 380.263 22.504 A 46.014 46.014 0 0 0 380.139 23.101 A 45.208 45.208 0 0 0 380.136 23.118 C 380.039 23.605 379.963 24.026 379.895 24.382 A 17.227 17.227 0 0 1 379.797 24.859 C 379.718 25.375 379.639 25.729 379.559 25.923 A 0.627 0.627 0 0 1 379.504 26.031 A 0.088 0.088 0 0 1 379.476 26.065 C 379.419 26.104 379.316 26.057 379.207 25.903 A 1.065 1.065 0 0 1 379.163 25.835 A 0.48 0.48 0 0 1 379.133 25.752 C 379.094 25.612 379.056 25.35 379.017 24.966 A 18.524 18.524 0 0 1 379.016 24.956 A 16.118 16.118 0 0 0 379.005 24.454 C 378.994 24.11 378.984 23.752 379.016 23.394 A 47.887 47.887 0 0 1 379.019 22.773 C 379.022 22.55 379.028 22.342 379.042 22.144 A 6.285 6.285 0 0 1 379.065 21.88 A 8.615 8.615 0 0 1 379.088 21.692 C 379.122 21.432 379.157 21.288 379.192 21.224 A 0.121 0.121 0 0 1 379.211 21.197 A 0.196 0.196 0 0 0 379.244 21.143 C 379.287 21.048 379.347 20.839 379.411 20.487 A 10.207 10.207 0 0 0 379.456 20.22 C 379.553 19.634 379.7 18.902 379.797 18.023 A 126.615 126.615 0 0 1 380.249 14.825 A 56.7 56.7 0 0 1 380.774 11.919 A 47.552 47.552 0 0 0 380.92 11.071 C 380.963 10.809 381.006 10.534 381.049 10.24 A 51.244 51.244 0 0 0 381.067 10.113 C 381.165 9.38 381.262 8.794 381.311 8.208 C 381.353 7.743 381.469 7.24 381.595 6.669 A 51.512 51.512 0 0 0 381.653 6.402 A 7.365 7.365 0 0 1 381.787 5.712 C 381.883 5.315 381.998 4.959 382.092 4.644 A 14.936 14.936 0 0 0 382.322 3.6 A 8.465 8.465 0 0 0 382.434 2.691 C 382.532 1.958 382.581 1.324 382.532 0.787 C 382.532 0.249 382.434 -0.044 382.336 0.005 C 382.291 0.005 382.288 0.005 382.249 0.044 A 4.558 4.558 0 0 0 382.239 0.054 A 0.948 0.948 0 0 0 382.165 0.193 C 382.106 0.326 382.042 0.517 381.965 0.787 A 19.78 19.78 0 0 0 381.897 1.031 A 5.815 5.815 0 0 0 381.758 1.423 C 381.634 1.813 381.521 2.264 381.387 2.741 A 24.402 24.402 0 0 1 381.36 2.837 A 443.946 443.946 0 0 1 380.962 4.453 C 380.161 7.673 379.668 9.458 379.459 9.808 A 0.161 0.161 0 0 1 379.407 9.869 C 379.324 9.951 379.276 9.929 379.264 9.861 A 0.226 0.226 0 0 1 379.26 9.82 A 2.82 2.82 0 0 1 379.263 9.667 C 379.268 9.572 379.281 9.46 379.317 9.324 A 2.117 2.117 0 0 1 379.358 9.185 A 19.044 19.044 0 0 0 379.628 7.633 A 76.833 76.833 0 0 0 379.749 6.695 A 29.966 29.966 0 0 0 379.813 6.144 C 379.859 5.707 379.886 5.339 379.893 5.015 A 7.877 7.877 0 0 0 379.895 4.839 A 2.524 2.524 0 0 0 379.89 4.681 C 379.871 4.379 379.797 4.239 379.719 4.286 A 0.104 0.104 0 0 0 379.7 4.302 C 379.577 4.384 379.489 4.568 379.378 4.826 A 74.971 74.971 0 0 0 379.309 4.986 C 379.211 5.328 379.114 5.718 379.016 6.109 C 378.967 6.548 378.87 7.085 378.723 7.671 A 24.66 24.66 0 0 1 378.531 8.392 A 52.308 52.308 0 0 1 378.284 9.234 A 18.485 18.485 0 0 0 378.119 9.822 C 378.05 10.082 377.982 10.359 377.913 10.649 A 51.864 51.864 0 0 0 377.844 10.943 C 377.698 11.626 377.6 12.212 377.502 12.749 C 377.47 13.202 377.438 13.59 377.42 13.928 A 9.055 9.055 0 0 0 377.405 14.41 A 24.41 24.41 0 0 1 377.402 14.863 C 377.399 15.044 377.392 15.24 377.377 15.45 A 9.176 9.176 0 0 1 377.307 16.119 A 26.444 26.444 0 0 1 377.215 16.749 C 377.103 17.458 376.929 18.401 376.672 19.537 Z M 317.566 59.643 C 317.557 59.621 317.548 59.596 317.544 59.565 A 0.278 0.278 0 0 1 317.542 59.527 A 13.487 13.487 0 0 0 317.513 59.402 C 317.455 59.154 317.398 58.939 317.34 58.759 A 3.888 3.888 0 0 0 317.249 58.501 A 4.753 4.753 0 0 0 317.244 58.477 C 317.219 58.359 317.195 58.264 317.171 58.18 A 5.618 5.618 0 0 0 317.102 57.964 A 0.836 0.836 0 0 1 317.056 57.885 C 317.015 57.806 316.982 57.718 316.945 57.627 A 2.574 2.574 0 0 0 316.858 57.427 A 4.558 4.558 0 0 1 316.848 57.417 C 316.809 57.378 316.809 57.375 316.809 57.329 A 2.558 2.558 0 0 1 316.687 57.03 C 316.65 56.927 316.614 56.817 316.565 56.695 A 1.721 1.721 0 0 1 316.535 56.633 C 316.457 56.459 316.413 56.289 316.37 56.158 C 316.37 55.962 316.223 55.572 316.028 54.937 C 315.833 54.351 315.588 53.619 315.344 52.837 A 2193.943 2193.943 0 0 1 315.298 52.691 A 137.914 137.914 0 0 1 314.612 50.445 C 314.478 49.84 314.366 49.352 314.294 48.946 A 6.69 6.69 0 0 1 314.221 48.443 C 314.172 48.199 314.136 47.967 314.099 47.741 A 11.636 11.636 0 0 0 313.977 47.076 C 313.904 46.746 313.858 46.499 313.819 46.313 A 4.531 4.531 0 0 0 313.782 46.148 C 313.504 45.315 313.194 43.515 312.878 40.747 A 136.948 136.948 0 0 1 312.659 38.677 C 312.54 37.447 312.453 36.411 312.346 35.62 A 12.854 12.854 0 0 0 312.268 35.113 C 312.195 34.49 312.094 33.977 311.987 33.616 A 2.89 2.89 0 0 0 311.877 33.306 A 1.677 1.677 0 0 0 311.784 33.119 C 311.735 33.036 311.683 32.966 311.626 32.908 A 0.64 0.64 0 0 0 311.292 32.72 A 1.887 1.887 0 0 0 311.023 32.645 C 310.605 32.556 309.986 32.525 309.241 32.525 A 21.911 21.911 0 0 0 308.202 32.548 A 13.164 13.164 0 0 0 306.555 32.72 C 305.725 32.818 305.237 32.964 305.09 33.111 A 0.9 0.9 0 0 0 305.048 33.275 C 304.989 33.596 304.955 34.251 304.946 35.275 A 66.944 66.944 0 0 0 304.944 35.845 A 99.722 99.722 0 0 0 304.958 37.489 C 304.979 38.759 305.023 40.176 305.09 41.753 C 305.214 45.049 305.233 47.441 305.148 48.93 A 14.985 14.985 0 0 1 305.09 49.663 A 8.887 8.887 0 0 1 305.07 49.899 C 304.998 50.637 304.846 51.151 304.624 51.45 A 0.707 0.707 0 0 1 304.114 51.763 A 0.349 0.349 0 0 0 304.09 51.764 C 303.987 51.771 303.803 51.823 303.577 51.958 A 8.813 8.813 0 0 0 303.462 52.046 C 303.292 52.178 303.101 52.337 302.942 52.496 C 302.707 52.73 302.403 52.919 302.013 53.062 A 4.349 4.349 0 0 1 301.428 53.228 C 300.793 53.423 300.159 53.472 299.524 53.472 A 3.811 3.811 0 0 1 299.333 53.467 C 299.004 53.451 298.736 53.391 298.527 53.297 A 1.077 1.077 0 0 1 298.206 53.081 A 1.613 1.613 0 0 1 297.872 52.394 C 297.486 51.104 297.197 48.177 297.021 43.646 A 210.239 210.239 0 0 1 296.936 41.021 L 296.741 33.746 L 294.983 33.794 A 6.909 6.909 0 0 0 294.818 33.805 C 294.024 33.869 293.444 34.06 293.079 34.38 A 1.341 1.341 0 0 0 292.98 34.476 C 292.749 34.724 292.577 35.087 292.463 35.553 A 5.406 5.406 0 0 0 292.346 36.236 A 10.551 10.551 0 0 0 292.3 36.604 C 292.286 36.737 292.273 36.881 292.264 37.035 A 8.784 8.784 0 0 0 292.249 37.554 A 11.872 11.872 0 0 1 292.245 37.832 A 30.236 30.236 0 0 1 292.151 39.41 A 17.497 17.497 0 0 0 292.133 39.474 C 292.041 39.8 291.946 40.163 291.809 40.484 C 291.711 40.728 291.614 41.021 291.565 41.265 A 7.033 7.033 0 0 0 291.488 41.664 A 5.08 5.08 0 0 0 291.418 42.486 A 18.379 18.379 0 0 1 291.387 42.749 C 291.364 42.939 291.337 43.114 291.304 43.29 A 6.565 6.565 0 0 1 291.223 43.658 A 32.103 32.103 0 0 1 290.94 44.836 C 290.845 45.2 290.748 45.535 290.647 45.843 A 10.269 10.269 0 0 1 290.295 46.783 A 13.802 13.802 0 0 1 290.218 46.972 C 289.96 47.591 289.75 47.959 289.661 48.003 C 289.563 48.052 289.465 48.247 289.417 48.589 A 1.476 1.476 0 0 0 289.365 48.799 C 289.319 49.059 289.319 49.371 289.319 49.712 C 289.319 50.152 289.319 50.542 289.27 50.835 A 2.758 2.758 0 0 1 289.222 50.988 C 289.169 51.14 289.115 51.237 289.062 51.286 A 0.126 0.126 0 0 1 288.977 51.324 C 288.9 51.324 288.823 51.354 288.77 51.439 A 0.372 0.372 0 0 0 288.733 51.519 A 0.389 0.389 0 0 0 288.636 51.679 C 288.617 51.739 288.611 51.807 288.621 51.885 A 0.665 0.665 0 0 0 288.635 51.958 C 288.635 52.105 288.586 52.251 288.44 52.398 C 288.342 52.496 288.196 52.544 288.049 52.593 A 1.072 1.072 0 0 0 287.978 52.595 A 0.814 0.814 0 0 0 287.561 52.74 A 1.611 1.611 0 0 0 287.351 52.996 A 2.213 2.213 0 0 0 287.219 53.228 C 287.17 53.374 287.073 53.521 286.975 53.667 A 2.767 2.767 0 0 1 286.944 53.688 C 286.814 53.772 286.72 53.814 286.584 53.814 A 0.141 0.141 0 0 0 286.563 53.823 C 286.44 53.889 286.235 54.182 285.99 54.68 A 10.061 10.061 0 0 0 285.803 55.083 A 32.106 32.106 0 0 0 285.423 55.873 C 285.291 56.155 285.155 56.457 285.014 56.777 A 67.028 67.028 0 0 0 284.485 58.013 L 283.167 61.529 C 282.629 62.896 282.19 63.579 281.848 63.579 A 0.252 0.252 0 0 1 281.664 63.471 C 281.517 63.259 281.564 62.744 281.775 61.895 A 18.807 18.807 0 0 1 281.897 61.431 C 282.043 60.894 282.19 60.406 282.288 59.917 C 282.369 59.511 282.416 59.206 282.402 58.974 A 0.983 0.983 0 0 0 282.385 58.843 A 4.265 4.265 0 0 1 282.415 58.374 C 282.513 57.503 282.852 56.082 283.459 54.058 A 3.398 3.398 0 0 1 283.463 54.035 C 283.513 53.747 283.609 53.413 283.704 53.033 A 36.962 36.962 0 0 1 283.817 52.631 C 283.917 52.278 283.997 51.992 283.997 51.812 A 3.509 3.509 0 0 0 284.014 51.697 C 284.044 51.466 284.039 51.304 283.997 51.177 A 0.402 0.402 0 0 0 283.966 51.126 C 283.911 51.047 283.816 50.973 283.655 50.933 C 283.528 50.87 283.402 50.868 283.289 50.914 A 0.524 0.524 0 0 0 283.118 51.031 A 0.897 0.897 0 0 0 283.098 51.046 C 283.003 51.121 282.932 51.209 282.887 51.31 A 0.736 0.736 0 0 0 282.825 51.617 C 282.793 51.775 282.802 51.933 282.853 52.092 A 1.223 1.223 0 0 0 282.971 52.349 A 0.419 0.419 0 0 1 282.975 52.357 C 283.016 52.444 283.054 52.6 283.002 52.825 A 1.21 1.21 0 0 1 282.971 52.935 A 2.051 2.051 0 0 1 282.936 53.082 C 282.881 53.279 282.795 53.482 282.678 53.716 A 4.038 4.038 0 0 0 282.635 53.805 C 282.539 54.009 282.407 54.327 282.239 54.79 C 282.043 55.279 281.897 55.816 281.75 56.353 C 281.61 56.739 281.52 57.075 281.463 57.342 A 6.047 6.047 0 0 0 281.409 57.622 C 281.381 57.842 281.338 58.046 281.289 58.235 A 6.649 6.649 0 0 1 281.165 58.648 C 281.018 58.941 280.92 59.087 280.823 59.087 A 0.554 0.554 0 0 1 280.786 59.086 C 280.668 59.078 280.623 59.03 280.579 58.941 A 0.331 0.331 0 0 1 280.542 58.788 C 280.542 58.733 280.554 58.672 280.579 58.599 A 67.445 67.445 0 0 0 280.581 58.592 C 280.621 58.472 280.692 58.257 280.794 57.899 A 24.327 24.327 0 0 0 280.872 57.622 A 40.969 40.969 0 0 0 281.091 56.78 A 51.845 51.845 0 0 0 281.311 55.865 A 23.689 23.689 0 0 0 281.458 55.174 C 281.53 54.817 281.59 54.491 281.649 54.22 A 9.729 9.729 0 0 1 281.653 54.204 C 281.702 53.838 281.763 53.496 281.83 53.173 A 23.232 23.232 0 0 1 282.043 52.251 A 296.18 296.18 0 0 1 282.075 52.126 C 282.204 51.609 282.295 51.26 282.385 51.079 A 2.376 2.376 0 0 0 282.415 50.996 C 282.564 50.548 282.798 49.508 283.118 47.954 A 875.533 875.533 0 0 1 283.516 45.735 C 283.696 44.729 283.879 43.688 284.045 42.632 C 284.338 40.777 284.534 39.361 284.583 38.384 A 13.671 13.671 0 0 1 284.655 37.722 A 56.444 56.444 0 0 1 284.827 36.578 C 284.888 36.15 284.949 35.799 285.01 35.489 A 21.529 21.529 0 0 1 285.12 34.966 A 5.676 5.676 0 0 0 285.189 34.713 C 285.252 34.462 285.287 34.244 285.304 34.068 A 2.467 2.467 0 0 0 285.315 33.843 C 285.266 33.599 285.168 33.404 284.924 33.257 A 1.163 1.163 0 0 0 284.859 33.221 C 284.613 33.094 284.248 33.005 283.801 32.915 A 7.265 7.265 0 0 0 283.577 32.896 C 283.179 32.869 282.82 32.882 282.532 32.964 C 282.378 32.964 282.135 32.934 281.801 32.803 A 3.605 3.605 0 0 1 281.506 32.671 A 9.547 9.547 0 0 1 281.388 32.623 C 280.939 32.436 280.483 32.208 279.944 31.939 C 279.541 31.719 279.166 31.472 278.838 31.238 A 16.087 16.087 0 0 1 278.528 31.011 A 5.888 5.888 0 0 1 278.328 30.872 C 278.124 30.724 277.996 30.604 277.935 30.504 A 0.249 0.249 0 0 1 277.893 30.376 A 0.534 0.534 0 0 0 277.885 30.288 C 277.863 30.162 277.801 29.976 277.7 29.729 A 9.441 9.441 0 0 0 277.6 29.497 A 8.428 8.428 0 0 0 277.539 29.303 A 9.289 9.289 0 0 0 277.014 28.033 C 276.736 27.538 276.556 27.103 276.448 26.713 A 3.613 3.613 0 0 1 276.331 26.079 C 276.282 25.591 276.331 24.81 276.526 23.785 C 276.649 22.961 276.808 22.38 276.942 22.043 A 2.129 2.129 0 0 1 277.014 21.88 A 0.932 0.932 0 0 1 277.049 21.808 C 277.115 21.684 277.204 21.589 277.308 21.522 A 0.891 0.891 0 0 1 277.795 21.392 C 277.975 21.392 278.128 21.392 278.293 21.411 A 2.315 2.315 0 0 1 278.479 21.441 C 278.584 21.467 278.675 21.493 278.752 21.527 A 0.536 0.536 0 0 1 278.918 21.636 C 279.139 21.82 279.58 22.003 280.2 22.208 A 26.65 26.65 0 0 0 280.872 22.417 A 16.805 16.805 0 0 0 283.997 23.003 L 285.999 23.247 L 285.706 21.685 C 285.654 21.451 285.602 21.177 285.557 20.875 A 12.291 12.291 0 0 1 285.461 20.025 A 274.826 274.826 0 0 0 285.379 18.971 A 76.755 76.755 0 0 0 285.315 18.218 C 285.281 17.378 285.155 16.699 284.936 16.215 A 1.793 1.793 0 0 0 284.583 15.679 A 3.881 3.881 0 0 1 284.261 15.317 C 284.158 15.184 284.071 15.052 284.003 14.924 A 1.869 1.869 0 0 1 283.85 14.556 C 283.763 14.324 283.745 14.127 283.785 13.974 A 0.443 0.443 0 0 1 283.948 13.726 A 0.435 0.435 0 0 1 283.993 13.707 C 284.111 13.664 284.346 13.616 284.729 13.531 C 285.168 13.433 285.657 13.335 286.243 13.238 C 287.578 13.053 288.262 13.086 288.213 13.378 A 0.246 0.246 0 0 1 288.196 13.433 C 288.196 13.579 288.245 13.726 288.44 13.824 C 288.546 13.895 288.679 13.966 288.855 14.018 A 1.84 1.84 0 0 0 289.075 14.068 C 289.514 14.117 290.002 14.312 290.637 14.605 A 12.519 12.519 0 0 1 292.346 15.679 A 8.087 8.087 0 0 1 292.537 15.822 C 292.813 16.036 293.029 16.233 293.193 16.416 A 2.536 2.536 0 0 1 293.42 16.704 A 3.079 3.079 0 0 1 293.474 16.851 C 293.547 17.063 293.636 17.383 293.729 17.835 A 15.84 15.84 0 0 1 293.811 18.267 A 44.258 44.258 0 0 1 293.884 18.664 C 294.005 19.344 294.12 20.097 294.202 20.953 L 294.592 24.468 L 296.057 24.419 A 7.979 7.979 0 0 0 296.367 24.414 C 296.785 24.398 297.08 24.343 297.278 24.224 C 297.522 24.126 297.668 23.833 297.815 23.394 A 11.163 11.163 0 0 0 297.899 22.915 C 297.944 22.621 297.989 22.272 298.035 21.863 A 47.036 47.036 0 0 0 298.108 21.148 A 11.469 11.469 0 0 1 298.14 20.841 A 30.483 30.483 0 0 1 298.352 19.439 C 298.45 18.804 298.596 18.267 298.694 17.876 A 1.178 1.178 0 0 0 298.708 17.832 C 298.723 17.778 298.733 17.73 298.743 17.687 A 0.637 0.637 0 0 1 298.792 17.535 A 11.49 11.49 0 0 0 298.914 17.143 C 298.994 16.871 299.051 16.644 299.084 16.509 A 28.787 28.787 0 0 1 299.176 16.063 A 7.893 7.893 0 0 1 299.231 15.826 A 5.202 5.202 0 0 0 299.272 15.642 C 299.297 15.524 299.325 15.384 299.361 15.221 A 11.083 11.083 0 0 1 299.426 14.947 C 299.426 14.913 299.426 14.858 299.442 14.795 A 0.437 0.437 0 0 1 299.475 14.703 A 3.475 3.475 0 0 1 299.502 14.524 C 299.524 14.398 299.553 14.283 299.587 14.177 A 1.927 1.927 0 0 1 299.768 13.775 A 1.956 1.956 0 0 1 299.799 13.687 C 299.887 13.462 299.974 13.384 300.061 13.384 A 0.216 0.216 0 0 1 300.115 13.39 C 300.177 13.406 300.208 13.453 300.208 13.531 C 300.256 13.628 300.256 13.775 300.208 13.921 A 0.628 0.628 0 0 0 300.194 13.967 C 300.159 14.107 300.164 14.278 300.208 14.41 C 300.256 14.556 300.305 14.703 300.452 14.751 A 1.139 1.139 0 0 0 300.562 14.82 C 300.929 15.019 301.198 14.854 301.296 14.349 A 2.211 2.211 0 0 0 301.331 14.068 A 2.545 2.545 0 0 0 301.341 14.037 C 301.359 13.981 301.377 13.918 301.395 13.852 A 16.923 16.923 0 0 0 301.477 13.531 A 1.125 1.125 0 0 1 301.509 13.426 C 301.541 13.336 301.58 13.257 301.615 13.181 A 1.367 1.367 0 0 0 301.672 13.042 A 0.716 0.716 0 0 0 301.701 12.995 C 301.758 12.893 301.797 12.769 301.83 12.61 A 4.97 4.97 0 0 0 301.868 12.408 A 1.532 1.532 0 0 0 301.869 12.403 C 301.933 12.209 301.955 12.015 301.976 11.822 A 5.408 5.408 0 0 1 302.014 11.529 A 3.043 3.043 0 0 1 302.029 11.236 C 302.039 11.129 302.055 11.026 302.072 10.933 A 3.11 3.11 0 0 1 302.112 10.747 A 12.512 12.512 0 0 1 302.143 10.685 C 302.221 10.531 302.269 10.454 302.356 10.454 A 0.015 0.015 0 0 1 302.358 10.455 C 302.4 10.46 302.442 10.646 302.484 10.983 A 11.272 11.272 0 0 1 302.502 11.138 C 302.551 11.626 302.551 12.212 302.502 12.896 A 29.605 29.605 0 0 0 302.496 13.141 C 302.472 14.254 302.525 14.926 302.657 15.176 A 0.168 0.168 0 0 0 302.795 15.288 C 302.872 15.288 302.95 15.258 303.027 15.173 A 0.678 0.678 0 0 0 303.088 15.093 C 303.186 14.947 303.186 14.8 303.235 14.556 A 2.347 2.347 0 0 1 303.236 14.481 C 303.246 14.165 303.326 14.234 303.476 14.687 A 8.083 8.083 0 0 1 303.528 14.849 A 2.502 2.502 0 0 0 303.609 15.06 C 303.675 15.21 303.748 15.34 303.812 15.442 A 3.359 3.359 0 0 0 303.87 15.533 A 0.99 0.99 0 0 0 303.883 15.55 C 303.984 15.679 304.084 15.739 304.167 15.763 A 0.334 0.334 0 0 0 304.26 15.777 A 0.181 0.181 0 0 1 304.358 15.804 C 304.432 15.85 304.488 15.958 304.527 16.148 A 2.24 2.24 0 0 1 304.553 16.314 C 304.614 16.527 304.656 16.817 304.691 17.148 A 29.627 29.627 0 0 1 304.749 17.779 A 75.256 75.256 0 0 0 304.809 19.429 C 304.834 19.947 304.864 20.432 304.899 20.886 A 34.55 34.55 0 0 0 305.042 22.369 C 305.121 23.321 305.232 23.951 305.35 24.206 A 0.281 0.281 0 0 0 305.432 24.322 C 305.53 24.419 305.579 24.517 305.579 24.761 A 1.168 1.168 0 0 1 305.605 24.907 C 305.618 25.021 305.619 25.148 305.605 25.289 A 2.869 2.869 0 0 1 305.579 25.494 A 1.969 1.969 0 0 0 305.563 25.56 C 305.487 25.917 305.538 26.186 305.676 26.324 C 305.823 26.47 306.165 26.617 306.75 26.665 A 6.467 6.467 0 0 1 306.89 26.688 C 307.675 26.823 307.908 27.029 307.588 27.24 A 1.013 1.013 0 0 1 307.483 27.3 A 1.965 1.965 0 0 1 307.227 27.464 A 1.455 1.455 0 0 1 306.897 27.593 A 3.371 3.371 0 0 1 306.812 27.626 C 306.606 27.702 306.434 27.74 306.262 27.74 A 0.682 0.682 0 0 0 305.959 27.846 C 305.776 27.966 305.641 28.182 305.539 28.494 A 3.678 3.678 0 0 0 305.432 28.912 A 3.426 3.426 0 0 0 305.409 29.076 C 305.382 29.311 305.374 29.534 305.334 29.693 L 305.334 30.083 A 0.084 0.084 0 0 1 305.336 30.083 C 305.382 30.084 305.648 30.121 306.103 30.13 A 10.218 10.218 0 0 0 306.311 30.132 C 306.897 30.132 307.629 30.181 308.508 30.181 L 311.633 30.23 L 311.731 28.912 A 5.115 5.115 0 0 0 311.732 28.898 C 311.769 28.478 311.746 28.148 311.687 27.934 A 0.805 0.805 0 0 0 311.633 27.788 A 0.729 0.729 0 0 0 311.445 27.522 C 311.316 27.403 311.135 27.31 310.901 27.251 C 310.544 27.132 310.316 27.046 310.243 26.991 A 0.05 0.05 0 0 1 310.217 26.958 A 0.074 0.074 0 0 1 310.218 26.946 C 310.231 26.869 310.365 26.791 310.619 26.688 A 7.557 7.557 0 0 1 310.803 26.617 A 1.238 1.238 0 0 0 310.997 26.563 A 0.597 0.597 0 0 0 311.34 26.275 C 311.414 26.165 311.459 26 311.498 25.78 A 7.3 7.3 0 0 0 311.536 25.542 A 34.756 34.756 0 0 0 311.535 25.218 C 311.533 25.017 311.528 24.782 311.515 24.506 A 19.309 19.309 0 0 0 311.487 24.029 C 311.389 22.369 311.438 20.611 311.584 18.706 C 311.722 17.402 311.883 16.29 312.086 15.406 A 9.391 9.391 0 0 1 312.366 14.41 C 312.476 14.117 312.585 13.824 312.675 13.592 A 19.018 19.018 0 0 1 312.756 13.384 A 6.532 6.532 0 0 0 312.759 13.38 C 312.871 13.155 312.925 13.018 312.966 12.967 A 0.048 0.048 0 0 1 313 12.945 C 314.076 12.687 314.924 12.58 315.544 12.592 A 4.138 4.138 0 0 1 315.784 12.603 A 4.061 4.061 0 0 1 316.087 12.662 C 316.494 12.757 316.958 12.924 317.5 13.173 A 15.711 15.711 0 0 1 318.225 13.531 C 320.276 14.507 321.448 15.288 321.79 15.923 A 1.343 1.343 0 0 1 321.884 16.17 C 322.029 16.702 321.889 17.4 321.463 18.264 A 9.554 9.554 0 0 1 321.057 18.999 A 8.11 8.11 0 0 0 321.025 19.064 C 320.697 19.735 320.416 20.542 320.227 21.441 C 320.081 22.137 319.989 23.107 319.952 24.352 A 45.622 45.622 0 0 0 319.934 25.689 C 319.885 27.642 319.934 30.376 320.032 33.941 C 320.142 40.052 320.419 44.691 320.842 47.902 A 30.466 30.466 0 0 0 321.301 50.591 A 5.312 5.312 0 0 0 321.305 50.614 C 321.354 50.953 321.451 51.384 321.594 51.91 A 34.42 34.42 0 0 0 321.704 52.533 A 66.912 66.912 0 0 0 321.887 53.472 A 6.717 6.717 0 0 0 321.926 53.653 A 12.556 12.556 0 0 0 322.278 54.839 A 7.14 7.14 0 0 0 322.32 54.95 C 322.407 55.169 322.493 55.355 322.58 55.506 A 2.042 2.042 0 0 0 322.717 55.718 C 322.794 55.833 322.929 56.156 323.102 56.641 A 24.363 24.363 0 0 1 323.254 57.085 A 1511.17 1511.17 0 0 0 323.409 57.661 C 323.489 57.96 323.572 58.277 323.654 58.606 A 28.845 28.845 0 0 1 323.889 59.624 A 176.485 176.485 0 0 1 324.052 60.283 C 324.126 60.584 324.196 60.869 324.263 61.142 A 58.893 58.893 0 0 0 324.524 62.163 A 51.543 51.543 0 0 0 324.568 62.295 C 324.735 62.792 324.853 63.115 324.941 63.301 A 1.054 1.054 0 0 0 325.012 63.433 A 0.977 0.977 0 0 1 325.099 63.591 A 0.712 0.712 0 0 1 325.159 63.872 C 325.159 64.027 325.128 64.15 325.067 64.292 A 2.281 2.281 0 0 1 325.012 64.41 C 324.836 64.762 324.659 64.797 324.519 64.44 A 1.624 1.624 0 0 1 324.475 64.312 A 3.015 3.015 0 0 0 324.452 64.267 A 1.706 1.706 0 0 0 324.133 63.824 C 323.993 63.753 323.878 63.708 323.752 63.689 A 0.998 0.998 0 0 0 323.596 63.677 A 0.724 0.724 0 0 1 323.512 63.672 C 323.44 63.664 323.371 63.646 323.31 63.624 A 0.948 0.948 0 0 1 323.206 63.579 A 0.801 0.801 0 0 1 323.18 63.562 C 323.115 63.515 323.072 63.468 323.046 63.421 A 0.268 0.268 0 0 1 323.01 63.287 C 323.01 63.208 323.024 63.158 323.045 63.12 A 0.337 0.337 0 0 1 323.108 63.042 A 0.366 0.366 0 0 1 323.138 63.029 C 323.21 63.001 323.281 63.002 323.353 63.051 A 0.34 0.34 0 0 1 323.401 63.091 A 0.41 0.41 0 0 0 323.456 63.114 A 0.739 0.739 0 0 0 323.694 63.14 C 323.743 63.091 323.792 62.994 323.792 62.896 A 0.615 0.615 0 0 0 323.791 62.866 C 323.789 62.828 323.783 62.793 323.774 62.762 A 0.248 0.248 0 0 0 323.645 62.603 A 0.239 0.239 0 0 0 323.564 62.51 C 323.534 62.49 323.499 62.475 323.458 62.467 A 0.507 0.507 0 0 0 323.352 62.456 A 1.738 1.738 0 0 1 323.26 62.455 C 323.23 62.453 323.202 62.45 323.177 62.444 A 0.148 0.148 0 0 1 323.108 62.408 A 0.987 0.987 0 0 0 323.086 62.366 C 323.075 62.347 323.065 62.329 323.055 62.313 A 0.773 0.773 0 0 1 323.055 62.312 A 1.021 1.021 0 0 1 323.054 62.311 M 342.981 36.578 L 343.958 34.478 L 344.446 35.992 A 11.542 11.542 0 0 1 344.611 36.467 A 41.333 41.333 0 0 1 344.885 37.359 C 344.952 37.692 345.018 38.002 345.07 38.274 A 8.319 8.319 0 0 1 345.129 38.628 C 345.177 38.958 345.315 39.561 345.587 40.349 A 15.735 15.735 0 0 0 345.618 40.435 C 345.862 41.265 346.155 42.144 346.497 43.072 A 93.243 93.243 0 0 1 347.015 44.53 A 130.444 130.444 0 0 0 347.571 46.099 C 347.913 47.222 348.206 48.15 348.45 48.882 C 348.694 49.663 348.987 50.542 349.329 51.568 A 157.562 157.562 0 0 1 349.846 52.877 C 350.006 53.288 350.156 53.678 350.295 54.048 A 93.748 93.748 0 0 1 350.354 54.204 A 47.68 47.68 0 0 1 350.842 55.376 A 47.68 47.68 0 0 0 351.331 56.548 A 207.965 207.965 0 0 0 351.54 57.105 C 351.735 57.619 351.897 58.042 352.006 58.334 A 49.529 49.529 0 0 1 352.014 58.355 A 43.661 43.661 0 0 0 352.591 59.702 C 353.068 60.77 353.668 62.008 354.407 63.384 A 105.921 105.921 0 0 0 355.579 65.568 C 356.213 66.712 356.824 67.742 357.434 68.658 A 26.633 26.633 0 0 0 357.87 69.308 C 358.292 69.918 358.632 70.342 358.89 70.602 A 3.413 3.413 0 0 0 358.899 70.611 A 2.093 2.093 0 0 0 359.066 70.782 C 359.337 71.029 359.574 71.083 359.778 71.001 A 3.598 3.598 0 0 1 360.446 70.757 C 360.962 70.618 361.595 70.53 362.317 70.464 A 0.519 0.519 0 0 0 362.428 70.407 C 362.589 70.304 362.828 70.079 363.098 69.732 C 363.391 69.366 363.657 68.999 363.936 68.592 A 39.712 39.712 0 0 0 364.221 68.169 A 14.363 14.363 0 0 0 364.539 67.598 C 364.719 67.253 364.857 66.944 364.954 66.656 A 0.772 0.772 0 0 0 365.006 66.403 C 365.013 66.251 364.987 66.081 364.942 65.884 A 7.043 7.043 0 0 0 364.905 65.728 A 5.231 5.231 0 0 0 364.736 65.295 C 364.623 65.037 364.476 64.737 364.294 64.385 A 53.668 53.668 0 0 0 364.026 63.872 C 363.689 63.237 363.21 62.43 362.587 61.429 A 143.604 143.604 0 0 0 361.975 60.454 A 15.611 15.611 0 0 1 361.533 59.681 C 361.409 59.451 361.283 59.208 361.154 58.953 A 128.432 128.432 0 0 1 360.754 58.16 A 81.946 81.946 0 0 0 360.744 58.138 C 360.309 57.22 359.922 56.445 359.631 55.718 A 32.132 32.132 0 0 0 359.167 54.571 A 32.132 32.132 0 0 1 358.704 53.423 C 358.444 52.868 358.241 52.368 358.073 51.968 A 18.849 18.849 0 0 0 357.922 51.617 A 7.033 7.033 0 0 1 357.521 50.723 C 357.489 50.642 357.458 50.559 357.425 50.475 A 21.852 21.852 0 0 0 357.336 50.249 A 8.107 8.107 0 0 1 357.186 49.84 C 357.098 49.58 357.034 49.356 356.975 49.167 A 5.954 5.954 0 0 0 356.946 49.078 A 2.243 2.243 0 0 0 356.765 48.532 A 9.543 9.543 0 0 0 356.604 48.199 A 3.177 3.177 0 0 0 356.48 47.974 C 356.377 47.803 356.274 47.674 356.17 47.569 A 1.859 1.859 0 0 0 356.165 47.564 A 1.176 1.176 0 0 1 355.964 47.394 C 355.894 47.321 355.83 47.234 355.779 47.134 A 1.093 1.093 0 0 1 355.774 47.124 C 355.677 46.979 355.628 46.785 355.627 46.687 A 0.29 0.29 0 0 1 355.627 46.685 A 0.817 0.817 0 0 0 355.613 46.539 C 355.59 46.41 355.535 46.242 355.432 46.001 A 3.951 3.951 0 0 0 355.32 45.67 C 355.256 45.503 355.183 45.336 355.109 45.149 A 8.823 8.823 0 0 1 355.042 44.976 A 4.903 4.903 0 0 1 354.728 44.297 A 11.791 11.791 0 0 1 354.553 43.804 A 22.76 22.76 0 0 1 354.452 43.455 C 354.373 43.178 354.309 42.935 354.248 42.713 A 17.614 17.614 0 0 0 354.211 42.583 A 5.536 5.536 0 0 0 354.052 41.801 A 8.473 8.473 0 0 0 353.918 41.363 A 6.638 6.638 0 0 0 353.738 40.889 C 353.648 40.674 353.554 40.473 353.472 40.286 A 10.091 10.091 0 0 1 353.43 40.191 C 352.9 39.171 352.302 37.743 351.635 35.906 A 85.772 85.772 0 0 1 351.233 34.771 A 117.798 117.798 0 0 1 349.245 28.122 A 73.56 73.56 0 0 1 349.133 27.691 C 348.662 25.988 348.379 24.634 348.245 23.63 A 10.924 10.924 0 0 1 348.157 22.71 A 5.285 5.285 0 0 1 348.445 21.062 A 9.384 9.384 0 0 1 348.792 20.171 A 11.508 11.508 0 0 1 349.119 19.528 C 349.343 19.12 349.558 18.791 349.744 18.531 A 9.141 9.141 0 0 1 349.866 18.365 A 2.63 2.63 0 0 0 350.089 18.037 C 350.183 17.873 350.267 17.687 350.327 17.487 A 2.323 2.323 0 0 0 350.354 17.388 A 3.879 3.879 0 0 0 350.431 16.877 C 350.452 16.639 350.452 16.419 350.452 16.216 C 350.418 15.977 350.336 15.834 350.223 15.769 A 0.32 0.32 0 0 0 350.061 15.728 C 349.984 15.728 349.907 15.667 349.807 15.57 A 7.196 7.196 0 0 1 349.719 15.484 A 1.206 1.206 0 0 1 349.511 15.193 C 349.47 15.115 349.431 15.03 349.394 14.938 A 5.202 5.202 0 0 1 349.377 14.898 A 3.322 3.322 0 0 0 349.085 14.417 C 348.988 14.284 348.875 14.152 348.743 14.019 A 1.353 1.353 0 0 0 348.368 13.762 C 348.158 13.662 347.906 13.588 347.62 13.531 A 6.832 6.832 0 0 1 345.202 12.794 A 8.577 8.577 0 0 1 344.934 12.652 C 344.149 12.19 343.626 11.684 343.365 11.217 A 1.95 1.95 0 0 1 343.323 11.138 C 343.222 10.802 343.029 10.582 342.791 10.477 A 0.856 0.856 0 0 0 342.444 10.406 A 1.112 1.112 0 0 0 341.946 10.513 C 341.794 10.588 341.664 10.704 341.561 10.864 A 1.318 1.318 0 0 0 341.467 11.04 C 341.388 11.238 341.31 11.626 341.256 12.283 A 16.821 16.821 0 0 0 341.223 12.798 C 341.125 13.726 341.077 14.8 341.077 16.021 A 1.576 1.576 0 0 0 341.045 16.183 C 341.035 16.251 341.031 16.313 341.029 16.373 A 4.423 4.423 0 0 0 341.028 16.509 L 341.028 16.753 L 341.028 16.9 L 341.077 16.949 L 341.125 16.997 L 341.125 17.046 C 341.125 17.046 341.125 17.095 341.077 17.095 L 341.077 17.242 A 0.322 0.322 0 0 1 341.061 17.27 C 341.017 17.339 340.974 17.334 340.93 17.29 A 0.387 0.387 0 0 1 340.812 17.191 C 340.774 17.148 340.737 17.098 340.688 17.048 A 0.855 0.855 0 0 0 340.686 17.046 A 0.765 0.765 0 0 0 340.622 16.909 C 340.576 16.827 340.523 16.752 340.491 16.656 L 340.198 16.216 C 340.151 16.123 340.06 16.03 340.01 16.022 A 0.043 0.043 0 0 0 340.002 16.021 A 0.081 0.081 0 0 0 339.989 16.01 C 339.945 15.982 339.905 16.034 339.905 16.167 A 9.865 9.865 0 0 0 339.828 16.832 C 339.792 17.252 339.77 17.749 339.762 18.336 A 39.924 39.924 0 0 0 339.758 18.902 A 854.933 854.933 0 0 0 339.832 20.69 A 504.962 504.962 0 0 0 339.905 22.369 A 43.738 43.738 0 0 0 339.969 23.049 C 340.029 23.637 340.09 24.071 340.15 24.34 A 1.871 1.871 0 0 0 340.198 24.517 C 340.392 25.051 339.958 27.179 338.945 30.852 A 150.646 150.646 0 0 1 338.928 30.913 A 95.499 95.499 0 0 0 338.918 30.951 C 338.651 31.931 338.42 32.838 338.203 33.662 A 58.278 58.278 0 0 1 337.805 35.113 A 116.475 116.475 0 0 0 337.702 35.545 C 337.525 36.297 337.418 36.791 337.38 37.029 A 1.003 1.003 0 0 0 337.366 37.163 C 337.366 37.31 337.366 37.456 337.268 37.554 A 0.841 0.841 0 0 1 337.2 37.674 C 337.167 37.718 337.128 37.749 337.073 37.749 C 336.926 37.749 336.78 38.189 336.487 39.068 A 27.561 27.561 0 0 0 336.256 40.022 C 336.085 40.782 335.907 41.674 335.706 42.681 C 335.665 42.804 335.624 42.96 335.583 43.122 A 62.233 62.233 0 0 0 335.559 43.218 A 4.053 4.053 0 0 0 335.484 43.423 C 335.44 43.553 335.408 43.665 335.378 43.759 A 2.977 2.977 0 0 1 335.364 43.804 C 335.168 44.244 334.778 45.415 334.143 47.369 A 413.823 413.823 0 0 1 333.167 50.31 A 146.227 146.227 0 0 0 332.19 53.326 A 190.771 190.771 0 0 0 331.75 54.662 C 331.39 55.767 331.128 56.614 330.964 57.192 A 20.336 20.336 0 0 0 330.872 57.525 C 330.872 57.569 330.832 57.651 330.824 57.703 A 0.109 0.109 0 0 0 330.823 57.72 A 18.834 18.834 0 0 0 330.697 58.113 C 330.623 58.352 330.566 58.552 330.515 58.723 A 8.484 8.484 0 0 1 330.432 58.99 C 330.39 59.199 330.312 59.409 330.26 59.557 A 4.244 4.244 0 0 0 330.237 59.624 C 330.193 59.755 330.15 59.925 330.071 60.099 A 1.721 1.721 0 0 1 330.042 60.162 L 330.042 60.259 C 329.785 60.9 329.641 61.317 329.609 61.607 A 1.068 1.068 0 0 0 329.602 61.724 C 329.563 61.917 329.617 62.049 329.762 62.145 A 0.753 0.753 0 0 0 329.895 62.212 A 0.63 0.63 0 0 1 329.946 62.235 C 330.11 62.318 330.025 62.396 329.72 62.407 A 2.096 2.096 0 0 1 329.651 62.408 C 329.407 62.408 329.211 62.554 329.114 62.847 A 4.155 4.155 0 0 0 329.082 63.088 C 329.052 63.371 329.027 63.792 329.019 64.337 A 24.788 24.788 0 0 0 329.016 64.703 A 18.047 18.047 0 0 1 329.001 65.396 C 328.989 65.695 328.975 65.982 328.969 66.257 A 10.484 10.484 0 0 0 328.967 66.46 A 25.479 25.479 0 0 1 328.935 66.817 C 328.904 67.139 328.872 67.38 328.841 67.541 A 1.845 1.845 0 0 1 328.821 67.632 A 1.628 1.628 0 0 0 328.807 67.685 C 328.743 67.941 328.882 67.749 329.224 67.071 A 24.656 24.656 0 0 0 329.26 66.997 A 18.926 18.926 0 0 1 329.414 66.733 C 329.575 66.463 329.749 66.18 329.895 65.923 C 330.066 65.624 330.237 65.4 330.375 65.251 A 2.097 2.097 0 0 1 330.432 65.191 C 330.568 65.054 330.663 64.834 330.793 64.567 A 8.537 8.537 0 0 1 330.823 64.507 A 2.404 2.404 0 0 0 331.116 63.677 A 38.974 38.974 0 0 1 331.236 63.247 C 331.348 62.853 331.485 62.399 331.661 61.884 A 26.7 26.7 0 0 1 331.75 61.626 A 54.864 54.864 0 0 1 332.3 60.219 A 46.133 46.133 0 0 1 332.629 59.429 C 332.971 58.794 333.167 58.404 333.264 58.306 A 0.133 0.133 0 0 0 333.319 58.295 C 333.38 58.268 333.411 58.198 333.411 58.16 C 333.445 58.091 333.431 58.023 333.403 57.954 A 1.326 1.326 0 0 0 333.362 57.867 C 333.321 57.703 333.383 57.298 333.549 56.594 A 32.386 32.386 0 0 1 333.655 56.158 A 86.818 86.818 0 0 1 334.044 54.723 A 51.109 51.109 0 0 1 334.534 53.081 A 54.999 54.999 0 0 1 334.782 52.286 C 335.022 51.537 335.242 50.933 335.461 50.494 C 335.608 50.201 335.754 49.761 335.95 49.126 C 336.145 48.492 336.34 47.857 336.487 47.271 C 336.628 46.66 336.724 46.23 336.774 45.937 A 5.852 5.852 0 0 0 336.78 45.904 C 336.78 45.806 336.877 45.562 337.024 45.22 A 6.269 6.269 0 0 1 337.18 44.748 A 6.751 6.751 0 0 1 337.463 44.097 C 337.659 43.658 337.805 43.218 337.952 42.828 C 338.072 42.465 338.16 42.169 338.214 41.94 A 4.012 4.012 0 0 0 338.245 41.802 A 1.672 1.672 0 0 1 338.327 41.273 A 1.22 1.22 0 0 1 338.391 41.119 A 4.164 4.164 0 0 1 338.438 40.908 C 338.475 40.763 338.519 40.649 338.586 40.581 C 338.627 40.5 338.702 40.35 338.754 40.132 A 2.017 2.017 0 0 0 338.782 39.996 A 4.975 4.975 0 0 0 338.922 39.599 A 3.446 3.446 0 0 0 339.026 39.165 C 339.101 38.941 339.175 38.745 339.25 38.578 A 3.759 3.759 0 0 1 339.319 38.433 C 339.435 38.239 339.521 38.137 339.6 38.104 A 0.154 0.154 0 0 1 339.661 38.091 A 0.075 0.075 0 0 1 339.734 38.151 C 339.753 38.204 339.757 38.292 339.758 38.415 A 15.263 15.263 0 0 1 339.758 38.531 A 5.321 5.321 0 0 1 339.698 38.832 C 339.671 38.952 339.638 39.082 339.599 39.22 A 9.75 9.75 0 0 1 339.465 39.654 A 85.525 85.525 0 0 0 339.252 40.227 C 339.218 40.319 339.186 40.407 339.156 40.491 A 13.331 13.331 0 0 0 339.075 40.728 A 8.256 8.256 0 0 0 339.025 40.882 C 338.965 41.076 338.932 41.208 338.929 41.256 A 0.112 0.112 0 0 0 338.928 41.265 A 2.969 2.969 0 0 1 338.928 41.335 C 338.925 41.455 338.911 41.666 338.838 41.966 A 4.057 4.057 0 0 1 338.831 41.997 A 12.613 12.613 0 0 1 338.66 42.589 C 338.606 42.766 338.553 42.947 338.508 43.136 A 5.449 5.449 0 0 0 338.489 43.218 A 81.433 81.433 0 0 1 338.486 43.225 C 338.352 43.583 338.259 43.817 338.208 43.965 A 2.808 2.808 0 0 0 338.196 43.999 A 0.431 0.431 0 0 0 338.115 44.12 C 338.067 44.222 338.034 44.355 338 44.488 C 337.952 44.732 337.952 44.976 337.952 45.22 A 5.104 5.104 0 0 0 337.95 45.227 C 337.912 45.381 337.873 45.565 337.81 45.78 A 4.828 4.828 0 0 1 337.756 45.953 A 3.859 3.859 0 0 1 337.498 46.511 A 1.496 1.496 0 0 1 337.415 46.636 C 337.073 47.027 336.975 47.808 337.122 48.98 C 337.172 49.295 337.196 49.601 337.196 49.899 A 5.818 5.818 0 0 1 336.633 52.349 C 336.445 52.773 336.256 53.288 336.112 53.85 A 9.289 9.289 0 0 0 336.096 53.912 C 335.901 54.546 335.803 55.132 335.706 55.621 A 37.786 37.786 0 0 0 335.688 55.796 C 335.61 56.619 335.614 56.903 335.7 56.57 A 2.636 2.636 0 0 0 335.706 56.548 A 3.253 3.253 0 0 0 335.709 56.541 C 335.803 56.352 335.898 56.116 336.037 55.836 A 7.369 7.369 0 0 1 336.047 55.816 A 3.06 3.06 0 0 1 336.302 55.265 A 11.684 11.684 0 0 1 336.438 55.035 A 2.227 2.227 0 0 0 336.619 54.767 C 336.734 54.569 336.85 54.32 336.965 54.02 A 9.096 9.096 0 0 0 337.024 53.863 C 337.268 53.326 337.512 52.74 337.708 52.154 A 14.546 14.546 0 0 0 337.901 51.661 C 338.044 51.278 338.203 50.822 338.387 50.305 A 105.107 105.107 0 0 1 338.635 49.615 A 216.548 216.548 0 0 1 339.807 46.49 A 46.952 46.952 0 0 0 340.604 44.244 A 35.122 35.122 0 0 0 340.833 43.511 A 22.474 22.474 0 0 0 341.02 42.887 C 341.132 42.494 341.211 42.167 341.262 41.894 A 5.204 5.204 0 0 0 341.321 41.509 A 12.568 12.568 0 0 1 341.466 40.465 A 4.753 4.753 0 0 1 341.516 40.24 C 341.59 39.943 341.692 39.619 341.844 39.245 A 9.801 9.801 0 0 1 342.004 38.872 A 13.602 13.602 0 0 1 342.178 38.425 C 342.377 37.933 342.651 37.31 342.981 36.578 Z M 471.985 36.578 L 472.961 34.478 L 473.45 35.992 A 11.542 11.542 0 0 1 473.615 36.467 A 41.333 41.333 0 0 1 473.889 37.359 C 473.956 37.692 474.022 38.002 474.073 38.274 A 8.319 8.319 0 0 1 474.133 38.628 C 474.18 38.958 474.318 39.561 474.591 40.349 A 15.735 15.735 0 0 0 474.622 40.435 C 474.866 41.265 475.159 42.144 475.5 43.072 A 93.243 93.243 0 0 1 476.019 44.53 A 130.444 130.444 0 0 0 476.575 46.099 C 476.917 47.222 477.209 48.15 477.454 48.882 C 477.698 49.663 477.991 50.542 478.333 51.568 A 157.562 157.562 0 0 1 478.85 52.877 C 479.01 53.288 479.16 53.678 479.299 54.048 A 93.748 93.748 0 0 1 479.358 54.204 A 47.68 47.68 0 0 1 479.846 55.376 A 47.68 47.68 0 0 0 480.334 56.548 A 207.965 207.965 0 0 0 480.544 57.105 C 480.739 57.619 480.901 58.042 481.01 58.334 A 49.529 49.529 0 0 1 481.018 58.355 A 43.661 43.661 0 0 0 481.595 59.702 C 482.072 60.77 482.672 62.008 483.411 63.384 A 105.921 105.921 0 0 0 484.583 65.568 C 485.217 66.712 485.828 67.742 486.438 68.658 A 26.633 26.633 0 0 0 486.873 69.308 C 487.296 69.918 487.636 70.342 487.894 70.602 A 3.413 3.413 0 0 0 487.903 70.611 A 2.093 2.093 0 0 0 488.07 70.782 C 488.341 71.029 488.578 71.083 488.782 71.001 A 3.598 3.598 0 0 1 489.45 70.757 C 489.965 70.618 490.599 70.53 491.321 70.464 A 0.519 0.519 0 0 0 491.432 70.407 C 491.593 70.304 491.832 70.079 492.102 69.732 C 492.395 69.366 492.661 68.999 492.94 68.592 A 39.712 39.712 0 0 0 493.225 68.169 A 14.363 14.363 0 0 0 493.543 67.598 C 493.723 67.253 493.861 66.944 493.958 66.656 A 0.772 0.772 0 0 0 494.01 66.403 C 494.017 66.251 493.99 66.081 493.946 65.884 A 7.043 7.043 0 0 0 493.909 65.728 A 5.231 5.231 0 0 0 493.739 65.295 C 493.627 65.037 493.48 64.737 493.298 64.385 A 53.668 53.668 0 0 0 493.03 63.872 C 492.693 63.237 492.214 62.43 491.591 61.429 A 143.604 143.604 0 0 0 490.979 60.454 A 15.611 15.611 0 0 1 490.537 59.681 C 490.413 59.451 490.287 59.208 490.157 58.953 A 128.432 128.432 0 0 1 489.758 58.16 A 81.946 81.946 0 0 0 489.748 58.138 C 489.313 57.22 488.926 56.445 488.635 55.718 A 32.132 32.132 0 0 0 488.171 54.571 A 32.132 32.132 0 0 1 487.708 53.423 C 487.448 52.868 487.245 52.368 487.077 51.968 A 18.849 18.849 0 0 0 486.926 51.617 A 7.033 7.033 0 0 1 486.525 50.723 C 486.493 50.642 486.461 50.559 486.429 50.475 A 21.852 21.852 0 0 0 486.34 50.249 A 8.107 8.107 0 0 1 486.19 49.84 C 486.101 49.58 486.038 49.356 485.979 49.167 A 5.954 5.954 0 0 0 485.95 49.078 A 2.243 2.243 0 0 0 485.769 48.532 A 9.543 9.543 0 0 0 485.608 48.199 A 3.177 3.177 0 0 0 485.484 47.974 C 485.381 47.803 485.277 47.674 485.174 47.569 A 1.859 1.859 0 0 0 485.168 47.564 A 1.176 1.176 0 0 1 484.967 47.394 C 484.898 47.321 484.834 47.234 484.783 47.134 A 1.093 1.093 0 0 1 484.778 47.124 C 484.681 46.979 484.632 46.785 484.631 46.687 A 0.29 0.29 0 0 1 484.631 46.685 A 0.817 0.817 0 0 0 484.617 46.539 C 484.594 46.41 484.539 46.242 484.436 46.001 A 3.951 3.951 0 0 0 484.324 45.67 C 484.26 45.503 484.187 45.336 484.113 45.149 A 8.823 8.823 0 0 1 484.045 44.976 A 4.903 4.903 0 0 1 483.732 44.297 A 11.791 11.791 0 0 1 483.557 43.804 A 22.76 22.76 0 0 1 483.456 43.455 C 483.377 43.178 483.313 42.935 483.252 42.713 A 17.614 17.614 0 0 0 483.215 42.583 A 5.536 5.536 0 0 0 483.056 41.801 A 8.473 8.473 0 0 0 482.922 41.363 A 6.638 6.638 0 0 0 482.742 40.889 C 482.652 40.674 482.558 40.473 482.475 40.286 A 10.091 10.091 0 0 1 482.434 40.191 C 481.904 39.171 481.306 37.743 480.639 35.906 A 85.772 85.772 0 0 1 480.237 34.771 A 117.798 117.798 0 0 1 478.249 28.122 A 73.56 73.56 0 0 1 478.137 27.691 C 477.666 25.988 477.383 24.634 477.249 23.63 A 10.924 10.924 0 0 1 477.161 22.71 A 5.285 5.285 0 0 1 477.448 21.062 A 9.384 9.384 0 0 1 477.795 20.171 A 11.508 11.508 0 0 1 478.123 19.528 C 478.347 19.12 478.562 18.791 478.747 18.531 A 9.141 9.141 0 0 1 478.87 18.365 A 2.63 2.63 0 0 0 479.093 18.037 C 479.187 17.873 479.271 17.687 479.331 17.487 A 2.323 2.323 0 0 0 479.358 17.388 A 3.879 3.879 0 0 0 479.435 16.877 C 479.456 16.639 479.456 16.419 479.456 16.216 C 479.421 15.977 479.34 15.834 479.227 15.769 A 0.32 0.32 0 0 0 479.065 15.728 C 478.988 15.728 478.911 15.667 478.81 15.57 A 7.196 7.196 0 0 1 478.723 15.484 A 1.206 1.206 0 0 1 478.515 15.193 C 478.473 15.115 478.435 15.03 478.398 14.938 A 5.202 5.202 0 0 1 478.381 14.898 A 3.322 3.322 0 0 0 478.089 14.417 C 477.992 14.284 477.879 14.152 477.747 14.019 A 1.353 1.353 0 0 0 477.371 13.762 C 477.162 13.662 476.91 13.588 476.624 13.531 A 6.832 6.832 0 0 1 474.206 12.794 A 8.577 8.577 0 0 1 473.938 12.652 C 473.153 12.19 472.629 11.684 472.369 11.217 A 1.95 1.95 0 0 1 472.327 11.138 C 472.226 10.802 472.033 10.582 471.795 10.477 A 0.856 0.856 0 0 0 471.448 10.406 A 1.112 1.112 0 0 0 470.949 10.513 C 470.798 10.588 470.668 10.704 470.565 10.864 A 1.318 1.318 0 0 0 470.471 11.04 C 470.392 11.238 470.313 11.626 470.26 12.283 A 16.821 16.821 0 0 0 470.227 12.798 C 470.129 13.726 470.081 14.8 470.081 16.021 A 1.576 1.576 0 0 0 470.049 16.183 C 470.039 16.251 470.035 16.313 470.033 16.373 A 4.423 4.423 0 0 0 470.032 16.509 L 470.032 16.753 L 470.032 16.9 L 470.081 16.949 L 470.129 16.997 L 470.129 17.046 C 470.129 17.046 470.129 17.095 470.081 17.095 L 470.081 17.242 A 0.322 0.322 0 0 1 470.064 17.27 C 470.021 17.339 469.978 17.334 469.934 17.29 A 0.387 0.387 0 0 1 469.815 17.191 C 469.778 17.148 469.741 17.098 469.692 17.048 A 0.855 0.855 0 0 0 469.69 17.046 A 0.765 0.765 0 0 0 469.626 16.909 C 469.58 16.827 469.527 16.752 469.495 16.656 L 469.202 16.216 C 469.155 16.123 469.064 16.03 469.014 16.022 A 0.043 0.043 0 0 0 469.006 16.021 A 0.081 0.081 0 0 0 468.993 16.01 C 468.949 15.982 468.909 16.034 468.909 16.167 A 9.865 9.865 0 0 0 468.832 16.832 C 468.796 17.252 468.774 17.749 468.766 18.336 A 39.924 39.924 0 0 0 468.762 18.902 A 854.933 854.933 0 0 0 468.835 20.69 A 504.962 504.962 0 0 0 468.909 22.369 A 43.738 43.738 0 0 0 468.973 23.049 C 469.033 23.637 469.094 24.071 469.154 24.34 A 1.871 1.871 0 0 0 469.202 24.517 C 469.396 25.051 468.962 27.179 467.949 30.852 A 150.646 150.646 0 0 1 467.932 30.913 A 95.499 95.499 0 0 0 467.922 30.951 C 467.655 31.931 467.424 32.838 467.207 33.662 A 58.278 58.278 0 0 1 466.809 35.113 A 116.475 116.475 0 0 0 466.706 35.545 C 466.529 36.297 466.422 36.791 466.384 37.029 A 1.003 1.003 0 0 0 466.37 37.163 C 466.37 37.31 466.37 37.456 466.272 37.554 A 0.841 0.841 0 0 1 466.204 37.674 C 466.171 37.718 466.132 37.749 466.077 37.749 C 465.93 37.749 465.784 38.189 465.491 39.068 A 27.561 27.561 0 0 0 465.26 40.022 C 465.089 40.782 464.911 41.674 464.709 42.681 C 464.669 42.804 464.628 42.96 464.587 43.122 A 62.233 62.233 0 0 0 464.563 43.218 A 4.053 4.053 0 0 0 464.488 43.423 C 464.444 43.553 464.412 43.665 464.382 43.759 A 2.977 2.977 0 0 1 464.368 43.804 C 464.172 44.244 463.782 45.415 463.147 47.369 A 413.823 413.823 0 0 1 462.17 50.31 A 146.227 146.227 0 0 0 461.194 53.326 A 190.771 190.771 0 0 0 460.753 54.662 C 460.394 55.767 460.132 56.614 459.968 57.192 A 20.336 20.336 0 0 0 459.875 57.525 C 459.875 57.569 459.836 57.651 459.828 57.703 A 0.109 0.109 0 0 0 459.827 57.72 A 18.834 18.834 0 0 0 459.701 58.113 C 459.626 58.352 459.57 58.552 459.519 58.723 A 8.484 8.484 0 0 1 459.436 58.99 C 459.394 59.199 459.316 59.409 459.264 59.557 A 4.244 4.244 0 0 0 459.241 59.624 C 459.197 59.755 459.153 59.925 459.075 60.099 A 1.721 1.721 0 0 1 459.045 60.162 L 459.045 60.259 C 458.789 60.9 458.645 61.317 458.613 61.607 A 1.068 1.068 0 0 0 458.606 61.724 C 458.567 61.917 458.62 62.049 458.766 62.145 A 0.753 0.753 0 0 0 458.899 62.212 A 0.63 0.63 0 0 1 458.949 62.235 C 459.114 62.318 459.029 62.396 458.724 62.407 A 2.096 2.096 0 0 1 458.655 62.408 C 458.411 62.408 458.215 62.554 458.118 62.847 A 4.155 4.155 0 0 0 458.086 63.088 C 458.056 63.371 458.031 63.792 458.023 64.337 A 24.788 24.788 0 0 0 458.02 64.703 A 18.047 18.047 0 0 1 458.005 65.396 C 457.993 65.695 457.979 65.982 457.973 66.257 A 10.484 10.484 0 0 0 457.971 66.46 A 25.479 25.479 0 0 1 457.939 66.817 C 457.908 67.139 457.876 67.38 457.845 67.541 A 1.845 1.845 0 0 1 457.825 67.632 A 1.628 1.628 0 0 0 457.811 67.685 C 457.747 67.941 457.886 67.749 458.227 67.071 A 24.656 24.656 0 0 0 458.264 66.997 A 18.926 18.926 0 0 1 458.418 66.733 C 458.578 66.463 458.752 66.18 458.899 65.923 C 459.07 65.624 459.24 65.4 459.379 65.251 A 2.097 2.097 0 0 1 459.436 65.191 C 459.572 65.054 459.666 64.834 459.797 64.567 A 8.537 8.537 0 0 1 459.827 64.507 A 2.404 2.404 0 0 0 460.12 63.677 A 38.974 38.974 0 0 1 460.239 63.247 C 460.352 62.853 460.489 62.399 460.665 61.884 A 26.7 26.7 0 0 1 460.754 61.626 A 54.864 54.864 0 0 1 461.304 60.219 A 46.133 46.133 0 0 1 461.633 59.429 C 461.975 58.794 462.17 58.404 462.268 58.306 A 0.133 0.133 0 0 0 462.323 58.295 C 462.384 58.268 462.415 58.198 462.415 58.16 C 462.449 58.091 462.435 58.023 462.407 57.954 A 1.326 1.326 0 0 0 462.366 57.867 C 462.325 57.703 462.387 57.298 462.553 56.594 A 32.386 32.386 0 0 1 462.659 56.158 A 86.818 86.818 0 0 1 463.048 54.723 A 51.109 51.109 0 0 1 463.538 53.081 A 54.999 54.999 0 0 1 463.786 52.286 C 464.026 51.537 464.246 50.933 464.465 50.494 C 464.612 50.201 464.758 49.761 464.954 49.126 C 465.149 48.492 465.344 47.857 465.491 47.271 C 465.632 46.66 465.727 46.23 465.778 45.937 A 5.852 5.852 0 0 0 465.784 45.904 C 465.784 45.806 465.881 45.562 466.028 45.22 A 6.269 6.269 0 0 1 466.184 44.748 A 6.751 6.751 0 0 1 466.467 44.097 C 466.663 43.658 466.809 43.218 466.956 42.828 C 467.076 42.465 467.164 42.169 467.218 41.94 A 4.012 4.012 0 0 0 467.249 41.802 A 1.672 1.672 0 0 1 467.331 41.273 A 1.22 1.22 0 0 1 467.395 41.119 A 4.164 4.164 0 0 1 467.442 40.908 C 467.479 40.763 467.523 40.649 467.59 40.581 C 467.631 40.5 467.706 40.35 467.758 40.132 A 2.017 2.017 0 0 0 467.786 39.996 A 4.975 4.975 0 0 0 467.926 39.599 A 3.446 3.446 0 0 0 468.03 39.165 C 468.105 38.941 468.179 38.745 468.254 38.578 A 3.759 3.759 0 0 1 468.323 38.433 C 468.439 38.239 468.525 38.137 468.604 38.104 A 0.154 0.154 0 0 1 468.665 38.091 A 0.075 0.075 0 0 1 468.738 38.151 C 468.757 38.204 468.761 38.292 468.762 38.415 A 15.263 15.263 0 0 1 468.762 38.531 A 5.321 5.321 0 0 1 468.702 38.832 C 468.675 38.952 468.642 39.082 468.603 39.22 A 9.75 9.75 0 0 1 468.469 39.654 A 85.525 85.525 0 0 0 468.256 40.227 C 468.222 40.319 468.19 40.407 468.16 40.491 A 13.331 13.331 0 0 0 468.079 40.728 A 8.256 8.256 0 0 0 468.029 40.882 C 467.968 41.076 467.936 41.208 467.933 41.256 A 0.112 0.112 0 0 0 467.932 41.265 A 2.969 2.969 0 0 1 467.931 41.335 C 467.929 41.455 467.915 41.666 467.842 41.966 A 4.057 4.057 0 0 1 467.834 41.997 A 12.613 12.613 0 0 1 467.664 42.589 C 467.61 42.766 467.557 42.947 467.512 43.136 A 5.449 5.449 0 0 0 467.493 43.218 A 81.433 81.433 0 0 1 467.49 43.225 C 467.356 43.583 467.263 43.817 467.211 43.965 A 2.808 2.808 0 0 0 467.2 43.999 A 0.431 0.431 0 0 0 467.119 44.12 C 467.071 44.222 467.038 44.355 467.004 44.488 C 466.956 44.732 466.956 44.976 466.956 45.22 A 5.104 5.104 0 0 0 466.954 45.227 C 466.916 45.381 466.877 45.565 466.814 45.78 A 4.828 4.828 0 0 1 466.76 45.953 A 3.859 3.859 0 0 1 466.502 46.511 A 1.496 1.496 0 0 1 466.418 46.636 C 466.077 47.027 465.979 47.808 466.125 48.98 C 466.176 49.295 466.2 49.601 466.2 49.899 A 5.818 5.818 0 0 1 465.637 52.349 C 465.449 52.773 465.26 53.288 465.116 53.85 A 9.289 9.289 0 0 0 465.1 53.912 C 464.905 54.546 464.807 55.132 464.709 55.621 A 37.786 37.786 0 0 0 464.692 55.796 C 464.614 56.619 464.618 56.903 464.704 56.57 A 2.636 2.636 0 0 0 464.709 56.548 A 3.253 3.253 0 0 0 464.713 56.541 C 464.807 56.352 464.902 56.116 465.041 55.836 A 7.369 7.369 0 0 1 465.051 55.816 A 3.06 3.06 0 0 1 465.306 55.265 A 11.684 11.684 0 0 1 465.442 55.035 A 2.227 2.227 0 0 0 465.623 54.767 C 465.738 54.569 465.854 54.32 465.969 54.02 A 9.096 9.096 0 0 0 466.028 53.863 C 466.272 53.326 466.516 52.74 466.711 52.154 A 14.546 14.546 0 0 0 466.904 51.661 C 467.047 51.278 467.207 50.822 467.391 50.305 A 105.107 105.107 0 0 1 467.639 49.615 A 216.548 216.548 0 0 1 468.811 46.49 A 46.952 46.952 0 0 0 469.608 44.244 A 35.122 35.122 0 0 0 469.836 43.511 A 22.474 22.474 0 0 0 470.024 42.887 C 470.136 42.494 470.215 42.167 470.266 41.894 A 5.204 5.204 0 0 0 470.325 41.509 A 12.568 12.568 0 0 1 470.47 40.465 A 4.753 4.753 0 0 1 470.52 40.24 C 470.594 39.943 470.696 39.619 470.848 39.245 A 9.801 9.801 0 0 1 471.008 38.872 A 13.602 13.602 0 0 1 471.181 38.425 C 471.381 37.933 471.655 37.31 471.985 36.578 Z M 113.359 65.771 A 4.111 4.111 0 0 1 113.356 65.772 A 3.307 3.307 0 0 1 113.353 65.773 A 2.931 2.931 0 0 1 113.349 65.774 A 2.777 2.777 0 0 1 113.346 65.776 A 0.991 0.991 0 0 1 113.155 65.863 C 112.967 65.928 112.735 65.953 112.444 65.937 A 3.869 3.869 0 0 1 112.268 65.923 C 111.78 65.826 111.292 65.728 110.803 65.533 A 2.01 2.01 0 0 0 110.663 65.47 C 110.535 65.417 110.376 65.365 110.178 65.313 A 7.836 7.836 0 0 0 109.875 65.24 C 109.68 65.191 109.473 65.13 109.259 65.069 A 11.377 11.377 0 0 0 108.606 64.898 A 9.314 9.314 0 0 1 108.237 64.807 C 107.815 64.695 107.255 64.521 106.555 64.263 C 105.627 63.921 104.749 63.531 103.772 63.091 A 26.972 26.972 0 0 1 102.236 62.342 A 22.758 22.758 0 0 1 95.422 56.939 A 16.134 16.134 0 0 0 95.294 56.776 A 30.323 30.323 0 0 0 94.397 55.718 C 94.159 55.44 93.953 55.227 93.832 55.105 A 16.45 16.45 0 0 0 93.762 55.035 A 3.762 3.762 0 0 1 93.748 55.021 C 93.459 54.728 93.123 54.294 92.834 53.765 C 92.578 53.326 92.267 52.666 91.88 51.767 A 77.705 77.705 0 0 1 91.467 50.787 C 91.123 50.036 90.859 49.385 90.675 48.809 A 7.586 7.586 0 0 1 90.442 47.906 A 7.948 7.948 0 0 1 90.438 47.886 C 90.31 47.236 90.22 46.36 90.236 45.222 A 20.003 20.003 0 0 1 90.247 44.781 L 90.247 41.753 C 90.283 41.204 90.32 40.792 90.356 40.497 A 6.301 6.301 0 0 1 90.393 40.24 C 90.42 40.077 90.462 39.96 90.519 39.887 A 0.206 0.206 0 0 1 90.686 39.8 A 0.209 0.209 0 0 1 90.688 39.798 C 90.728 39.76 90.767 39.752 90.807 39.724 A 0.199 0.199 0 0 0 90.833 39.703 A 1.946 1.946 0 0 0 90.832 39.688 C 90.832 39.636 90.828 39.551 90.784 39.507 A 0.455 0.455 0 0 1 90.742 39.436 C 90.559 39.047 90.72 38.143 91.223 36.724 A 12.506 12.506 0 0 1 91.297 36.51 C 91.416 36.172 91.524 35.902 91.565 35.699 A 2.407 2.407 0 0 0 91.572 35.662 C 91.588 35.577 91.597 35.498 91.604 35.422 A 4.311 4.311 0 0 0 91.614 35.064 A 2.571 2.571 0 0 0 91.609 35.048 C 91.571 34.939 91.51 34.78 91.442 34.59 A 10.794 10.794 0 0 1 91.37 34.38 A 0.806 0.806 0 0 1 91.354 34.356 C 91.272 34.223 91.272 34.131 91.272 34.038 A 0.761 0.761 0 0 1 91.277 34.029 C 91.312 33.962 91.347 33.919 91.401 33.902 A 0.21 0.21 0 0 1 91.467 33.892 A 1.048 1.048 0 0 0 91.573 33.913 C 91.83 33.95 92.016 33.865 92.149 33.658 A 1.09 1.09 0 0 0 92.249 33.453 A 1.099 1.099 0 0 0 92.262 33.421 C 92.369 33.146 92.387 32.783 92.315 32.329 A 4.969 4.969 0 0 0 92.249 31.988 A 0.079 0.079 0 0 1 92.238 31.975 C 92.213 31.937 92.248 31.895 92.343 31.828 A 2.259 2.259 0 0 1 92.395 31.792 A 0.592 0.592 0 0 1 92.436 31.774 C 92.541 31.731 92.706 31.689 92.834 31.646 A 2.039 2.039 0 0 0 92.874 31.638 C 93.281 31.548 93.392 31.385 93.24 31.181 A 0.673 0.673 0 0 0 93.176 31.109 A 0.178 0.178 0 0 1 93.133 31.037 C 93.085 30.889 93.178 30.627 93.396 30.285 A 4.909 4.909 0 0 1 93.567 30.035 A 7.857 7.857 0 0 1 93.769 29.769 C 93.951 29.54 94.159 29.303 94.391 29.063 A 11.756 11.756 0 0 1 95.178 28.326 C 95.862 27.74 96.545 27.251 97.18 26.91 C 97.803 26.58 98.315 26.333 98.718 26.147 A 30.492 30.492 0 0 1 99.084 25.982 A 7.741 7.741 0 0 1 99.49 25.792 C 99.797 25.66 100.064 25.577 100.305 25.542 C 100.696 25.494 101.135 25.445 101.624 25.542 A 5.341 5.341 0 0 1 103.577 26.128 A 5.324 5.324 0 0 1 104.026 26.421 C 104.39 26.685 104.669 26.968 104.846 27.251 A 1.382 1.382 0 0 1 104.909 27.363 C 105.046 27.635 105.026 27.857 104.85 28.049 A 0.963 0.963 0 0 1 104.7 28.179 C 104.607 28.241 104.534 28.303 104.48 28.364 A 0.522 0.522 0 0 0 104.407 28.472 A 1.009 1.009 0 0 0 104.381 28.563 C 104.372 28.599 104.367 28.633 104.364 28.664 A 1.343 1.343 0 0 0 104.358 28.814 A 0.221 0.221 0 0 1 104.364 28.835 C 104.391 28.955 104.331 29.133 104.184 29.369 A 3.394 3.394 0 0 1 104.065 29.546 C 103.897 29.781 103.706 29.993 103.492 30.214 A 29.163 29.163 0 0 1 103.186 30.523 A 6.434 6.434 0 0 1 103.087 30.606 C 102.787 30.853 102.527 31.016 102.307 31.06 A 0.284 0.284 0 0 0 102.169 31.095 A 0.259 0.259 0 0 0 102.063 31.206 A 0.117 0.117 0 0 0 102.046 31.228 C 102.014 31.28 102.014 31.359 102.014 31.402 C 102.051 31.475 102.033 31.548 102.001 31.6 A 0.243 0.243 0 0 1 101.965 31.646 A 0.765 0.765 0 0 1 101.946 31.664 C 101.885 31.721 101.822 31.76 101.747 31.778 A 0.506 0.506 0 0 1 101.624 31.792 C 101.425 31.872 101.13 32.177 100.738 32.76 A 12.395 12.395 0 0 0 100.452 33.208 A 11.622 11.622 0 0 0 100.203 33.611 C 99.761 34.36 99.342 35.232 98.889 36.138 A 40.01 40.01 0 0 0 98.689 36.606 C 98.495 37.068 98.32 37.513 98.167 37.941 A 15.477 15.477 0 0 0 97.766 39.214 A 20.075 20.075 0 0 0 97.141 44.17 A 20.408 20.408 0 0 0 97.62 48.54 A 22.329 22.329 0 0 0 97.922 49.708 A 17.517 17.517 0 0 0 101.672 56.646 A 11.977 11.977 0 0 0 101.714 56.696 C 101.92 56.945 102.125 57.173 102.319 57.391 A 13.051 13.051 0 0 1 102.893 58.062 A 150.432 150.432 0 0 0 103.062 58.286 C 103.209 58.481 103.314 58.625 103.358 58.718 A 0.192 0.192 0 0 1 103.381 58.794 A 0.514 0.514 0 0 0 103.435 58.921 C 103.524 59.077 103.712 59.29 104.01 59.561 A 9.476 9.476 0 0 0 104.309 59.82 A 3362.468 3362.468 0 0 0 104.877 60.286 C 105.275 60.612 105.709 60.959 106.165 61.285 C 106.592 61.59 106.962 61.838 107.298 62.04 A 8.399 8.399 0 0 0 107.874 62.359 A 8.414 8.414 0 0 0 108.418 62.551 C 109.058 62.75 109.6 62.816 110.022 62.701 A 5.006 5.006 0 0 0 110.49 62.566 C 110.894 62.43 111.378 62.223 111.945 61.938 A 21.941 21.941 0 0 0 112.805 61.48 C 113.977 60.796 114.856 60.21 115.344 59.673 A 18.289 18.289 0 0 1 115.52 59.499 C 115.576 59.444 115.631 59.392 115.686 59.344 A 2.271 2.271 0 0 1 116.028 59.087 A 9.851 9.851 0 0 0 116.188 58.989 C 116.359 58.881 116.501 58.794 116.614 58.794 A 1.97 1.97 0 0 0 116.667 58.776 C 116.76 58.742 116.837 58.704 116.928 58.648 A 2.593 2.593 0 0 0 117.004 58.599 A 0.427 0.427 0 0 0 117.158 58.471 A 0.204 0.204 0 0 0 117.2 58.355 A 0.816 0.816 0 0 1 117.222 58.314 C 117.265 58.239 117.337 58.141 117.468 58.02 A 2.36 2.36 0 0 1 117.59 57.915 A 3.425 3.425 0 0 1 117.643 57.864 C 117.829 57.686 118.056 57.508 118.323 57.329 A 4.143 4.143 0 0 0 118.497 57.166 C 118.792 56.877 119.188 56.422 119.685 55.79 A 39.138 39.138 0 0 0 120.227 55.083 A 144.605 144.605 0 0 0 121.533 53.216 A 69.083 69.083 0 0 0 122.913 51.128 A 187.914 187.914 0 0 0 123.274 50.555 C 123.629 49.991 123.96 49.456 124.267 48.944 A 44.636 44.636 0 0 0 125.256 47.222 A 30.544 30.544 0 0 1 125.273 47.188 C 125.995 45.75 126.38 45.274 126.428 45.855 C 126.428 45.992 126.404 46.178 126.339 46.395 A 2.746 2.746 0 0 1 126.233 46.685 A 4.594 4.594 0 0 1 125.983 47.173 C 125.96 47.213 125.937 47.253 125.913 47.292 A 28.647 28.647 0 0 0 125.696 47.662 C 125.543 47.845 125.41 48.028 125.295 48.199 A 7.098 7.098 0 0 0 125.11 48.492 A 3.809 3.809 0 0 0 125.1 48.516 C 125.025 48.708 124.981 48.866 124.968 48.942 A 0.241 0.241 0 0 0 124.963 48.98 A 1.131 1.131 0 0 1 124.967 48.991 C 125.012 49.131 125.012 49.228 125.012 49.371 A 1.747 1.747 0 0 1 124.998 49.425 C 124.961 49.553 124.904 49.701 124.813 49.867 A 3.05 3.05 0 0 1 124.67 50.103 A 155.477 155.477 0 0 0 124.518 50.332 C 124.395 50.518 124.249 50.739 124.087 50.989 A 56.32 56.32 0 0 0 123.84 51.372 C 123.45 51.91 122.913 52.642 122.278 53.521 L 120.715 55.718 L 121.936 55.083 A 5.537 5.537 0 0 0 121.954 55.073 C 122.14 54.966 122.327 54.844 122.522 54.707 A 18.763 18.763 0 0 0 123.01 54.351 C 123.186 54.175 123.337 54.011 123.468 53.855 A 4.988 4.988 0 0 0 123.792 53.423 A 6.7 6.7 0 0 1 123.833 53.362 C 123.923 53.23 124.013 53.109 124.103 52.998 A 3.949 3.949 0 0 1 124.377 52.691 A 3.265 3.265 0 0 1 124.465 52.606 C 124.616 52.466 124.727 52.39 124.768 52.349 C 124.837 52.349 124.93 52.301 125.013 52.221 A 0.7 0.7 0 0 0 125.11 52.105 L 125.403 51.519 A 1.394 1.394 0 0 1 125.457 51.328 C 125.507 51.186 125.584 51.024 125.687 50.828 A 15.092 15.092 0 0 1 125.842 50.542 A 8.041 8.041 0 0 1 126.008 50.192 A 9.232 9.232 0 0 1 126.575 49.224 C 126.817 48.788 127.011 48.352 127.205 47.964 A 12.763 12.763 0 0 1 127.209 47.954 A 77.144 77.144 0 0 0 127.297 47.722 C 127.355 47.565 127.4 47.436 127.426 47.325 A 0.866 0.866 0 0 0 127.454 47.124 C 127.454 46.978 127.502 46.831 127.649 46.685 A 0.687 0.687 0 0 1 127.67 46.655 C 127.767 46.525 127.907 46.434 128.088 46.343 C 128.235 46.246 128.381 46.148 128.479 46.001 A 0.728 0.728 0 0 0 128.505 45.96 C 128.576 45.836 128.572 45.743 128.528 45.611 C 128.479 45.513 128.479 45.367 128.528 45.22 A 0.524 0.524 0 0 1 128.602 45.112 C 128.63 45.08 128.662 45.048 128.701 45.016 A 1.384 1.384 0 0 1 128.821 44.927 C 129.096 44.744 129.199 44.819 129.17 45.112 A 1.389 1.389 0 0 1 129.163 45.171 C 129.114 45.513 128.87 46.001 128.528 46.636 C 128.45 46.766 128.372 46.882 128.302 46.991 A 3.022 3.022 0 0 0 128.137 47.271 A 3.148 3.148 0 0 0 128.133 47.278 C 128.038 47.47 127.991 47.613 128.04 47.662 A 1.83 1.83 0 0 1 128.045 47.716 C 128.08 48.153 127.979 48.771 127.698 49.615 C 127.454 50.445 127.112 51.275 126.672 52.056 C 126.395 52.611 126.142 53.019 125.896 53.278 A 1.324 1.324 0 0 1 125.598 53.521 A 0.556 0.556 0 0 0 125.515 53.556 C 125.414 53.61 125.344 53.687 125.305 53.765 A 0.27 0.27 0 0 0 125.301 53.769 C 125.209 53.866 125.257 53.961 125.305 54.009 A 0.348 0.348 0 0 1 125.329 54.026 C 125.451 54.124 125.446 54.267 125.354 54.497 A 3.357 3.357 0 0 1 125.122 54.839 C 125.069 54.908 125.01 54.977 124.945 55.048 A 4.429 4.429 0 0 1 124.817 55.181 C 124.652 55.291 124.503 55.385 124.36 55.456 A 1.325 1.325 0 0 1 124.036 55.572 A 1.749 1.749 0 0 0 123.947 55.594 C 123.598 55.691 123.625 55.826 123.987 55.962 A 0.441 0.441 0 0 0 124.209 56.021 C 124.528 56.021 124.934 55.708 125.403 55.083 C 125.586 54.9 125.731 54.717 125.85 54.546 A 5.237 5.237 0 0 0 126.038 54.253 C 126.184 54.009 126.282 53.863 126.233 53.814 C 126.233 53.716 126.233 53.667 126.331 53.619 C 126.356 53.593 126.394 53.568 126.438 53.543 A 3.074 3.074 0 0 1 126.575 53.472 A 0.183 0.183 0 0 0 126.654 53.451 C 126.791 53.385 126.972 53.165 127.252 52.844 A 28.916 28.916 0 0 1 127.258 52.837 C 127.441 52.563 127.644 52.269 127.865 51.944 A 73.429 73.429 0 0 0 128.284 51.324 C 128.625 50.787 128.918 50.249 129.163 49.761 A 5.091 5.091 0 0 0 129.223 49.657 C 129.469 49.224 129.557 48.917 129.602 48.736 A 0.653 0.653 0 0 1 129.609 48.64 A 0.524 0.524 0 0 1 129.749 48.345 A 1.326 1.326 0 0 1 129.836 48.304 C 129.904 48.276 129.973 48.262 130.042 48.296 A 0.525 0.525 0 0 0 130.106 48.293 C 130.186 48.283 130.248 48.252 130.292 48.189 A 0.342 0.342 0 0 0 130.334 48.101 A 0.535 0.535 0 0 0 130.346 48.06 C 130.369 47.968 130.376 47.846 130.368 47.714 A 1.91 1.91 0 0 0 130.334 47.466 A 1.936 1.936 0 0 1 130.322 47.398 C 130.286 47.177 130.29 46.96 130.334 46.783 C 130.334 46.653 130.411 46.523 130.463 46.495 A 0.039 0.039 0 0 1 130.481 46.49 C 130.579 46.49 130.627 46.441 130.676 46.343 A 1.176 1.176 0 0 0 130.67 46.197 A 0.445 0.445 0 0 0 130.627 46.05 C 130.579 45.855 130.627 45.708 130.725 45.562 A 1.611 1.611 0 0 1 130.981 45.352 A 2.213 2.213 0 0 1 131.213 45.22 A 1.246 1.246 0 0 1 131.338 45.177 C 131.474 45.139 131.599 45.132 131.733 45.146 A 1.757 1.757 0 0 1 131.897 45.171 C 132.141 45.22 132.141 45.025 131.799 44.683 C 131.409 44.292 131.409 44.146 131.75 44.195 A 0.383 0.383 0 0 0 131.785 44.21 C 131.844 44.232 131.902 44.237 131.961 44.224 A 0.353 0.353 0 0 0 132.043 44.195 C 132.092 44.146 132.092 44.097 132.092 43.999 A 0.109 0.109 0 0 1 132.081 43.986 C 132.06 43.956 132.052 43.916 132.057 43.878 A 0.131 0.131 0 0 1 132.092 43.804 A 0.761 0.761 0 0 1 132.097 43.794 C 132.132 43.727 132.167 43.685 132.221 43.667 A 0.21 0.21 0 0 1 132.288 43.658 A 0.157 0.157 0 0 1 132.292 43.655 C 132.367 43.621 132.413 43.674 132.452 43.77 A 1.241 1.241 0 0 1 132.483 43.853 A 5.929 5.929 0 0 1 132.479 44.115 C 132.476 44.183 132.471 44.254 132.462 44.334 A 3.66 3.66 0 0 1 132.434 44.537 A 6.678 6.678 0 0 1 132.36 44.875 A 1.734 1.734 0 0 1 132.239 45.22 A 1.544 1.544 0 0 1 132.2 45.294 C 132.137 45.404 132.077 45.475 132.033 45.522 A 1.586 1.586 0 0 1 131.995 45.562 A 0.124 0.124 0 0 0 131.939 45.574 C 131.896 45.596 131.864 45.643 131.835 45.709 A 1.237 1.237 0 0 0 131.799 45.806 A 1.204 1.204 0 0 0 131.763 46.099 A 1.204 1.204 0 0 0 131.799 46.392 C 131.799 46.56 131.776 46.751 131.714 46.965 A 2.65 2.65 0 0 1 131.604 47.271 A 4.274 4.274 0 0 1 131.116 48.345 C 130.629 49.058 130.294 49.729 130.094 50.327 A 4.46 4.46 0 0 0 129.895 51.177 A 2.37 2.37 0 0 1 129.89 51.193 C 129.839 51.341 129.742 51.58 129.553 51.91 A 2.338 2.338 0 0 1 129.546 51.926 C 129.399 52.262 129.159 52.599 128.918 52.984 A 18.462 18.462 0 0 0 128.755 53.25 C 128.668 53.394 128.589 53.53 128.518 53.659 A 9.153 9.153 0 0 0 128.333 54.009 A 1.702 1.702 0 0 0 128.298 54.054 C 128.164 54.233 128.11 54.381 128.094 54.456 A 0.212 0.212 0 0 0 128.088 54.497 A 0.175 0.175 0 0 1 128.108 54.578 C 128.108 54.638 128.08 54.706 128.034 54.801 A 8.239 8.239 0 0 1 127.991 54.888 A 2.21 2.21 0 0 0 127.954 54.944 C 127.905 55.024 127.854 55.114 127.796 55.208 A 2.935 2.935 0 0 1 127.649 55.425 C 127.161 56.011 127.161 56.109 127.649 55.816 A 3.266 3.266 0 0 1 127.713 55.779 C 127.919 55.661 128.048 55.621 128.137 55.621 C 128.235 55.669 128.235 55.767 128.235 56.011 L 128.235 56.402 L 128.235 56.646 A 0.094 0.094 0 0 1 128.24 56.651 C 128.267 56.683 128.254 56.715 128.228 56.747 A 0.609 0.609 0 0 1 128.186 56.792 A 0.373 0.373 0 0 0 128.081 56.809 A 1.184 1.184 0 0 0 127.893 56.89 A 0.176 0.176 0 0 0 127.814 56.914 C 127.72 56.963 127.591 57.083 127.405 57.232 A 60.139 60.139 0 0 0 127.358 57.291 C 127.248 57.428 127.139 57.567 127.029 57.727 A 4.742 4.742 0 0 0 126.819 58.062 A 10.366 10.366 0 0 1 126.705 58.23 C 126.617 58.356 126.52 58.489 126.409 58.625 A 5.319 5.319 0 0 1 126.038 59.038 C 125.83 59.194 125.636 59.35 125.449 59.491 A 4.705 4.705 0 0 1 124.963 59.82 A 243.645 243.645 0 0 0 124.923 59.843 C 124.595 60.03 124.27 60.218 124.036 60.406 A 2.531 2.531 0 0 0 123.849 60.573 C 123.664 60.753 123.473 60.981 123.254 61.236 A 3.274 3.274 0 0 0 123.095 61.408 C 122.838 61.705 122.542 62.129 122.18 62.652 C 121.741 63.189 121.106 63.579 120.178 63.824 A 2.251 2.251 0 0 0 120.048 63.846 C 119.74 63.909 119.403 64.037 119.104 64.165 A 2.484 2.484 0 0 0 119.051 64.189 C 118.799 64.304 118.603 64.444 118.464 64.567 A 2.019 2.019 0 0 0 118.372 64.654 A 6.697 6.697 0 0 1 118.138 64.88 A 1.805 1.805 0 0 1 117.932 65.044 C 117.857 65.157 117.782 65.212 117.729 65.231 A 0.122 0.122 0 0 1 117.688 65.24 A 7.907 7.907 0 0 0 117.662 65.24 C 117.578 65.24 117.455 65.243 117.221 65.272 A 7.553 7.553 0 0 0 117.102 65.288 A 5.722 5.722 0 0 1 116.791 65.317 C 116.571 65.333 116.327 65.342 116.058 65.357 A 15.925 15.925 0 0 0 115.637 65.386 A 23.219 23.219 0 0 0 114.868 65.465 A 7.514 7.514 0 0 0 114.172 65.581 A 4.084 4.084 0 0 0 114.11 65.589 C 113.734 65.636 113.511 65.719 113.369 65.768 A 5.401 5.401 0 0 1 113.366 65.769 M 217.363 65.771 A 4.111 4.111 0 0 1 217.36 65.772 A 3.307 3.307 0 0 1 217.356 65.773 A 2.931 2.931 0 0 1 217.353 65.774 A 2.777 2.777 0 0 1 217.35 65.776 A 0.991 0.991 0 0 1 217.158 65.863 C 216.971 65.928 216.738 65.953 216.448 65.937 A 3.869 3.869 0 0 1 216.272 65.923 C 215.784 65.826 215.295 65.728 214.807 65.533 A 2.01 2.01 0 0 0 214.667 65.47 C 214.539 65.417 214.38 65.365 214.182 65.313 A 7.836 7.836 0 0 0 213.879 65.24 C 213.684 65.191 213.477 65.13 213.263 65.069 A 11.377 11.377 0 0 0 212.61 64.898 A 9.314 9.314 0 0 1 212.241 64.807 C 211.819 64.695 211.259 64.521 210.559 64.263 C 209.631 63.921 208.752 63.531 207.776 63.091 A 26.972 26.972 0 0 1 206.24 62.342 A 22.758 22.758 0 0 1 199.426 56.939 A 16.134 16.134 0 0 0 199.298 56.776 A 30.323 30.323 0 0 0 198.401 55.718 C 198.163 55.44 197.957 55.227 197.836 55.105 A 16.45 16.45 0 0 0 197.766 55.035 A 3.762 3.762 0 0 1 197.752 55.021 C 197.462 54.728 197.127 54.294 196.838 53.765 C 196.582 53.326 196.271 52.666 195.884 51.767 A 77.705 77.705 0 0 1 195.471 50.787 C 195.127 50.036 194.863 49.385 194.679 48.809 A 7.586 7.586 0 0 1 194.446 47.906 A 7.948 7.948 0 0 1 194.442 47.886 C 194.314 47.236 194.224 46.36 194.24 45.222 A 20.003 20.003 0 0 1 194.25 44.781 L 194.25 41.753 C 194.287 41.204 194.324 40.792 194.36 40.497 A 6.301 6.301 0 0 1 194.397 40.24 C 194.424 40.077 194.466 39.96 194.523 39.887 A 0.206 0.206 0 0 1 194.69 39.8 A 0.209 0.209 0 0 1 194.692 39.798 C 194.732 39.76 194.771 39.752 194.811 39.724 A 0.199 0.199 0 0 0 194.836 39.703 A 1.946 1.946 0 0 0 194.836 39.688 C 194.836 39.636 194.832 39.551 194.788 39.507 A 0.455 0.455 0 0 1 194.746 39.436 C 194.563 39.047 194.724 38.143 195.227 36.724 A 12.506 12.506 0 0 1 195.301 36.51 C 195.42 36.172 195.528 35.902 195.569 35.699 A 2.407 2.407 0 0 0 195.576 35.662 C 195.592 35.577 195.601 35.498 195.607 35.422 A 4.311 4.311 0 0 0 195.618 35.064 A 2.571 2.571 0 0 0 195.612 35.048 C 195.575 34.939 195.514 34.78 195.446 34.59 A 10.794 10.794 0 0 1 195.374 34.38 A 0.806 0.806 0 0 1 195.358 34.356 C 195.276 34.223 195.276 34.131 195.276 34.038 A 0.761 0.761 0 0 1 195.281 34.029 C 195.316 33.962 195.351 33.919 195.405 33.902 A 0.21 0.21 0 0 1 195.471 33.892 A 1.048 1.048 0 0 0 195.577 33.913 C 195.834 33.95 196.02 33.865 196.152 33.658 A 1.09 1.09 0 0 0 196.252 33.453 A 1.099 1.099 0 0 0 196.266 33.421 C 196.373 33.146 196.391 32.783 196.319 32.329 A 4.969 4.969 0 0 0 196.252 31.988 A 0.079 0.079 0 0 1 196.242 31.975 C 196.217 31.937 196.252 31.895 196.347 31.828 A 2.259 2.259 0 0 1 196.399 31.792 A 0.592 0.592 0 0 1 196.44 31.774 C 196.545 31.731 196.71 31.689 196.838 31.646 A 2.039 2.039 0 0 0 196.878 31.638 C 197.285 31.548 197.396 31.385 197.243 31.181 A 0.673 0.673 0 0 0 197.18 31.109 A 0.178 0.178 0 0 1 197.137 31.037 C 197.088 30.889 197.182 30.627 197.4 30.285 A 4.909 4.909 0 0 1 197.571 30.035 A 7.857 7.857 0 0 1 197.773 29.769 C 197.955 29.54 198.162 29.303 198.395 29.063 A 11.756 11.756 0 0 1 199.182 28.326 C 199.866 27.74 200.549 27.251 201.184 26.91 C 201.807 26.58 202.319 26.333 202.722 26.147 A 30.492 30.492 0 0 1 203.088 25.982 A 7.741 7.741 0 0 1 203.494 25.792 C 203.801 25.66 204.067 25.577 204.309 25.542 C 204.7 25.494 205.139 25.445 205.627 25.542 A 5.341 5.341 0 0 1 207.581 26.128 A 5.324 5.324 0 0 1 208.03 26.421 C 208.394 26.685 208.673 26.968 208.85 27.251 A 1.382 1.382 0 0 1 208.913 27.363 C 209.05 27.635 209.03 27.857 208.854 28.049 A 0.963 0.963 0 0 1 208.704 28.179 C 208.611 28.241 208.538 28.303 208.484 28.364 A 0.522 0.522 0 0 0 208.411 28.472 A 1.009 1.009 0 0 0 208.385 28.563 C 208.376 28.599 208.371 28.633 208.368 28.664 A 1.343 1.343 0 0 0 208.362 28.814 A 0.221 0.221 0 0 1 208.368 28.835 C 208.395 28.955 208.335 29.133 208.188 29.369 A 3.394 3.394 0 0 1 208.069 29.546 C 207.901 29.781 207.71 29.993 207.496 30.214 A 29.163 29.163 0 0 1 207.19 30.523 A 6.434 6.434 0 0 1 207.091 30.606 C 206.791 30.853 206.531 31.016 206.311 31.06 A 0.284 0.284 0 0 0 206.173 31.095 A 0.259 0.259 0 0 0 206.067 31.206 A 0.117 0.117 0 0 0 206.05 31.228 C 206.018 31.28 206.018 31.359 206.018 31.402 C 206.055 31.475 206.037 31.548 206.005 31.6 A 0.243 0.243 0 0 1 205.969 31.646 A 0.765 0.765 0 0 1 205.95 31.664 C 205.889 31.721 205.826 31.76 205.751 31.778 A 0.506 0.506 0 0 1 205.627 31.792 C 205.429 31.872 205.134 32.177 204.742 32.76 A 12.395 12.395 0 0 0 204.456 33.208 A 11.622 11.622 0 0 0 204.207 33.611 C 203.765 34.36 203.346 35.232 202.893 36.138 A 40.01 40.01 0 0 0 202.693 36.606 C 202.499 37.068 202.324 37.513 202.17 37.941 A 15.477 15.477 0 0 0 201.77 39.214 A 20.075 20.075 0 0 0 201.145 44.17 A 20.408 20.408 0 0 0 201.624 48.54 A 22.329 22.329 0 0 0 201.926 49.708 A 17.517 17.517 0 0 0 205.676 56.646 A 11.977 11.977 0 0 0 205.717 56.696 C 205.923 56.945 206.129 57.173 206.323 57.391 A 13.051 13.051 0 0 1 206.897 58.062 A 150.432 150.432 0 0 0 207.066 58.286 C 207.213 58.481 207.318 58.625 207.362 58.718 A 0.192 0.192 0 0 1 207.385 58.794 A 0.514 0.514 0 0 0 207.439 58.921 C 207.528 59.077 207.716 59.29 208.014 59.561 A 9.476 9.476 0 0 0 208.313 59.82 A 3362.468 3362.468 0 0 0 208.881 60.286 C 209.279 60.612 209.713 60.959 210.168 61.285 C 210.596 61.59 210.966 61.838 211.302 62.04 A 8.399 8.399 0 0 0 211.877 62.359 A 8.414 8.414 0 0 0 212.422 62.551 C 213.061 62.75 213.604 62.816 214.026 62.701 A 5.006 5.006 0 0 0 214.494 62.566 C 214.898 62.43 215.382 62.223 215.948 61.938 A 21.941 21.941 0 0 0 216.809 61.48 C 217.981 60.796 218.86 60.21 219.348 59.673 A 18.289 18.289 0 0 1 219.524 59.499 C 219.58 59.444 219.635 59.392 219.69 59.344 A 2.271 2.271 0 0 1 220.032 59.087 A 9.851 9.851 0 0 0 220.192 58.989 C 220.363 58.881 220.505 58.794 220.618 58.794 A 1.97 1.97 0 0 0 220.671 58.776 C 220.764 58.742 220.841 58.704 220.932 58.648 A 2.593 2.593 0 0 0 221.008 58.599 A 0.427 0.427 0 0 0 221.162 58.471 A 0.204 0.204 0 0 0 221.204 58.355 A 0.816 0.816 0 0 1 221.226 58.314 C 221.269 58.239 221.34 58.141 221.472 58.02 A 2.36 2.36 0 0 1 221.594 57.915 A 3.425 3.425 0 0 1 221.647 57.864 C 221.833 57.686 222.059 57.508 222.327 57.329 A 4.143 4.143 0 0 0 222.501 57.166 C 222.796 56.877 223.192 56.422 223.689 55.79 A 39.138 39.138 0 0 0 224.231 55.083 A 144.605 144.605 0 0 0 225.537 53.216 A 69.083 69.083 0 0 0 226.917 51.128 A 187.914 187.914 0 0 0 227.278 50.555 C 227.633 49.991 227.963 49.456 228.271 48.944 A 44.636 44.636 0 0 0 229.26 47.222 A 30.544 30.544 0 0 1 229.277 47.188 C 229.999 45.75 230.384 45.274 230.432 45.855 C 230.432 45.992 230.408 46.178 230.343 46.395 A 2.746 2.746 0 0 1 230.237 46.685 A 4.594 4.594 0 0 1 229.987 47.173 C 229.964 47.213 229.94 47.253 229.917 47.292 A 28.647 28.647 0 0 0 229.7 47.662 C 229.547 47.845 229.414 48.028 229.299 48.199 A 7.098 7.098 0 0 0 229.114 48.492 A 3.809 3.809 0 0 0 229.104 48.516 C 229.029 48.708 228.985 48.866 228.972 48.942 A 0.241 0.241 0 0 0 228.967 48.98 A 1.131 1.131 0 0 1 228.971 48.991 C 229.016 49.131 229.016 49.228 229.016 49.371 A 1.747 1.747 0 0 1 229.002 49.425 C 228.965 49.553 228.908 49.701 228.817 49.867 A 3.05 3.05 0 0 1 228.674 50.103 A 155.477 155.477 0 0 0 228.522 50.332 C 228.399 50.518 228.253 50.739 228.091 50.989 A 56.32 56.32 0 0 0 227.844 51.372 C 227.454 51.91 226.917 52.642 226.282 53.521 L 224.719 55.718 L 225.94 55.083 A 5.537 5.537 0 0 0 225.958 55.073 C 226.144 54.966 226.331 54.844 226.525 54.707 A 18.763 18.763 0 0 0 227.014 54.351 C 227.19 54.175 227.341 54.011 227.472 53.855 A 4.988 4.988 0 0 0 227.795 53.423 A 6.7 6.7 0 0 1 227.837 53.362 C 227.927 53.23 228.017 53.109 228.107 52.998 A 3.949 3.949 0 0 1 228.381 52.691 A 3.265 3.265 0 0 1 228.469 52.606 C 228.62 52.466 228.731 52.39 228.772 52.349 C 228.841 52.349 228.933 52.301 229.016 52.221 A 0.7 0.7 0 0 0 229.114 52.105 L 229.407 51.519 A 1.394 1.394 0 0 1 229.461 51.328 C 229.511 51.186 229.588 51.024 229.691 50.828 A 15.092 15.092 0 0 1 229.846 50.542 A 8.041 8.041 0 0 1 230.012 50.192 A 9.232 9.232 0 0 1 230.579 49.224 C 230.821 48.788 231.015 48.352 231.209 47.964 A 12.763 12.763 0 0 1 231.213 47.954 A 77.144 77.144 0 0 0 231.301 47.722 C 231.359 47.565 231.404 47.436 231.43 47.325 A 0.866 0.866 0 0 0 231.458 47.124 C 231.458 46.978 231.506 46.831 231.653 46.685 A 0.687 0.687 0 0 1 231.674 46.655 C 231.771 46.525 231.911 46.434 232.092 46.343 C 232.239 46.246 232.385 46.148 232.483 46.001 A 0.728 0.728 0 0 0 232.509 45.96 C 232.58 45.836 232.576 45.743 232.532 45.611 C 232.483 45.513 232.483 45.367 232.532 45.22 A 0.524 0.524 0 0 1 232.606 45.112 C 232.634 45.08 232.666 45.048 232.704 45.016 A 1.384 1.384 0 0 1 232.825 44.927 C 233.1 44.744 233.203 44.819 233.174 45.112 A 1.389 1.389 0 0 1 233.167 45.171 C 233.118 45.513 232.874 46.001 232.532 46.636 C 232.454 46.766 232.376 46.882 232.306 46.991 A 3.022 3.022 0 0 0 232.141 47.271 A 3.148 3.148 0 0 0 232.137 47.278 C 232.042 47.47 231.995 47.613 232.043 47.662 A 1.83 1.83 0 0 1 232.049 47.716 C 232.084 48.153 231.983 48.771 231.702 49.615 C 231.458 50.445 231.116 51.275 230.676 52.056 C 230.399 52.611 230.146 53.019 229.9 53.278 A 1.324 1.324 0 0 1 229.602 53.521 A 0.556 0.556 0 0 0 229.518 53.556 C 229.418 53.61 229.348 53.687 229.309 53.765 A 0.27 0.27 0 0 0 229.305 53.769 C 229.213 53.866 229.261 53.961 229.309 54.009 A 0.348 0.348 0 0 1 229.333 54.026 C 229.455 54.124 229.45 54.267 229.358 54.497 A 3.357 3.357 0 0 1 229.126 54.839 C 229.073 54.908 229.014 54.977 228.948 55.048 A 4.429 4.429 0 0 1 228.821 55.181 C 228.656 55.291 228.507 55.385 228.364 55.456 A 1.325 1.325 0 0 1 228.04 55.572 A 1.749 1.749 0 0 0 227.951 55.594 C 227.602 55.691 227.629 55.826 227.991 55.962 A 0.441 0.441 0 0 0 228.213 56.021 C 228.532 56.021 228.938 55.708 229.407 55.083 C 229.59 54.9 229.735 54.717 229.854 54.546 A 5.237 5.237 0 0 0 230.042 54.253 C 230.188 54.009 230.286 53.863 230.237 53.814 C 230.237 53.716 230.237 53.667 230.334 53.619 C 230.36 53.593 230.398 53.568 230.442 53.543 A 3.074 3.074 0 0 1 230.579 53.472 A 0.183 0.183 0 0 0 230.658 53.451 C 230.795 53.385 230.976 53.165 231.256 52.844 A 28.916 28.916 0 0 1 231.262 52.837 C 231.445 52.563 231.647 52.269 231.869 51.944 A 73.429 73.429 0 0 0 232.288 51.324 C 232.629 50.787 232.922 50.249 233.167 49.761 A 5.091 5.091 0 0 0 233.227 49.657 C 233.473 49.224 233.561 48.917 233.606 48.736 A 0.653 0.653 0 0 1 233.613 48.64 A 0.524 0.524 0 0 1 233.752 48.345 A 1.326 1.326 0 0 1 233.84 48.304 C 233.908 48.276 233.977 48.262 234.045 48.296 A 0.525 0.525 0 0 0 234.11 48.293 C 234.19 48.283 234.252 48.252 234.296 48.189 A 0.342 0.342 0 0 0 234.338 48.101 A 0.535 0.535 0 0 0 234.35 48.06 C 234.373 47.968 234.38 47.846 234.371 47.714 A 1.91 1.91 0 0 0 234.338 47.466 A 1.936 1.936 0 0 1 234.326 47.398 C 234.29 47.177 234.294 46.96 234.338 46.783 C 234.338 46.653 234.415 46.523 234.466 46.495 A 0.039 0.039 0 0 1 234.485 46.49 C 234.583 46.49 234.631 46.441 234.68 46.343 A 1.176 1.176 0 0 0 234.674 46.197 A 0.445 0.445 0 0 0 234.631 46.05 C 234.583 45.855 234.631 45.708 234.729 45.562 A 1.611 1.611 0 0 1 234.985 45.352 A 2.213 2.213 0 0 1 235.217 45.22 A 1.246 1.246 0 0 1 235.342 45.177 C 235.478 45.139 235.603 45.132 235.737 45.146 A 1.757 1.757 0 0 1 235.901 45.171 C 236.145 45.22 236.145 45.025 235.803 44.683 C 235.413 44.292 235.413 44.146 235.754 44.195 A 0.383 0.383 0 0 0 235.789 44.21 C 235.847 44.232 235.906 44.237 235.965 44.224 A 0.353 0.353 0 0 0 236.047 44.195 C 236.096 44.146 236.096 44.097 236.096 43.999 A 0.109 0.109 0 0 1 236.085 43.986 C 236.064 43.956 236.056 43.916 236.061 43.878 A 0.131 0.131 0 0 1 236.096 43.804 A 0.761 0.761 0 0 1 236.101 43.794 C 236.136 43.727 236.171 43.685 236.225 43.667 A 0.21 0.21 0 0 1 236.292 43.658 A 0.157 0.157 0 0 1 236.296 43.655 C 236.371 43.621 236.417 43.674 236.456 43.77 A 1.241 1.241 0 0 1 236.487 43.853 A 5.929 5.929 0 0 1 236.483 44.115 C 236.48 44.183 236.475 44.254 236.466 44.334 A 3.66 3.66 0 0 1 236.438 44.537 A 6.678 6.678 0 0 1 236.364 44.875 A 1.734 1.734 0 0 1 236.243 45.22 A 1.544 1.544 0 0 1 236.203 45.294 C 236.141 45.404 236.081 45.475 236.037 45.522 A 1.586 1.586 0 0 1 235.999 45.562 A 0.124 0.124 0 0 0 235.943 45.574 C 235.9 45.596 235.868 45.643 235.839 45.709 A 1.237 1.237 0 0 0 235.803 45.806 A 1.204 1.204 0 0 0 235.767 46.099 A 1.204 1.204 0 0 0 235.803 46.392 C 235.803 46.56 235.78 46.751 235.718 46.965 A 2.65 2.65 0 0 1 235.608 47.271 A 4.274 4.274 0 0 1 235.12 48.345 C 234.633 49.058 234.298 49.729 234.098 50.327 A 4.46 4.46 0 0 0 233.899 51.177 A 2.37 2.37 0 0 1 233.894 51.193 C 233.843 51.341 233.746 51.58 233.557 51.91 A 2.338 2.338 0 0 1 233.55 51.926 C 233.403 52.262 233.163 52.599 232.922 52.984 A 18.462 18.462 0 0 0 232.759 53.25 C 232.672 53.394 232.593 53.53 232.522 53.659 A 9.153 9.153 0 0 0 232.336 54.009 A 1.702 1.702 0 0 0 232.302 54.054 C 232.168 54.233 232.114 54.381 232.098 54.456 A 0.212 0.212 0 0 0 232.092 54.497 A 0.175 0.175 0 0 1 232.111 54.578 C 232.111 54.638 232.084 54.706 232.038 54.801 A 8.239 8.239 0 0 1 231.995 54.888 A 2.21 2.21 0 0 0 231.958 54.944 C 231.909 55.024 231.858 55.114 231.8 55.208 A 2.935 2.935 0 0 1 231.653 55.425 C 231.165 56.011 231.165 56.109 231.653 55.816 A 3.266 3.266 0 0 1 231.717 55.779 C 231.923 55.661 232.052 55.621 232.141 55.621 C 232.239 55.669 232.239 55.767 232.239 56.011 L 232.239 56.402 L 232.239 56.646 A 0.094 0.094 0 0 1 232.244 56.651 C 232.271 56.683 232.258 56.715 232.232 56.747 A 0.609 0.609 0 0 1 232.19 56.792 A 0.373 0.373 0 0 0 232.085 56.809 A 1.184 1.184 0 0 0 231.897 56.89 A 0.176 0.176 0 0 0 231.818 56.914 C 231.724 56.963 231.594 57.083 231.409 57.232 A 60.139 60.139 0 0 0 231.362 57.291 C 231.252 57.428 231.143 57.567 231.033 57.727 A 4.742 4.742 0 0 0 230.823 58.062 A 10.366 10.366 0 0 1 230.709 58.23 C 230.621 58.356 230.523 58.489 230.413 58.625 A 5.319 5.319 0 0 1 230.042 59.038 C 229.834 59.194 229.64 59.35 229.453 59.491 A 4.705 4.705 0 0 1 228.967 59.82 A 243.645 243.645 0 0 0 228.927 59.843 C 228.599 60.03 228.274 60.218 228.04 60.406 A 2.531 2.531 0 0 0 227.853 60.573 C 227.668 60.753 227.477 60.981 227.258 61.236 A 3.274 3.274 0 0 0 227.099 61.408 C 226.842 61.705 226.546 62.129 226.184 62.652 C 225.745 63.189 225.11 63.579 224.182 63.824 A 2.251 2.251 0 0 0 224.052 63.846 C 223.743 63.909 223.407 64.037 223.108 64.165 A 2.484 2.484 0 0 0 223.055 64.189 C 222.803 64.304 222.607 64.444 222.468 64.567 A 2.019 2.019 0 0 0 222.375 64.654 A 6.697 6.697 0 0 1 222.142 64.88 A 1.805 1.805 0 0 1 221.936 65.044 C 221.861 65.157 221.786 65.212 221.733 65.231 A 0.122 0.122 0 0 1 221.692 65.24 A 7.907 7.907 0 0 0 221.666 65.24 C 221.582 65.24 221.459 65.243 221.225 65.272 A 7.553 7.553 0 0 0 221.106 65.288 A 5.722 5.722 0 0 1 220.795 65.317 C 220.575 65.333 220.331 65.342 220.062 65.357 A 15.925 15.925 0 0 0 219.641 65.386 A 23.219 23.219 0 0 0 218.872 65.465 A 7.514 7.514 0 0 0 218.176 65.581 A 4.084 4.084 0 0 0 218.114 65.589 C 217.738 65.636 217.515 65.719 217.373 65.768 A 5.401 5.401 0 0 1 217.37 65.769 M 428.248 10.703 A 291.498 291.498 0 0 0 427.942 10.747 A 3.135 3.135 0 0 0 427.44 10.876 C 427.355 10.905 427.276 10.937 427.207 10.969 A 1.787 1.787 0 0 0 427.161 10.992 C 426.917 11.089 426.819 11.187 426.819 11.333 A 2.923 2.923 0 0 0 426.822 11.512 A 0.592 0.592 0 0 0 426.917 11.822 C 426.965 11.968 427.161 12.115 427.405 12.359 A 1.741 1.741 0 0 1 427.505 12.431 C 427.597 12.502 427.661 12.566 427.698 12.603 A 0.63 0.63 0 0 1 427.753 12.634 C 427.789 12.656 427.814 12.679 427.828 12.701 A 0.087 0.087 0 0 1 427.844 12.749 L 427.991 12.896 A 3.973 3.973 0 0 0 428.064 13.038 C 428.094 13.092 428.129 13.152 428.176 13.223 A 3.361 3.361 0 0 0 428.186 13.238 C 428.187 13.24 428.188 13.242 428.189 13.244 C 428.286 13.435 428.381 13.532 428.381 13.628 A 0.825 0.825 0 0 1 428.443 13.695 C 428.455 13.71 428.466 13.726 428.472 13.741 A 0.089 0.089 0 0 1 428.479 13.775 A 0.286 0.286 0 0 1 428.506 13.807 C 428.539 13.851 428.567 13.909 428.574 13.95 A 0.11 0.11 0 0 1 428.577 13.97 A 0.636 0.636 0 0 0 428.653 14.085 C 428.696 14.137 428.747 14.189 428.799 14.241 A 21.977 21.977 0 0 0 428.821 14.263 C 428.918 14.41 429.016 14.507 429.114 14.605 A 0.823 0.823 0 0 1 429.164 14.632 C 429.216 14.663 429.256 14.693 429.307 14.724 A 0.823 0.823 0 0 0 429.358 14.751 A 1.422 1.422 0 0 1 429.541 14.855 C 429.575 14.879 429.61 14.906 429.644 14.94 A 0.823 0.823 0 0 1 429.651 14.947 C 429.699 14.995 429.796 15.091 429.892 15.236 A 1.732 1.732 0 0 1 429.895 15.24 A 2.2 2.2 0 0 1 429.91 15.287 C 429.944 15.398 429.95 15.446 429.992 15.531 A 0.888 0.888 0 0 0 429.993 15.533 A 0.823 0.823 0 0 0 430.02 15.583 C 430.051 15.635 430.081 15.675 430.112 15.726 A 0.823 0.823 0 0 1 430.139 15.777 C 430.139 15.81 430.162 15.843 430.192 15.876 A 1.229 1.229 0 0 0 430.237 15.923 A 0.71 0.71 0 0 0 430.302 16.026 C 430.333 16.068 430.369 16.112 430.408 16.162 A 2.093 2.093 0 0 1 430.481 16.265 L 430.823 16.607 A 360.134 360.134 0 0 1 427.937 16.562 C 425.558 16.515 423.718 16.451 422.386 16.386 A 90.25 90.25 0 0 1 421.936 16.363 A 45.276 45.276 0 0 1 420.691 16.243 C 419.519 16.112 418.567 15.948 417.834 15.728 A 51.336 51.336 0 0 0 417.308 15.623 C 417.03 15.571 416.779 15.533 416.565 15.533 L 416.418 15.533 C 415.588 15.484 415.149 16.07 415.1 17.242 A 8.383 8.383 0 0 0 415.098 17.252 C 415.05 17.543 415.002 17.928 414.905 18.313 A 8.443 8.443 0 0 1 414.905 18.316 C 414.86 18.672 414.816 18.988 414.734 19.263 A 2.462 2.462 0 0 1 414.709 19.341 A 0.629 0.629 0 0 0 414.691 19.476 C 414.688 19.599 414.716 19.739 414.776 19.894 A 2.068 2.068 0 0 0 414.856 20.074 A 11.709 11.709 0 0 0 415.072 20.482 A 43.092 43.092 0 0 0 415.393 21.05 A 9.95 9.95 0 0 1 415.747 21.661 C 415.857 21.868 415.955 22.076 416.028 22.271 A 4.325 4.325 0 0 1 416.347 23.328 A 6.764 6.764 0 0 1 416.418 23.882 A 7.463 7.463 0 0 0 416.455 24.085 C 416.471 24.167 416.487 24.241 416.503 24.311 A 13.212 13.212 0 0 0 416.565 24.566 A 0.703 0.703 0 0 0 416.602 24.676 C 416.655 24.798 416.732 24.859 416.809 24.859 C 416.956 24.859 417.102 24.859 417.2 24.81 A 0.948 0.948 0 0 1 417.304 24.766 C 417.365 24.744 417.434 24.726 417.506 24.717 A 0.724 0.724 0 0 1 417.59 24.712 C 417.754 24.671 417.952 24.665 418.214 24.721 A 2.502 2.502 0 0 1 418.372 24.761 C 418.656 24.802 419.041 24.876 419.528 25.012 A 12.517 12.517 0 0 1 419.836 25.103 A 6.018 6.018 0 0 0 420.456 25.287 C 420.889 25.393 421.391 25.478 421.936 25.542 C 422.766 25.591 423.596 25.64 424.426 25.64 A 101.596 101.596 0 0 1 424.459 25.638 C 425.139 25.603 425.95 25.567 426.929 25.512 A 135.557 135.557 0 0 0 428.04 25.445 A 159.866 159.866 0 0 0 432.678 25.103 A 67.823 67.823 0 0 0 433.813 25.022 C 434.909 24.935 435.889 24.834 436.731 24.761 C 437.688 24.674 438.296 24.587 438.521 24.535 A 0.769 0.769 0 0 0 438.586 24.517 A 0.421 0.421 0 0 1 438.684 24.492 C 438.917 24.45 439.512 24.403 440.442 24.322 C 441.321 24.285 442.31 24.221 443.429 24.171 A 79.179 79.179 0 0 1 444.592 24.126 A 273.609 273.609 0 0 0 446.32 24.016 C 446.776 23.986 447.21 23.955 447.623 23.925 A 126.856 126.856 0 0 0 448.792 23.833 A 38.907 38.907 0 0 0 449.376 23.778 C 450.097 23.705 450.557 23.631 450.714 23.557 A 0.237 0.237 0 0 0 450.745 23.54 C 450.868 23.499 451.167 23.388 451.669 23.237 A 21.456 21.456 0 0 1 451.965 23.15 A 53.278 53.278 0 0 0 452.919 22.934 C 453.243 22.858 453.585 22.777 453.944 22.695 A 65.102 65.102 0 0 1 454.309 22.613 C 454.968 22.503 455.573 22.365 456.101 22.242 A 191.218 191.218 0 0 1 456.604 22.124 C 457.144 22 457.472 21.911 457.618 21.857 A 0.623 0.623 0 0 0 457.678 21.831 C 457.727 21.686 456.954 21.588 455.407 21.539 A 48.617 48.617 0 0 0 455.383 21.538 A 492.535 492.535 0 0 0 453.481 21.541 C 452.345 21.545 451.074 21.557 449.67 21.587 A 34.56 34.56 0 0 1 448.959 21.614 C 448.252 21.633 447.649 21.624 447.131 21.587 A 7.842 7.842 0 0 1 446.778 21.555 C 446.332 21.502 446.07 21.42 446.014 21.309 A 0.111 0.111 0 0 1 446.008 21.294 C 445.813 21.099 446.057 20.904 446.643 20.757 C 447.222 20.624 448.327 20.531 449.961 20.552 A 39.499 39.499 0 0 1 450.452 20.562 C 451.039 20.478 451.554 20.43 452.029 20.356 A 9.131 9.131 0 0 0 452.258 20.318 A 19.539 19.539 0 0 0 452.268 20.317 C 452.791 20.269 453.08 20.222 453.228 20.22 A 0.695 0.695 0 0 1 453.235 20.22 C 453.36 20.179 453.484 20.172 453.669 20.141 A 3.347 3.347 0 0 0 453.772 20.122 A 6.335 6.335 0 0 0 454.242 20.111 A 3.358 3.358 0 0 0 454.553 20.074 A 1.499 1.499 0 0 0 454.83 20.049 A 1.337 1.337 0 0 0 455.188 19.927 A 0.506 0.506 0 0 0 455.31 19.869 C 455.386 19.817 455.432 19.75 455.432 19.683 C 455.432 19.598 454.582 19.587 452.851 19.586 A 1034.174 1034.174 0 0 0 452.014 19.585 C 449.768 19.634 446.838 19.488 443.274 19.195 C 440.694 19.083 438.573 18.999 436.931 18.944 A 244.196 244.196 0 0 0 435.559 18.902 C 435.657 18.706 435.852 18.413 436.096 18.023 A 47.025 47.025 0 0 0 437.677 17.992 A 216.643 216.643 0 0 0 439.368 17.925 A 72.92 72.92 0 0 1 440.987 17.907 C 441.955 17.907 442.887 17.927 443.774 17.968 A 47.329 47.329 0 0 1 445.422 18.072 C 447.247 18.216 448.458 18.265 449.101 18.221 A 4.464 4.464 0 0 0 449.133 18.218 A 15.321 15.321 0 0 0 449.371 18.216 C 449.968 18.207 450.854 18.169 451.965 18.169 A 129.444 129.444 0 0 1 454.904 18.08 A 63.862 63.862 0 0 1 455.92 18.072 A 77.644 77.644 0 0 0 456.93 18.05 C 459.47 17.979 460.511 17.801 460.12 17.583 C 459.192 17.339 453.137 17.046 441.956 16.607 L 436.829 16.607 A 3.845 3.845 0 0 1 436.902 16.468 C 436.963 16.357 437.024 16.256 437.085 16.141 A 3.492 3.492 0 0 0 437.122 16.07 A 3.694 3.694 0 0 1 437.194 15.932 C 437.263 15.807 437.326 15.708 437.363 15.635 A 0.865 0.865 0 0 0 437.366 15.63 A 2.258 2.258 0 0 0 437.515 15.404 C 437.581 15.29 437.629 15.182 437.659 15.093 C 437.7 14.97 437.706 14.811 437.678 14.647 A 1.267 1.267 0 0 0 437.659 14.556 A 2.775 2.775 0 0 0 437.612 14.392 C 437.555 14.211 437.463 13.982 437.317 13.726 C 437.512 13.287 437.561 12.945 437.463 12.701 A 1.713 1.713 0 0 0 437.232 12.308 A 2.941 2.941 0 0 0 436.975 12.017 A 0.56 0.56 0 0 1 436.831 11.909 A 0.553 0.553 0 0 1 436.731 11.773 C 436.643 11.685 436.475 11.636 436.191 11.556 A 58.169 58.169 0 0 1 436.096 11.529 C 435.899 11.463 435.658 11.397 435.388 11.332 A 21.905 21.905 0 0 0 434.973 11.236 A 9.706 9.706 0 0 1 434.583 11.176 A 4.783 4.783 0 0 0 433.801 11.089 A 82.307 82.307 0 0 1 432.88 11.01 C 432.597 10.983 432.3 10.952 431.984 10.912 A 23.34 23.34 0 0 1 431.848 10.894 A 147.059 147.059 0 0 1 430.829 10.823 C 430.573 10.804 430.332 10.785 430.11 10.766 A 37.98 37.98 0 0 1 429.895 10.747 C 429.456 10.699 429.114 10.65 428.821 10.65 C 428.653 10.65 428.462 10.673 428.248 10.703 Z M 162.805 16.656 L 163.879 17.73 L 162.512 17.73 A 5.853 5.853 0 0 1 162.314 17.743 C 161.837 17.767 161.513 17.718 161.34 17.632 C 161.171 17.547 161.111 17.425 161.099 17.203 A 1.923 1.923 0 0 1 161.096 17.095 A 0.935 0.935 0 0 0 161.077 16.901 A 0.827 0.827 0 0 0 160.95 16.607 A 1.651 1.651 0 0 0 160.817 16.483 C 160.764 16.441 160.71 16.412 160.657 16.412 A 5.636 5.636 0 0 1 160.504 16.41 C 160.407 16.407 160.291 16.401 160.15 16.382 A 3.873 3.873 0 0 1 160.022 16.363 C 159.631 16.363 159.241 16.314 158.752 16.314 A 4.776 4.776 0 0 0 158.399 16.282 C 158.331 16.279 158.263 16.277 158.197 16.277 A 3.643 3.643 0 0 0 157.678 16.314 A 6.206 6.206 0 0 0 157.5 16.346 C 157.353 16.375 157.244 16.404 157.183 16.433 A 0.156 0.156 0 0 0 157.141 16.46 A 0.087 0.087 0 0 1 157.103 16.478 C 157 16.505 156.716 16.503 156.206 16.472 A 30.306 30.306 0 0 1 156.018 16.46 A 22.404 22.404 0 0 1 155.187 16.442 C 154.939 16.433 154.677 16.421 154.4 16.407 A 6679.18 6679.18 0 0 1 153.528 16.363 A 49.876 49.876 0 0 0 151.372 16.205 A 888.338 888.338 0 0 0 150.696 16.167 A 60.244 60.244 0 0 0 150.045 16.103 C 149.643 16.065 149.298 16.036 149.004 16.01 A 35.219 35.219 0 0 1 148.596 15.972 A 55.541 55.541 0 0 0 147.287 15.793 C 146.876 15.741 146.486 15.695 146.116 15.65 A 90.844 90.844 0 0 1 145.959 15.63 A 52.201 52.201 0 0 0 145.943 15.628 C 145.327 15.551 144.864 15.505 144.554 15.465 A 5.915 5.915 0 0 1 144.348 15.435 C 144.181 15.435 143.99 15.389 143.777 15.329 A 146.696 146.696 0 0 1 143.469 15.24 A 3.253 3.253 0 0 1 142.506 14.954 A 2.476 2.476 0 0 1 142.493 14.947 A 14.815 14.815 0 0 0 142.023 14.8 A 54.67 54.67 0 0 0 141.516 14.654 C 141.125 14.556 140.833 14.458 140.54 14.41 L 139.661 14.263 L 140.002 16.021 C 140.1 16.558 140.198 17.144 140.247 17.779 C 140.321 18.302 140.339 18.768 140.343 19.177 A 35.284 35.284 0 0 1 140.344 19.537 L 140.344 20.122 A 7.48 7.48 0 0 0 140.326 20.556 C 140.319 21.061 140.365 21.52 140.442 21.978 C 140.491 22.515 140.784 23.052 141.223 23.492 A 5.719 5.719 0 0 0 141.582 23.858 C 141.878 24.133 142.149 24.314 142.395 24.419 A 2.304 2.304 0 0 0 143.286 24.649 A 5.592 5.592 0 0 0 143.713 24.663 C 144.062 24.663 144.49 24.663 145.03 24.698 A 16.082 16.082 0 0 1 145.227 24.712 A 26.782 26.782 0 0 0 146.173 24.834 A 19.327 19.327 0 0 1 147.082 24.956 A 2.782 2.782 0 0 0 147.271 24.976 C 147.66 25.004 148.317 24.998 149.182 24.956 C 150.256 24.956 151.428 24.908 152.747 24.859 A 66.364 66.364 0 0 1 154.266 24.81 C 154.622 24.801 154.968 24.792 155.297 24.779 A 25.096 25.096 0 0 0 155.676 24.761 C 156.555 24.761 157.19 24.712 157.629 24.761 A 32.614 32.614 0 0 0 159.021 24.804 A 125.158 125.158 0 0 0 160.559 24.81 A 251.062 251.062 0 0 0 161.329 24.809 C 162.064 24.807 162.695 24.798 163.245 24.761 A 26.36 26.36 0 0 0 164.41 24.731 A 121.072 121.072 0 0 0 165.686 24.663 C 166.36 24.663 166.97 24.631 167.516 24.619 A 16.628 16.628 0 0 1 167.883 24.615 C 171.621 24.615 174.731 24.518 177.262 24.373 A 117.814 117.814 0 0 0 177.307 24.371 C 179.895 24.224 181.409 24.078 181.897 23.833 A 2.625 2.625 0 0 1 182.14 23.726 C 182.289 23.669 182.465 23.62 182.678 23.589 A 2.313 2.313 0 0 1 183.142 23.498 C 183.301 23.479 183.459 23.467 183.606 23.443 C 183.948 23.443 184.241 23.394 184.583 23.345 A 6.093 6.093 0 0 0 184.849 23.263 C 185.043 23.197 185.2 23.132 185.334 23.067 A 3.298 3.298 0 0 0 185.364 23.052 A 4.551 4.551 0 0 1 185.946 22.85 A 2.448 2.448 0 0 1 186.145 22.808 A 2.99 2.99 0 0 1 186.618 22.692 C 186.736 22.673 186.849 22.663 186.954 22.662 A 1.86 1.86 0 0 1 186.975 22.662 A 7.025 7.025 0 0 0 187.584 22.633 C 187.86 22.609 188.159 22.57 188.489 22.515 C 189.075 22.466 189.661 22.32 190.247 22.222 A 8.77 8.77 0 0 0 190.726 22.121 C 190.989 22.057 191.226 21.988 191.414 21.929 A 9.813 9.813 0 0 0 191.565 21.88 A 7.129 7.129 0 0 0 191.655 21.854 C 191.909 21.778 191.987 21.734 191.92 21.692 A 0.158 0.158 0 0 0 191.907 21.685 A 1.323 1.323 0 0 1 191.711 21.597 C 191.623 21.551 191.529 21.496 191.418 21.441 A 1.235 1.235 0 0 1 191.25 21.338 C 191.136 21.256 191.046 21.166 190.979 21.099 C 190.784 20.953 190.735 20.806 190.784 20.757 A 0.097 0.097 0 0 1 190.817 20.685 C 190.875 20.63 191.005 20.586 191.209 20.518 A 152.913 152.913 0 0 1 191.223 20.513 A 4.095 4.095 0 0 0 191.432 20.443 C 191.898 20.272 192.018 20.105 191.76 19.976 A 0.807 0.807 0 0 0 191.525 19.855 C 191.2 19.74 190.652 19.683 189.905 19.683 A 47.952 47.952 0 0 1 188.983 19.677 C 188.66 19.671 188.318 19.659 187.952 19.634 C 187.219 19.634 186.584 19.585 186.047 19.537 A 12.957 12.957 0 0 0 185.666 19.491 C 185.284 19.452 185.008 19.442 184.827 19.44 A 10.542 10.542 0 0 0 184.68 19.439 C 184.485 19.488 184.485 19.585 184.68 19.732 C 185.093 20.007 185.075 20.067 184.624 19.911 A 6.57 6.57 0 0 1 184.534 19.878 A 17.479 17.479 0 0 0 183.097 19.468 A 21.029 21.029 0 0 0 182.043 19.244 A 32.466 32.466 0 0 0 181.162 19.138 C 180.617 19.081 180.007 19.03 179.358 18.999 A 21.016 21.016 0 0 0 178.863 18.97 C 178.484 18.952 178.135 18.943 177.807 18.921 A 9.938 9.938 0 0 1 177.551 18.902 C 177.081 18.816 176.723 18.768 176.543 18.725 A 0.82 0.82 0 0 1 176.477 18.706 A 4.24 4.24 0 0 0 176.158 18.642 C 175.809 18.584 175.303 18.526 174.64 18.467 A 59.291 59.291 0 0 0 173.987 18.413 A 164.104 164.104 0 0 0 171.985 18.346 A 81.722 81.722 0 0 0 169.836 18.316 C 168.665 18.316 167.786 18.218 167.2 18.072 A 2.968 2.968 0 0 1 166.986 18.011 C 166.57 17.872 166.451 17.697 166.663 17.486 C 166.83 17.36 167.463 17.306 168.593 17.263 A 97.796 97.796 0 0 1 169.202 17.242 A 108.698 108.698 0 0 1 171.582 17.272 A 535.286 535.286 0 0 1 174.182 17.339 A 46.058 46.058 0 0 1 176.014 17.425 C 176.523 17.459 177.001 17.5 177.445 17.543 A 47.144 47.144 0 0 1 178.674 17.681 A 10.179 10.179 0 0 0 178.799 17.697 C 179.422 17.772 179.53 17.715 179.163 17.486 C 179.025 17.44 178.585 17.351 177.844 17.259 A 25.254 25.254 0 0 0 177.698 17.242 C 177.161 17.174 176.554 17.13 175.879 17.094 A 107.456 107.456 0 0 0 174.915 17.046 A 241.022 241.022 0 0 1 173.633 16.982 C 173.374 16.968 173.126 16.955 172.891 16.941 A 82.16 82.16 0 0 1 172.229 16.9 A 32.22 32.22 0 0 1 171.848 16.872 C 171.412 16.838 171.125 16.804 171.004 16.769 A 0.264 0.264 0 0 1 170.959 16.753 C 170.912 16.753 170.679 16.707 170.261 16.659 A 13.51 13.51 0 0 0 170.227 16.656 C 169.836 16.656 169.348 16.607 168.811 16.607 C 168.274 16.607 167.834 16.558 167.444 16.509 A 5.56 5.56 0 0 1 167.267 16.481 C 167.088 16.45 166.967 16.415 166.902 16.365 A 0.149 0.149 0 0 1 166.858 16.314 C 166.858 16.265 166.956 16.07 167.053 15.874 A 4.071 4.071 0 0 1 167.23 15.502 C 167.297 15.374 167.371 15.24 167.444 15.093 C 167.542 14.947 167.59 14.8 167.688 14.703 A 3.312 3.312 0 0 1 167.69 14.698 C 167.751 14.577 167.811 14.475 167.86 14.381 A 1.204 1.204 0 0 0 167.932 14.214 A 0.7 0.7 0 0 0 167.969 13.988 C 167.969 13.909 167.957 13.824 167.932 13.726 A 1.983 1.983 0 0 0 167.871 13.527 C 167.826 13.404 167.762 13.262 167.673 13.095 A 5.692 5.692 0 0 0 167.59 12.945 A 2.596 2.596 0 0 0 167.689 12.724 C 167.793 12.456 167.813 12.238 167.749 12.05 A 0.669 0.669 0 0 0 167.737 12.017 A 1.924 1.924 0 0 0 167.554 11.724 C 167.49 11.639 167.416 11.553 167.333 11.468 A 3.239 3.239 0 0 0 167.297 11.431 L 167.053 11.187 A 0.264 0.264 0 0 0 167.011 11.155 C 166.928 11.101 166.754 11.022 166.516 10.943 C 166.223 10.845 165.881 10.796 165.491 10.699 A 43.678 43.678 0 0 1 164.935 10.625 A 107.242 107.242 0 0 1 164.417 10.552 A 92.02 92.02 0 0 0 163.568 10.479 C 163.306 10.458 163.031 10.436 162.737 10.415 A 100.151 100.151 0 0 0 162.61 10.406 C 162.138 10.372 161.713 10.338 161.334 10.305 A 44.413 44.413 0 0 1 160.852 10.259 A 7 7 0 0 0 160.569 10.23 C 160.312 10.209 160.085 10.199 159.906 10.167 A 1.496 1.496 0 0 1 159.875 10.162 C 159.631 10.162 159.387 10.21 159.094 10.259 A 6.522 6.522 0 0 0 158.785 10.317 C 158.68 10.34 158.583 10.365 158.494 10.398 A 1.268 1.268 0 0 0 158.362 10.454 A 1.181 1.181 0 0 0 158.24 10.524 C 158.123 10.601 158.057 10.684 158.02 10.796 A 1.117 1.117 0 0 0 158.082 11.126 A 6.138 6.138 0 0 0 158.118 11.236 C 158.213 11.331 158.355 11.52 158.544 11.71 A 3.372 3.372 0 0 0 158.557 11.724 A 1.741 1.741 0 0 1 158.658 11.796 C 158.749 11.867 158.813 11.932 158.85 11.968 A 0.223 0.223 0 0 1 158.879 11.97 C 158.948 11.979 158.953 12.022 158.997 12.066 L 159.143 12.212 A 0.186 0.186 0 0 1 159.167 12.244 C 159.208 12.309 159.249 12.424 159.29 12.505 L 159.485 12.896 A 0.199 0.199 0 0 1 159.506 12.921 C 159.535 12.961 159.542 13.001 159.581 13.041 A 0.209 0.209 0 0 0 159.583 13.042 C 159.583 13.076 159.605 13.109 159.635 13.142 A 1.229 1.229 0 0 0 159.68 13.189 A 0.368 0.368 0 0 1 159.72 13.238 C 159.758 13.292 159.802 13.371 159.871 13.476 A 3.5 3.5 0 0 0 159.875 13.482 A 2.637 2.637 0 0 1 160.035 13.651 C 160.068 13.69 160.095 13.728 160.116 13.767 A 0.422 0.422 0 0 1 160.12 13.775 A 3.074 3.074 0 0 1 160.256 13.846 C 160.3 13.871 160.339 13.896 160.364 13.921 A 0.823 0.823 0 0 1 160.414 13.949 C 160.466 13.979 160.506 14.01 160.557 14.04 A 0.823 0.823 0 0 0 160.608 14.068 C 160.694 14.111 160.742 14.192 160.82 14.312 A 4.58 4.58 0 0 0 160.852 14.361 C 160.899 14.455 160.901 14.549 160.945 14.6 A 0.107 0.107 0 0 0 160.95 14.605 A 0.852 0.852 0 0 0 160.951 14.607 C 160.988 14.681 161.025 14.727 161.04 14.766 A 0.094 0.094 0 0 1 161.047 14.8 A 0.326 0.326 0 0 1 161.075 14.832 C 161.114 14.883 161.153 14.954 161.192 14.994 A 0.215 0.215 0 0 0 161.194 14.996 A 0.213 0.213 0 0 1 161.196 14.998 C 161.244 15.047 161.293 15.143 161.389 15.24 C 161.519 15.413 161.687 15.547 161.86 15.712 A 3.833 3.833 0 0 1 161.926 15.777 A 2.118 2.118 0 0 1 162.454 16.218 C 162.523 16.296 162.592 16.379 162.662 16.468 A 11.018 11.018 0 0 1 162.805 16.656 Z M 64.832 50.805 A 0.279 0.279 0 0 1 64.758 50.831 A 0.256 0.256 0 0 1 64.709 50.835 A 1.003 1.003 0 0 0 64.639 50.852 C 64.5 50.89 64.42 50.951 64.387 51.048 A 0.392 0.392 0 0 0 64.368 51.177 A 0.304 0.304 0 0 1 64.354 51.258 C 64.322 51.369 64.239 51.544 64.126 51.806 A 17.558 17.558 0 0 0 64.124 51.812 A 9.109 9.109 0 0 1 64.012 52.06 C 63.883 52.339 63.725 52.647 63.538 52.984 A 6.01 6.01 0 0 0 63.129 53.697 A 6.625 6.625 0 0 0 62.805 54.497 A 10.236 10.236 0 0 0 62.746 54.63 C 62.537 55.108 62.406 55.511 62.317 55.913 C 62.25 56.148 62.183 56.383 62.115 56.587 A 4.47 4.47 0 0 1 62.024 56.841 A 3.481 3.481 0 0 1 62.001 56.887 C 61.9 57.081 61.824 57.18 61.773 57.236 A 1.086 1.086 0 0 1 61.731 57.281 A 0.222 0.222 0 0 0 61.627 57.308 C 61.466 57.392 61.306 57.669 61.145 58.111 C 60.95 58.599 60.852 59.185 60.754 59.82 A 1.475 1.475 0 0 1 60.699 60.232 A 1.342 1.342 0 0 1 60.559 60.552 C 60.493 60.716 60.406 60.858 60.311 60.963 A 0.774 0.774 0 0 1 60.168 61.089 A 19.853 19.853 0 0 1 60.167 61.091 C 59.826 61.48 59.729 61.479 59.924 61.138 A 0.77 0.77 0 0 0 59.94 61.085 C 60.009 60.815 59.897 60.586 59.485 60.357 A 1.469 1.469 0 0 1 59.253 60.124 A 1.773 1.773 0 0 1 58.997 59.673 A 1.452 1.452 0 0 1 58.986 59.599 C 58.97 59.459 58.977 59.331 59 59.215 A 1.093 1.093 0 0 1 59.094 58.941 C 59.241 58.697 59.436 58.599 59.729 58.648 A 1.072 1.072 0 0 0 59.8 58.646 A 0.814 0.814 0 0 0 60.217 58.501 A 1.324 1.324 0 0 0 60.325 58.412 A 1.298 1.298 0 0 0 60.608 58.013 A 2.612 2.612 0 0 1 60.664 57.883 C 60.743 57.713 60.822 57.594 60.901 57.476 C 60.976 57.363 61.051 57.308 61.104 57.289 A 0.122 0.122 0 0 1 61.145 57.281 C 61.243 57.281 61.292 57.232 61.34 57.134 C 61.389 57.037 61.389 56.89 61.389 56.744 A 1.652 1.652 0 0 0 61.367 56.681 C 61.352 56.643 61.337 56.609 61.321 56.579 A 0.297 0.297 0 0 0 61.194 56.451 A 0.346 0.346 0 0 0 61.156 56.418 C 61.07 56.354 60.98 56.359 60.852 56.402 A 0.786 0.786 0 0 1 60.827 56.408 C 60.686 56.438 60.599 56.413 60.522 56.333 A 0.568 0.568 0 0 1 60.461 56.255 C 60.364 56.109 60.364 55.913 60.364 55.669 A 1.929 1.929 0 0 1 60.396 55.557 C 60.421 55.477 60.453 55.391 60.493 55.302 A 2.88 2.88 0 0 1 60.657 54.986 C 60.803 54.742 60.999 54.351 61.243 53.814 C 61.438 53.326 61.584 52.837 61.731 52.349 A 1.019 1.019 0 0 1 61.758 52.268 C 61.85 52.024 62.007 51.938 62.227 51.983 A 0.778 0.778 0 0 1 62.317 52.007 A 1.999 1.999 0 0 0 62.375 52.035 C 62.596 52.137 62.639 52.096 62.503 51.912 A 1.7 1.7 0 0 0 62.463 51.861 A 0.928 0.928 0 0 1 62.371 51.751 C 62.326 51.689 62.282 51.617 62.237 51.537 A 9.221 9.221 0 0 1 62.024 51.128 A 11.349 11.349 0 0 0 62.007 51.077 C 61.967 50.959 61.928 50.849 61.897 50.743 A 1.401 1.401 0 0 1 61.829 50.347 C 61.78 50.103 61.877 50.054 62.073 50.103 A 2.181 2.181 0 0 0 62.149 50.112 C 62.436 50.143 62.561 50.088 62.561 49.908 C 62.561 49.8 62.456 49.666 62.284 49.525 A 2.684 2.684 0 0 0 62.073 49.371 A 1.434 1.434 0 0 1 61.996 49.329 C 61.91 49.28 61.848 49.23 61.803 49.181 A 0.452 0.452 0 0 1 61.731 49.078 A 0.237 0.237 0 0 1 61.719 49.002 C 61.719 48.913 61.77 48.824 61.861 48.735 A 1.158 1.158 0 0 1 61.975 48.638 A 1.225 1.225 0 0 1 62.154 48.53 C 62.299 48.456 62.491 48.382 62.724 48.308 A 9.453 9.453 0 0 1 63.098 48.199 C 63.245 48.15 63.293 48.101 63.342 48.003 A 0.366 0.366 0 0 0 63.356 47.973 C 63.384 47.901 63.383 47.83 63.334 47.759 A 0.34 0.34 0 0 0 63.293 47.71 A 0.45 0.45 0 0 1 63.28 47.704 C 63.218 47.67 63.155 47.618 63.092 47.588 A 0.214 0.214 0 0 0 63 47.564 A 3.718 3.718 0 0 0 62.935 47.564 C 62.842 47.566 62.765 47.575 62.672 47.624 A 0.71 0.71 0 0 0 62.61 47.662 A 2.791 2.791 0 0 0 62.604 47.662 C 62.561 47.662 62.561 47.664 62.561 47.71 L 62.512 47.71 L 62.415 47.71 A 0.093 0.093 0 0 0 62.388 47.715 C 62.362 47.722 62.336 47.739 62.31 47.749 A 0.113 0.113 0 0 1 62.268 47.759 C 62.122 47.759 61.682 47.808 61.047 47.906 A 13.583 13.583 0 0 1 60.421 47.956 C 59.662 48.001 58.837 47.993 57.922 47.954 A 24.632 24.632 0 0 0 57.562 47.943 C 56.829 47.924 56.19 47.942 55.632 47.984 A 14.065 14.065 0 0 0 54.944 48.052 A 10.889 10.889 0 0 1 54.642 48.117 C 54.092 48.228 53.496 48.304 52.795 48.345 A 31.383 31.383 0 0 0 52.03 48.405 C 51.531 48.448 51.054 48.492 50.598 48.492 C 50.47 48.524 50.342 48.535 50.227 48.538 A 4.929 4.929 0 0 1 50.061 48.54 A 12.971 12.971 0 0 1 49.861 48.556 C 49.486 48.581 49.179 48.584 48.939 48.564 A 2.397 2.397 0 0 1 48.743 48.54 A 1.273 1.273 0 0 1 48.679 48.539 C 48.421 48.526 48.24 48.435 48.059 48.345 A 6.255 6.255 0 0 1 47.924 48.207 C 47.866 48.145 47.808 48.079 47.75 48.002 A 2.229 2.229 0 0 1 47.62 47.808 A 0.538 0.538 0 0 1 47.542 47.744 C 47.435 47.639 47.348 47.488 47.229 47.369 C 46.936 47.076 46.692 46.685 46.448 46.246 A 5.911 5.911 0 0 1 46.299 45.959 C 46.141 45.635 46.035 45.339 45.959 45.074 A 10.304 10.304 0 0 1 45.955 45.055 C 45.888 44.787 45.844 44.564 45.791 44.338 A 6.631 6.631 0 0 0 45.715 44.048 A 41.269 41.269 0 0 1 45.587 43.541 C 45.323 42.465 45.159 41.614 45.032 41.021 A 5.954 5.954 0 0 1 45.01 40.852 C 44.943 40.264 44.995 39.873 45.129 39.605 C 45.325 39.361 45.667 39.165 46.155 39.068 C 46.887 38.921 48.108 38.921 49.817 39.019 A 224.817 224.817 0 0 0 50.879 39.092 A 274.379 274.379 0 0 0 52.014 39.165 A 68.61 68.61 0 0 0 52.893 39.185 C 53.796 39.199 54.773 39.195 55.823 39.155 A 47.643 47.643 0 0 0 58.02 39.019 A 1451.073 1451.073 0 0 0 58.365 39.004 C 59.164 38.971 59.889 38.942 60.523 38.952 A 11.997 11.997 0 0 1 61.047 38.97 A 25.101 25.101 0 0 0 61.13 38.974 C 62.197 39.016 62.709 38.965 62.756 38.775 A 0.601 0.601 0 0 1 62.72 38.734 C 62.675 38.679 62.603 38.585 62.479 38.453 A 4.777 4.777 0 0 0 62.366 38.335 A 10.892 10.892 0 0 0 61.936 37.841 A 5.084 5.084 0 0 0 61.536 37.456 A 15.906 15.906 0 0 1 60.954 36.841 A 28.414 28.414 0 0 1 60.51 36.333 A 7.866 7.866 0 0 0 60.285 36.091 A 11.49 11.49 0 0 0 59.192 35.113 A 10.09 10.09 0 0 1 58.917 34.894 C 58.414 34.478 58.018 34.063 57.727 33.648 A 57.851 57.851 0 0 0 57.257 33.031 A 210.491 210.491 0 0 0 56.75 32.378 A 131.327 131.327 0 0 1 56.7 32.321 C 56.38 31.954 56.104 31.636 55.872 31.451 A 4.501 4.501 0 0 1 55.56 31.107 A 3.362 3.362 0 0 1 55.286 30.718 A 2.623 2.623 0 0 1 55.162 30.551 C 55.046 30.381 54.981 30.232 54.944 30.083 A 0.481 0.481 0 0 0 54.865 29.806 A 0.429 0.429 0 0 0 54.749 29.693 A 0.445 0.445 0 0 0 54.681 29.613 A 0.462 0.462 0 0 0 54.358 29.497 A 0.267 0.267 0 0 1 54.314 29.493 C 54.165 29.468 53.939 29.323 53.674 29.058 C 53.506 28.857 53.316 28.632 53.133 28.369 A 4.614 4.614 0 0 1 52.893 27.984 A 4.467 4.467 0 0 1 52.621 27.576 A 4.799 4.799 0 0 1 52.258 26.812 A 0.92 0.92 0 0 0 52.129 26.621 C 51.946 26.409 51.638 26.22 51.184 26.031 A 3.14 3.14 0 0 1 50.969 25.954 C 50.467 25.757 49.927 25.405 49.348 24.899 A 12.217 12.217 0 0 1 48.547 24.126 A 18.555 18.555 0 0 1 47.998 23.325 C 47.651 22.788 47.395 22.312 47.229 21.88 A 3.52 3.52 0 0 0 46.204 20.269 C 44.934 19.146 44.836 18.511 45.911 18.316 C 46.094 18.279 46.442 18.215 46.913 18.144 A 30.741 30.741 0 0 1 47.424 18.072 A 47.385 47.385 0 0 1 47.799 17.998 A 129.815 129.815 0 0 1 48.987 17.779 A 0.879 0.879 0 0 0 49.126 17.718 C 49.204 17.676 49.29 17.617 49.396 17.537 A 6.624 6.624 0 0 0 49.524 17.437 A 2.863 2.863 0 0 0 49.675 17.315 A 8.338 8.338 0 0 0 50.11 16.9 A 4.157 4.157 0 0 1 50.278 16.742 C 50.412 16.621 50.54 16.518 50.644 16.415 A 1.902 1.902 0 0 0 50.647 16.412 A 1.508 1.508 0 0 1 50.739 16.326 C 50.855 16.228 50.971 16.167 51.086 16.167 L 54.553 14.751 A 4.494 4.494 0 0 0 54.742 14.747 C 54.939 14.739 55.106 14.719 55.244 14.694 A 2.864 2.864 0 0 0 55.432 14.654 C 55.623 14.616 55.784 14.607 55.892 14.605 A 4.398 4.398 0 0 1 55.969 14.605 A 1.689 1.689 0 0 1 56.018 14.605 C 56.08 14.607 56.135 14.616 56.156 14.659 A 0.099 0.099 0 0 1 56.165 14.703 A 0.131 0.131 0 0 1 56.176 14.715 C 56.199 14.746 56.222 14.798 56.238 14.86 A 0.742 0.742 0 0 1 56.262 15.044 C 56.262 15.322 56.359 15.793 56.579 16.484 A 18.823 18.823 0 0 0 56.75 16.997 A 8.785 8.785 0 0 0 57.057 17.716 C 57.34 18.312 57.741 19.034 58.261 19.868 A 41.817 41.817 0 0 0 59.094 21.148 C 60.641 23.647 61.576 25.341 61.925 26.255 A 2.517 2.517 0 0 1 62.073 26.763 A 0.807 0.807 0 0 1 62.079 26.781 C 62.114 26.897 62.122 27.009 62.149 27.072 A 0.108 0.108 0 0 0 62.17 27.105 C 62.25 27.264 62.458 27.616 62.821 28.187 A 63.701 63.701 0 0 0 63.098 28.619 A 55.468 55.468 0 0 0 63.873 29.9 A 38.93 38.93 0 0 0 64.758 31.255 A 286.416 286.416 0 0 0 65.168 31.902 C 65.556 32.513 65.868 33 66.125 33.404 A 12.849 12.849 0 0 1 66.206 33.526 C 66.364 33.769 66.488 33.981 66.569 34.172 A 1.37 1.37 0 0 1 66.663 34.478 A 0.773 0.773 0 0 1 66.701 34.606 C 66.743 34.805 66.703 34.992 66.663 35.113 A 3.492 3.492 0 0 1 66.626 35.184 C 66.565 35.299 66.504 35.4 66.443 35.511 A 3.845 3.845 0 0 0 66.37 35.65 A 1.611 1.611 0 0 0 66.16 35.906 A 2.213 2.213 0 0 0 66.028 36.138 C 65.93 36.333 65.881 36.626 65.881 36.919 L 65.686 38.775 L 67.102 38.726 A 1.463 1.463 0 0 0 67.267 38.716 A 3.589 3.589 0 0 0 67.981 38.531 C 68.145 38.465 68.287 38.377 68.392 38.283 A 0.774 0.774 0 0 0 68.518 38.14 A 7.614 7.614 0 0 1 68.624 38.036 C 68.735 37.929 68.846 37.835 68.958 37.798 A 0.761 0.761 0 0 1 69.018 37.762 C 69.1 37.717 69.163 37.705 69.208 37.702 A 0.541 0.541 0 0 1 69.25 37.701 A 0.105 0.105 0 0 1 69.277 37.745 C 69.294 37.8 69.276 37.883 69.202 37.994 C 69.164 38.07 69.155 38.146 69.153 38.199 A 1.079 1.079 0 0 0 69.153 38.238 A 1.229 1.229 0 0 0 69.2 38.283 C 69.233 38.313 69.266 38.335 69.299 38.335 C 69.397 38.335 69.543 38.287 69.69 38.238 C 69.781 38.177 69.873 38.135 69.965 38.088 A 1.615 1.615 0 0 0 70.129 37.994 C 70.227 37.945 70.325 37.847 70.374 37.798 A 0.231 0.231 0 0 0 70.39 37.789 C 70.441 37.758 70.436 37.728 70.413 37.712 A 0.072 0.072 0 0 0 70.374 37.701 C 70.288 37.701 70.278 37.626 70.341 37.543 A 0.361 0.361 0 0 1 70.374 37.505 A 0.438 0.438 0 0 1 70.396 37.452 C 70.459 37.322 70.593 37.189 70.764 37.017 A 3.504 3.504 0 0 1 70.809 36.959 C 70.94 36.791 71.067 36.655 71.155 36.48 A 3.236 3.236 0 0 1 71.176 36.401 C 71.216 36.256 71.245 36.173 71.204 36.089 A 0.164 0.164 0 0 1 71.166 36.064 C 71.108 36.011 71.121 35.928 71.204 35.845 A 0.275 0.275 0 0 1 71.292 35.743 C 71.344 35.706 71.412 35.678 71.497 35.65 A 4.347 4.347 0 0 1 71.57 35.602 C 71.678 35.533 71.758 35.486 71.838 35.406 A 0.337 0.337 0 0 0 71.862 35.345 C 71.879 35.286 71.872 35.23 71.831 35.19 A 0.165 0.165 0 0 0 71.79 35.162 A 5.666 5.666 0 0 1 71.75 35.082 C 71.727 35.034 71.708 34.99 71.698 34.955 A 0.147 0.147 0 0 1 71.692 34.917 C 71.704 34.892 71.714 34.871 71.722 34.851 A 5.886 5.886 0 0 0 71.723 34.85 M 102.342 43.198 A 0.918 0.918 0 0 1 102.356 43.169 A 1.373 1.373 0 0 0 102.351 43.024 C 102.347 42.993 102.342 42.959 102.334 42.923 A 1.002 1.002 0 0 0 102.307 42.828 C 102.258 42.73 102.258 42.583 102.307 42.437 A 0.784 0.784 0 0 1 102.37 42.146 A 1.393 1.393 0 0 1 102.502 41.9 C 102.733 41.531 102.746 41.38 102.459 41.446 A 1.104 1.104 0 0 0 102.405 41.46 C 102.092 41.505 102.025 41.427 102.203 41.189 A 1.705 1.705 0 0 1 102.258 41.119 C 102.307 40.972 102.356 40.826 102.356 40.581 A 1.207 1.207 0 0 0 102.355 40.548 C 102.35 40.364 102.304 40.177 102.258 39.947 A 1.217 1.217 0 0 1 102.166 39.691 C 102.146 39.612 102.132 39.526 102.123 39.432 A 2.836 2.836 0 0 1 102.112 39.165 A 2.663 2.663 0 0 1 102.112 39.147 C 102.113 38.944 102.138 38.72 102.185 38.521 A 1.712 1.712 0 0 1 102.258 38.287 A 4.732 4.732 0 0 0 102.265 38.267 C 102.33 38.069 102.395 37.828 102.46 37.544 A 16.113 16.113 0 0 0 102.551 37.115 A 37.732 37.732 0 0 0 102.692 36.388 A 10.538 10.538 0 0 0 102.795 35.699 A 141.471 141.471 0 0 0 102.879 35.317 A 14.06 14.06 0 0 1 103.137 34.283 C 103.271 33.913 103.383 33.613 103.487 33.367 A 5.207 5.207 0 0 1 103.625 33.062 A 21.783 21.783 0 0 0 103.888 32.525 A 5.901 5.901 0 0 0 104.016 32.232 C 104.058 32.023 104.099 31.851 104.08 31.744 A 0.18 0.18 0 0 0 104.065 31.695 A 0.111 0.111 0 0 1 104.056 31.667 C 104.033 31.556 104.126 31.32 104.26 30.962 A 3.44 3.44 0 0 1 104.382 30.679 C 104.458 30.521 104.548 30.358 104.649 30.186 A 50.919 50.919 0 0 1 104.944 29.693 C 105.235 29.208 105.429 28.772 105.623 28.384 A 12.763 12.763 0 0 1 105.627 28.374 A 5.028 5.028 0 0 0 105.696 28.18 C 105.772 27.951 105.803 27.784 105.789 27.665 A 0.351 0.351 0 0 0 105.774 27.593 C 105.683 27.366 105.719 27.265 105.843 27.292 A 0.276 0.276 0 0 1 105.872 27.3 A 3.171 3.171 0 0 0 105.924 27.3 C 106.026 27.298 106.108 27.286 106.21 27.202 A 0.755 0.755 0 0 0 106.262 27.154 A 1.096 1.096 0 0 0 106.508 26.932 A 0.568 0.568 0 0 0 106.604 26.763 A 0.522 0.522 0 0 0 106.64 26.7 C 106.671 26.636 106.682 26.575 106.675 26.525 A 0.132 0.132 0 0 0 106.604 26.421 C 106.555 26.372 106.604 26.275 106.702 26.079 A 2.723 2.723 0 0 0 106.852 25.914 C 106.953 25.795 107.061 25.655 107.19 25.494 A 2.423 2.423 0 0 0 107.511 25.181 A 4.237 4.237 0 0 0 107.825 24.761 C 107.926 24.559 108.026 24.381 108.095 24.225 A 1.232 1.232 0 0 0 108.167 24.029 A 4.217 4.217 0 0 1 108.24 23.759 A 1.078 1.078 0 0 1 108.362 23.492 A 0.505 0.505 0 0 1 108.421 23.37 C 108.472 23.293 108.539 23.247 108.606 23.247 C 108.655 23.199 108.801 23.15 108.948 23.003 A 1.965 1.965 0 0 1 109.069 22.844 C 109.15 22.746 109.244 22.64 109.338 22.515 A 34.808 34.808 0 0 1 109.704 21.977 C 109.957 21.612 110.179 21.311 110.374 21.062 A 9.747 9.747 0 0 1 110.706 20.66 A 20.469 20.469 0 0 1 110.909 20.458 C 111.05 20.321 111.174 20.209 111.292 20.132 A 0.702 0.702 0 0 1 111.536 20.025 A 7.43 7.43 0 0 1 111.702 19.92 C 111.762 19.883 111.826 19.841 111.891 19.792 A 1.722 1.722 0 0 0 112.073 19.634 C 112.268 19.439 112.463 19.244 112.61 19.048 A 1.31 1.31 0 0 1 112.722 18.892 C 112.883 18.696 113.122 18.487 113.391 18.218 C 113.626 17.983 113.884 17.771 114.134 17.582 A 14.777 14.777 0 0 1 114.465 17.339 C 114.856 17.095 115.1 16.851 115.247 16.704 C 115.393 16.558 115.393 16.509 115.198 16.558 A 3.474 3.474 0 0 1 115.096 16.568 C 114.851 16.588 114.678 16.572 114.587 16.522 A 0.124 0.124 0 0 1 114.514 16.412 C 114.474 16.29 114.602 16.134 114.898 15.945 A 3.893 3.893 0 0 1 115.1 15.826 A 6.168 6.168 0 0 1 115.154 15.801 C 115.679 15.569 116.296 15.383 117.004 15.288 A 14.048 14.048 0 0 1 119.366 15.093 C 120.126 15.093 120.906 15.15 121.708 15.265 A 21.104 21.104 0 0 1 124.524 15.874 A 21.624 21.624 0 0 1 124.81 15.948 A 40.585 40.585 0 0 1 125.598 16.167 C 125.838 16.207 126.013 16.247 126.095 16.261 A 0.287 0.287 0 0 0 126.135 16.265 C 126.379 16.167 126.868 16.363 127.649 16.704 A 19.079 19.079 0 0 1 129.797 17.974 C 130.302 18.298 130.647 18.596 130.852 18.848 A 1.379 1.379 0 0 1 131.018 19.097 C 131.116 19.244 131.213 19.39 131.36 19.488 C 131.446 19.574 131.533 19.623 131.654 19.598 A 0.403 0.403 0 0 0 131.702 19.585 C 131.924 19.541 131.984 19.658 131.847 19.936 A 1.667 1.667 0 0 1 131.799 20.025 A 7.796 7.796 0 0 1 131.768 20.115 C 131.734 20.214 131.712 20.291 131.75 20.367 A 0.264 0.264 0 0 0 131.751 20.376 C 131.753 20.447 131.785 20.461 131.847 20.464 A 1.198 1.198 0 0 0 131.897 20.464 A 1.176 1.176 0 0 1 132.043 20.47 A 0.445 0.445 0 0 1 132.19 20.513 A 2.14 2.14 0 0 1 132.263 20.551 A 0.382 0.382 0 0 1 132.434 20.708 C 132.483 20.854 132.579 20.999 132.724 21.241 A 14.5 14.5 0 0 1 132.727 21.246 C 132.874 21.441 133.02 21.685 133.167 21.929 C 133.43 22.28 133.535 22.513 133.519 22.592 A 0.041 0.041 0 0 1 133.508 22.613 C 133.508 22.697 133.328 22.708 133.06 22.648 A 2.523 2.523 0 0 1 132.922 22.613 A 1.712 1.712 0 0 1 132.239 22.32 A 2.79 2.79 0 0 1 132.135 22.238 C 132.066 22.181 132.004 22.123 131.949 22.066 A 1.4 1.4 0 0 1 131.799 21.88 A 1.068 1.068 0 0 0 131.792 21.859 C 131.697 21.593 131.605 21.699 131.653 22.222 A 6.742 6.742 0 0 0 131.658 22.474 C 131.675 22.915 131.729 23.578 131.808 24.464 A 601.744 601.744 0 0 0 131.897 25.445 A 3.426 3.426 0 0 1 131.92 25.609 C 131.948 25.844 131.955 26.067 131.995 26.226 A 2.551 2.551 0 0 0 131.995 26.229 C 132.031 26.372 132.067 26.462 132.103 26.499 A 0.054 0.054 0 0 0 132.141 26.519 A 0.032 0.032 0 0 1 132.169 26.536 C 132.19 26.571 132.19 26.653 132.19 26.763 C 132.19 26.958 132.19 27.154 132.141 27.398 C 132.107 27.605 132.072 27.763 132.072 27.907 A 0.709 0.709 0 0 0 132.092 28.081 C 132.092 28.207 132.112 28.312 132.152 28.384 A 0.207 0.207 0 0 0 132.239 28.472 C 132.336 28.521 132.385 28.667 132.434 28.863 C 132.467 28.993 132.456 29.145 132.445 29.304 A 3.567 3.567 0 0 0 132.434 29.546 C 132.391 29.717 132.311 29.925 132.259 30.073 A 3.616 3.616 0 0 0 132.239 30.132 A 0.887 0.887 0 0 1 132.205 30.195 C 132.118 30.338 132.026 30.376 131.897 30.376 A 1.449 1.449 0 0 0 131.869 30.371 C 131.667 30.335 131.622 30.377 131.837 30.53 A 2.208 2.208 0 0 0 131.897 30.572 C 132.141 30.767 132.141 30.962 131.946 31.206 A 0.686 0.686 0 0 0 131.871 31.264 C 131.819 31.31 131.784 31.358 131.756 31.413 A 0.985 0.985 0 0 0 131.702 31.548 A 0.38 0.38 0 0 0 131.677 31.575 C 131.604 31.664 131.604 31.752 131.604 31.841 A 1.875 1.875 0 0 1 131.662 31.965 A 0.45 0.45 0 0 1 131.702 32.134 C 131.734 32.198 131.745 32.262 131.762 32.326 A 0.541 0.541 0 0 0 131.799 32.427 C 131.799 32.513 131.799 32.561 131.767 32.637 A 0.661 0.661 0 0 1 131.75 32.671 C 131.725 32.696 131.687 32.722 131.643 32.747 A 3.074 3.074 0 0 1 131.506 32.818 A 0.837 0.837 0 0 1 131.353 32.805 A 0.415 0.415 0 0 1 131.067 32.622 A 1.531 1.531 0 0 1 131.006 32.485 A 1.247 1.247 0 0 1 130.92 32.037 C 130.92 31.953 130.932 31.88 130.953 31.817 A 0.512 0.512 0 0 1 131.165 31.548 C 131.257 31.486 131.33 31.425 131.384 31.363 A 0.522 0.522 0 0 0 131.458 31.255 A 0.269 0.269 0 0 0 131.459 31.252 C 131.484 31.2 131.481 31.162 131.466 31.131 A 0.281 0.281 0 0 0 131.409 31.06 A 0.195 0.195 0 0 1 131.328 30.98 C 131.298 30.928 131.278 30.855 131.269 30.762 A 1.408 1.408 0 0 1 131.262 30.621 L 131.262 29.79 C 131.311 29.449 131.311 29.107 131.311 28.765 A 33.516 33.516 0 0 0 131.242 28.299 C 131.229 28.212 131.215 28.131 131.201 28.058 A 3.059 3.059 0 0 0 131.165 27.886 A 1.184 1.184 0 0 1 131.126 27.775 C 131.094 27.664 131.08 27.554 131.073 27.451 A 3.71 3.71 0 0 1 131.067 27.203 A 1.03 1.03 0 0 1 131.071 27.106 C 131.077 27.048 131.087 26.994 131.104 26.946 A 0.46 0.46 0 0 1 131.213 26.763 A 0.24 0.24 0 0 0 131.214 26.762 C 131.337 26.596 131.286 26.223 130.974 25.671 A 5.185 5.185 0 0 0 130.774 25.347 A 10.722 10.722 0 0 1 130.678 25.175 C 130.578 24.993 130.497 24.829 130.442 24.692 A 1.4 1.4 0 0 1 130.383 24.517 A 0.786 0.786 0 0 1 130.376 24.501 C 130.295 24.33 130.331 24.239 130.412 24.265 A 0.136 0.136 0 0 1 130.432 24.273 C 130.562 24.273 130.538 24.119 130.395 23.778 A 7.364 7.364 0 0 0 130.334 23.638 A 21.332 21.332 0 0 0 130.172 23.281 C 130.004 22.919 129.795 22.511 129.504 22.076 A 1034.879 1034.879 0 0 0 129.431 21.957 A 57.724 57.724 0 0 0 128.333 20.22 C 128.072 19.872 127.845 19.576 127.633 19.321 A 6.999 6.999 0 0 0 127.209 18.853 A 6.686 6.686 0 0 0 126.825 18.496 A 5.23 5.23 0 0 0 126.331 18.121 A 2.566 2.566 0 0 0 126.268 18.07 C 126.074 17.919 125.905 17.833 125.774 17.798 A 0.496 0.496 0 0 0 125.647 17.779 A 1.081 1.081 0 0 0 125.611 17.774 C 125.333 17.744 125.274 17.857 125.402 18.017 A 0.676 0.676 0 0 0 125.452 18.072 A 0.729 0.729 0 0 1 125.498 18.122 C 125.524 18.154 125.546 18.186 125.562 18.218 A 0.325 0.325 0 0 1 125.598 18.365 A 0.233 0.233 0 0 1 125.607 18.383 C 125.64 18.469 125.589 18.511 125.452 18.511 A 0.383 0.383 0 0 1 125.417 18.526 C 125.359 18.549 125.3 18.554 125.241 18.541 A 0.353 0.353 0 0 1 125.159 18.511 A 1.652 1.652 0 0 1 125.096 18.489 C 125.058 18.474 125.024 18.459 124.994 18.443 A 0.297 0.297 0 0 1 124.866 18.316 C 124.742 18.233 124.445 18.255 123.974 18.381 A 7.922 7.922 0 0 0 123.694 18.462 A 10 10 0 0 0 123.681 18.466 C 123.402 18.553 123.104 18.658 122.796 18.781 A 12.359 12.359 0 0 0 121.594 19.341 C 121.191 19.517 120.828 19.707 120.496 19.902 A 10.613 10.613 0 0 0 119.641 20.464 C 118.03 21.783 116.321 23.492 114.612 25.64 A 40.946 40.946 0 0 0 113.508 27.047 C 112.413 28.511 111.738 29.671 111.438 30.572 A 0.426 0.426 0 0 1 111.437 30.602 C 111.423 30.797 111.279 31.082 111.047 31.499 A 6.96 6.96 0 0 1 110.827 31.946 A 22.943 22.943 0 0 1 110.266 32.915 A 136.276 136.276 0 0 1 110.175 33.082 C 109.993 33.415 109.831 33.707 109.689 33.959 A 46.862 46.862 0 0 1 109.534 34.234 C 109.387 34.624 109.29 34.82 109.29 34.869 A 0.216 0.216 0 0 1 109.288 34.892 C 109.278 34.974 109.23 35.205 109.143 35.552 A 115.349 115.349 0 0 0 108.91 36.271 A 22.96 22.96 0 0 1 108.655 37.017 A 31.008 31.008 0 0 0 108.478 37.562 C 108.369 37.913 108.281 38.219 108.215 38.482 C 108.095 38.802 108.041 39.024 108.025 39.12 A 0.319 0.319 0 0 0 108.02 39.165 A 0.084 0.084 0 0 1 108.034 39.184 C 108.061 39.233 108.06 39.326 108.015 39.427 A 0.536 0.536 0 0 1 107.971 39.507 A 3.164 3.164 0 0 1 107.892 39.727 A 1.272 1.272 0 0 1 107.776 39.947 A 10.38 10.38 0 0 0 107.686 40.13 A 2.196 2.196 0 0 0 107.532 40.533 C 107.491 40.654 107.484 40.809 107.511 40.914 A 0.29 0.29 0 0 0 107.532 40.972 A 8.154 8.154 0 0 1 107.53 41.182 C 107.526 41.326 107.516 41.493 107.485 41.704 A 5.627 5.627 0 0 1 107.434 41.997 A 37.661 37.661 0 0 1 107.214 42.632 A 37.661 37.661 0 0 0 106.995 43.267 A 3.512 3.512 0 0 1 106.965 43.343 C 106.871 43.578 106.777 43.733 106.682 43.822 A 0.349 0.349 0 0 1 106.555 43.902 A 1.261 1.261 0 0 1 106.53 43.906 C 106.067 43.981 106.03 43.707 106.418 43.085 A 5.672 5.672 0 0 1 106.555 42.876 A 1.625 1.625 0 0 0 106.77 42.354 A 1.533 1.533 0 0 0 106.799 42.046 A 2.574 2.574 0 0 0 106.799 42.005 A 1.573 1.573 0 0 0 106.604 41.216 A 0.898 0.898 0 0 0 106.529 41.109 C 106.394 40.944 106.23 40.882 106.067 40.923 A 0.63 0.63 0 0 0 106.012 40.954 C 105.977 40.976 105.953 40.998 105.938 41.019 A 0.088 0.088 0 0 0 105.92 41.07 A 0.091 0.091 0 0 0 105.933 41.113 C 105.949 41.144 105.982 41.18 106.033 41.231 A 11.182 11.182 0 0 0 106.067 41.265 A 0.169 0.169 0 0 1 106.089 41.278 C 106.156 41.326 106.193 41.423 106.182 41.53 A 0.374 0.374 0 0 1 106.165 41.607 C 106.165 41.704 106.067 41.851 105.969 41.997 A 1.532 1.532 0 0 0 105.851 42.129 A 1.343 1.343 0 0 0 105.579 42.779 C 105.579 43.001 105.607 43.307 105.684 43.718 A 10.662 10.662 0 0 0 105.774 44.146 A 0.407 0.407 0 0 1 105.794 44.277 C 105.794 44.386 105.76 44.509 105.726 44.679 A 4.86 4.86 0 0 0 105.725 44.683 A 8.262 8.262 0 0 1 105.678 44.866 A 2.164 2.164 0 0 1 105.53 45.269 A 9.998 9.998 0 0 1 105.445 45.431 C 105.419 45.482 105.395 45.53 105.376 45.575 A 0.481 0.481 0 0 0 105.334 45.757 A 2.445 2.445 0 0 0 105.336 45.847 C 105.339 45.944 105.356 46.012 105.432 46.05 A 0.276 0.276 0 0 1 105.486 46.13 C 105.539 46.245 105.563 46.444 105.54 46.763 A 4.447 4.447 0 0 1 105.53 46.88 A 7.92 7.92 0 0 1 105.433 47.549 A 10.619 10.619 0 0 1 105.237 48.394 C 105.042 48.882 104.895 49.273 104.7 49.468 A 3.056 3.056 0 0 1 104.658 49.509 C 104.484 49.677 104.351 49.761 104.26 49.761 A 0.592 0.592 0 0 1 104.237 49.761 C 104.125 49.756 104.074 49.719 104.002 49.649 A 3.765 3.765 0 0 1 103.967 49.615 L 103.967 49.566 A 3.174 3.174 0 0 1 103.896 49.438 C 103.542 48.767 103.398 47.918 103.486 46.891 A 8.249 8.249 0 0 1 103.577 46.197 A 51.903 51.903 0 0 1 103.597 46.014 C 103.618 45.835 103.638 45.664 103.659 45.501 A 30.929 30.929 0 0 1 103.723 45.025 L 103.723 44.39 A 0.17 0.17 0 0 1 103.712 44.36 C 103.69 44.286 103.714 44.187 103.767 44.065 A 2.24 2.24 0 0 1 103.821 43.951 A 2.01 2.01 0 0 1 103.902 43.804 A 5.71 5.71 0 0 1 104.211 43.365 A 1.744 1.744 0 0 1 104.27 43.308 C 104.328 43.255 104.387 43.21 104.445 43.173 A 0.913 0.913 0 0 1 104.651 43.072 C 104.749 43.072 104.797 42.974 104.749 42.828 C 104.749 42.682 104.652 42.537 104.556 42.344 A 3.312 3.312 0 0 1 104.553 42.339 A 1.595 1.595 0 0 1 104.469 42.216 C 104.438 42.165 104.414 42.118 104.393 42.073 A 2.124 2.124 0 0 1 104.309 41.851 C 104.309 41.785 104.319 41.728 104.339 41.686 A 0.125 0.125 0 0 1 104.456 41.607 C 104.524 41.572 104.593 41.562 104.645 41.576 A 0.122 0.122 0 0 1 104.7 41.607 A 0.58 0.58 0 0 1 104.732 41.641 C 104.766 41.681 104.786 41.727 104.749 41.802 A 1.738 1.738 0 0 0 104.75 41.894 C 104.752 41.924 104.755 41.952 104.761 41.977 A 0.148 0.148 0 0 0 104.797 42.046 A 0.729 0.729 0 0 0 104.848 42.092 C 104.88 42.119 104.912 42.14 104.944 42.156 A 0.325 0.325 0 0 0 105.09 42.193 A 0.452 0.452 0 0 0 105.092 42.193 C 105.21 42.232 105.296 42.207 105.377 42.118 A 0.62 0.62 0 0 0 105.432 42.046 A 2.545 2.545 0 0 0 105.442 42.016 C 105.46 41.959 105.478 41.896 105.496 41.83 A 16.923 16.923 0 0 0 105.579 41.509 A 7.755 7.755 0 0 0 105.583 41.409 C 105.615 40.414 105.421 40.103 105.09 40.386 A 0.987 0.987 0 0 0 105.048 40.408 C 105.029 40.419 105.012 40.429 104.996 40.439 A 0.773 0.773 0 0 1 104.994 40.439 A 1.021 1.021 0 0 1 104.993 40.44 M 206.346 43.198 A 0.918 0.918 0 0 1 206.36 43.169 A 1.373 1.373 0 0 0 206.355 43.024 C 206.351 42.993 206.346 42.959 206.338 42.923 A 1.002 1.002 0 0 0 206.311 42.828 C 206.262 42.73 206.262 42.583 206.311 42.437 A 0.784 0.784 0 0 1 206.374 42.146 A 1.393 1.393 0 0 1 206.506 41.9 C 206.737 41.531 206.75 41.38 206.463 41.446 A 1.104 1.104 0 0 0 206.409 41.46 C 206.096 41.505 206.028 41.427 206.207 41.189 A 1.705 1.705 0 0 1 206.262 41.119 C 206.311 40.972 206.36 40.826 206.36 40.581 A 1.207 1.207 0 0 0 206.359 40.548 C 206.354 40.364 206.308 40.177 206.262 39.947 A 1.217 1.217 0 0 1 206.17 39.691 C 206.15 39.612 206.136 39.526 206.127 39.432 A 2.836 2.836 0 0 1 206.116 39.165 A 2.663 2.663 0 0 1 206.116 39.147 C 206.117 38.944 206.142 38.72 206.189 38.521 A 1.712 1.712 0 0 1 206.262 38.287 A 4.732 4.732 0 0 0 206.269 38.267 C 206.334 38.069 206.399 37.828 206.464 37.544 A 16.113 16.113 0 0 0 206.555 37.115 A 37.732 37.732 0 0 0 206.696 36.388 A 10.538 10.538 0 0 0 206.799 35.699 A 141.471 141.471 0 0 0 206.883 35.317 A 14.06 14.06 0 0 1 207.141 34.283 C 207.275 33.913 207.387 33.613 207.491 33.367 A 5.207 5.207 0 0 1 207.629 33.062 A 21.783 21.783 0 0 0 207.892 32.525 A 5.901 5.901 0 0 0 208.02 32.232 C 208.062 32.023 208.103 31.851 208.084 31.744 A 0.18 0.18 0 0 0 208.069 31.695 A 0.111 0.111 0 0 1 208.06 31.667 C 208.037 31.556 208.13 31.32 208.264 30.962 A 3.44 3.44 0 0 1 208.386 30.679 C 208.462 30.521 208.552 30.358 208.653 30.186 A 50.919 50.919 0 0 1 208.948 29.693 C 209.238 29.208 209.433 28.772 209.627 28.384 A 12.763 12.763 0 0 1 209.631 28.374 A 5.028 5.028 0 0 0 209.7 28.18 C 209.776 27.951 209.806 27.784 209.793 27.665 A 0.351 0.351 0 0 0 209.778 27.593 C 209.687 27.366 209.723 27.265 209.847 27.292 A 0.276 0.276 0 0 1 209.875 27.3 A 3.171 3.171 0 0 0 209.928 27.3 C 210.03 27.298 210.112 27.286 210.214 27.202 A 0.755 0.755 0 0 0 210.266 27.154 A 1.096 1.096 0 0 0 210.512 26.932 A 0.568 0.568 0 0 0 210.608 26.763 A 0.522 0.522 0 0 0 210.644 26.7 C 210.675 26.636 210.686 26.575 210.679 26.525 A 0.132 0.132 0 0 0 210.608 26.421 C 210.559 26.372 210.608 26.275 210.706 26.079 A 2.723 2.723 0 0 0 210.856 25.914 C 210.957 25.795 211.065 25.655 211.194 25.494 A 2.423 2.423 0 0 0 211.515 25.181 A 4.237 4.237 0 0 0 211.829 24.761 C 211.929 24.559 212.03 24.381 212.099 24.225 A 1.232 1.232 0 0 0 212.17 24.029 A 4.217 4.217 0 0 1 212.244 23.759 A 1.078 1.078 0 0 1 212.366 23.492 A 0.505 0.505 0 0 1 212.425 23.37 C 212.476 23.293 212.543 23.247 212.61 23.247 C 212.659 23.199 212.805 23.15 212.952 23.003 A 1.965 1.965 0 0 1 213.073 22.844 C 213.154 22.746 213.248 22.64 213.342 22.515 A 34.808 34.808 0 0 1 213.708 21.977 C 213.961 21.612 214.183 21.311 214.378 21.062 A 9.747 9.747 0 0 1 214.709 20.66 A 20.469 20.469 0 0 1 214.913 20.458 C 215.054 20.321 215.178 20.209 215.296 20.132 A 0.702 0.702 0 0 1 215.54 20.025 A 7.43 7.43 0 0 1 215.706 19.92 C 215.766 19.883 215.83 19.841 215.895 19.792 A 1.722 1.722 0 0 0 216.077 19.634 C 216.272 19.439 216.467 19.244 216.614 19.048 A 1.31 1.31 0 0 1 216.726 18.892 C 216.887 18.696 217.126 18.487 217.395 18.218 C 217.63 17.983 217.888 17.771 218.137 17.582 A 14.777 14.777 0 0 1 218.469 17.339 C 218.86 17.095 219.104 16.851 219.25 16.704 C 219.397 16.558 219.397 16.509 219.202 16.558 A 3.474 3.474 0 0 1 219.1 16.568 C 218.855 16.588 218.682 16.572 218.591 16.522 A 0.124 0.124 0 0 1 218.518 16.412 C 218.477 16.29 218.606 16.134 218.902 15.945 A 3.893 3.893 0 0 1 219.104 15.826 A 6.168 6.168 0 0 1 219.158 15.801 C 219.683 15.569 220.3 15.383 221.008 15.288 A 14.048 14.048 0 0 1 223.37 15.093 C 224.13 15.093 224.91 15.15 225.712 15.265 A 21.104 21.104 0 0 1 228.528 15.874 A 21.624 21.624 0 0 1 228.813 15.948 A 40.585 40.585 0 0 1 229.602 16.167 C 229.842 16.207 230.017 16.247 230.099 16.261 A 0.287 0.287 0 0 0 230.139 16.265 C 230.383 16.167 230.872 16.363 231.653 16.704 A 19.079 19.079 0 0 1 233.801 17.974 C 234.306 18.298 234.651 18.596 234.856 18.848 A 1.379 1.379 0 0 1 235.022 19.097 C 235.12 19.244 235.217 19.39 235.364 19.488 C 235.45 19.574 235.537 19.623 235.658 19.598 A 0.403 0.403 0 0 0 235.706 19.585 C 235.927 19.541 235.988 19.658 235.851 19.936 A 1.667 1.667 0 0 1 235.803 20.025 A 7.796 7.796 0 0 1 235.772 20.115 C 235.738 20.214 235.716 20.291 235.754 20.367 A 0.264 0.264 0 0 0 235.755 20.376 C 235.757 20.447 235.789 20.461 235.851 20.464 A 1.198 1.198 0 0 0 235.901 20.464 A 1.176 1.176 0 0 1 236.047 20.47 A 0.445 0.445 0 0 1 236.194 20.513 A 2.14 2.14 0 0 1 236.267 20.551 A 0.382 0.382 0 0 1 236.438 20.708 C 236.486 20.854 236.583 20.999 236.728 21.241 A 14.5 14.5 0 0 1 236.731 21.246 C 236.877 21.441 237.024 21.685 237.17 21.929 C 237.434 22.28 237.539 22.513 237.522 22.592 A 0.041 0.041 0 0 1 237.512 22.613 C 237.512 22.697 237.332 22.708 237.064 22.648 A 2.523 2.523 0 0 1 236.926 22.613 A 1.712 1.712 0 0 1 236.243 22.32 A 2.79 2.79 0 0 1 236.139 22.238 C 236.07 22.181 236.007 22.123 235.953 22.066 A 1.4 1.4 0 0 1 235.803 21.88 A 1.068 1.068 0 0 0 235.796 21.859 C 235.701 21.593 235.609 21.699 235.657 22.222 A 6.742 6.742 0 0 0 235.662 22.474 C 235.679 22.915 235.733 23.578 235.812 24.464 A 601.744 601.744 0 0 0 235.901 25.445 A 3.426 3.426 0 0 1 235.924 25.609 C 235.951 25.844 235.959 26.067 235.999 26.226 A 2.551 2.551 0 0 0 235.999 26.229 C 236.035 26.372 236.071 26.462 236.107 26.499 A 0.054 0.054 0 0 0 236.145 26.519 A 0.032 0.032 0 0 1 236.173 26.536 C 236.194 26.571 236.194 26.653 236.194 26.763 C 236.194 26.958 236.194 27.154 236.145 27.398 C 236.11 27.605 236.076 27.763 236.076 27.907 A 0.709 0.709 0 0 0 236.096 28.081 C 236.096 28.207 236.116 28.312 236.156 28.384 A 0.207 0.207 0 0 0 236.243 28.472 C 236.34 28.521 236.389 28.667 236.438 28.863 C 236.471 28.993 236.46 29.145 236.449 29.304 A 3.567 3.567 0 0 0 236.438 29.546 C 236.395 29.717 236.315 29.925 236.263 30.073 A 3.616 3.616 0 0 0 236.243 30.132 A 0.887 0.887 0 0 1 236.208 30.195 C 236.122 30.338 236.03 30.376 235.901 30.376 A 1.449 1.449 0 0 0 235.873 30.371 C 235.67 30.335 235.626 30.377 235.841 30.53 A 2.208 2.208 0 0 0 235.901 30.572 C 236.145 30.767 236.145 30.962 235.95 31.206 A 0.686 0.686 0 0 0 235.874 31.264 C 235.823 31.31 235.788 31.358 235.76 31.413 A 0.985 0.985 0 0 0 235.706 31.548 A 0.38 0.38 0 0 0 235.681 31.575 C 235.608 31.664 235.608 31.752 235.608 31.841 A 1.875 1.875 0 0 1 235.666 31.965 A 0.45 0.45 0 0 1 235.706 32.134 C 235.738 32.198 235.749 32.262 235.766 32.326 A 0.541 0.541 0 0 0 235.803 32.427 C 235.803 32.513 235.803 32.561 235.771 32.637 A 0.661 0.661 0 0 1 235.754 32.671 C 235.729 32.696 235.691 32.722 235.647 32.747 A 3.074 3.074 0 0 1 235.51 32.818 A 0.837 0.837 0 0 1 235.357 32.805 A 0.415 0.415 0 0 1 235.071 32.622 A 1.531 1.531 0 0 1 235.01 32.485 A 1.247 1.247 0 0 1 234.924 32.037 C 234.924 31.953 234.936 31.88 234.957 31.817 A 0.512 0.512 0 0 1 235.168 31.548 C 235.261 31.486 235.334 31.425 235.388 31.363 A 0.522 0.522 0 0 0 235.461 31.255 A 0.269 0.269 0 0 0 235.463 31.252 C 235.488 31.2 235.485 31.162 235.47 31.131 A 0.281 0.281 0 0 0 235.413 31.06 A 0.195 0.195 0 0 1 235.332 30.98 C 235.302 30.928 235.282 30.855 235.273 30.762 A 1.408 1.408 0 0 1 235.266 30.621 L 235.266 29.79 C 235.315 29.449 235.315 29.107 235.315 28.765 A 33.516 33.516 0 0 0 235.246 28.299 C 235.233 28.212 235.219 28.131 235.205 28.058 A 3.059 3.059 0 0 0 235.168 27.886 A 1.184 1.184 0 0 1 235.13 27.775 C 235.098 27.664 235.083 27.554 235.077 27.451 A 3.71 3.71 0 0 1 235.071 27.203 A 1.03 1.03 0 0 1 235.075 27.106 C 235.081 27.048 235.091 26.994 235.107 26.946 A 0.46 0.46 0 0 1 235.217 26.763 A 0.24 0.24 0 0 0 235.218 26.762 C 235.341 26.596 235.29 26.223 234.978 25.671 A 5.185 5.185 0 0 0 234.778 25.347 A 10.722 10.722 0 0 1 234.682 25.175 C 234.582 24.993 234.501 24.829 234.446 24.692 A 1.4 1.4 0 0 1 234.387 24.517 A 0.786 0.786 0 0 1 234.379 24.501 C 234.299 24.33 234.335 24.239 234.416 24.265 A 0.136 0.136 0 0 1 234.436 24.273 C 234.566 24.273 234.542 24.119 234.399 23.778 A 7.364 7.364 0 0 0 234.338 23.638 A 21.332 21.332 0 0 0 234.176 23.281 C 234.008 22.919 233.799 22.511 233.508 22.076 A 1034.879 1034.879 0 0 0 233.435 21.957 A 57.724 57.724 0 0 0 232.336 20.22 C 232.076 19.872 231.849 19.576 231.636 19.321 A 6.999 6.999 0 0 0 231.213 18.853 A 6.686 6.686 0 0 0 230.829 18.496 A 5.23 5.23 0 0 0 230.334 18.121 A 2.566 2.566 0 0 0 230.272 18.07 C 230.078 17.919 229.909 17.833 229.778 17.798 A 0.496 0.496 0 0 0 229.651 17.779 A 1.081 1.081 0 0 0 229.615 17.774 C 229.337 17.744 229.278 17.857 229.406 18.017 A 0.676 0.676 0 0 0 229.456 18.072 A 0.729 0.729 0 0 1 229.502 18.122 C 229.528 18.154 229.549 18.186 229.565 18.218 A 0.325 0.325 0 0 1 229.602 18.365 A 0.233 0.233 0 0 1 229.61 18.383 C 229.644 18.469 229.592 18.511 229.456 18.511 A 0.383 0.383 0 0 1 229.421 18.526 C 229.362 18.549 229.304 18.554 229.245 18.541 A 0.353 0.353 0 0 1 229.163 18.511 A 1.652 1.652 0 0 1 229.1 18.489 C 229.062 18.474 229.028 18.459 228.998 18.443 A 0.297 0.297 0 0 1 228.87 18.316 C 228.746 18.233 228.449 18.255 227.977 18.381 A 7.922 7.922 0 0 0 227.698 18.462 A 10 10 0 0 0 227.684 18.466 C 227.406 18.553 227.108 18.658 226.8 18.781 A 12.359 12.359 0 0 0 225.598 19.341 C 225.195 19.517 224.831 19.707 224.5 19.902 A 10.613 10.613 0 0 0 223.645 20.464 C 222.034 21.783 220.325 23.492 218.616 25.64 A 40.946 40.946 0 0 0 217.512 27.047 C 216.417 28.511 215.742 29.671 215.442 30.572 A 0.426 0.426 0 0 1 215.441 30.602 C 215.427 30.797 215.283 31.082 215.051 31.499 A 6.96 6.96 0 0 1 214.831 31.946 A 22.943 22.943 0 0 1 214.27 32.915 A 136.276 136.276 0 0 1 214.179 33.082 C 213.997 33.415 213.835 33.707 213.693 33.959 A 46.862 46.862 0 0 1 213.538 34.234 C 213.391 34.624 213.293 34.82 213.293 34.869 A 0.216 0.216 0 0 1 213.292 34.892 C 213.282 34.974 213.234 35.205 213.147 35.552 A 115.349 115.349 0 0 0 212.914 36.271 A 22.96 22.96 0 0 1 212.659 37.017 A 31.008 31.008 0 0 0 212.482 37.562 C 212.373 37.913 212.285 38.219 212.219 38.482 C 212.099 38.802 212.045 39.024 212.029 39.12 A 0.319 0.319 0 0 0 212.024 39.165 A 0.084 0.084 0 0 1 212.038 39.184 C 212.065 39.233 212.064 39.326 212.019 39.427 A 0.536 0.536 0 0 1 211.975 39.507 A 3.164 3.164 0 0 1 211.896 39.727 A 1.272 1.272 0 0 1 211.78 39.947 A 10.38 10.38 0 0 0 211.69 40.13 A 2.196 2.196 0 0 0 211.536 40.533 C 211.495 40.654 211.488 40.809 211.515 40.914 A 0.29 0.29 0 0 0 211.536 40.972 A 8.154 8.154 0 0 1 211.534 41.182 C 211.53 41.326 211.52 41.493 211.489 41.704 A 5.627 5.627 0 0 1 211.438 41.997 A 37.661 37.661 0 0 1 211.218 42.632 A 37.661 37.661 0 0 0 210.999 43.267 A 3.512 3.512 0 0 1 210.969 43.343 C 210.875 43.578 210.78 43.733 210.686 43.822 A 0.349 0.349 0 0 1 210.559 43.902 A 1.261 1.261 0 0 1 210.534 43.906 C 210.071 43.981 210.034 43.707 210.422 43.085 A 5.672 5.672 0 0 1 210.559 42.876 A 1.625 1.625 0 0 0 210.774 42.354 A 1.533 1.533 0 0 0 210.803 42.046 A 2.574 2.574 0 0 0 210.803 42.005 A 1.573 1.573 0 0 0 210.608 41.216 A 0.898 0.898 0 0 0 210.533 41.109 C 210.398 40.944 210.234 40.882 210.071 40.923 A 0.63 0.63 0 0 0 210.016 40.954 C 209.981 40.976 209.957 40.998 209.942 41.019 A 0.088 0.088 0 0 0 209.924 41.07 A 0.091 0.091 0 0 0 209.936 41.113 C 209.953 41.144 209.986 41.18 210.036 41.231 A 11.182 11.182 0 0 0 210.071 41.265 A 0.169 0.169 0 0 1 210.093 41.278 C 210.16 41.326 210.197 41.423 210.185 41.53 A 0.374 0.374 0 0 1 210.168 41.607 C 210.168 41.704 210.071 41.851 209.973 41.997 A 1.532 1.532 0 0 0 209.855 42.129 A 1.343 1.343 0 0 0 209.583 42.779 C 209.583 43.001 209.611 43.307 209.688 43.718 A 10.662 10.662 0 0 0 209.778 44.146 A 0.407 0.407 0 0 1 209.798 44.277 C 209.798 44.386 209.764 44.509 209.73 44.679 A 4.86 4.86 0 0 0 209.729 44.683 A 8.262 8.262 0 0 1 209.682 44.866 A 2.164 2.164 0 0 1 209.534 45.269 A 9.998 9.998 0 0 1 209.449 45.431 C 209.423 45.482 209.399 45.53 209.38 45.575 A 0.481 0.481 0 0 0 209.338 45.757 A 2.445 2.445 0 0 0 209.339 45.847 C 209.343 45.944 209.36 46.012 209.436 46.05 A 0.276 0.276 0 0 1 209.49 46.13 C 209.543 46.245 209.567 46.444 209.544 46.763 A 4.447 4.447 0 0 1 209.534 46.88 A 7.92 7.92 0 0 1 209.437 47.549 A 10.619 10.619 0 0 1 209.241 48.394 C 209.045 48.882 208.899 49.273 208.704 49.468 A 3.056 3.056 0 0 1 208.662 49.509 C 208.488 49.677 208.355 49.761 208.264 49.761 A 0.592 0.592 0 0 1 208.241 49.761 C 208.129 49.756 208.078 49.719 208.006 49.649 A 3.765 3.765 0 0 1 207.971 49.615 L 207.971 49.566 A 3.174 3.174 0 0 1 207.9 49.438 C 207.546 48.767 207.402 47.918 207.49 46.891 A 8.249 8.249 0 0 1 207.581 46.197 A 51.903 51.903 0 0 1 207.601 46.014 C 207.622 45.835 207.642 45.664 207.663 45.501 A 30.929 30.929 0 0 1 207.727 45.025 L 207.727 44.39 A 0.17 0.17 0 0 1 207.716 44.36 C 207.694 44.286 207.718 44.187 207.771 44.065 A 2.24 2.24 0 0 1 207.825 43.951 A 2.01 2.01 0 0 1 207.906 43.804 A 5.71 5.71 0 0 1 208.215 43.365 A 1.744 1.744 0 0 1 208.274 43.308 C 208.332 43.255 208.391 43.21 208.449 43.173 A 0.913 0.913 0 0 1 208.655 43.072 C 208.752 43.072 208.801 42.974 208.752 42.828 C 208.752 42.682 208.656 42.537 208.559 42.344 A 3.312 3.312 0 0 1 208.557 42.339 A 1.595 1.595 0 0 1 208.473 42.216 C 208.442 42.165 208.417 42.118 208.397 42.073 A 2.124 2.124 0 0 1 208.313 41.851 C 208.313 41.785 208.323 41.728 208.343 41.686 A 0.125 0.125 0 0 1 208.459 41.607 C 208.528 41.572 208.597 41.562 208.648 41.576 A 0.122 0.122 0 0 1 208.704 41.607 A 0.58 0.58 0 0 1 208.736 41.641 C 208.77 41.681 208.79 41.727 208.752 41.802 A 1.738 1.738 0 0 0 208.754 41.894 C 208.756 41.924 208.759 41.952 208.765 41.977 A 0.148 0.148 0 0 0 208.801 42.046 A 0.729 0.729 0 0 0 208.852 42.092 C 208.884 42.119 208.916 42.14 208.948 42.156 A 0.325 0.325 0 0 0 209.094 42.193 A 0.452 0.452 0 0 0 209.096 42.193 C 209.214 42.232 209.3 42.207 209.381 42.118 A 0.62 0.62 0 0 0 209.436 42.046 A 2.545 2.545 0 0 0 209.446 42.016 C 209.464 41.959 209.482 41.896 209.5 41.83 A 16.923 16.923 0 0 0 209.583 41.509 A 7.755 7.755 0 0 0 209.586 41.409 C 209.619 40.414 209.425 40.103 209.094 40.386 A 0.987 0.987 0 0 0 209.052 40.408 C 209.033 40.419 209.016 40.429 208.999 40.439 A 0.773 0.773 0 0 1 208.998 40.439 A 1.021 1.021 0 0 1 208.997 40.44 M 71.73 34.834 C 71.747 34.797 71.764 34.769 71.803 34.743 A 0.308 0.308 0 0 1 71.838 34.722 C 71.936 34.673 72.083 34.527 72.278 34.331 A 4.315 4.315 0 0 0 72.62 33.935 C 72.729 33.794 72.839 33.648 72.961 33.501 C 73.206 33.16 73.401 32.867 73.547 32.622 A 6.43 6.43 0 0 0 73.589 32.552 C 73.682 32.392 73.75 32.257 73.778 32.163 A 0.286 0.286 0 0 0 73.792 32.085 C 73.759 32.02 73.704 31.954 73.627 31.918 A 0.3 0.3 0 0 0 73.499 31.89 A 1.196 1.196 0 0 0 73.242 31.918 A 1.411 1.411 0 0 0 72.913 32.037 A 0.758 0.758 0 0 0 72.737 32.094 A 1.307 1.307 0 0 0 72.375 32.378 C 71.647 33.198 71.64 32.786 72.396 31.14 A 32.368 32.368 0 0 1 72.571 30.767 A 40.047 40.047 0 0 1 72.77 30.336 C 72.924 30.008 73.053 29.741 73.157 29.497 A 22.816 22.816 0 0 1 73.202 29.396 C 73.328 29.116 73.432 28.901 73.514 28.735 A 36.094 36.094 0 0 1 73.596 28.57 C 73.694 28.374 73.743 28.228 73.84 28.179 A 0.422 0.422 0 0 1 73.844 28.171 C 73.865 28.133 73.892 28.094 73.925 28.055 A 2.637 2.637 0 0 1 74.084 27.886 L 74.182 27.788 A 4.669 4.669 0 0 1 74.253 27.719 C 74.455 27.526 74.578 27.447 74.622 27.447 C 74.622 27.489 74.622 27.57 74.589 27.752 A 4.233 4.233 0 0 1 74.573 27.837 A 2.482 2.482 0 0 0 74.548 27.962 C 74.5 28.249 74.531 28.436 74.679 28.522 A 0.4 0.4 0 0 0 74.817 28.57 C 75.11 28.619 75.403 28.423 75.745 28.033 A 9.142 9.142 0 0 0 76.721 26.617 A 8.462 8.462 0 0 0 76.927 26.223 C 77.008 26.056 77.08 25.894 77.14 25.742 A 3.904 3.904 0 0 0 77.258 25.396 A 4.159 4.159 0 0 0 77.288 25.27 C 77.335 25.052 77.344 24.906 77.314 24.809 A 0.227 0.227 0 0 0 77.258 24.712 C 77.161 24.712 76.965 24.761 76.721 24.956 A 6.015 6.015 0 0 0 76.355 25.359 A 8.077 8.077 0 0 0 75.989 25.835 C 75.806 26.092 75.623 26.348 75.46 26.563 A 9.175 9.175 0 0 1 75.305 26.763 C 75.125 26.943 74.998 27.044 74.904 27.084 A 0.224 0.224 0 0 1 74.817 27.105 A 0.192 0.192 0 0 1 74.785 27.103 C 74.729 27.093 74.721 27.052 74.719 26.96 A 4.195 4.195 0 0 1 74.719 26.91 A 1.006 1.006 0 0 1 74.802 26.729 C 74.83 26.68 74.863 26.63 74.9 26.576 A 5.146 5.146 0 0 1 75.012 26.421 A 3.305 3.305 0 0 0 75.086 26.319 C 75.148 26.229 75.211 26.13 75.273 26.022 A 6.24 6.24 0 0 0 75.452 25.689 C 75.598 25.445 75.696 25.201 75.745 25.054 A 7.634 7.634 0 0 1 75.877 24.798 A 2.715 2.715 0 0 1 76.086 24.468 C 76.184 24.273 76.331 24.126 76.477 23.98 A 0.967 0.967 0 0 0 76.484 23.972 C 76.593 23.861 76.728 23.671 76.89 23.402 A 10.525 10.525 0 0 0 77.063 23.101 A 17.356 17.356 0 0 0 77.423 22.43 A 7.002 7.002 0 0 0 77.747 21.685 C 77.903 21.341 78.019 21.017 78.108 20.726 A 9.102 9.102 0 0 0 78.235 20.269 A 2.992 2.992 0 0 0 78.244 20.244 C 78.362 19.921 78.378 19.701 78.35 19.585 A 0.231 0.231 0 0 0 78.333 19.537 A 0.216 0.216 0 0 0 78.318 19.532 C 78.17 19.494 77.934 19.596 77.698 19.927 C 77.405 20.318 77.161 20.708 76.868 21.246 A 11.374 11.374 0 0 0 76.661 21.605 C 76.552 21.802 76.453 21.996 76.368 22.179 A 6.166 6.166 0 0 0 76.184 22.613 A 6.648 6.648 0 0 1 75.958 23.028 C 75.919 23.095 75.877 23.162 75.834 23.231 A 10.791 10.791 0 0 1 75.696 23.443 A 31.787 31.787 0 0 1 75.5 23.637 C 75.438 23.698 75.379 23.755 75.321 23.808 A 3.333 3.333 0 0 1 75.061 24.029 A 2.674 2.674 0 0 1 75.043 24.041 C 74.76 24.226 74.571 24.271 74.475 24.175 A 0.289 0.289 0 0 1 74.418 24.083 C 74.371 23.973 74.338 23.79 74.308 23.524 A 12.841 12.841 0 0 1 74.28 23.247 A 5.791 5.791 0 0 1 74.258 23.132 C 74.183 22.712 74.19 22.454 74.28 22.32 C 74.323 22.234 74.479 22.186 74.716 22.242 A 1.193 1.193 0 0 1 74.817 22.271 A 0.496 0.496 0 0 0 74.982 22.241 C 75.283 22.135 75.619 21.742 75.989 21.001 A 20.03 20.03 0 0 0 76.362 20.21 C 76.525 19.844 76.693 19.442 76.864 19.008 A 37.79 37.79 0 0 0 77.405 17.535 A 16.27 16.27 0 0 1 77.447 17.421 C 77.635 16.915 77.868 16.367 78.186 15.777 A 17.3 17.3 0 0 1 78.426 15.347 C 78.685 14.896 78.938 14.502 79.163 14.165 A 7.297 7.297 0 0 1 79.281 14.001 C 79.562 13.622 79.772 13.433 79.944 13.433 C 80.042 13.433 80.286 13.482 80.676 13.628 C 81.116 13.775 81.555 13.97 82.141 14.165 A 14.168 14.168 0 0 1 83.703 14.899 A 9.871 9.871 0 0 1 86.389 16.997 C 87.419 18.12 87.955 19.154 87.955 20.097 A 2.458 2.458 0 0 1 87.952 20.22 C 87.952 20.367 87.854 20.562 87.756 20.806 C 87.659 21.001 87.512 21.246 87.415 21.392 C 87.3 21.545 87.215 21.638 87.16 21.671 A 0.079 0.079 0 0 1 87.122 21.685 A 0.34 0.34 0 0 0 87.03 21.699 C 86.69 21.795 86.107 22.386 85.3 23.513 A 28.178 28.178 0 0 0 84.68 24.419 C 84.241 25.054 83.704 25.738 83.118 26.568 C 82.587 27.34 82.151 27.874 81.811 28.31 A 28.244 28.244 0 0 0 81.799 28.326 C 81.506 28.716 81.213 29.107 81.018 29.4 A 10.725 10.725 0 0 0 80.652 29.949 A 14.044 14.044 0 0 0 80.286 30.572 A 21.018 21.018 0 0 1 80.27 30.604 C 80.027 31.088 79.69 31.713 79.26 32.525 A 7.053 7.053 0 0 1 78.892 33.074 A 12.151 12.151 0 0 1 78.137 33.99 A 2.265 2.265 0 0 0 78.079 34.04 C 77.9 34.2 77.757 34.376 77.627 34.53 A 3.236 3.236 0 0 1 77.454 34.722 A 0.861 0.861 0 0 1 77.441 34.746 C 77.34 34.933 77.153 35.122 76.965 35.357 C 76.477 35.894 76.086 36.48 75.696 37.066 L 74.915 38.579 L 75.745 38.628 A 13.537 13.537 0 0 1 75.916 38.629 C 76.48 38.636 76.468 38.685 75.882 38.838 A 15.976 15.976 0 0 1 75.745 38.872 L 75.696 38.872 A 5.543 5.543 0 0 0 75.693 38.873 C 74.914 39.117 74.671 39.361 74.866 39.605 C 75.058 39.836 75.464 39.976 76.106 40.025 A 7.518 7.518 0 0 0 76.672 40.044 A 9.409 9.409 0 0 0 77.844 40.093 C 78.577 40.093 79.114 40.142 79.553 40.142 A 1.859 1.859 0 0 1 79.673 40.146 C 79.873 40.16 80.161 40.2 80.481 40.24 A 26.637 26.637 0 0 0 82.019 40.423 A 34.483 34.483 0 0 0 83.704 40.533 C 84.515 40.533 85.14 40.57 85.545 40.579 A 7.015 7.015 0 0 0 85.706 40.581 A 9.428 9.428 0 0 1 85.827 40.596 C 86.097 40.629 86.256 40.663 86.336 40.696 A 0.167 0.167 0 0 1 86.389 40.728 A 0.269 0.269 0 0 1 86.392 40.731 C 86.474 40.815 86.446 40.9 86.309 41.017 A 1.385 1.385 0 0 1 86.243 41.07 C 86.03 41.283 85.894 41.444 85.817 41.572 A 0.677 0.677 0 0 0 85.754 41.704 A 0.325 0.325 0 0 0 85.749 41.724 C 85.718 41.84 85.798 41.846 85.989 41.776 A 2.29 2.29 0 0 0 86.047 41.753 C 86.145 41.704 86.243 41.704 86.389 41.704 A 0.702 0.702 0 0 1 86.643 41.753 A 0.953 0.953 0 0 1 86.829 41.851 C 87.122 41.997 86.731 42.242 85.608 42.583 A 17.996 17.996 0 0 1 84.695 42.877 A 56.492 56.492 0 0 1 83.264 43.267 C 82.66 43.435 82.125 43.603 81.675 43.755 A 25.811 25.811 0 0 0 81.116 43.951 A 4.32 4.32 0 0 0 80.897 44.022 C 80.59 44.132 80.426 44.243 80.426 44.353 A 0.116 0.116 0 0 0 80.432 44.39 A 0.186 0.186 0 0 1 80.441 44.449 C 80.441 44.587 80.303 44.757 80.09 44.927 A 2.921 2.921 0 0 1 79.678 45.155 A 3.571 3.571 0 0 1 79.065 45.367 A 4.452 4.452 0 0 1 78.92 45.406 C 78.718 45.456 78.538 45.482 78.391 45.462 A 0.501 0.501 0 0 1 78.235 45.415 C 78.137 45.367 77.991 45.367 77.844 45.367 A 0.653 0.653 0 0 0 77.749 45.374 A 0.524 0.524 0 0 0 77.454 45.513 A 6.099 6.099 0 0 0 77.378 45.539 C 77.262 45.58 77.103 45.635 76.903 45.676 A 2.89 2.89 0 0 1 76.721 45.708 A 16.15 16.15 0 0 1 76.456 45.744 A 6.915 6.915 0 0 1 75.598 45.806 A 11.965 11.965 0 0 1 74.939 45.855 A 11.965 11.965 0 0 0 74.28 45.904 A 24.245 24.245 0 0 0 74.223 45.909 C 73.944 45.938 73.713 45.967 73.512 45.995 A 14.916 14.916 0 0 0 73.157 46.05 A 2.172 2.172 0 0 0 73.079 46.078 C 73.039 46.093 73.002 46.108 72.968 46.123 A 3.614 3.614 0 0 0 72.815 46.197 A 0.11 0.11 0 0 0 72.795 46.199 C 72.754 46.207 72.695 46.235 72.652 46.267 A 0.286 0.286 0 0 0 72.62 46.294 A 0.261 0.261 0 0 1 72.599 46.313 C 72.546 46.355 72.467 46.392 72.424 46.392 A 0.945 0.945 0 0 0 72.4 46.405 A 4.681 4.681 0 0 0 72.352 46.431 M 159.534 25.542 A 0.247 0.247 0 0 0 159.452 25.559 C 159.377 25.586 159.288 25.642 159.196 25.703 A 14.183 14.183 0 0 0 159.143 25.738 A 0.628 0.628 0 0 0 158.962 25.964 C 158.894 26.099 158.848 26.275 158.817 26.491 A 3.974 3.974 0 0 0 158.801 26.617 A 19.591 19.591 0 0 0 158.804 26.964 C 158.81 27.367 158.838 27.935 158.948 28.667 C 158.997 29.4 159.045 30.035 159.094 30.572 C 159.143 31.109 159.143 31.402 159.143 31.548 C 159.143 31.643 159.143 32.062 159.098 32.76 A 27.385 27.385 0 0 1 159.094 32.818 A 20.236 20.236 0 0 0 159.065 33.395 C 159.05 33.797 159.041 34.237 159.026 34.713 A 47.562 47.562 0 0 1 158.997 35.454 A 397.638 397.638 0 0 0 158.997 36.344 C 158.999 37.105 159.006 37.682 159.031 38.091 A 6.75 6.75 0 0 0 159.045 38.287 A 3.562 3.562 0 0 0 159.077 38.526 C 159.119 38.774 159.183 38.928 159.28 38.989 A 0.197 0.197 0 0 0 159.387 39.019 A 1.794 1.794 0 0 1 159.452 39.02 C 159.542 39.023 159.651 39.039 159.729 39.117 A 1.102 1.102 0 0 1 159.863 39.219 A 0.552 0.552 0 0 1 160.022 39.458 C 160.12 39.703 160.12 40.093 160.12 40.581 A 7.947 7.947 0 0 1 160.035 41.216 A 16.261 16.261 0 0 1 159.875 41.997 A 2.395 2.395 0 0 1 159.805 42.232 C 159.728 42.445 159.634 42.584 159.537 42.622 A 0.143 0.143 0 0 1 159.485 42.632 C 159.29 42.681 159.338 42.779 159.68 43.023 A 1.132 1.132 0 0 1 159.912 43.174 C 160.045 43.287 160.132 43.426 160.198 43.602 A 1.712 1.712 0 0 1 160.217 43.658 A 1.58 1.58 0 0 1 160.3 43.924 C 160.312 43.984 160.319 44.042 160.319 44.099 A 0.535 0.535 0 0 1 160.266 44.341 C 160.222 44.516 160.101 44.573 159.902 44.514 A 0.869 0.869 0 0 1 159.827 44.488 A 0.649 0.649 0 0 0 159.758 44.474 C 159.689 44.465 159.629 44.469 159.578 44.487 A 0.224 0.224 0 0 0 159.436 44.634 A 0.455 0.455 0 0 0 159.376 44.788 C 159.342 44.939 159.339 45.159 159.338 45.462 A 96.607 96.607 0 0 0 159.338 45.562 C 159.386 46.562 159.48 46.726 159.621 46.008 A 7.074 7.074 0 0 0 159.631 45.953 A 7.516 7.516 0 0 1 159.664 45.857 C 159.824 45.396 159.869 45.449 159.832 46.016 A 11.746 11.746 0 0 1 159.827 46.099 C 159.744 46.762 159.766 47.953 159.865 49.641 A 113.478 113.478 0 0 0 159.924 50.591 A 24.72 24.72 0 0 0 160.065 52.276 A 48.172 48.172 0 0 0 160.315 54.107 A 78.659 78.659 0 0 0 160.535 55.508 C 160.611 55.965 160.687 56.393 160.764 56.791 A 38.472 38.472 0 0 0 160.901 57.476 C 161.096 58.404 161.243 59.185 161.34 59.869 A 53.962 53.962 0 0 1 161.383 60.174 C 161.446 60.629 161.474 60.91 161.447 61.016 A 0.124 0.124 0 0 1 161.438 61.04 A 0.661 0.661 0 0 0 161.422 61.075 C 161.389 61.151 161.389 61.199 161.389 61.285 C 161.438 61.333 161.487 61.333 161.584 61.333 A 0.32 0.32 0 0 1 161.667 61.396 C 161.726 61.457 161.795 61.553 161.89 61.694 A 35.119 35.119 0 0 1 161.975 61.822 C 162.17 62.115 162.317 62.505 162.463 62.994 A 10.638 10.638 0 0 0 164.411 66.399 A 11.811 11.811 0 0 0 165.247 67.29 A 1.4 1.4 0 0 1 165.432 67.44 C 165.49 67.495 165.547 67.557 165.605 67.626 A 2.79 2.79 0 0 1 165.686 67.73 A 8.736 8.736 0 0 0 166.189 68.188 A 36.709 36.709 0 0 0 166.516 68.462 A 2.364 2.364 0 0 0 167.127 68.909 A 1.726 1.726 0 0 0 167.346 68.999 A 5.369 5.369 0 0 1 168.033 69.263 A 2.074 2.074 0 0 1 168.176 69.341 A 4.053 4.053 0 0 0 168.381 69.417 C 168.511 69.461 168.623 69.492 168.717 69.522 A 2.977 2.977 0 0 1 168.762 69.537 A 0.752 0.752 0 0 0 168.871 69.564 C 168.953 69.578 169.027 69.576 169.072 69.557 A 0.097 0.097 0 0 0 169.104 69.537 A 0.243 0.243 0 0 0 169.139 69.491 C 169.171 69.438 169.189 69.365 169.153 69.292 A 1.738 1.738 0 0 0 169.117 69.193 C 169.081 69.104 169.039 69.027 168.975 68.929 A 3.102 3.102 0 0 0 168.958 68.902 L 168.811 68.609 A 1.198 1.198 0 0 1 168.812 68.559 C 168.814 68.497 168.828 68.465 168.899 68.462 A 0.264 0.264 0 0 1 168.909 68.462 C 168.958 68.462 169.006 68.511 169.153 68.609 A 0.71 0.71 0 0 1 169.256 68.674 C 169.297 68.705 169.342 68.741 169.392 68.78 A 2.093 2.093 0 0 0 169.495 68.853 C 169.788 69.097 170.081 69.292 170.422 69.488 A 4.882 4.882 0 0 0 170.66 69.598 A 17.094 17.094 0 0 0 171.106 69.781 A 17.21 17.21 0 0 1 171.418 69.836 A 33.456 33.456 0 0 1 171.887 69.927 L 172.278 69.927 A 7.951 7.951 0 0 1 171.575 69.297 A 6.697 6.697 0 0 1 171.057 68.706 A 14.101 14.101 0 0 1 170.793 68.396 C 170.546 68.096 170.286 67.755 170.048 67.391 A 9.215 9.215 0 0 1 169.983 67.29 A 6.783 6.783 0 0 1 169.425 66.197 C 169.263 65.787 169.156 65.385 169.104 64.996 A 7.805 7.805 0 0 0 168.86 63.97 A 10.626 10.626 0 0 1 168.572 62.926 C 168.464 62.442 168.378 61.911 168.323 61.333 A 11.021 11.021 0 0 0 168.169 60.279 A 41.743 41.743 0 0 0 168.079 59.82 A 50.453 50.453 0 0 1 167.822 58.282 A 36.795 36.795 0 0 1 167.639 56.89 A 99.986 99.986 0 0 0 167.566 56.383 C 167.542 56.221 167.518 56.065 167.494 55.92 A 16.08 16.08 0 0 0 167.493 55.913 A 7.982 7.982 0 0 1 167.507 55.459 C 167.528 55.094 167.572 54.659 167.639 54.156 A 11.181 11.181 0 0 0 167.802 53.079 C 167.836 52.735 167.852 52.405 167.852 52.089 A 9.13 9.13 0 0 0 167.834 51.519 A 1.947 1.947 0 0 1 167.798 51.392 C 167.784 51.339 167.77 51.28 167.757 51.217 A 19.006 19.006 0 0 1 167.688 50.884 A 66.912 66.912 0 0 1 167.505 49.945 A 34.42 34.42 0 0 1 167.395 49.322 A 8.728 8.728 0 0 1 167.292 48.487 C 167.283 48.355 167.278 48.224 167.278 48.094 A 4.771 4.771 0 0 1 167.297 47.662 A 3.761 3.761 0 0 1 167.318 47.269 C 167.337 47.09 167.366 46.928 167.395 46.783 A 4.291 4.291 0 0 0 167.517 46.416 A 4.291 4.291 0 0 1 167.639 46.05 A 6.902 6.902 0 0 0 167.749 45.755 C 167.787 45.645 167.825 45.528 167.863 45.404 A 12.856 12.856 0 0 0 167.932 45.171 A 4.949 4.949 0 0 0 168.024 44.691 C 168.045 44.546 168.063 44.391 168.08 44.227 A 28.382 28.382 0 0 0 168.127 43.706 C 168.225 42.339 168.274 40.923 168.372 39.41 A 97.905 97.905 0 0 1 168.467 36.998 C 168.512 36.135 168.564 35.328 168.616 34.576 C 168.694 33.443 168.772 32.654 168.85 32.208 A 2.743 2.743 0 0 1 168.909 31.939 A 4.641 4.641 0 0 0 169.184 30.632 C 169.198 30.384 169.188 30.136 169.153 29.888 C 169.104 29.204 168.909 28.667 168.567 28.277 C 168.305 28.015 167.841 27.752 167.176 27.49 A 13.045 13.045 0 0 0 166.516 27.251 A 32.778 32.778 0 0 0 163.391 26.372 A 195.957 195.957 0 0 0 162.64 26.237 C 162.159 26.151 161.756 26.085 161.432 26.053 A 3.924 3.924 0 0 0 161.047 26.031 A 2.333 2.333 0 0 1 160.857 26.022 C 160.671 26.007 160.479 25.973 160.334 25.938 A 2.667 2.667 0 0 1 160.315 25.933 C 160.071 25.884 159.924 25.787 159.827 25.689 C 159.827 25.689 159.827 25.64 159.778 25.64 C 159.729 25.591 159.729 25.591 159.68 25.591 C 159.631 25.542 159.631 25.542 159.583 25.542 L 159.534 25.542 Z M 423.157 26.861 A 3.225 3.225 0 0 0 422.704 26.895 C 422.58 26.913 422.467 26.936 422.375 26.958 A 0.631 0.631 0 0 0 422.146 27.05 C 422.062 27.106 421.995 27.184 421.941 27.282 A 1.061 1.061 0 0 0 421.887 27.398 A 1.359 1.359 0 0 0 421.823 27.618 C 421.768 27.877 421.741 28.252 421.741 28.765 A 0.141 0.141 0 0 1 421.733 28.806 C 421.72 28.848 421.689 28.908 421.641 28.986 A 2.783 2.783 0 0 1 421.594 29.058 C 421.549 29.193 421.422 29.286 421.326 29.376 A 1.048 1.048 0 0 0 421.301 29.4 C 421.155 29.546 421.008 29.595 420.813 29.595 C 420.771 29.595 420.692 29.595 420.639 29.563 A 0.117 0.117 0 0 1 420.618 29.546 A 0.923 0.923 0 0 0 420.536 29.474 C 420.495 29.442 420.456 29.416 420.424 29.393 A 0.442 0.442 0 0 1 420.374 29.352 A 0.923 0.923 0 0 0 420.292 29.279 C 420.251 29.246 420.212 29.221 420.18 29.197 A 0.442 0.442 0 0 1 420.13 29.156 C 420.069 29.126 420.028 29.114 419.993 29.11 A 0.44 0.44 0 0 0 419.934 29.107 A 1.486 1.486 0 0 0 419.797 29.41 C 419.737 29.595 419.698 29.818 419.691 30.089 A 3.514 3.514 0 0 0 419.69 30.181 A 4.526 4.526 0 0 0 419.669 30.567 C 419.665 30.865 419.684 31.143 419.689 31.401 A 5.53 5.53 0 0 1 419.69 31.499 A 1.002 1.002 0 0 1 419.717 31.595 C 419.725 31.631 419.73 31.664 419.733 31.696 A 1.373 1.373 0 0 1 419.739 31.841 A 21.898 21.898 0 0 0 419.824 32.824 C 419.861 33.135 419.91 33.428 419.983 33.697 C 420.078 34.221 420.173 34.745 420.223 35.405 A 11.861 11.861 0 0 1 420.227 35.454 A 6.348 6.348 0 0 1 420.247 35.981 A 17.589 17.589 0 0 1 420.178 37.31 A 32.289 32.289 0 0 0 420.111 37.939 A 6.521 6.521 0 0 0 420.081 38.531 A 5.08 5.08 0 0 0 420.15 39.352 A 7.033 7.033 0 0 0 420.227 39.751 A 17.21 17.21 0 0 0 420.282 40.063 A 33.456 33.456 0 0 0 420.374 40.533 C 420.374 40.874 420.374 41.119 420.325 41.363 A 2.424 2.424 0 0 0 420.285 41.698 C 420.279 41.811 420.277 41.932 420.276 42.061 A 37.036 37.036 0 0 0 420.276 42.242 A 42.724 42.724 0 0 0 420.483 45.14 A 127.609 127.609 0 0 0 420.618 46.392 C 420.685 46.862 420.729 47.286 420.766 47.663 A 219.842 219.842 0 0 0 420.813 48.15 C 420.908 49.332 421.14 50.607 421.509 52.017 A 32.779 32.779 0 0 0 421.545 52.154 A 49.951 49.951 0 0 0 422.262 54.562 A 21.391 21.391 0 0 0 422.815 56.06 C 423.251 57.222 423.638 58 423.978 58.394 A 1.871 1.871 0 0 0 423.987 58.404 C 424.142 58.559 424.297 58.714 424.477 58.943 A 5.271 5.271 0 0 1 424.622 59.136 A 12.745 12.745 0 0 1 425.22 59.891 A 5.079 5.079 0 0 1 425.305 60.015 L 425.354 60.015 C 425.879 60.84 426.635 61.665 427.643 62.49 A 17.988 17.988 0 0 0 428.625 63.238 A 19.166 19.166 0 0 0 432.434 64.996 A 7.272 7.272 0 0 1 432.674 65.069 C 432.8 65.109 432.916 65.15 433.031 65.191 A 16.738 16.738 0 0 0 433.313 65.288 A 0.492 0.492 0 0 1 433.306 65.255 C 433.276 65.088 433.373 65.047 433.557 65.093 A 1.624 1.624 0 0 1 433.701 65.15 C 433.795 65.191 433.904 65.247 434.026 65.318 A 6.447 6.447 0 0 1 434.143 65.386 C 434.29 65.484 434.436 65.533 434.534 65.63 A 17.53 17.53 0 0 1 434.536 65.631 C 434.877 65.728 435.169 65.826 435.559 65.826 C 435.702 65.826 435.798 65.826 435.939 65.871 A 1.131 1.131 0 0 1 435.95 65.874 L 436.194 65.874 C 436.34 65.874 436.487 65.923 436.633 65.923 A 1.473 1.473 0 0 0 436.787 65.975 C 436.961 66.023 437.105 66.032 437.219 66.07 C 437.29 66.07 437.339 66.07 437.375 66.064 A 0.145 0.145 0 0 0 437.463 66.021 A 0.055 0.055 0 0 0 437.479 66.019 C 437.512 66.009 437.506 65.966 437.463 65.923 C 437.463 65.89 437.441 65.857 437.411 65.824 A 1.229 1.229 0 0 0 437.366 65.777 A 0.199 0.199 0 0 1 437.344 65.752 C 437.316 65.712 437.309 65.672 437.27 65.632 A 0.209 0.209 0 0 0 437.268 65.63 L 437.268 65.581 C 437.268 65.541 437.302 65.534 437.341 65.533 A 0.844 0.844 0 0 1 437.366 65.533 C 437.455 65.533 437.585 65.533 437.719 65.607 A 0.562 0.562 0 0 1 437.756 65.63 L 438.342 65.777 A 2.081 2.081 0 0 0 438.595 65.881 C 438.699 65.917 438.797 65.945 438.879 65.972 C 439.075 66.021 439.172 66.021 439.27 66.021 C 440.393 66.021 441.223 65.874 441.76 65.679 A 2.825 2.825 0 0 0 441.891 65.639 C 442.398 65.467 442.132 65.344 441.17 65.384 A 10.746 10.746 0 0 0 441.125 65.386 A 8.597 8.597 0 0 1 439.787 65.173 A 8.161 8.161 0 0 1 439.319 65.044 C 438.765 64.86 438.256 64.675 437.872 64.409 A 2.251 2.251 0 0 1 437.805 64.361 C 437.366 64.117 437.219 63.872 437.268 63.677 A 0.075 0.075 0 0 0 437.255 63.639 C 437.222 63.586 437.128 63.51 436.975 63.433 C 436.85 63.35 436.654 63.231 436.417 63.107 A 7.455 7.455 0 0 0 436.292 63.042 A 8.006 8.006 0 0 1 435.838 62.82 C 435.682 62.739 435.523 62.652 435.362 62.565 A 17.815 17.815 0 0 0 434.875 62.31 A 5.94 5.94 0 0 1 434.405 61.994 C 434.231 61.867 434.071 61.736 433.921 61.61 A 41.789 41.789 0 0 1 433.655 61.382 A 22.807 22.807 0 0 1 432.737 60.324 C 432.433 59.949 432.169 59.588 431.946 59.237 A 6.315 6.315 0 0 1 431.409 58.208 A 10.757 10.757 0 0 1 430.887 56.791 A 11.865 11.865 0 0 1 430.579 55.425 A 3.744 3.744 0 0 1 430.55 55.123 C 430.53 54.775 430.53 54.29 430.53 53.667 A 17.566 17.566 0 0 1 430.481 52.856 C 430.47 52.615 430.46 52.37 430.441 52.117 A 12.235 12.235 0 0 0 430.432 52.007 C 430.432 51.47 430.383 50.982 430.334 50.591 A 0.624 0.624 0 0 1 430.307 50.527 C 430.273 50.433 430.244 50.303 430.238 50.192 A 0.747 0.747 0 0 1 430.237 50.152 C 430.138 49.856 430.062 49.495 429.993 49.068 A 24.721 24.721 0 0 1 429.895 48.394 A 15.993 15.993 0 0 1 429.871 47.877 C 429.853 47.278 429.863 46.567 429.914 45.744 A 29.93 29.93 0 0 1 429.944 45.318 A 146.878 146.878 0 0 1 430.164 43.841 A 669.78 669.78 0 0 1 430.237 43.365 C 430.432 42.437 430.53 41.558 430.53 40.777 C 430.481 37.896 430.53 35.845 430.627 34.624 C 430.672 33.566 430.835 32.706 431.082 32.118 A 3.003 3.003 0 0 1 431.165 31.939 A 371.211 371.211 0 0 0 431.301 31.599 C 431.427 31.283 431.519 31.036 431.555 30.816 A 1.231 1.231 0 0 0 431.606 30.662 C 431.65 30.486 431.642 30.334 431.604 30.181 A 4.011 4.011 0 0 0 431.451 29.963 C 431.416 29.917 431.377 29.869 431.332 29.818 A 2.925 2.925 0 0 0 431.213 29.693 C 430.432 29.009 429.163 28.374 427.502 27.788 A 19.322 19.322 0 0 0 425.72 27.25 C 425.146 27.108 424.603 27.006 424.094 26.941 A 10.803 10.803 0 0 0 423.157 26.861 Z M 319.059 59.681 A 11.598 11.598 0 0 0 319.06 59.685 A 10.978 10.978 0 0 0 319.065 59.697 A 11.181 11.181 0 0 1 319.062 59.689 A 11.598 11.598 0 0 1 319.059 59.681 A 9.846 9.846 0 0 1 319.057 59.677 A 10.029 10.029 0 0 1 319.055 59.673 C 318.933 59.405 318.835 59.1 318.75 58.77 A 19.433 19.433 0 0 1 318.518 57.72 C 318.445 57.354 318.384 57.012 318.341 56.689 A 7.049 7.049 0 0 1 318.274 55.767 A 3.378 3.378 0 0 1 318.269 55.701 C 318.233 55.206 318.329 54.937 318.469 54.937 A 0.227 0.227 0 0 0 318.687 54.8 C 318.773 54.627 318.761 54.294 318.665 53.814 A 39.478 39.478 0 0 1 318.629 53.669 C 318.546 53.332 318.472 53.014 318.408 52.709 A 18.442 18.442 0 0 1 318.225 51.714 C 318.127 51.079 318.03 50.542 317.981 50.152 A 25.95 25.95 0 0 1 317.981 50.036 C 317.982 49.784 317.991 49.644 318.064 49.699 A 0.149 0.149 0 0 1 318.079 49.712 C 318.118 49.752 318.222 50.017 318.365 50.456 A 22.472 22.472 0 0 1 318.469 50.787 C 318.663 51.416 318.857 52.19 319.098 53.061 A 62.246 62.246 0 0 0 319.104 53.081 C 319.299 53.96 319.543 54.742 319.788 55.376 A 10.038 10.038 0 0 0 319.911 55.661 C 320.098 56.074 320.253 56.321 320.374 56.402 C 320.892 56.618 320.837 55.685 320.139 53.672 A 32.655 32.655 0 0 0 319.836 52.837 A 3.734 3.734 0 0 1 319.832 52.824 C 319.639 52.288 319.446 51.375 319.159 50.129 A 139.287 139.287 0 0 0 319.153 50.103 C 318.86 48.833 318.616 47.515 318.372 46.099 A 72.889 72.889 0 0 1 318.154 45.04 C 317.97 44.116 317.818 43.298 317.639 42.583 C 317.441 41.83 317.307 41.366 317.211 41.219 A 0.089 0.089 0 0 0 317.151 41.167 A 0.123 0.123 0 0 0 317.038 41.24 C 317.026 41.262 317.018 41.288 317.012 41.317 A 0.51 0.51 0 0 0 317.004 41.412 A 0.139 0.139 0 0 0 317.003 41.415 C 316.957 41.514 317.005 41.707 317.053 41.9 A 3.548 3.548 0 0 1 317.169 42.3 C 317.293 42.831 317.378 43.557 317.492 44.43 A 163.516 163.516 0 0 0 317.493 44.439 A 78.116 78.116 0 0 1 317.688 47.71 C 317.688 48.499 317.659 49.086 317.579 49.448 A 1.164 1.164 0 0 1 317.493 49.712 A 1.501 1.501 0 0 0 317.354 50.072 C 317.233 50.562 317.319 51.174 317.59 51.91 A 8.473 8.473 0 0 1 317.724 52.347 A 5.536 5.536 0 0 1 317.883 53.13 A 3.114 3.114 0 0 1 317.925 53.321 C 317.967 53.548 317.973 53.736 317.955 53.884 A 1.014 1.014 0 0 1 317.932 54.009 C 317.883 54.302 317.737 54.107 317.542 53.423 C 317.297 52.788 317.053 51.861 316.76 50.738 A 212.929 212.929 0 0 1 316.272 48.405 A 443.243 443.243 0 0 0 316.028 47.222 C 315.873 46.45 315.758 45.755 315.669 45.139 A 38.694 38.694 0 0 1 315.54 44.146 C 315.393 42.437 315.247 41.412 315.1 40.972 C 314.928 40.584 314.717 40.539 314.435 40.769 A 1.554 1.554 0 0 0 314.319 40.874 A 1.206 1.206 0 0 0 314.135 41.072 C 313.961 41.313 313.937 41.579 314.065 41.886 A 1.628 1.628 0 0 0 314.172 42.095 A 1.617 1.617 0 0 1 314.177 42.103 C 314.416 42.539 314.366 42.927 314.075 43.316 C 313.846 43.59 313.832 43.693 313.992 43.625 A 0.652 0.652 0 0 0 314.026 43.609 A 0.131 0.131 0 0 1 314.033 43.606 C 314.111 43.572 314.188 43.631 314.266 43.757 A 1.243 1.243 0 0 1 314.319 43.853 C 314.392 44.036 314.438 44.274 314.477 44.567 A 14.793 14.793 0 0 1 314.514 44.878 A 21.186 21.186 0 0 0 314.615 45.956 C 314.689 46.581 314.793 47.248 314.926 47.956 A 41.721 41.721 0 0 0 315.393 50.103 A 37.278 37.278 0 0 0 315.718 51.462 C 316.087 52.887 316.507 54.134 316.956 55.181 C 317.053 55.425 317.151 55.767 317.249 56.206 C 317.346 56.695 317.444 57.134 317.542 57.622 A 6.965 6.965 0 0 0 317.552 57.711 C 317.604 58.127 317.698 58.586 317.834 59.087 C 317.896 59.392 317.976 59.679 318.063 59.934 A 6.044 6.044 0 0 0 318.225 60.357 A 20.656 20.656 0 0 0 318.296 60.564 C 318.342 60.698 318.382 60.817 318.404 60.914 A 0.602 0.602 0 0 1 318.42 61.04 A 1.063 1.063 0 0 1 318.42 61.065 C 318.416 61.24 318.367 61.282 318.274 61.236 A 0.178 0.178 0 0 1 318.239 61.213 C 318.174 61.158 318.106 61.041 318.022 60.876 A 18.248 18.248 0 0 1 317.932 60.699 A 2.813 2.813 0 0 1 317.855 60.529 A 7.278 7.278 0 0 1 317.59 59.722 C 317.59 59.699 317.579 59.676 317.568 59.648 M 442.151 39.556 A 2.49 2.49 0 0 0 441.744 39.586 A 1.327 1.327 0 0 0 441.272 39.751 C 441.028 39.849 440.93 40.044 440.979 40.24 A 51.483 51.483 0 0 1 441.619 43.602 C 441.953 45.703 442.228 48.098 442.444 50.787 A 238.456 238.456 0 0 0 442.628 53.048 C 442.813 55.19 443.005 56.975 443.225 58.404 A 73.15 73.15 0 0 1 443.492 60.342 C 443.642 61.551 443.785 62.931 443.909 64.507 C 444.058 66.376 444.151 67.931 444.207 69.17 A 102.818 102.818 0 0 1 444.25 70.22 A 51.8 51.8 0 0 0 444.271 70.74 C 444.366 72.872 444.535 73.016 444.81 71.111 A 38.71 38.71 0 0 0 444.885 70.562 A 26.35 26.35 0 0 1 444.934 70.047 C 445.106 68.403 445.317 68.343 445.595 69.896 A 21.935 21.935 0 0 1 445.667 70.318 C 445.764 71.05 445.862 71.441 445.959 71.587 A 0.148 0.148 0 0 0 445.989 71.611 C 446.077 71.662 446.17 71.548 446.301 71.197 C 446.396 71.007 446.491 70.817 446.631 70.717 A 0.438 0.438 0 0 1 446.643 70.708 C 446.787 70.564 446.884 70.515 446.98 70.56 A 0.2 0.2 0 0 1 446.985 70.562 C 447.083 70.611 447.229 70.513 447.327 70.269 C 447.392 70.072 447.458 69.831 447.523 69.561 A 21.905 21.905 0 0 0 447.62 69.146 A 0.783 0.783 0 0 0 447.645 69.213 C 447.686 69.305 447.732 69.339 447.809 69.341 A 0.28 0.28 0 0 0 447.815 69.341 A 0.097 0.097 0 0 0 447.887 69.307 C 447.943 69.249 447.989 69.113 448.059 68.902 C 448.108 68.609 448.157 68.267 448.157 67.876 C 448.157 67.308 448.105 66.946 448.002 66.773 A 0.231 0.231 0 0 0 447.864 66.656 A 2.826 2.826 0 0 1 447.925 66.094 C 447.952 65.957 447.987 65.819 448.023 65.677 A 52.228 52.228 0 0 0 448.059 65.533 A 2.713 2.713 0 0 1 448.27 65.002 A 2.24 2.24 0 0 1 448.499 64.654 C 448.694 64.41 448.84 63.921 449.036 63.287 A 13.918 13.918 0 0 0 449.415 61.568 A 14.73 14.73 0 0 0 449.475 61.138 C 449.568 60.259 449.704 58.767 449.801 56.62 A 102.433 102.433 0 0 0 449.817 56.255 C 449.963 53.912 450.11 51.617 450.208 49.322 A 397.198 397.198 0 0 0 450.265 47.927 C 450.31 46.758 450.338 45.864 450.349 45.235 A 30.064 30.064 0 0 0 450.354 44.732 C 450.275 43.978 449.905 43.256 449.193 42.567 A 6.505 6.505 0 0 0 448.645 42.095 A 8.065 8.065 0 0 0 445.423 40.589 A 9.624 9.624 0 0 0 444.885 40.484 A 4.677 4.677 0 0 0 444.58 40.397 C 444.37 40.343 444.153 40.288 443.958 40.191 A 4.535 4.535 0 0 1 443.692 40.107 C 443.513 40.044 443.372 39.975 443.269 39.889 A 0.665 0.665 0 0 1 443.225 39.849 C 442.932 39.654 442.542 39.556 442.151 39.556 Z M 72.19 46.487 C 72.253 46.48 72.295 46.462 72.338 46.439 A 1.055 1.055 0 0 1 72.341 46.437 C 72.295 46.462 72.253 46.48 72.19 46.487 A 0.538 0.538 0 0 1 72.131 46.49 C 71.497 46.609 70.83 47.63 70.104 49.554 A 32.096 32.096 0 0 0 69.592 51.031 A 98.04 98.04 0 0 1 69.574 51.081 C 69.484 51.328 69.404 51.544 69.324 51.745 A 7.842 7.842 0 0 1 69.055 52.349 C 68.909 52.691 68.811 52.935 68.762 52.984 A 0.367 0.367 0 0 0 68.736 53.013 C 68.681 53.082 68.586 53.231 68.42 53.521 A 5.273 5.273 0 0 0 68.201 53.887 A 19.367 19.367 0 0 0 67.834 54.595 C 67.59 54.986 67.444 55.328 67.346 55.621 A 2.893 2.893 0 0 0 67.329 55.661 C 67.243 55.871 67.157 56.145 67.072 56.454 A 26.117 26.117 0 0 0 66.907 57.085 A 33.197 33.197 0 0 1 66.833 57.374 A 12.747 12.747 0 0 1 66.223 59.234 A 104.251 104.251 0 0 1 65.794 60.275 C 65.345 61.347 64.96 62.212 64.661 62.847 C 64.372 63.521 64.178 64.006 64.032 64.347 A 16.683 16.683 0 0 1 64.026 64.361 A 2.837 2.837 0 0 0 63.991 64.447 C 63.888 64.71 63.846 64.937 63.866 65.081 A 0.337 0.337 0 0 0 63.879 65.142 C 63.879 65.305 63.879 65.4 63.851 65.512 A 0.977 0.977 0 0 1 63.831 65.581 A 0.761 0.761 0 0 1 63.826 65.591 C 63.791 65.658 63.755 65.7 63.702 65.718 A 0.21 0.21 0 0 1 63.635 65.728 A 3.387 3.387 0 0 0 63.6 65.763 C 63.558 65.807 63.498 65.872 63.42 65.97 A 4.119 4.119 0 0 0 63.342 66.07 C 63.197 66.264 63.052 66.553 62.859 66.844 A 4.642 4.642 0 0 1 62.854 66.851 A 21.783 21.783 0 0 0 62.591 67.388 A 5.901 5.901 0 0 0 62.463 67.681 A 7.675 7.675 0 0 1 62.436 67.735 C 62.354 67.897 62.271 68.045 62.189 68.197 A 10.519 10.519 0 0 0 62.024 68.511 A 4.563 4.563 0 0 0 61.938 68.623 C 61.841 68.752 61.755 68.877 61.674 68.983 A 1.64 1.64 0 0 1 61.536 69.146 A 1.67 1.67 0 0 1 61.515 69.173 C 61.38 69.346 61.287 69.388 61.194 69.341 A 0.578 0.578 0 0 0 61.141 69.318 C 60.999 69.264 60.892 69.295 60.861 69.412 A 0.296 0.296 0 0 0 60.852 69.488 A 0.077 0.077 0 0 1 60.852 69.491 C 60.85 69.532 60.816 69.605 60.724 69.709 A 1.563 1.563 0 0 1 60.657 69.781 L 60.168 70.269 A 1.068 1.068 0 0 0 59.973 70.446 C 59.943 70.48 59.912 70.515 59.88 70.55 A 2.643 2.643 0 0 1 59.778 70.66 C 59.705 70.708 59.644 70.757 59.583 70.8 A 0.749 0.749 0 0 1 59.387 70.904 C 59.274 70.941 59.19 70.979 59.09 70.994 A 0.617 0.617 0 0 1 58.997 71.001 A 5.666 5.666 0 0 1 58.917 71.041 C 58.869 71.064 58.825 71.083 58.79 71.093 A 0.147 0.147 0 0 1 58.752 71.099 A 1.229 1.229 0 0 0 58.707 71.146 C 58.677 71.179 58.655 71.212 58.655 71.246 C 58.704 71.392 58.655 71.49 58.606 71.636 A 0.556 0.556 0 0 1 58.57 71.72 C 58.517 71.82 58.44 71.89 58.362 71.929 A 0.19 0.19 0 0 1 58.348 71.941 C 58.335 71.952 58.322 71.96 58.309 71.965 A 0.237 0.237 0 0 1 58.215 71.978 C 58.167 72.002 58.105 72.027 58.044 72.057 A 0.65 0.65 0 0 0 57.874 72.173 C 57.764 72.246 57.681 72.375 57.606 72.558 A 3.112 3.112 0 0 0 57.532 72.759 A 15.046 15.046 0 0 1 57.411 73.022 C 56.733 74.462 56.378 74.528 56.283 73.283 A 8.892 8.892 0 0 1 56.262 72.857 L 56.262 71.978 A 3.07 3.07 0 0 0 56.272 71.928 C 56.293 71.814 56.302 71.723 56.307 71.641 A 3.414 3.414 0 0 0 56.311 71.441 A 26.521 26.521 0 0 1 56.311 71.421 C 56.311 71.307 56.313 71.255 56.344 71.182 A 0.628 0.628 0 0 1 56.36 71.148 L 56.36 71.05 C 56.409 71.05 56.409 71.001 56.458 71.001 C 56.458 71.001 56.506 70.953 56.555 70.953 C 56.59 70.882 56.625 70.812 56.66 70.724 A 2.123 2.123 0 0 0 56.702 70.611 A 0.628 0.628 0 0 0 56.715 70.565 C 56.75 70.425 56.746 70.254 56.702 70.122 C 56.662 69.805 56.816 69.616 57.138 69.557 A 1.373 1.373 0 0 1 57.385 69.537 C 57.544 69.537 57.703 69.504 57.783 69.466 A 0.155 0.155 0 0 0 57.825 69.439 A 0.174 0.174 0 0 0 57.857 69.419 C 57.906 69.378 57.915 69.319 57.897 69.255 A 0.338 0.338 0 0 0 57.874 69.195 A 5.564 5.564 0 0 0 57.849 69.17 C 57.78 69.103 57.733 69.063 57.642 69.052 A 0.492 0.492 0 0 0 57.581 69.048 A 0.366 0.366 0 0 0 57.55 69.035 C 57.479 69.007 57.407 69.008 57.336 69.057 A 0.34 0.34 0 0 0 57.288 69.097 A 0.334 0.334 0 0 1 57.266 69.102 C 57.11 69.13 57.022 69.02 57 68.689 A 2.741 2.741 0 0 1 56.995 68.511 C 57.062 68.075 57.129 67.684 57.196 67.356 A 9.769 9.769 0 0 1 57.288 66.949 A 3.512 3.512 0 0 1 57.317 66.873 C 57.411 66.638 57.506 66.483 57.6 66.394 A 0.349 0.349 0 0 1 57.727 66.314 C 57.825 66.363 57.922 66.46 57.971 66.607 A 29.606 29.606 0 0 1 57.978 66.633 C 58.01 66.762 58.04 66.892 58.04 67.021 A 0.703 0.703 0 0 1 58.02 67.193 A 4.623 4.623 0 0 1 58.018 67.204 C 57.97 67.441 57.92 67.584 57.776 67.632 A 0.286 0.286 0 0 0 57.691 67.732 C 57.608 67.894 57.685 68.146 57.922 68.462 C 58.091 68.673 58.223 68.775 58.319 68.736 A 0.13 0.13 0 0 0 58.362 68.706 A 0.34 0.34 0 0 0 58.402 68.675 C 58.517 68.57 58.638 68.339 58.812 67.936 A 19.507 19.507 0 0 0 58.899 67.73 C 58.972 67.559 59.033 67.4 59.094 67.248 A 5.79 5.79 0 0 1 59.29 66.802 A 7.013 7.013 0 0 1 59.313 66.756 C 59.446 66.494 59.536 66.36 59.583 66.314 C 59.583 66.265 59.631 66.167 59.631 66.021 A 0.628 0.628 0 0 0 59.645 65.975 C 59.68 65.835 59.675 65.664 59.631 65.533 C 59.631 65.322 59.657 65.036 59.743 64.692 A 4.415 4.415 0 0 1 59.875 64.263 A 8.591 8.591 0 0 1 60.092 63.586 A 12.243 12.243 0 0 1 60.413 62.798 C 60.594 62.436 60.748 62.235 60.876 62.135 A 0.417 0.417 0 0 1 60.999 62.066 C 61.047 62.066 61.096 62.017 61.096 61.919 A 0.053 0.053 0 0 0 61.101 61.914 C 61.142 61.861 61.095 61.721 61.047 61.626 C 60.989 61.538 60.965 61.45 60.967 61.362 A 0.581 0.581 0 0 1 60.999 61.187 C 61.033 61.083 61.068 60.979 61.138 60.874 A 0.841 0.841 0 0 1 61.243 60.747 C 61.34 60.601 61.487 60.406 61.633 60.113 A 8.164 8.164 0 0 0 61.847 59.649 C 61.872 59.589 61.896 59.53 61.92 59.471 A 5.815 5.815 0 0 0 62.024 59.185 A 21.196 21.196 0 0 1 62.197 58.599 A 9.833 9.833 0 0 1 62.366 58.111 A 7.712 7.712 0 0 1 62.386 58.058 C 62.524 57.698 62.66 57.423 62.753 57.192 A 3.867 3.867 0 0 0 62.756 57.183 A 2.806 2.806 0 0 0 62.819 57.073 C 62.93 56.868 63 56.673 63 56.548 A 4.707 4.707 0 0 0 63.005 56.532 C 63.04 56.386 63.047 56.328 63.023 56.31 A 0.037 0.037 0 0 0 63 56.304 A 0.092 0.092 0 0 1 62.976 56.301 C 62.921 56.286 62.951 56.211 63.017 56.075 A 12.01 12.01 0 0 1 63.049 56.011 A 3.961 3.961 0 0 0 63.06 55.995 C 63.158 55.847 63.301 55.612 63.489 55.376 A 6.257 6.257 0 0 0 63.831 54.925 C 63.94 54.766 64.05 54.595 64.172 54.4 A 31.948 31.948 0 0 1 64.357 54.039 C 64.416 53.924 64.472 53.814 64.522 53.709 A 3.059 3.059 0 0 0 64.661 53.374 C 64.758 53.033 64.905 52.74 65.051 52.447 A 26.021 26.021 0 0 1 65.168 52.253 C 65.273 52.082 65.37 51.932 65.442 51.861 A 1.744 1.744 0 0 0 65.498 51.802 C 65.551 51.744 65.596 51.685 65.634 51.627 A 0.913 0.913 0 0 0 65.735 51.421 C 65.813 51.265 65.829 51.171 65.832 51.064 A 2.892 2.892 0 0 0 65.833 50.982 A 3.718 3.718 0 0 1 65.833 50.916 C 65.835 50.823 65.844 50.747 65.893 50.654 A 0.71 0.71 0 0 1 65.93 50.591 A 0.711 0.711 0 0 1 65.964 50.544 A 1.484 1.484 0 0 1 66.321 50.249 A 1.176 1.176 0 0 0 66.528 50.073 A 1.124 1.124 0 0 0 66.711 49.81 A 2.231 2.231 0 0 0 66.746 49.718 A 1.929 1.929 0 0 0 66.858 49.078 C 66.858 48.833 66.907 48.589 66.956 48.345 C 67.01 48.235 67.05 48.125 67.1 48.033 A 0.472 0.472 0 0 1 67.249 47.857 A 2.655 2.655 0 0 0 67.35 47.721 C 67.431 47.606 67.486 47.504 67.516 47.414 A 0.46 0.46 0 0 0 67.542 47.271 A 0.465 0.465 0 0 0 67.536 47.198 C 67.513 47.051 67.411 46.978 67.2 46.978 C 67.103 46.978 66.957 47.171 66.716 47.461 A 17.436 17.436 0 0 1 66.711 47.466 A 7.789 7.789 0 0 0 66.53 47.692 C 66.344 47.933 66.151 48.209 65.93 48.54 C 65.686 48.98 65.442 49.371 65.295 49.712 A 10.648 10.648 0 0 0 65.228 49.849 C 65.078 50.161 65.002 50.365 65.002 50.494 C 65.002 50.579 65.002 50.627 64.97 50.703 A 0.661 0.661 0 0 1 64.954 50.738 A 0.987 0.987 0 0 0 64.912 50.76 C 64.893 50.771 64.875 50.781 64.859 50.79 A 0.773 0.773 0 0 1 64.858 50.791 A 1.021 1.021 0 0 1 64.857 50.791 M 346.838 28.716 A 4.661 4.661 0 0 0 346.828 28.601 C 346.771 28.04 346.628 27.737 346.399 27.691 A 1.373 1.373 0 0 0 346.253 27.696 C 346.222 27.699 346.189 27.705 346.153 27.713 A 1.002 1.002 0 0 0 346.057 27.74 A 0.917 0.917 0 0 0 345.787 27.854 A 1.251 1.251 0 0 0 345.569 28.033 C 345.452 28.11 345.397 28.219 345.38 28.31 A 0.344 0.344 0 0 0 345.374 28.374 C 345.374 28.57 345.52 29.156 345.764 30.132 A 577.755 577.755 0 0 1 346.156 31.449 C 346.351 32.103 346.562 32.81 346.79 33.55 A 72.747 72.747 0 0 0 347.4 35.491 A 320.152 320.152 0 0 1 348.01 37.359 A 39.702 39.702 0 0 1 348.037 37.44 C 348.228 38.017 348.463 38.768 348.743 39.654 A 415.406 415.406 0 0 0 349.176 41.009 A 58.4 58.4 0 0 1 349.573 42.29 C 349.817 43.121 350.11 43.853 350.354 44.585 C 350.574 45.135 350.766 45.547 350.931 45.842 A 3.839 3.839 0 0 0 351.086 46.099 C 351.233 46.392 351.428 46.734 351.672 47.222 A 59.181 59.181 0 0 1 351.959 47.948 A 16.353 16.353 0 0 1 352.209 48.638 C 352.356 49.126 352.502 49.517 352.698 49.81 A 3.187 3.187 0 0 0 352.782 49.93 C 352.947 50.155 353.102 50.298 353.186 50.298 C 353.533 50.298 353.495 49.835 353.104 48.909 A 13.044 13.044 0 0 0 352.942 48.54 A 17.707 17.707 0 0 1 352.405 47.076 A 7.284 7.284 0 0 1 352.374 46.972 C 352.285 46.655 352.238 46.406 352.219 46.224 A 1.729 1.729 0 0 1 352.209 46.05 A 1.233 1.233 0 0 0 352.203 45.932 C 352.178 45.674 352.077 45.268 351.868 44.683 A 15.41 15.41 0 0 0 351.659 44.017 A 49.457 49.457 0 0 0 351.086 42.437 A 16.824 16.824 0 0 1 350.862 41.897 C 350.745 41.603 350.641 41.32 350.548 41.053 A 49.281 49.281 0 0 1 350.305 40.337 A 30.553 30.553 0 0 1 350.226 40.097 C 350.115 39.753 350.047 39.519 350.023 39.393 A 0.463 0.463 0 0 1 350.012 39.312 A 0.286 0.286 0 0 0 350.018 39.281 C 350.046 39.073 349.905 38.641 349.719 37.945 A 96.233 96.233 0 0 1 349.535 37.424 A 39.857 39.857 0 0 0 348.938 35.796 C 348.645 35.015 348.401 34.527 348.206 34.283 A 0.665 0.665 0 0 1 348.166 34.239 C 348.08 34.136 348.011 33.995 347.947 33.815 A 4.535 4.535 0 0 1 347.864 33.55 A 3.717 3.717 0 0 1 347.717 32.525 C 347.717 32.354 347.705 32.171 347.681 31.988 A 3.805 3.805 0 0 0 347.571 31.451 A 3.791 3.791 0 0 0 347.569 31.439 C 347.538 31.197 347.488 30.993 347.419 30.826 A 1.167 1.167 0 0 0 347.278 30.572 A 9.091 9.091 0 0 1 347.141 30.213 C 347.113 30.136 347.086 30.052 347.058 29.961 A 6.069 6.069 0 0 1 346.985 29.693 A 3.946 3.946 0 0 1 346.866 29.125 A 3.167 3.167 0 0 1 346.838 28.716 Z M 475.842 28.716 A 4.661 4.661 0 0 0 475.832 28.601 C 475.775 28.04 475.632 27.737 475.403 27.691 A 1.373 1.373 0 0 0 475.257 27.696 C 475.226 27.699 475.193 27.705 475.157 27.713 A 1.002 1.002 0 0 0 475.061 27.74 A 0.917 0.917 0 0 0 474.791 27.854 A 1.251 1.251 0 0 0 474.573 28.033 C 474.456 28.11 474.401 28.219 474.384 28.31 A 0.344 0.344 0 0 0 474.377 28.374 C 474.377 28.57 474.524 29.156 474.768 30.132 A 577.755 577.755 0 0 1 475.16 31.449 C 475.355 32.103 475.566 32.81 475.793 33.55 A 72.747 72.747 0 0 0 476.404 35.491 A 320.152 320.152 0 0 1 477.014 37.359 A 39.702 39.702 0 0 1 477.041 37.44 C 477.232 38.017 477.467 38.768 477.747 39.654 A 415.406 415.406 0 0 0 478.18 41.009 A 58.4 58.4 0 0 1 478.577 42.29 C 478.821 43.121 479.114 43.853 479.358 44.585 C 479.578 45.135 479.77 45.547 479.935 45.842 A 3.839 3.839 0 0 0 480.09 46.099 C 480.237 46.392 480.432 46.734 480.676 47.222 A 59.181 59.181 0 0 1 480.963 47.948 A 16.353 16.353 0 0 1 481.213 48.638 C 481.36 49.126 481.506 49.517 481.702 49.81 A 3.187 3.187 0 0 0 481.786 49.93 C 481.951 50.155 482.106 50.298 482.19 50.298 C 482.537 50.298 482.499 49.835 482.108 48.909 A 13.044 13.044 0 0 0 481.946 48.54 A 17.707 17.707 0 0 1 481.409 47.076 A 7.284 7.284 0 0 1 481.378 46.972 C 481.288 46.655 481.242 46.406 481.223 46.224 A 1.729 1.729 0 0 1 481.213 46.05 A 1.233 1.233 0 0 0 481.207 45.932 C 481.182 45.674 481.08 45.268 480.872 44.683 A 15.41 15.41 0 0 0 480.663 44.017 A 49.457 49.457 0 0 0 480.09 42.437 A 16.824 16.824 0 0 1 479.865 41.897 C 479.749 41.603 479.645 41.32 479.552 41.053 A 49.281 49.281 0 0 1 479.309 40.337 A 30.553 30.553 0 0 1 479.23 40.097 C 479.119 39.753 479.051 39.519 479.026 39.393 A 0.463 0.463 0 0 1 479.016 39.312 A 0.286 0.286 0 0 0 479.022 39.281 C 479.05 39.073 478.909 38.641 478.723 37.945 A 96.233 96.233 0 0 1 478.539 37.424 A 39.857 39.857 0 0 0 477.942 35.796 C 477.649 35.015 477.405 34.527 477.209 34.283 A 0.665 0.665 0 0 1 477.17 34.239 C 477.084 34.136 477.015 33.995 476.951 33.815 A 4.535 4.535 0 0 1 476.868 33.55 A 3.717 3.717 0 0 1 476.721 32.525 C 476.721 32.354 476.709 32.171 476.685 31.988 A 3.805 3.805 0 0 0 476.575 31.451 A 3.791 3.791 0 0 0 476.573 31.439 C 476.542 31.197 476.492 30.993 476.423 30.826 A 1.167 1.167 0 0 0 476.282 30.572 A 9.091 9.091 0 0 1 476.144 30.213 C 476.117 30.136 476.089 30.052 476.062 29.961 A 6.069 6.069 0 0 1 475.989 29.693 A 3.946 3.946 0 0 1 475.87 29.125 A 3.167 3.167 0 0 1 475.842 28.716 Z M 105.927 35.49 A 3.468 3.468 0 0 1 105.926 35.492 A 3.509 3.509 0 0 1 105.925 35.494 A 3.549 3.549 0 0 1 105.924 35.496 A 2.99 2.99 0 0 1 105.923 35.499 A 3.024 3.024 0 0 1 105.922 35.501 A 3.669 3.669 0 0 1 105.92 35.503 C 105.896 35.601 105.884 35.686 105.884 35.766 A 0.7 0.7 0 0 0 105.92 35.992 C 105.96 36.071 105.968 36.184 105.942 36.328 A 1.451 1.451 0 0 1 105.92 36.431 A 7.661 7.661 0 0 0 105.883 36.549 C 105.87 36.59 105.856 36.632 105.841 36.675 A 1.122 1.122 0 0 1 105.725 36.919 C 105.627 37.083 105.55 37.181 105.481 37.243 A 0.447 0.447 0 0 1 105.383 37.31 A 0.043 0.043 0 0 1 105.362 37.304 C 105.326 37.283 105.285 37.21 105.222 37.086 A 22.041 22.041 0 0 1 105.188 37.017 A 0.254 0.254 0 0 1 105.187 37.015 C 105.147 36.892 105.175 36.668 105.27 36.314 A 8.173 8.173 0 0 1 105.334 36.089 C 105.481 35.601 105.676 35.064 105.92 34.429 A 8.151 8.151 0 0 0 106.002 34.262 C 106.117 34.017 106.226 33.757 106.335 33.489 A 59.914 59.914 0 0 1 106.75 32.476 C 106.952 31.972 107.107 31.515 107.232 31.12 A 35.042 35.042 0 0 0 107.385 30.621 A 6.917 6.917 0 0 1 107.442 30.44 C 107.541 30.142 107.653 29.864 107.756 29.604 A 17.048 17.048 0 0 0 107.874 29.302 A 9.493 9.493 0 0 1 107.918 29.204 C 108.044 28.928 108.148 28.737 108.231 28.602 A 3.539 3.539 0 0 1 108.313 28.472 C 108.459 28.277 108.655 27.984 108.801 27.642 A 13.778 13.778 0 0 0 109.024 27.241 A 3.316 3.316 0 0 0 109.29 26.617 C 109.436 26.275 109.534 26.031 109.583 25.835 A 1.241 1.241 0 0 0 109.584 25.83 C 109.626 25.657 109.589 25.643 109.472 25.752 A 1.423 1.423 0 0 0 109.436 25.787 A 14.251 14.251 0 0 0 109.239 26.016 C 109.117 26.162 108.99 26.319 108.865 26.484 A 10.445 10.445 0 0 0 108.362 27.203 A 43.542 43.542 0 0 0 108.2 27.447 C 108.041 27.688 107.893 27.921 107.758 28.145 A 9.764 9.764 0 0 0 107.385 28.814 A 4.433 4.433 0 0 0 107.248 29.082 C 107.104 29.389 107.043 29.616 107.043 29.693 A 0.325 0.325 0 0 1 107.045 29.696 C 107.139 29.889 106.944 29.986 106.506 29.986 A 3.691 3.691 0 0 0 106.484 29.983 C 106.112 29.939 106.021 29.988 106.165 30.083 A 0.204 0.204 0 0 1 106.23 30.156 C 106.306 30.294 106.284 30.563 106.165 30.962 A 4.37 4.37 0 0 1 106.025 31.352 C 105.863 31.751 105.626 32.198 105.334 32.671 C 105.237 32.915 105.09 33.257 104.944 33.648 C 104.797 34.087 104.651 34.527 104.553 34.966 A 7.984 7.984 0 0 1 104.441 35.444 C 104.358 35.758 104.26 36.073 104.163 36.431 C 104.053 36.706 103.958 36.949 103.871 37.171 A 18.598 18.598 0 0 1 103.674 37.652 C 103.577 37.945 103.479 38.238 103.43 38.531 A 2.145 2.145 0 0 0 103.406 38.609 C 103.333 38.859 103.337 39.028 103.381 39.117 C 103.419 39.23 103.457 39.314 103.472 39.414 A 0.617 0.617 0 0 1 103.479 39.507 C 103.479 39.565 103.471 39.615 103.459 39.661 A 0.979 0.979 0 0 1 103.381 39.849 C 103.344 39.924 103.307 40.056 103.269 40.245 A 6.493 6.493 0 0 0 103.235 40.435 C 103.21 40.559 103.198 40.696 103.185 40.838 A 5.451 5.451 0 0 1 103.137 41.265 A 3.745 3.745 0 0 1 103.127 41.543 A 7.033 7.033 0 0 1 103.04 42.193 A 7.063 7.063 0 0 1 103.008 42.369 C 102.985 42.488 102.962 42.588 102.939 42.674 A 2.69 2.69 0 0 1 102.893 42.828 A 6.138 6.138 0 0 0 102.857 42.937 A 1.117 1.117 0 0 0 102.795 43.267 C 102.771 43.34 102.759 43.401 102.759 43.456 A 0.331 0.331 0 0 0 102.795 43.609 A 1.439 1.439 0 0 1 102.829 43.726 C 102.853 43.825 102.874 43.951 102.885 44.103 A 3.275 3.275 0 0 1 102.893 44.341 A 3.133 3.133 0 0 1 102.926 44.629 A 9.759 9.759 0 0 1 102.942 45.318 A 4.169 4.169 0 0 1 102.936 45.535 C 102.923 45.785 102.893 46.006 102.893 46.197 A 2.582 2.582 0 0 1 102.87 46.303 C 102.842 46.416 102.814 46.487 102.787 46.534 A 0.262 0.262 0 0 1 102.747 46.587 A 0.043 0.043 0 0 0 102.725 46.594 C 102.684 46.618 102.649 46.707 102.649 46.831 C 102.649 46.898 102.659 46.974 102.674 47.056 A 5.725 5.725 0 0 0 102.747 47.369 A 1.22 1.22 0 0 1 102.811 47.523 A 1.672 1.672 0 0 1 102.893 48.052 L 102.893 48.638 C 102.795 49.029 102.6 48.785 102.307 47.954 A 7.162 7.162 0 0 1 102.241 47.667 C 102.211 47.525 102.19 47.392 102.177 47.26 A 3.297 3.297 0 0 1 102.161 46.929 A 2.173 2.173 0 0 1 102.166 46.774 C 102.181 46.566 102.228 46.422 102.307 46.343 A 1.629 1.629 0 0 0 102.325 46.325 C 102.549 46.094 102.496 46.004 102.258 46.099 A 0.12 0.12 0 0 1 102.195 46.079 C 102.121 46.033 102.052 45.91 102.014 45.757 C 101.985 45.612 101.956 45.45 101.937 45.271 A 3.761 3.761 0 0 1 101.917 44.878 A 23.134 23.134 0 0 1 101.918 44.6 A 4.222 4.222 0 0 1 101.965 43.951 C 102.014 43.658 102.112 43.462 102.209 43.365 C 102.291 43.324 102.304 43.283 102.335 43.214 M 209.931 35.49 A 3.468 3.468 0 0 1 209.93 35.492 A 3.509 3.509 0 0 1 209.929 35.494 A 3.549 3.549 0 0 1 209.928 35.496 A 2.99 2.99 0 0 1 209.927 35.499 A 3.024 3.024 0 0 1 209.925 35.501 A 3.669 3.669 0 0 1 209.924 35.503 C 209.9 35.601 209.888 35.686 209.888 35.766 A 0.7 0.7 0 0 0 209.924 35.992 C 209.964 36.071 209.971 36.184 209.946 36.328 A 1.451 1.451 0 0 1 209.924 36.431 A 7.661 7.661 0 0 0 209.887 36.549 C 209.874 36.59 209.86 36.632 209.845 36.675 A 1.122 1.122 0 0 1 209.729 36.919 C 209.631 37.083 209.554 37.181 209.485 37.243 A 0.447 0.447 0 0 1 209.387 37.31 A 0.043 0.043 0 0 1 209.366 37.304 C 209.329 37.283 209.289 37.21 209.226 37.086 A 22.041 22.041 0 0 1 209.192 37.017 A 0.254 0.254 0 0 1 209.191 37.015 C 209.151 36.892 209.179 36.668 209.274 36.314 A 8.173 8.173 0 0 1 209.338 36.089 C 209.485 35.601 209.68 35.064 209.924 34.429 A 8.151 8.151 0 0 0 210.006 34.262 C 210.121 34.017 210.23 33.757 210.339 33.489 A 59.914 59.914 0 0 1 210.754 32.476 C 210.956 31.972 211.111 31.515 211.236 31.12 A 35.042 35.042 0 0 0 211.389 30.621 A 6.917 6.917 0 0 1 211.446 30.44 C 211.544 30.142 211.657 29.864 211.76 29.604 A 17.048 17.048 0 0 0 211.877 29.302 A 9.493 9.493 0 0 1 211.922 29.204 C 212.048 28.928 212.152 28.737 212.234 28.602 A 3.539 3.539 0 0 1 212.317 28.472 C 212.463 28.277 212.659 27.984 212.805 27.642 A 13.778 13.778 0 0 0 213.028 27.241 A 3.316 3.316 0 0 0 213.293 26.617 C 213.44 26.275 213.538 26.031 213.586 25.835 A 1.241 1.241 0 0 0 213.588 25.83 C 213.63 25.657 213.593 25.643 213.476 25.752 A 1.423 1.423 0 0 0 213.44 25.787 A 14.251 14.251 0 0 0 213.243 26.016 C 213.121 26.162 212.994 26.319 212.869 26.484 A 10.445 10.445 0 0 0 212.366 27.203 A 43.542 43.542 0 0 0 212.204 27.447 C 212.045 27.688 211.897 27.921 211.762 28.145 A 9.764 9.764 0 0 0 211.389 28.814 A 4.433 4.433 0 0 0 211.252 29.082 C 211.108 29.389 211.047 29.616 211.047 29.693 A 0.325 0.325 0 0 1 211.049 29.696 C 211.143 29.889 210.948 29.986 210.51 29.986 A 3.691 3.691 0 0 0 210.488 29.983 C 210.116 29.939 210.025 29.988 210.168 30.083 A 0.204 0.204 0 0 1 210.234 30.156 C 210.31 30.294 210.288 30.563 210.168 30.962 A 4.37 4.37 0 0 1 210.029 31.352 C 209.867 31.751 209.63 32.198 209.338 32.671 C 209.241 32.915 209.094 33.257 208.948 33.648 C 208.801 34.087 208.655 34.527 208.557 34.966 A 7.984 7.984 0 0 1 208.445 35.444 C 208.362 35.758 208.264 36.073 208.167 36.431 C 208.057 36.706 207.962 36.949 207.875 37.171 A 18.598 18.598 0 0 1 207.678 37.652 C 207.581 37.945 207.483 38.238 207.434 38.531 A 2.145 2.145 0 0 0 207.41 38.609 C 207.337 38.859 207.341 39.028 207.385 39.117 C 207.423 39.23 207.461 39.314 207.476 39.414 A 0.617 0.617 0 0 1 207.483 39.507 C 207.483 39.565 207.475 39.615 207.463 39.661 A 0.979 0.979 0 0 1 207.385 39.849 C 207.348 39.924 207.31 40.056 207.273 40.245 A 6.493 6.493 0 0 0 207.239 40.435 C 207.214 40.559 207.202 40.696 207.189 40.838 A 5.451 5.451 0 0 1 207.141 41.265 A 3.745 3.745 0 0 1 207.131 41.543 A 7.033 7.033 0 0 1 207.043 42.193 A 7.063 7.063 0 0 1 207.012 42.369 C 206.989 42.488 206.966 42.588 206.943 42.674 A 2.69 2.69 0 0 1 206.897 42.828 A 6.138 6.138 0 0 0 206.861 42.937 A 1.117 1.117 0 0 0 206.799 43.267 C 206.775 43.34 206.763 43.401 206.763 43.456 A 0.331 0.331 0 0 0 206.799 43.609 A 1.439 1.439 0 0 1 206.833 43.726 C 206.857 43.825 206.877 43.951 206.889 44.103 A 3.275 3.275 0 0 1 206.897 44.341 A 3.133 3.133 0 0 1 206.93 44.629 A 9.759 9.759 0 0 1 206.946 45.318 A 4.169 4.169 0 0 1 206.94 45.535 C 206.927 45.785 206.897 46.006 206.897 46.197 A 2.582 2.582 0 0 1 206.874 46.303 C 206.846 46.416 206.818 46.487 206.791 46.534 A 0.262 0.262 0 0 1 206.75 46.587 A 0.043 0.043 0 0 0 206.729 46.594 C 206.688 46.618 206.653 46.707 206.653 46.831 C 206.653 46.898 206.663 46.974 206.678 47.056 A 5.725 5.725 0 0 0 206.75 47.369 A 1.22 1.22 0 0 1 206.815 47.523 A 1.672 1.672 0 0 1 206.897 48.052 L 206.897 48.638 C 206.799 49.029 206.604 48.785 206.311 47.954 A 7.162 7.162 0 0 1 206.245 47.667 C 206.215 47.525 206.194 47.392 206.181 47.26 A 3.297 3.297 0 0 1 206.165 46.929 A 2.173 2.173 0 0 1 206.17 46.774 C 206.185 46.566 206.232 46.422 206.311 46.343 A 1.629 1.629 0 0 0 206.329 46.325 C 206.553 46.094 206.5 46.004 206.262 46.099 A 0.12 0.12 0 0 1 206.199 46.079 C 206.124 46.033 206.056 45.91 206.018 45.757 C 205.989 45.612 205.96 45.45 205.941 45.271 A 3.761 3.761 0 0 1 205.92 44.878 A 23.134 23.134 0 0 1 205.921 44.6 A 4.222 4.222 0 0 1 205.969 43.951 C 206.018 43.658 206.116 43.462 206.213 43.365 C 206.295 43.324 206.308 43.283 206.339 43.214 M 451.868 31.695 A 1.744 1.744 0 0 0 451.673 31.708 C 451.401 31.74 450.986 31.824 450.452 31.939 C 449.768 32.085 449.036 32.281 448.303 32.525 A 39.768 39.768 0 0 0 447.264 32.799 A 41.408 41.408 0 0 0 446.204 33.111 A 9.107 9.107 0 0 1 445.833 33.248 A 33.419 33.419 0 0 1 445.374 33.404 A 6.962 6.962 0 0 1 444.836 33.599 A 6.962 6.962 0 0 0 444.299 33.794 A 12.483 12.483 0 0 1 443.64 33.916 A 12.483 12.483 0 0 0 442.981 34.038 A 6.988 6.988 0 0 0 442.24 34.144 C 442.032 34.186 441.838 34.237 441.661 34.297 A 3.434 3.434 0 0 0 441.565 34.331 C 441.42 34.368 441.302 34.404 441.191 34.44 A 18.326 18.326 0 0 0 441.077 34.478 A 45.922 45.922 0 0 0 439.884 34.877 C 439.076 35.162 438.422 35.43 437.952 35.699 A 3.657 3.657 0 0 1 437.95 35.7 C 437.842 35.772 437.761 35.817 437.706 35.875 A 0.282 0.282 0 0 0 437.659 35.943 A 0.326 0.326 0 0 0 437.631 35.975 C 437.592 36.026 437.553 36.096 437.514 36.136 A 0.215 0.215 0 0 1 437.512 36.138 A 0.709 0.709 0 0 1 437.478 36.199 C 437.464 36.222 437.45 36.241 437.436 36.258 A 0.971 0.971 0 0 1 437.366 36.333 L 437.17 36.529 A 12.588 12.588 0 0 0 437.038 36.605 C 436.506 36.918 436.477 37 436.916 36.886 A 4.955 4.955 0 0 0 436.975 36.871 A 29.69 29.69 0 0 1 437.541 36.668 C 438.059 36.489 438.448 36.377 438.696 36.344 A 1.034 1.034 0 0 1 438.831 36.333 A 1.098 1.098 0 0 1 438.874 36.327 C 439.107 36.298 439.157 36.379 439.056 36.572 A 1.072 1.072 0 0 1 439.026 36.626 C 438.933 36.719 438.84 36.812 438.706 36.904 A 1.7 1.7 0 0 1 438.684 36.919 A 0.953 0.953 0 0 1 438.499 37.017 A 0.702 0.702 0 0 1 438.245 37.066 A 0.778 0.778 0 0 0 438.052 37.092 C 437.97 37.113 437.877 37.145 437.762 37.191 A 9.03 9.03 0 0 0 437.708 37.212 A 3.932 3.932 0 0 0 437.553 37.294 C 437.394 37.383 437.22 37.492 437.074 37.602 A 4.267 4.267 0 0 0 437.073 37.603 A 1.449 1.449 0 0 0 437.006 37.656 C 436.883 37.76 436.848 37.835 436.902 37.88 A 0.122 0.122 0 0 0 436.926 37.896 A 0.538 0.538 0 0 0 437.068 37.958 C 437.253 38.014 437.556 38.042 438 38.042 L 440.686 38.042 A 46.656 46.656 0 0 1 442.548 38.006 A 49.465 49.465 0 0 1 444.446 38.042 A 134.995 134.995 0 0 1 445.322 38.08 C 446.158 38.119 446.863 38.164 447.375 38.238 C 447.888 38.274 448.373 38.338 448.811 38.389 A 17.748 17.748 0 0 0 449.231 38.433 A 25.479 25.479 0 0 1 449.587 38.465 C 449.91 38.496 450.151 38.528 450.311 38.559 A 1.845 1.845 0 0 1 450.403 38.579 A 0.712 0.712 0 0 0 450.631 38.535 C 450.831 38.467 451.084 38.321 451.419 38.11 A 25.67 25.67 0 0 0 451.526 38.042 C 451.999 37.711 452.518 37.334 452.994 36.867 A 6.989 6.989 0 0 0 453.04 36.822 A 7.463 7.463 0 0 0 453.489 36.283 C 453.634 36.09 453.755 35.901 453.851 35.715 A 2.439 2.439 0 0 0 454.016 35.308 A 1.427 1.427 0 0 0 454.091 34.854 C 454.091 34.464 453.929 34.074 453.634 33.684 A 3.619 3.619 0 0 0 453.528 33.55 A 0.524 0.524 0 0 1 453.388 33.255 A 0.653 0.653 0 0 1 453.381 33.16 A 1.208 1.208 0 0 1 453.333 32.775 A 10.565 10.565 0 0 1 453.333 32.72 A 1.153 1.153 0 0 0 453.323 32.573 C 453.307 32.444 453.271 32.326 453.235 32.183 C 453.187 32.04 453.094 31.898 452.909 31.845 A 0.505 0.505 0 0 0 452.893 31.841 A 0.982 0.982 0 0 0 452.7 31.772 C 452.564 31.737 452.392 31.714 452.185 31.703 A 5.893 5.893 0 0 0 451.868 31.695 Z M 342.59 48.931 A 0.475 0.475 0 0 0 342.338 49.012 C 342.29 49.042 342.242 49.078 342.192 49.116 A 10.339 10.339 0 0 1 342.053 49.224 A 1.581 1.581 0 0 0 341.942 49.402 C 341.81 49.639 341.643 50.019 341.418 50.542 A 46.439 46.439 0 0 1 341.416 50.55 C 341.21 51.125 340.971 51.769 340.755 52.481 A 18.159 18.159 0 0 0 340.637 52.886 A 169.366 169.366 0 0 0 340.283 54.089 C 340.173 54.473 340.076 54.839 340.002 55.181 C 339.866 55.774 339.814 56.197 339.848 56.329 A 0.118 0.118 0 0 0 339.856 56.353 A 0.173 0.173 0 0 1 339.87 56.4 C 339.888 56.498 339.862 56.674 339.829 56.945 A 17.17 17.17 0 0 0 339.807 57.134 C 339.758 57.574 339.612 58.062 339.465 58.599 A 23.232 23.232 0 0 0 339.252 59.521 C 339.185 59.844 339.124 60.186 339.075 60.552 A 41.153 41.153 0 0 0 338.94 61.535 C 338.904 61.846 338.879 62.139 338.879 62.408 A 13.863 13.863 0 0 1 338.784 63.131 C 338.739 63.421 338.687 63.731 338.635 64.068 A 11.298 11.298 0 0 1 338.521 64.651 C 338.469 64.886 338.414 65.107 338.364 65.303 A 79.93 79.93 0 0 0 338.293 65.581 A 26.206 26.206 0 0 0 338.21 65.836 C 337.761 67.23 337.874 67.347 338.515 66.187 A 21.517 21.517 0 0 0 338.684 65.874 A 10.628 10.628 0 0 1 338.95 65.434 C 339.094 65.207 339.262 64.963 339.465 64.703 A 10.566 10.566 0 0 1 340.36 63.649 A 4.255 4.255 0 0 1 340.54 63.482 A 67.173 67.173 0 0 0 341.236 62.704 C 341.898 61.953 342.456 61.285 342.932 60.699 A 38.709 38.709 0 0 0 343.235 60.29 C 343.634 59.743 343.86 59.383 343.86 59.185 A 0.595 0.595 0 0 1 343.891 59.009 C 343.945 58.835 344.072 58.614 344.271 58.344 A 5.894 5.894 0 0 1 344.299 58.306 C 344.592 57.915 344.934 57.574 345.325 57.232 C 345.648 56.908 345.884 56.76 346.074 56.745 A 0.404 0.404 0 0 1 346.106 56.744 A 0.45 0.45 0 0 0 346.275 56.704 A 1.875 1.875 0 0 0 346.399 56.646 A 0.29 0.29 0 0 0 346.439 56.594 C 346.458 56.563 346.475 56.526 346.485 56.487 A 0.336 0.336 0 0 0 346.497 56.402 C 346.497 56.355 346.587 56.173 346.767 55.942 A 3.166 3.166 0 0 1 346.79 55.913 C 346.985 55.621 347.18 55.376 347.473 55.083 A 8.044 8.044 0 0 0 347.936 54.493 A 2.495 2.495 0 0 0 348.108 54.204 C 348.297 53.92 348.395 53.728 348.401 53.583 A 0.34 0.34 0 0 0 348.401 53.57 A 1.203 1.203 0 0 0 348.274 53.175 C 348.095 52.812 347.733 52.372 347.206 51.838 A 16.91 16.91 0 0 0 347.131 51.763 C 346.35 50.933 345.422 50.298 344.446 49.712 C 343.526 49.18 342.895 48.888 342.598 48.93 A 0.345 0.345 0 0 0 342.59 48.931 Z M 471.594 48.931 A 0.475 0.475 0 0 0 471.342 49.012 C 471.294 49.042 471.246 49.078 471.196 49.116 A 10.339 10.339 0 0 1 471.057 49.224 A 1.581 1.581 0 0 0 470.945 49.402 C 470.814 49.639 470.647 50.019 470.422 50.542 A 46.439 46.439 0 0 1 470.42 50.55 C 470.214 51.125 469.975 51.769 469.759 52.481 A 18.159 18.159 0 0 0 469.641 52.886 A 169.366 169.366 0 0 0 469.287 54.089 C 469.177 54.473 469.08 54.839 469.006 55.181 C 468.869 55.774 468.818 56.197 468.852 56.329 A 0.118 0.118 0 0 0 468.86 56.353 A 0.173 0.173 0 0 1 468.874 56.4 C 468.892 56.498 468.866 56.674 468.833 56.945 A 17.17 17.17 0 0 0 468.811 57.134 C 468.762 57.574 468.616 58.062 468.469 58.599 A 23.232 23.232 0 0 0 468.256 59.521 C 468.188 59.844 468.127 60.186 468.079 60.552 A 41.153 41.153 0 0 0 467.944 61.535 C 467.908 61.846 467.883 62.139 467.883 62.408 A 13.863 13.863 0 0 1 467.787 63.131 C 467.743 63.421 467.691 63.731 467.639 64.068 A 11.298 11.298 0 0 1 467.525 64.651 C 467.473 64.886 467.418 65.107 467.368 65.303 A 79.93 79.93 0 0 0 467.297 65.581 A 26.206 26.206 0 0 0 467.214 65.836 C 466.765 67.23 466.878 67.347 467.519 66.187 A 21.517 21.517 0 0 0 467.688 65.874 A 10.628 10.628 0 0 1 467.953 65.434 C 468.098 65.207 468.266 64.963 468.469 64.703 A 10.566 10.566 0 0 1 469.364 63.649 A 4.255 4.255 0 0 1 469.543 63.482 A 67.173 67.173 0 0 0 470.24 62.704 C 470.901 61.953 471.46 61.285 471.936 60.699 A 38.709 38.709 0 0 0 472.239 60.29 C 472.638 59.743 472.864 59.383 472.864 59.185 A 0.595 0.595 0 0 1 472.895 59.009 C 472.949 58.835 473.076 58.614 473.275 58.344 A 5.894 5.894 0 0 1 473.303 58.306 C 473.596 57.915 473.938 57.574 474.329 57.232 C 474.652 56.908 474.888 56.76 475.078 56.745 A 0.404 0.404 0 0 1 475.11 56.744 A 0.45 0.45 0 0 0 475.279 56.704 A 1.875 1.875 0 0 0 475.403 56.646 A 0.29 0.29 0 0 0 475.443 56.594 C 475.462 56.563 475.479 56.526 475.489 56.487 A 0.336 0.336 0 0 0 475.5 56.402 C 475.5 56.355 475.591 56.173 475.771 55.942 A 3.166 3.166 0 0 1 475.793 55.913 C 475.989 55.621 476.184 55.376 476.477 55.083 A 8.044 8.044 0 0 0 476.94 54.493 A 2.495 2.495 0 0 0 477.112 54.204 C 477.301 53.92 477.399 53.728 477.405 53.583 A 0.34 0.34 0 0 0 477.405 53.57 A 1.203 1.203 0 0 0 477.278 53.175 C 477.098 52.812 476.737 52.372 476.21 51.838 A 16.91 16.91 0 0 0 476.135 51.763 C 475.354 50.933 474.426 50.298 473.45 49.712 C 472.53 49.18 471.899 48.888 471.602 48.93 A 0.345 0.345 0 0 0 471.594 48.931 Z M 116.027 33.961 A 8.272 8.272 0 0 0 115.979 34.038 A 12.947 12.947 0 0 0 115.233 35.359 C 115.043 35.744 114.861 36.157 114.687 36.606 A 18.745 18.745 0 0 0 114.514 37.066 A 6.405 6.405 0 0 0 114.385 37.377 C 114.299 37.601 114.242 37.794 114.203 37.953 A 3.493 3.493 0 0 0 114.172 38.091 C 114.124 38.333 114.124 38.383 114.218 38.289 A 0.789 0.789 0 0 0 114.221 38.287 A 3.954 3.954 0 0 1 114.342 38.114 C 114.517 37.88 114.653 37.769 114.764 37.769 A 0.163 0.163 0 0 1 114.856 37.798 C 114.98 37.84 114.964 38.056 114.867 38.388 A 5.27 5.27 0 0 1 114.807 38.579 A 2.947 2.947 0 0 1 114.703 38.995 C 114.661 39.129 114.612 39.263 114.563 39.41 A 3.162 3.162 0 0 0 114.462 39.711 C 114.424 39.842 114.396 39.96 114.368 40.044 C 114.293 40.343 114.161 40.757 113.994 41.241 A 47.961 47.961 0 0 1 113.831 41.704 C 113.538 42.437 113.293 43.121 113.049 43.804 A 84.763 84.763 0 0 0 112.854 44.231 C 112.711 44.544 112.601 44.792 112.525 44.974 A 8.596 8.596 0 0 0 112.463 45.122 C 112.385 45.28 112.306 45.437 112.278 45.569 A 0.444 0.444 0 0 0 112.268 45.66 A 0.417 0.417 0 0 0 112.255 45.708 C 112.23 45.828 112.274 45.915 112.317 46.001 A 0.281 0.281 0 0 1 112.374 46.072 C 112.39 46.104 112.392 46.142 112.367 46.193 A 0.269 0.269 0 0 1 112.366 46.197 L 112.122 46.441 A 0.465 0.465 0 0 0 111.95 46.539 C 111.895 46.59 111.855 46.655 111.829 46.734 A 0.837 0.837 0 0 0 111.771 46.866 C 111.757 46.914 111.754 46.962 111.772 47.009 A 0.197 0.197 0 0 0 111.78 47.027 A 0.225 0.225 0 0 0 111.939 47.122 C 112.271 47.177 113.007 46.797 114.172 45.953 A 14.519 14.519 0 0 1 114.717 45.637 A 7.733 7.733 0 0 1 114.954 45.513 A 5.293 5.293 0 0 1 115.127 45.413 C 115.289 45.324 115.417 45.269 115.491 45.269 A 0.46 0.46 0 0 0 115.61 45.205 C 115.738 45.113 115.894 44.939 116.077 44.683 C 116.321 44.341 116.614 43.902 116.858 43.413 C 117.108 42.997 117.429 42.545 117.821 42.057 A 18.809 18.809 0 0 1 118.03 41.802 A 10.379 10.379 0 0 1 118.839 40.928 A 6.937 6.937 0 0 1 119.543 40.337 A 11.584 11.584 0 0 0 120.282 39.684 A 44.254 44.254 0 0 0 121.057 38.921 A 24.775 24.775 0 0 0 121.702 38.193 C 121.894 37.964 122.066 37.74 122.21 37.517 A 4.124 4.124 0 0 0 122.278 37.408 A 12.522 12.522 0 0 0 122.508 37.067 C 122.674 36.813 122.795 36.604 122.893 36.417 A 7.068 7.068 0 0 0 122.961 36.285 A 1.266 1.266 0 0 0 123.009 36.143 C 123.057 35.964 123.049 35.816 123.01 35.699 C 122.922 35.521 122.753 35.344 122.503 35.13 A 7.554 7.554 0 0 0 122.424 35.064 C 122.131 34.771 121.729 34.478 121.257 34.185 A 15.611 15.611 0 0 0 120.764 33.892 A 9.852 9.852 0 0 0 119.891 33.391 A 11.414 11.414 0 0 0 118.811 32.915 A 11.976 11.976 0 0 0 118.372 32.755 C 117.967 32.617 117.645 32.543 117.424 32.569 A 0.626 0.626 0 0 0 117.395 32.574 C 117.016 32.716 116.545 33.134 116.027 33.961 Z M 220.031 33.961 A 8.272 8.272 0 0 0 219.983 34.038 A 12.947 12.947 0 0 0 219.237 35.359 C 219.047 35.744 218.865 36.157 218.69 36.606 A 18.745 18.745 0 0 0 218.518 37.066 A 6.405 6.405 0 0 0 218.389 37.377 C 218.303 37.601 218.246 37.794 218.207 37.953 A 3.493 3.493 0 0 0 218.176 38.091 C 218.128 38.333 218.127 38.383 218.222 38.289 A 0.789 0.789 0 0 0 218.225 38.287 A 3.954 3.954 0 0 1 218.346 38.114 C 218.521 37.88 218.657 37.769 218.768 37.769 A 0.163 0.163 0 0 1 218.86 37.798 C 218.984 37.84 218.968 38.056 218.871 38.388 A 5.27 5.27 0 0 1 218.811 38.579 A 2.947 2.947 0 0 1 218.707 38.995 C 218.665 39.129 218.616 39.263 218.567 39.41 A 3.162 3.162 0 0 0 218.466 39.711 C 218.428 39.842 218.4 39.96 218.372 40.044 C 218.297 40.343 218.165 40.757 217.997 41.241 A 47.961 47.961 0 0 1 217.834 41.704 C 217.542 42.437 217.297 43.121 217.053 43.804 A 84.763 84.763 0 0 0 216.858 44.231 C 216.715 44.544 216.605 44.792 216.529 44.974 A 8.596 8.596 0 0 0 216.467 45.122 C 216.389 45.28 216.31 45.437 216.282 45.569 A 0.444 0.444 0 0 0 216.272 45.66 A 0.417 0.417 0 0 0 216.259 45.708 C 216.234 45.828 216.278 45.915 216.321 46.001 A 0.281 0.281 0 0 1 216.378 46.072 C 216.393 46.104 216.396 46.142 216.371 46.193 A 0.269 0.269 0 0 1 216.37 46.197 L 216.125 46.441 A 0.465 0.465 0 0 0 215.954 46.539 C 215.899 46.59 215.859 46.655 215.833 46.734 A 0.837 0.837 0 0 0 215.775 46.866 C 215.761 46.914 215.758 46.962 215.776 47.009 A 0.197 0.197 0 0 0 215.784 47.027 A 0.225 0.225 0 0 0 215.943 47.122 C 216.275 47.177 217.011 46.797 218.176 45.953 A 14.519 14.519 0 0 1 218.721 45.637 A 7.733 7.733 0 0 1 218.958 45.513 A 5.293 5.293 0 0 1 219.131 45.413 C 219.293 45.324 219.421 45.269 219.495 45.269 A 0.46 0.46 0 0 0 219.614 45.205 C 219.742 45.113 219.897 44.939 220.081 44.683 C 220.325 44.341 220.618 43.902 220.862 43.413 C 221.112 42.997 221.433 42.545 221.825 42.057 A 18.809 18.809 0 0 1 222.034 41.802 A 10.379 10.379 0 0 1 222.843 40.928 A 6.937 6.937 0 0 1 223.547 40.337 A 11.584 11.584 0 0 0 224.286 39.684 A 44.254 44.254 0 0 0 225.061 38.921 A 24.775 24.775 0 0 0 225.705 38.193 C 225.898 37.964 226.07 37.74 226.214 37.517 A 4.124 4.124 0 0 0 226.282 37.408 A 12.522 12.522 0 0 0 226.512 37.067 C 226.678 36.813 226.799 36.604 226.897 36.417 A 7.068 7.068 0 0 0 226.965 36.285 A 1.266 1.266 0 0 0 227.013 36.143 C 227.061 35.964 227.053 35.816 227.014 35.699 C 226.926 35.521 226.756 35.344 226.507 35.13 A 7.554 7.554 0 0 0 226.428 35.064 C 226.135 34.771 225.733 34.478 225.261 34.185 A 15.611 15.611 0 0 0 224.768 33.892 A 9.852 9.852 0 0 0 223.895 33.391 A 11.414 11.414 0 0 0 222.815 32.915 A 11.976 11.976 0 0 0 222.376 32.755 C 221.971 32.617 221.649 32.543 221.428 32.569 A 0.626 0.626 0 0 0 221.399 32.574 C 221.02 32.716 220.549 33.134 220.031 33.961 Z M 323.041 62.286 A 0.279 0.279 0 0 1 323.015 62.212 A 0.256 0.256 0 0 1 323.01 62.163 L 323.01 61.773 L 323.01 61.285 A 4.729 4.729 0 0 0 322.996 61.201 C 322.952 60.964 322.908 60.845 322.864 60.845 C 322.823 60.845 322.749 60.946 322.642 61.146 A 5.725 5.725 0 0 0 322.571 61.285 C 322.305 61.773 322.2 61.777 322.183 61.334 A 3.872 3.872 0 0 1 322.18 61.187 A 7.178 7.178 0 0 0 322.158 61.027 C 322.105 60.665 322.014 60.224 321.887 59.673 C 321.692 59.087 321.497 58.55 321.252 58.013 A 6.622 6.622 0 0 0 321.158 57.787 C 321.008 57.45 320.886 57.281 320.764 57.281 A 0.182 0.182 0 0 0 320.615 57.36 C 320.533 57.468 320.495 57.683 320.511 57.994 A 3.211 3.211 0 0 0 320.52 58.111 C 320.569 58.697 320.715 59.331 321.008 59.966 A 8.803 8.803 0 0 1 321.399 60.992 A 4.794 4.794 0 0 1 321.45 61.135 C 321.559 61.455 321.607 61.7 321.692 61.871 A 3.745 3.745 0 0 0 321.784 62.26 A 1.567 1.567 0 0 0 321.936 62.603 A 7.634 7.634 0 0 0 322.068 62.859 A 2.715 2.715 0 0 0 322.278 63.189 C 322.375 63.335 322.473 63.482 322.473 63.677 A 0.599 0.599 0 0 1 322.484 63.714 C 322.501 63.778 322.509 63.85 322.504 63.921 A 0.503 0.503 0 0 1 322.424 64.165 A 0.578 0.578 0 0 0 322.391 64.221 C 322.263 64.47 322.515 64.543 323.108 64.361 A 72.564 72.564 0 0 0 323.208 64.333 C 323.662 64.209 323.776 64.175 323.547 64.312 C 323.394 64.4 323.28 64.487 323.201 64.58 A 0.543 0.543 0 0 0 323.059 64.947 A 0.675 0.675 0 0 0 323.068 64.986 C 323.125 65.201 323.274 65.288 323.596 65.288 A 0.264 0.264 0 0 1 323.669 65.299 C 323.808 65.339 323.968 65.49 324.131 65.754 A 3.304 3.304 0 0 1 324.28 66.021 A 6.599 6.599 0 0 1 324.441 66.336 A 7.641 7.641 0 0 1 324.915 67.632 C 325.031 68.099 325.055 68.442 325.01 68.685 A 0.874 0.874 0 0 1 324.963 68.853 A 7.796 7.796 0 0 1 324.932 68.943 C 324.898 69.043 324.877 69.119 324.915 69.195 C 324.952 69.232 324.99 69.27 325.05 69.285 A 0.242 0.242 0 0 0 325.11 69.292 C 325.215 69.292 325.295 69.318 325.35 69.35 A 0.265 0.265 0 0 1 325.403 69.39 C 325.441 69.428 325.478 69.466 325.494 69.526 A 0.242 0.242 0 0 1 325.5 69.585 C 325.452 69.682 325.5 69.828 325.549 70.022 A 4.898 4.898 0 0 0 325.555 70.049 C 325.594 70.201 325.634 70.325 325.7 70.496 A 8.703 8.703 0 0 0 325.745 70.611 C 326.191 71.817 325.943 71.92 324.963 70.956 A 14.819 14.819 0 0 1 324.67 70.66 A 9.628 9.628 0 0 1 324.347 70.228 C 323.983 69.715 323.514 68.98 322.961 68.023 A 98.242 98.242 0 0 1 321.875 66.094 A 59.161 59.161 0 0 1 320.862 64.165 C 320.366 63.135 320.019 62.344 319.821 61.814 A 6.275 6.275 0 0 1 319.69 61.431 A 3.059 3.059 0 0 0 319.633 61.237 C 319.582 61.079 319.515 60.892 319.448 60.658 A 6.913 6.913 0 0 1 319.446 60.65 A 4.21 4.21 0 0 0 319.269 60.162 C 319.211 60.025 319.149 59.888 319.086 59.744 A 10.859 10.859 0 0 1 319.084 59.74 A 11.052 11.052 0 0 1 319.083 59.737 A 11.252 11.252 0 0 1 319.081 59.733 A 11.455 11.455 0 0 1 319.08 59.73 A 27.466 27.466 0 0 1 319.078 59.726 A 11.873 11.873 0 0 1 319.076 59.723 A 12.087 12.087 0 0 1 319.075 59.719 A 9.846 9.846 0 0 1 319.073 59.715 A 12.531 12.531 0 0 1 319.072 59.712 A 12.761 12.761 0 0 1 319.07 59.708 C 319.067 59.702 319.066 59.699 319.065 59.697 M 27.619 54.3 A 12.262 12.262 0 0 0 27.698 54.4 C 27.699 54.402 27.7 54.404 27.701 54.407 C 27.849 54.701 28.041 55.039 28.186 55.425 A 219.835 219.835 0 0 1 28.855 56.878 C 30.289 60.028 31.005 61.822 31.065 62.198 A 0.434 0.434 0 0 1 31.067 62.212 A 0.23 0.23 0 0 0 31.072 62.265 C 31.087 62.329 31.133 62.376 31.208 62.451 A 37.593 37.593 0 0 0 31.213 62.456 C 31.256 62.499 31.373 62.542 31.468 62.552 A 0.368 0.368 0 0 0 31.506 62.554 A 0.405 0.405 0 0 1 31.84 62.708 C 31.88 62.757 31.915 62.819 31.946 62.896 A 0.988 0.988 0 0 1 32.003 63.109 C 32.036 63.32 32.018 63.574 31.95 63.854 A 2.898 2.898 0 0 1 31.946 63.872 A 0.237 0.237 0 0 0 31.959 63.966 C 31.964 63.979 31.972 63.992 31.982 64.006 A 0.19 0.19 0 0 0 31.995 64.019 A 0.29 0.29 0 0 0 32.046 64.059 C 32.077 64.078 32.114 64.095 32.154 64.105 A 0.336 0.336 0 0 0 32.239 64.117 A 0.778 0.778 0 0 1 32.305 64.119 C 32.444 64.131 32.471 64.19 32.385 64.361 A 0.363 0.363 0 0 0 32.337 64.419 C 32.292 64.488 32.288 64.552 32.288 64.593 A 1.145 1.145 0 0 0 32.288 64.605 A 0.63 0.63 0 0 0 32.318 64.66 C 32.341 64.696 32.363 64.721 32.386 64.736 A 0.087 0.087 0 0 0 32.434 64.751 C 32.532 64.8 32.581 64.947 32.678 65.142 A 2.626 2.626 0 0 1 32.815 65.617 C 32.836 65.725 32.855 65.841 32.874 65.972 A 19.615 19.615 0 0 0 32.874 65.977 A 19.318 19.318 0 0 0 32.874 65.981 A 19.025 19.025 0 0 0 32.875 65.985 A 20.178 20.178 0 0 0 32.875 65.99 A 82.853 82.853 0 0 0 32.876 65.994 A 19.299 19.299 0 0 0 32.876 66.003 A 19.011 19.011 0 0 0 32.877 66.007 A 18.726 18.726 0 0 0 32.877 66.011 A 17.128 17.128 0 0 0 32.878 66.015 C 32.878 66.018 32.878 66.021 32.878 66.024 A 17.633 17.633 0 0 0 32.879 66.028 A 17.369 17.369 0 0 0 32.879 66.032 A 17.112 17.112 0 0 0 32.879 66.036 C 32.88 66.04 32.88 66.044 32.881 66.048 A 17.484 17.484 0 0 0 32.881 66.052 C 32.921 66.479 32.958 66.734 32.936 66.79 A 0.015 0.015 0 0 1 32.922 66.802 A 0.011 0.011 0 0 1 32.921 66.808 C 32.908 66.828 32.791 66.67 32.631 66.364 A 6.192 6.192 0 0 1 32.581 66.265 A 11.24 11.24 0 0 1 32.288 65.716 A 15.173 15.173 0 0 1 31.995 65.093 A 10.224 10.224 0 0 0 31.867 64.773 C 31.762 64.519 31.632 64.222 31.483 63.881 A 87.469 87.469 0 0 1 31.311 63.482 C 31.262 63.238 31.116 62.945 30.92 62.554 C 30.725 62.163 30.53 61.822 30.334 61.431 C 30.185 61.169 30.007 60.793 29.778 60.324 A 51.805 51.805 0 0 0 29.553 59.869 A 81.175 81.175 0 0 0 29.114 58.868 A 81.175 81.175 0 0 1 28.674 57.867 A 26.636 26.636 0 0 1 28.271 56.951 A 19.693 19.693 0 0 1 27.942 56.109 A 33.652 33.652 0 0 0 27.937 56.097 C 27.708 55.595 27.523 55.222 27.422 54.937 A 2.546 2.546 0 0 1 27.405 54.888 L 27.356 54.839 A 1.554 1.554 0 0 1 27.258 54.596 C 27.238 54.529 27.224 54.465 27.217 54.406 A 0.807 0.807 0 0 1 27.209 54.302 A 15.854 15.854 0 0 1 27.21 54.233 C 27.21 54.133 27.213 54.063 27.227 54.016 A 0.129 0.129 0 0 1 27.258 53.96 L 27.307 53.96 C 27.391 54.002 27.474 54.115 27.619 54.3 Z M 34.729 65.386 A 3.226 3.226 0 0 0 34.689 65.32 C 34.564 65.124 34.48 65.044 34.436 65.044 A 0.124 0.124 0 0 0 34.381 65.057 C 34.337 65.078 34.305 65.126 34.277 65.191 A 1.237 1.237 0 0 0 34.241 65.288 C 34.205 65.43 34.17 65.572 34.153 65.752 A 2.361 2.361 0 0 0 34.143 65.972 C 34.098 66.563 34.179 66.816 34.427 66.769 A 0.445 0.445 0 0 0 34.485 66.753 A 1.44 1.44 0 0 1 34.518 66.74 C 34.716 66.667 34.768 66.704 34.739 66.819 A 0.455 0.455 0 0 1 34.729 66.851 A 0.331 0.331 0 0 0 34.692 67.004 C 34.692 67.058 34.705 67.12 34.729 67.193 A 2.001 2.001 0 0 0 34.774 67.28 C 34.804 67.333 34.841 67.389 34.9 67.457 A 1.561 1.561 0 0 0 34.973 67.535 A 1.048 1.048 0 0 0 34.998 67.558 C 35.094 67.648 35.221 67.742 35.266 67.876 C 35.323 67.962 35.364 68.031 35.387 68.093 A 0.346 0.346 0 0 1 35.413 68.218 C 35.37 68.39 36.005 69.428 37.253 71.234 A 127.791 127.791 0 0 0 37.805 72.027 A 0.693 0.693 0 0 1 37.851 72.078 C 37.972 72.226 38.055 72.439 38.098 72.613 A 3.371 3.371 0 0 1 38.131 72.698 C 38.207 72.903 38.245 73.075 38.245 73.247 A 3.276 3.276 0 0 0 38.241 73.29 C 38.205 73.701 38.284 73.766 38.444 73.517 A 1.675 1.675 0 0 0 38.489 73.443 A 0.801 0.801 0 0 1 38.507 73.417 C 38.554 73.352 38.6 73.309 38.647 73.283 A 0.268 0.268 0 0 1 38.782 73.247 C 38.879 73.296 38.976 73.489 39.121 73.731 A 7.274 7.274 0 0 0 39.124 73.736 C 39.27 74.029 39.465 74.322 39.709 74.663 C 39.954 75.005 40.247 75.298 40.491 75.542 C 40.735 75.787 40.93 75.933 41.028 75.933 C 41.077 75.933 40.979 75.738 40.784 75.347 C 40.54 74.956 40.247 74.517 39.905 73.931 A 65.349 65.349 0 0 1 39.62 73.537 A 126.141 126.141 0 0 1 38.831 72.417 A 90.133 90.133 0 0 0 38.787 72.358 C 38.418 71.851 38.14 71.481 37.952 71.246 A 12.079 12.079 0 0 1 37.804 71.082 C 37.342 70.559 36.996 70.072 36.731 69.585 C 36.48 69.126 36.373 68.774 36.408 68.559 A 0.338 0.338 0 0 1 36.438 68.462 A 0.106 0.106 0 0 0 36.461 68.428 C 36.483 68.375 36.468 68.297 36.389 68.218 C 36.34 68.194 36.279 68.157 36.212 68.121 A 1.351 1.351 0 0 0 35.999 68.023 A 2.102 2.102 0 0 1 35.939 68.007 C 35.782 67.963 35.695 67.915 35.608 67.828 A 0.371 0.371 0 0 1 35.584 67.801 C 35.511 67.712 35.515 67.623 35.559 67.535 C 35.64 67.454 35.654 67.406 35.656 67.337 A 1.383 1.383 0 0 0 35.657 67.29 C 35.619 67.253 35.581 67.215 35.521 67.2 A 0.242 0.242 0 0 0 35.461 67.193 C 35.364 67.193 35.315 67.193 35.266 67.144 C 35.185 67.063 35.171 67.016 35.169 66.946 A 1.383 1.383 0 0 1 35.168 66.9 C 35.168 66.704 35.12 66.46 35.022 66.167 C 34.924 65.874 34.827 65.63 34.729 65.386 Z M 286.438 38.726 A 23.15 23.15 0 0 0 286.442 38.678 C 286.534 37.49 286.485 36.919 286.34 36.919 C 286.206 36.919 286.154 37.001 286.071 37.166 A 11.746 11.746 0 0 0 286.047 37.212 A 1.485 1.485 0 0 0 286.02 37.305 C 285.982 37.451 285.95 37.649 285.95 37.847 C 285.95 38.217 285.894 38.811 285.781 39.63 A 52.577 52.577 0 0 1 285.657 40.484 C 285.413 41.753 285.168 42.974 284.875 44.195 A 31.313 31.313 0 0 1 284.709 44.833 C 284.546 45.432 284.403 45.87 284.293 46.134 A 1.687 1.687 0 0 1 284.192 46.343 C 284.045 46.49 283.997 46.783 283.899 47.271 A 5.702 5.702 0 0 0 283.882 47.451 C 283.867 47.636 283.859 47.836 283.855 48.047 A 39.669 39.669 0 0 0 283.85 48.833 A 22.495 22.495 0 0 0 283.85 48.87 C 283.854 51.087 284.188 50.702 284.891 47.753 A 72.021 72.021 0 0 0 285.071 46.978 C 285.364 45.806 285.608 44.439 285.852 42.876 A 36.24 36.24 0 0 0 285.961 42.264 C 286.064 41.662 286.146 41.09 286.217 40.544 A 169.29 169.29 0 0 0 286.438 38.726 Z M 172.209 19.147 A 7.623 7.623 0 0 0 172.083 19.146 C 171.924 19.146 171.765 19.178 171.685 19.216 A 0.155 0.155 0 0 0 171.643 19.244 C 171.6 19.33 171.557 19.417 171.581 19.537 A 0.417 0.417 0 0 0 171.594 19.585 A 0.994 0.994 0 0 0 171.986 20.104 C 172.478 20.465 173.399 20.682 174.757 20.766 A 23.298 23.298 0 0 0 176.184 20.806 A 18.138 18.138 0 0 1 176.596 20.811 A 35.758 35.758 0 0 1 178.333 20.904 C 179.016 20.953 179.504 21.001 179.797 21.099 A 55.647 55.647 0 0 1 180.283 21.181 A 15.296 15.296 0 0 1 180.627 21.246 A 3.177 3.177 0 0 0 180.694 21.256 C 180.902 21.286 181.081 21.29 181.214 21.269 A 0.624 0.624 0 0 0 181.311 21.246 A 1.348 1.348 0 0 1 181.537 21.197 C 181.586 21.189 181.638 21.181 181.694 21.171 A 1.869 1.869 0 0 0 181.799 21.148 A 10.565 10.565 0 0 0 181.854 21.148 A 1.208 1.208 0 0 0 182.239 21.099 C 182.312 21.099 182.413 21.072 182.521 20.996 A 0.826 0.826 0 0 0 182.629 20.904 A 28.495 28.495 0 0 0 182.648 20.885 C 182.693 20.84 182.747 20.785 182.8 20.727 A 1.872 1.872 0 0 0 182.971 20.513 C 183.049 20.32 183.095 20.187 183.087 20.092 A 0.185 0.185 0 0 0 183.069 20.025 A 0.129 0.129 0 0 0 183.051 19.998 C 182.998 19.938 182.879 19.9 182.709 19.885 A 2.082 2.082 0 0 0 182.532 19.878 A 2.554 2.554 0 0 1 182.455 19.877 C 182.235 19.87 181.891 19.84 181.377 19.832 A 16.141 16.141 0 0 0 181.116 19.829 C 180.432 19.781 179.651 19.732 178.772 19.732 A 172.044 172.044 0 0 1 178.428 19.711 C 178.089 19.691 177.768 19.67 177.464 19.649 A 98.488 98.488 0 0 1 176.575 19.585 C 175.989 19.537 175.647 19.439 175.549 19.39 A 1.98 1.98 0 0 0 175.316 19.249 A 0.482 0.482 0 0 0 175.11 19.195 A 1.145 1.145 0 0 0 175.054 19.196 C 174.944 19.201 174.851 19.222 174.775 19.249 A 0.866 0.866 0 0 0 174.67 19.292 C 174.573 19.39 174.573 19.488 174.67 19.634 A 2.221 2.221 0 0 1 174.706 19.689 C 174.846 19.913 174.8 19.952 174.505 19.741 A 4.25 4.25 0 0 1 174.426 19.683 A 1.134 1.134 0 0 0 174.322 19.622 C 174.221 19.569 174.091 19.516 173.932 19.463 A 5.753 5.753 0 0 0 173.694 19.39 A 2.843 2.843 0 0 0 173.466 19.325 A 8.076 8.076 0 0 0 172.717 19.195 A 2.469 2.469 0 0 0 172.4 19.154 C 172.331 19.15 172.267 19.148 172.209 19.147 Z M 75.354 30.279 C 75.549 30.279 75.745 30.376 75.94 30.572 A 0.272 0.272 0 0 1 75.976 30.657 C 76.013 30.808 75.978 31.057 75.889 31.386 A 6.502 6.502 0 0 1 75.842 31.548 C 75.696 32.085 75.549 32.574 75.305 33.111 C 75.144 33.513 74.983 33.816 74.822 34.02 A 1.345 1.345 0 0 1 74.719 34.136 A 0.405 0.405 0 0 0 74.684 34.178 C 74.631 34.248 74.553 34.381 74.475 34.576 C 74.402 34.722 74.301 34.923 74.214 35.159 A 3.455 3.455 0 0 0 74.133 35.406 A 4.351 4.351 0 0 1 73.927 35.866 C 73.844 36.028 73.746 36.198 73.634 36.375 A 9.089 9.089 0 0 1 73.401 36.724 A 8.767 8.767 0 0 1 72.632 37.798 A 11.718 11.718 0 0 1 72.424 38.042 C 72.11 38.357 71.836 38.548 71.681 38.614 A 0.499 0.499 0 0 1 71.643 38.628 C 71.452 38.628 71.355 38.489 71.396 38.21 A 1.06 1.06 0 0 1 71.399 38.189 A 1.975 1.975 0 0 1 71.522 37.475 A 1.804 1.804 0 0 1 71.594 37.31 C 71.741 36.968 71.936 36.724 72.131 36.578 C 72.313 36.487 72.452 36.396 72.55 36.266 A 0.687 0.687 0 0 0 72.571 36.236 A 0.791 0.791 0 0 0 72.65 36.145 C 72.728 36.037 72.753 35.935 72.724 35.859 A 0.165 0.165 0 0 0 72.717 35.845 A 0.251 0.251 0 0 1 72.736 35.759 C 72.763 35.686 72.819 35.592 72.895 35.468 A 32.583 32.583 0 0 0 72.961 35.357 A 7.889 7.889 0 0 1 73.08 35.166 C 73.122 35.1 73.166 35.033 73.212 34.966 A 6.448 6.448 0 0 1 73.499 34.576 A 14.797 14.797 0 0 0 73.673 34.363 C 73.812 34.189 73.937 34.02 74.06 33.821 A 4.633 4.633 0 0 0 74.133 33.697 C 74.28 33.404 74.377 33.111 74.426 32.915 A 1.113 1.113 0 0 1 74.47 32.78 C 74.513 32.67 74.566 32.58 74.604 32.511 A 1.282 1.282 0 0 0 74.622 32.476 A 0.424 0.424 0 0 1 74.764 32.382 C 74.829 32.356 74.896 32.351 74.951 32.373 A 0.167 0.167 0 0 1 74.963 32.378 C 75.208 32.525 75.208 32.378 75.061 31.939 A 0.937 0.937 0 0 1 74.957 31.719 C 74.934 31.652 74.915 31.579 74.897 31.501 A 5.651 5.651 0 0 1 74.866 31.353 C 74.866 31.163 74.866 30.973 74.911 30.828 A 0.597 0.597 0 0 1 74.915 30.816 C 74.972 30.645 75.045 30.507 75.136 30.412 A 0.454 0.454 0 0 1 75.354 30.279 Z M 130.872 33.16 A 0.638 0.638 0 0 0 130.569 33.422 C 130.525 33.49 130.487 33.569 130.454 33.66 A 2.239 2.239 0 0 0 130.383 33.892 A 4.385 4.385 0 0 1 130.267 34.38 A 1.421 1.421 0 0 1 130.188 34.576 A 1.343 1.343 0 0 1 130.162 34.683 C 130.114 34.851 130.045 34.964 130.002 35.046 A 1.074 1.074 0 0 0 129.993 35.064 A 0.813 0.813 0 0 0 129.952 35.108 C 129.854 35.221 129.856 35.293 129.928 35.266 A 0.164 0.164 0 0 0 129.943 35.259 C 130.042 35.259 130.042 35.357 129.944 35.552 C 129.865 35.709 129.787 35.897 129.658 36.117 A 3.438 3.438 0 0 1 129.553 36.285 A 35.989 35.989 0 0 1 129.415 36.524 C 129.285 36.748 129.175 36.932 129.065 37.115 C 128.983 37.362 128.935 37.504 128.951 37.573 A 0.062 0.062 0 0 0 128.967 37.603 A 1.523 1.523 0 0 1 128.965 37.698 C 128.96 37.791 128.94 37.916 128.87 38.091 C 128.807 38.216 128.744 38.382 128.669 38.562 A 5.157 5.157 0 0 1 128.528 38.872 C 128.381 39.117 128.284 39.41 128.186 39.654 C 128.137 39.947 128.088 40.093 128.137 40.24 C 128.186 40.337 128.235 40.386 128.333 40.386 A 0.228 0.228 0 0 0 128.358 40.397 C 128.434 40.424 128.482 40.387 128.56 40.346 A 0.926 0.926 0 0 1 128.577 40.337 A 0.248 0.248 0 0 0 128.706 40.178 C 128.715 40.147 128.721 40.113 128.722 40.074 A 0.615 0.615 0 0 0 128.723 40.044 A 0.353 0.353 0 0 0 128.753 39.962 C 128.766 39.903 128.761 39.844 128.738 39.786 A 0.383 0.383 0 0 0 128.723 39.751 A 0.199 0.199 0 0 1 128.704 39.677 C 128.698 39.6 128.724 39.506 128.756 39.409 A 8.333 8.333 0 0 1 128.772 39.361 A 3.585 3.585 0 0 1 128.989 39.059 A 1.922 1.922 0 0 1 129.114 38.921 C 129.228 38.836 129.309 38.75 129.366 38.664 A 0.757 0.757 0 0 0 129.456 38.482 A 0.9 0.9 0 0 0 129.472 38.427 C 129.503 38.311 129.492 38.231 129.407 38.189 A 0.165 0.165 0 0 1 129.365 38.16 C 129.324 38.12 129.318 38.065 129.334 38.005 A 0.337 0.337 0 0 1 129.358 37.945 A 1.9 1.9 0 0 1 129.514 37.801 C 129.548 37.773 129.587 37.745 129.632 37.717 A 1.427 1.427 0 0 1 129.749 37.652 A 1.872 1.872 0 0 0 129.962 37.481 C 130.021 37.427 130.075 37.374 130.12 37.329 A 28.495 28.495 0 0 0 130.139 37.31 A 0.692 0.692 0 0 0 130.176 37.249 C 130.236 37.135 130.23 37.052 130.188 36.968 A 3.298 3.298 0 0 1 130.065 36.751 C 129.836 36.308 129.843 36.013 130.107 35.888 A 0.617 0.617 0 0 1 130.237 35.845 A 0.646 0.646 0 0 0 130.486 35.73 C 130.618 35.634 130.75 35.487 130.882 35.295 A 3.641 3.641 0 0 0 130.969 35.162 C 131.213 34.771 131.409 34.283 131.506 33.746 A 1.361 1.361 0 0 0 131.536 33.645 C 131.621 33.303 131.496 33.136 131.19 33.113 A 1.025 1.025 0 0 0 131.116 33.111 A 3.091 3.091 0 0 0 131.073 33.111 C 131.01 33.112 130.965 33.117 130.899 33.146 A 0.69 0.69 0 0 0 130.872 33.16 Z M 234.875 33.16 A 0.638 0.638 0 0 0 234.573 33.422 C 234.529 33.49 234.491 33.569 234.458 33.66 A 2.239 2.239 0 0 0 234.387 33.892 A 4.385 4.385 0 0 1 234.271 34.38 A 1.421 1.421 0 0 1 234.192 34.576 A 1.343 1.343 0 0 1 234.166 34.683 C 234.117 34.851 234.049 34.964 234.006 35.046 A 1.074 1.074 0 0 0 233.997 35.064 A 0.813 0.813 0 0 0 233.956 35.108 C 233.858 35.221 233.859 35.293 233.932 35.266 A 0.164 0.164 0 0 0 233.947 35.259 C 234.045 35.259 234.045 35.357 233.948 35.552 C 233.869 35.709 233.791 35.897 233.662 36.117 A 3.438 3.438 0 0 1 233.557 36.285 A 35.989 35.989 0 0 1 233.419 36.524 C 233.289 36.748 233.179 36.932 233.069 37.115 C 232.987 37.362 232.939 37.504 232.955 37.573 A 0.062 0.062 0 0 0 232.971 37.603 A 1.523 1.523 0 0 1 232.969 37.698 C 232.963 37.791 232.944 37.916 232.874 38.091 C 232.811 38.216 232.748 38.382 232.673 38.562 A 5.157 5.157 0 0 1 232.532 38.872 C 232.385 39.117 232.288 39.41 232.19 39.654 C 232.141 39.947 232.092 40.093 232.141 40.24 C 232.19 40.337 232.239 40.386 232.336 40.386 A 0.228 0.228 0 0 0 232.362 40.397 C 232.438 40.424 232.485 40.387 232.564 40.346 A 0.926 0.926 0 0 1 232.581 40.337 A 0.248 0.248 0 0 0 232.71 40.178 C 232.719 40.147 232.724 40.113 232.726 40.074 A 0.615 0.615 0 0 0 232.727 40.044 A 0.353 0.353 0 0 0 232.757 39.962 C 232.77 39.903 232.765 39.844 232.742 39.786 A 0.383 0.383 0 0 0 232.727 39.751 A 0.199 0.199 0 0 1 232.708 39.677 C 232.702 39.6 232.728 39.506 232.76 39.409 A 8.333 8.333 0 0 1 232.776 39.361 A 3.585 3.585 0 0 1 232.993 39.059 A 1.922 1.922 0 0 1 233.118 38.921 C 233.232 38.836 233.313 38.75 233.37 38.664 A 0.757 0.757 0 0 0 233.459 38.482 A 0.9 0.9 0 0 0 233.476 38.427 C 233.507 38.311 233.496 38.231 233.411 38.189 A 0.165 0.165 0 0 1 233.369 38.16 C 233.328 38.12 233.322 38.065 233.338 38.005 A 0.337 0.337 0 0 1 233.362 37.945 A 1.9 1.9 0 0 1 233.518 37.801 C 233.552 37.773 233.591 37.745 233.636 37.717 A 1.427 1.427 0 0 1 233.752 37.652 A 1.872 1.872 0 0 0 233.966 37.481 C 234.025 37.427 234.079 37.374 234.124 37.329 A 28.495 28.495 0 0 0 234.143 37.31 A 0.692 0.692 0 0 0 234.18 37.249 C 234.24 37.135 234.234 37.052 234.192 36.968 A 3.298 3.298 0 0 1 234.069 36.751 C 233.84 36.308 233.847 36.013 234.111 35.888 A 0.617 0.617 0 0 1 234.241 35.845 A 0.646 0.646 0 0 0 234.49 35.73 C 234.622 35.634 234.754 35.487 234.886 35.295 A 3.641 3.641 0 0 0 234.973 35.162 C 235.217 34.771 235.413 34.283 235.51 33.746 A 1.361 1.361 0 0 0 235.54 33.645 C 235.625 33.303 235.5 33.136 235.194 33.113 A 1.025 1.025 0 0 0 235.12 33.111 A 3.091 3.091 0 0 0 235.077 33.111 C 235.014 33.112 234.969 33.117 234.903 33.146 A 0.69 0.69 0 0 0 234.875 33.16 Z M 135.879 35.59 A 1.346 1.346 0 0 1 135.878 35.591 C 135.846 35.631 135.808 35.672 135.754 35.699 A 0.41 0.41 0 0 1 135.699 35.721 A 0.739 0.739 0 0 1 135.461 35.747 C 135.315 35.699 135.266 35.747 135.217 35.845 A 1.373 1.373 0 0 0 135.223 35.991 C 135.226 36.022 135.231 36.055 135.239 36.091 A 1.002 1.002 0 0 0 135.266 36.187 C 135.34 36.335 135.358 36.455 135.32 36.568 A 0.456 0.456 0 0 1 135.266 36.675 C 135.229 36.822 135.165 36.913 135.053 36.991 A 1.048 1.048 0 0 1 134.924 37.066 C 134.68 37.261 134.485 37.505 134.387 37.896 A 1.774 1.774 0 0 0 134.358 38.036 C 134.338 38.155 134.332 38.269 134.339 38.378 A 1.388 1.388 0 0 0 134.485 38.921 A 0.269 0.269 0 0 1 134.487 38.925 C 134.511 38.976 134.509 39.014 134.493 39.046 A 0.281 0.281 0 0 1 134.436 39.117 C 134.366 39.152 134.296 39.187 134.207 39.222 A 2.123 2.123 0 0 1 134.094 39.263 A 2.31 2.31 0 0 0 134.044 39.276 C 133.93 39.307 133.855 39.338 133.804 39.37 A 0.283 0.283 0 0 0 133.752 39.41 C 133.709 39.453 133.704 39.496 133.773 39.54 A 0.322 0.322 0 0 0 133.801 39.556 A 1.326 1.326 0 0 1 133.842 39.643 C 133.871 39.712 133.884 39.78 133.85 39.849 A 0.823 0.823 0 0 1 133.816 39.935 C 133.787 39.998 133.749 40.061 133.701 40.124 A 1.547 1.547 0 0 1 133.557 40.288 A 8.678 8.678 0 0 0 133.48 40.394 C 133.439 40.449 133.402 40.501 133.368 40.551 A 15.088 15.088 0 0 0 133.215 40.777 A 1.528 1.528 0 0 0 133.199 40.849 C 133.176 40.963 133.173 41.058 133.188 41.134 A 0.327 0.327 0 0 0 133.215 41.216 L 133.215 41.509 C 133.19 41.534 133.152 41.56 133.108 41.585 A 3.074 3.074 0 0 1 132.971 41.656 L 132.727 41.656 A 0.381 0.381 0 0 1 132.67 41.653 C 132.652 41.65 132.633 41.644 132.614 41.633 A 0.171 0.171 0 0 1 132.581 41.607 C 132.581 41.558 132.629 41.413 132.677 41.172 A 4.85 4.85 0 0 0 132.678 41.167 A 38.187 38.187 0 0 0 132.826 40.718 A 15.871 15.871 0 0 0 132.971 40.24 C 133.118 39.898 133.167 39.556 133.215 39.214 C 133.264 38.921 133.264 38.677 133.167 38.482 A 1.131 1.131 0 0 1 133.163 38.471 C 133.118 38.33 133.118 38.234 133.118 38.091 A 0.658 0.658 0 0 1 133.138 38.054 C 133.181 37.98 133.229 37.938 133.313 37.896 C 133.459 37.896 133.508 37.749 133.606 37.554 C 133.641 37.412 133.677 37.27 133.694 37.091 A 2.361 2.361 0 0 0 133.704 36.871 C 133.704 36.626 133.752 36.382 133.85 36.187 A 1.26 1.26 0 0 1 133.896 36.103 C 133.92 36.063 133.944 36.028 133.97 36 A 0.285 0.285 0 0 1 134.192 35.894 A 1.593 1.593 0 0 0 134.282 35.861 A 0.704 0.704 0 0 0 134.534 35.699 A 1.875 1.875 0 0 0 134.592 35.575 A 0.45 0.45 0 0 0 134.631 35.406 C 134.672 35.284 134.746 35.197 134.936 35.142 A 1.229 1.229 0 0 1 135.071 35.113 L 135.364 35.113 A 1.145 1.145 0 0 1 135.419 35.114 C 135.53 35.119 135.623 35.14 135.699 35.167 A 0.866 0.866 0 0 1 135.803 35.21 A 0.729 0.729 0 0 1 135.849 35.261 C 135.876 35.293 135.897 35.325 135.913 35.357 A 0.325 0.325 0 0 1 135.95 35.503 C 135.93 35.523 135.91 35.551 135.886 35.581 A 0.948 0.948 0 0 1 135.884 35.584 M 239.883 35.59 A 1.346 1.346 0 0 1 239.882 35.591 C 239.85 35.631 239.812 35.672 239.758 35.699 A 0.41 0.41 0 0 1 239.703 35.721 A 0.739 0.739 0 0 1 239.465 35.747 C 239.319 35.699 239.27 35.747 239.221 35.845 A 1.373 1.373 0 0 0 239.227 35.991 C 239.23 36.022 239.235 36.055 239.243 36.091 A 1.002 1.002 0 0 0 239.27 36.187 C 239.344 36.335 239.362 36.455 239.324 36.568 A 0.456 0.456 0 0 1 239.27 36.675 C 239.233 36.822 239.169 36.913 239.057 36.991 A 1.048 1.048 0 0 1 238.928 37.066 C 238.684 37.261 238.489 37.505 238.391 37.896 A 1.774 1.774 0 0 0 238.362 38.036 C 238.342 38.155 238.336 38.269 238.343 38.378 A 1.388 1.388 0 0 0 238.489 38.921 A 0.269 0.269 0 0 1 238.49 38.925 C 238.515 38.976 238.513 39.014 238.497 39.046 A 0.281 0.281 0 0 1 238.44 39.117 C 238.37 39.152 238.3 39.187 238.211 39.222 A 2.123 2.123 0 0 1 238.098 39.263 A 2.31 2.31 0 0 0 238.048 39.276 C 237.934 39.307 237.859 39.338 237.808 39.37 A 0.283 0.283 0 0 0 237.756 39.41 C 237.713 39.453 237.708 39.496 237.776 39.54 A 0.322 0.322 0 0 0 237.805 39.556 A 1.326 1.326 0 0 1 237.846 39.643 C 237.874 39.712 237.888 39.78 237.854 39.849 A 0.823 0.823 0 0 1 237.82 39.935 C 237.791 39.998 237.752 40.061 237.705 40.124 A 1.547 1.547 0 0 1 237.561 40.288 A 8.678 8.678 0 0 0 237.483 40.394 C 237.443 40.449 237.406 40.501 237.372 40.551 A 15.088 15.088 0 0 0 237.219 40.777 A 1.528 1.528 0 0 0 237.203 40.849 C 237.18 40.963 237.177 41.058 237.192 41.134 A 0.327 0.327 0 0 0 237.219 41.216 L 237.219 41.509 C 237.194 41.534 237.156 41.56 237.111 41.585 A 3.074 3.074 0 0 1 236.975 41.656 L 236.731 41.656 A 0.381 0.381 0 0 1 236.674 41.653 C 236.655 41.65 236.637 41.644 236.618 41.633 A 0.171 0.171 0 0 1 236.584 41.607 C 236.584 41.558 236.633 41.413 236.681 41.172 A 4.85 4.85 0 0 0 236.682 41.167 A 38.187 38.187 0 0 0 236.83 40.718 A 15.871 15.871 0 0 0 236.975 40.24 C 237.122 39.898 237.17 39.556 237.219 39.214 C 237.268 38.921 237.268 38.677 237.17 38.482 A 1.131 1.131 0 0 1 237.167 38.471 C 237.122 38.33 237.122 38.234 237.122 38.091 A 0.658 0.658 0 0 1 237.142 38.054 C 237.185 37.98 237.233 37.938 237.317 37.896 C 237.463 37.896 237.512 37.749 237.61 37.554 C 237.645 37.412 237.681 37.27 237.698 37.091 A 2.361 2.361 0 0 0 237.708 36.871 C 237.708 36.626 237.756 36.382 237.854 36.187 A 1.26 1.26 0 0 1 237.9 36.103 C 237.924 36.063 237.948 36.028 237.974 36 A 0.285 0.285 0 0 1 238.196 35.894 A 1.593 1.593 0 0 0 238.285 35.861 A 0.704 0.704 0 0 0 238.538 35.699 A 1.875 1.875 0 0 0 238.596 35.575 A 0.45 0.45 0 0 0 238.635 35.406 C 238.676 35.284 238.75 35.197 238.94 35.142 A 1.229 1.229 0 0 1 239.075 35.113 L 239.368 35.113 A 1.145 1.145 0 0 1 239.423 35.114 C 239.534 35.119 239.627 35.14 239.703 35.167 A 0.866 0.866 0 0 1 239.807 35.21 A 0.729 0.729 0 0 1 239.853 35.261 C 239.88 35.293 239.901 35.325 239.917 35.357 A 0.325 0.325 0 0 1 239.954 35.503 C 239.934 35.523 239.914 35.551 239.89 35.581 A 0.948 0.948 0 0 1 239.888 35.584 M 46.985 35.015 A 104.224 104.224 0 0 0 46.509 35.016 C 46.156 35.017 45.752 35.022 45.296 35.037 A 37.124 37.124 0 0 0 44.641 35.064 A 228.776 228.776 0 0 0 43.734 35.1 C 42.871 35.137 42.139 35.174 41.516 35.21 A 19.188 19.188 0 0 0 41.221 35.213 C 40.571 35.223 40.192 35.265 40.149 35.308 A 0.041 0.041 0 0 0 40.18 35.335 C 40.269 35.375 40.55 35.415 41.023 35.454 A 21.48 21.48 0 0 0 41.028 35.454 A 42.961 42.961 0 0 0 41.048 35.456 C 41.631 35.504 42.356 35.553 43.225 35.65 C 44.247 35.692 45.083 35.735 45.733 35.713 A 7.399 7.399 0 0 0 46.008 35.699 A 9.913 9.913 0 0 0 46.608 35.639 C 46.826 35.61 47.026 35.574 47.212 35.532 A 4.795 4.795 0 0 0 47.668 35.406 C 48.108 35.23 48.31 35.133 48.31 35.08 A 0.022 0.022 0 0 0 48.303 35.064 C 48.254 35.015 47.815 34.966 46.985 35.015 Z M 104.968 40.453 A 0.279 0.279 0 0 1 104.895 40.479 A 0.256 0.256 0 0 1 104.846 40.484 C 104.804 40.484 104.762 40.484 104.72 40.422 A 0.314 0.314 0 0 1 104.7 40.386 C 104.7 40.338 104.748 40.241 104.797 40.096 A 2.228 2.228 0 0 0 104.797 40.093 C 104.895 39.947 105.042 39.8 105.188 39.654 A 24.475 24.475 0 0 0 105.306 39.535 C 105.479 39.36 105.579 39.246 105.579 39.165 C 105.579 39.068 105.432 39.019 105.188 38.97 A 3.577 3.577 0 0 1 105.148 38.962 C 104.74 38.875 104.715 38.789 105.073 38.702 A 2.994 2.994 0 0 1 105.188 38.677 A 2.571 2.571 0 0 1 105.251 38.664 C 105.412 38.632 105.553 38.622 105.678 38.632 A 0.863 0.863 0 0 1 106.165 38.824 C 106.334 38.951 106.393 39.151 106.31 39.425 A 1.256 1.256 0 0 1 106.262 39.556 A 0.434 0.434 0 0 0 106.216 39.61 A 0.583 0.583 0 0 0 106.116 39.947 C 106.116 40.044 106.165 40.093 106.262 40.142 C 106.302 40.182 106.375 40.124 106.481 40.02 A 8.664 8.664 0 0 0 106.555 39.947 L 106.897 39.263 L 107.288 38.238 L 106.36 38.238 A 1.936 1.936 0 0 0 106.291 38.225 C 106.07 38.189 105.853 38.193 105.676 38.238 C 105.518 38.238 105.391 38.27 105.297 38.282 A 0.479 0.479 0 0 1 105.237 38.287 A 0.385 0.385 0 0 1 105.221 38.297 C 105.087 38.377 105.043 38.279 105.09 38.091 C 105.09 37.994 105.139 37.945 105.237 37.896 A 1.326 1.326 0 0 1 105.324 37.855 C 105.393 37.827 105.461 37.813 105.53 37.847 C 105.647 37.847 105.763 37.723 105.905 37.5 A 4.922 4.922 0 0 0 106.018 37.31 A 10.452 10.452 0 0 0 106.244 36.83 A 7.353 7.353 0 0 0 106.555 35.992 A 5.269 5.269 0 0 0 106.65 35.625 C 106.726 35.289 106.762 34.986 106.798 34.734 A 13.15 13.15 0 0 1 106.799 34.722 A 1.702 1.702 0 0 0 106.799 34.682 C 106.795 34.528 106.771 34.44 106.74 34.402 A 0.05 0.05 0 0 0 106.702 34.38 A 4.957 4.957 0 0 0 106.66 34.423 C 106.589 34.495 106.457 34.635 106.262 34.869 C 106.121 35.057 106.025 35.291 105.93 35.483 M 208.972 40.453 A 0.279 0.279 0 0 1 208.899 40.479 A 0.256 0.256 0 0 1 208.85 40.484 C 208.808 40.484 208.766 40.484 208.724 40.422 A 0.314 0.314 0 0 1 208.704 40.386 C 208.704 40.338 208.752 40.241 208.8 40.096 A 2.228 2.228 0 0 0 208.801 40.093 C 208.899 39.947 209.045 39.8 209.192 39.654 A 24.475 24.475 0 0 0 209.31 39.535 C 209.483 39.36 209.583 39.246 209.583 39.165 C 209.583 39.068 209.436 39.019 209.192 38.97 A 3.577 3.577 0 0 1 209.152 38.962 C 208.744 38.875 208.719 38.789 209.077 38.702 A 2.994 2.994 0 0 1 209.192 38.677 A 2.571 2.571 0 0 1 209.255 38.664 C 209.416 38.632 209.557 38.622 209.682 38.632 A 0.863 0.863 0 0 1 210.168 38.824 C 210.338 38.951 210.397 39.151 210.314 39.425 A 1.256 1.256 0 0 1 210.266 39.556 A 0.434 0.434 0 0 0 210.22 39.61 A 0.583 0.583 0 0 0 210.12 39.947 C 210.12 40.044 210.168 40.093 210.266 40.142 C 210.306 40.182 210.379 40.124 210.485 40.02 A 8.664 8.664 0 0 0 210.559 39.947 L 210.901 39.263 L 211.292 38.238 L 210.364 38.238 A 1.936 1.936 0 0 0 210.295 38.225 C 210.074 38.189 209.857 38.193 209.68 38.238 C 209.521 38.238 209.395 38.27 209.301 38.282 A 0.479 0.479 0 0 1 209.241 38.287 A 0.385 0.385 0 0 1 209.225 38.297 C 209.091 38.377 209.047 38.279 209.094 38.091 C 209.094 37.994 209.143 37.945 209.241 37.896 A 1.326 1.326 0 0 1 209.328 37.855 C 209.397 37.827 209.465 37.813 209.534 37.847 C 209.65 37.847 209.767 37.723 209.909 37.5 A 4.922 4.922 0 0 0 210.022 37.31 A 10.452 10.452 0 0 0 210.248 36.83 A 7.353 7.353 0 0 0 210.559 35.992 A 5.269 5.269 0 0 0 210.654 35.625 C 210.729 35.289 210.766 34.986 210.802 34.734 A 13.15 13.15 0 0 1 210.803 34.722 A 1.702 1.702 0 0 0 210.803 34.682 C 210.799 34.528 210.774 34.44 210.744 34.402 A 0.05 0.05 0 0 0 210.706 34.38 A 4.957 4.957 0 0 0 210.664 34.423 C 210.593 34.495 210.461 34.635 210.266 34.869 C 210.125 35.057 210.029 35.291 209.934 35.483 M 398.545 35.569 A 0.265 0.265 0 0 0 398.401 35.406 C 398.27 35.449 398.256 36.151 398.358 37.58 A 57.92 57.92 0 0 0 398.401 38.14 A 112.114 112.114 0 0 0 398.461 38.834 C 398.535 39.664 398.604 40.335 398.643 40.799 A 26.874 26.874 0 0 1 398.645 40.826 C 398.693 41.407 398.79 41.796 398.839 42.041 A 5.12 5.12 0 0 1 398.84 42.046 A 4.944 4.944 0 0 0 398.921 42.237 C 398.992 42.394 399.063 42.526 399.133 42.632 A 5.441 5.441 0 0 0 399.202 42.716 C 399.353 42.898 399.438 42.962 399.524 42.876 A 0.077 0.077 0 0 0 399.54 42.845 C 399.567 42.754 399.567 42.501 399.54 42.108 A 15.637 15.637 0 0 0 399.524 41.9 A 21.788 21.788 0 0 0 399.523 41.884 C 399.486 41.446 399.422 40.847 399.332 40.066 A 215.635 215.635 0 0 0 399.231 39.214 A 90.232 90.232 0 0 0 399.078 38.125 C 398.875 36.74 398.706 35.902 398.545 35.569 Z M 445.516 58.514 A 0.237 0.237 0 0 0 445.422 58.501 A 0.844 0.844 0 0 0 445.398 58.502 C 445.358 58.503 445.325 58.51 445.325 58.55 C 445.325 58.55 445.325 58.584 445.297 58.623 A 0.192 0.192 0 0 1 445.276 58.648 L 445.276 58.843 L 445.276 58.941 L 445.276 59.038 A 0.043 0.043 0 0 0 445.254 59.045 C 445.214 59.069 445.178 59.158 445.178 59.283 A 3.626 3.626 0 0 0 445.179 59.351 C 445.18 59.414 445.184 59.492 445.199 59.585 A 1.636 1.636 0 0 0 445.227 59.722 C 445.264 59.942 445.3 60.134 445.316 60.361 A 3.39 3.39 0 0 1 445.325 60.601 C 445.325 60.943 445.325 61.333 445.374 61.822 A 21.184 21.184 0 0 1 445.441 62.402 A 5.718 5.718 0 0 1 445.471 62.945 L 445.471 63.579 C 445.422 63.824 445.422 64.068 445.422 64.312 A 2.638 2.638 0 0 1 445.437 64.39 C 445.465 64.556 445.473 64.694 445.498 64.787 A 0.322 0.322 0 0 0 445.52 64.849 C 445.52 64.954 445.545 65.034 445.578 65.089 A 0.265 0.265 0 0 0 445.618 65.142 A 0.062 0.062 0 0 0 445.618 65.152 C 445.625 65.191 445.67 65.191 445.715 65.191 C 445.802 65.234 445.812 65.123 445.813 64.891 A 20.731 20.731 0 0 0 445.813 64.8 A 0.585 0.585 0 0 1 445.797 64.741 C 445.776 64.645 445.768 64.521 445.766 64.375 A 14.364 14.364 0 0 1 445.764 64.117 C 445.796 63.988 445.807 63.86 445.811 63.746 A 4.929 4.929 0 0 0 445.813 63.579 L 445.813 62.163 L 445.813 61.48 A 2.036 2.036 0 0 0 445.808 61.342 C 445.802 61.259 445.793 61.181 445.784 61.106 A 2.237 2.237 0 0 1 445.764 60.845 L 445.764 60.406 L 445.764 60.308 L 445.764 59.722 A 3.451 3.451 0 0 0 445.74 59.362 C 445.728 59.246 445.715 59.136 445.715 59.038 C 445.681 58.867 445.647 58.743 445.612 58.651 A 1.032 1.032 0 0 0 445.569 58.55 A 0.19 0.19 0 0 0 445.555 58.538 C 445.542 58.527 445.529 58.52 445.516 58.514 Z M 302.381 18.484 A 0.208 0.208 0 0 0 302.258 18.365 A 4.957 4.957 0 0 0 302.229 18.365 C 302.161 18.365 302.112 18.369 302.016 18.397 A 1.792 1.792 0 0 0 301.965 18.413 C 301.819 18.462 301.721 18.609 301.624 18.755 A 0.691 0.691 0 0 0 301.587 18.975 A 0.692 0.692 0 0 0 301.624 19.195 A 0.533 0.533 0 0 1 301.641 19.268 C 301.672 19.44 301.672 19.751 301.672 20.171 C 301.672 20.708 301.624 21.246 301.526 21.88 C 301.429 22.508 301.381 23.04 301.332 23.476 A 27.287 27.287 0 0 1 301.331 23.492 C 301.331 23.877 301.331 24.141 301.355 24.283 A 0.324 0.324 0 0 0 301.379 24.371 A 1.704 1.704 0 0 0 301.408 24.404 C 301.824 24.878 302.132 24.662 302.33 23.755 A 6.696 6.696 0 0 0 302.405 23.345 C 302.441 23.052 302.451 22.677 302.473 22.26 A 15.189 15.189 0 0 1 302.502 21.831 A 15.86 15.86 0 0 0 302.543 21.026 A 35.967 35.967 0 0 0 302.551 20.074 A 16.635 16.635 0 0 0 302.549 19.769 C 302.536 19.094 302.48 18.675 302.381 18.484 Z M 429.578 61.755 A 0.279 0.279 0 0 0 429.504 61.728 A 0.256 0.256 0 0 0 429.456 61.724 A 0.093 0.093 0 0 1 429.429 61.72 C 429.403 61.712 429.377 61.696 429.351 61.685 A 0.113 0.113 0 0 0 429.309 61.675 A 0.089 0.089 0 0 1 429.275 61.668 C 429.26 61.662 429.244 61.652 429.229 61.639 A 0.825 0.825 0 0 1 429.163 61.578 A 0.093 0.093 0 0 0 429.158 61.551 C 429.151 61.525 429.134 61.499 429.124 61.473 A 0.113 0.113 0 0 1 429.114 61.431 L 428.967 61.138 C 428.918 61.089 428.821 61.04 428.723 61.04 A 0.721 0.721 0 0 1 428.624 60.997 C 428.492 60.93 428.33 60.814 428.137 60.699 A 11.411 11.411 0 0 1 427.89 60.36 A 5.237 5.237 0 0 1 427.698 60.064 C 427.588 59.917 427.478 59.771 427.389 59.645 A 5.05 5.05 0 0 1 427.307 59.527 C 427.124 59.344 426.968 59.133 426.84 58.936 A 6.113 6.113 0 0 1 426.721 58.746 A 0.823 0.823 0 0 1 426.714 58.739 C 426.681 58.704 426.653 58.67 426.629 58.636 A 1.422 1.422 0 0 1 426.526 58.453 A 9.609 9.609 0 0 1 426.492 58.41 C 426.354 58.235 426.269 58.115 426.217 58.051 A 0.491 0.491 0 0 0 426.184 58.013 A 1.887 1.887 0 0 1 426.156 57.994 C 426.072 57.936 426.004 57.88 425.943 57.847 A 0.216 0.216 0 0 0 425.842 57.818 C 425.745 57.769 425.696 57.72 425.647 57.72 L 425.549 57.72 A 0.347 0.347 0 0 0 425.531 57.831 C 425.531 57.943 425.586 58.062 425.696 58.208 A 10.324 10.324 0 0 1 425.733 58.259 C 425.859 58.429 425.949 58.559 426.038 58.648 L 426.086 58.697 A 0.374 0.374 0 0 0 426.115 58.743 C 426.191 58.851 426.369 59.035 426.618 59.325 A 13.526 13.526 0 0 1 426.624 59.331 C 426.672 59.331 426.672 59.38 426.721 59.429 A 0.29 0.29 0 0 0 426.721 59.433 C 426.722 59.528 426.77 59.577 426.77 59.673 A 0.768 0.768 0 0 1 426.783 59.699 C 426.819 59.78 426.823 59.829 426.868 59.917 A 0.209 0.209 0 0 1 426.869 59.919 C 426.908 59.959 426.915 59.999 426.944 60.039 A 0.199 0.199 0 0 0 426.965 60.064 C 427.267 60.4 427.57 60.689 427.84 60.917 A 5.593 5.593 0 0 0 428.186 61.187 C 428.333 61.285 428.43 61.382 428.479 61.431 L 428.772 61.724 A 1.872 1.872 0 0 1 428.986 61.895 C 429.053 61.956 429.114 62.017 429.163 62.066 C 429.285 62.107 429.373 62.181 429.427 62.205 A 0.074 0.074 0 0 0 429.456 62.212 A 0.381 0.381 0 0 0 429.512 62.209 C 429.531 62.207 429.55 62.201 429.569 62.19 A 0.171 0.171 0 0 0 429.602 62.163 A 0.63 0.63 0 0 0 429.657 62.133 C 429.692 62.111 429.716 62.089 429.731 62.067 A 0.088 0.088 0 0 0 429.749 62.017 A 0.269 0.269 0 0 0 429.75 62.014 C 429.775 61.962 429.772 61.924 429.757 61.893 A 0.281 0.281 0 0 0 429.7 61.822 A 0.987 0.987 0 0 1 429.658 61.799 C 429.632 61.785 429.61 61.771 429.588 61.76 M 10.259 63.615 A 8.407 8.407 0 0 0 10.266 63.726 A 71.561 71.561 0 0 0 10.433 65.035 C 10.493 65.466 10.556 65.872 10.624 66.25 A 16.75 16.75 0 0 0 10.754 66.9 A 12.867 12.867 0 0 0 10.83 67.293 C 10.927 67.758 11.02 68.044 11.095 68.136 A 0.071 0.071 0 0 0 11.145 68.169 C 11.194 68.169 11.243 67.925 11.243 67.339 A 10.986 10.986 0 0 1 11.214 66.918 C 11.198 66.625 11.189 66.308 11.174 65.966 A 24.132 24.132 0 0 0 11.145 65.435 C 11.096 65.069 11.06 64.727 11.023 64.397 A 23.086 23.086 0 0 0 10.901 63.433 C 10.765 62.844 10.629 62.549 10.493 62.549 A 0.099 0.099 0 0 0 10.461 62.554 C 10.277 62.646 10.223 63 10.259 63.615 Z M 444.285 20.948 A 7.913 7.913 0 0 0 443.42 20.904 C 442.59 20.904 441.858 20.953 441.125 21.148 C 439.96 21.506 440.358 21.741 442.319 21.815 A 31.97 31.97 0 0 0 442.883 21.831 C 443.762 21.831 444.449 21.804 444.943 21.749 A 5.093 5.093 0 0 0 445.374 21.685 C 445.816 21.552 445.858 21.419 445.498 21.25 A 2.31 2.31 0 0 0 445.374 21.197 C 445.076 21.078 444.706 20.995 444.285 20.948 Z M 59.436 40.044 C 60.12 39.947 60.803 39.898 61.536 39.898 C 61.932 39.898 62.25 39.938 62.487 39.981 A 4.824 4.824 0 0 1 62.561 39.996 A 1.67 1.67 0 0 1 62.648 40.027 C 62.971 40.155 62.799 40.251 62.057 40.427 A 17.058 17.058 0 0 1 62.024 40.435 C 61.145 40.581 60.315 40.63 59.583 40.63 A 7.48 7.48 0 0 1 59.214 40.622 C 58.677 40.595 58.402 40.507 58.362 40.386 A 0.127 0.127 0 0 1 58.424 40.278 C 58.459 40.253 58.509 40.232 58.575 40.213 A 1.809 1.809 0 0 1 58.655 40.191 A 5.669 5.669 0 0 1 58.875 40.14 C 59.009 40.113 59.164 40.085 59.349 40.057 A 12.304 12.304 0 0 1 59.436 40.044 Z M 162.708 58.794 C 162.805 58.794 162.952 58.843 163.098 58.99 A 1.834 1.834 0 0 1 163.293 59.219 C 163.358 59.31 163.418 59.413 163.468 59.526 A 1.64 1.64 0 0 1 163.489 59.576 A 0.796 0.796 0 0 1 163.554 59.779 C 163.584 59.936 163.586 60.116 163.586 60.277 A 44.029 44.029 0 0 1 163.586 60.308 C 163.586 60.499 163.616 60.719 163.629 60.97 A 4.169 4.169 0 0 1 163.635 61.187 C 163.672 61.444 163.736 61.673 163.787 61.875 A 4.173 4.173 0 0 1 163.831 62.066 A 2.349 2.349 0 0 1 163.925 62.357 C 163.958 62.484 163.975 62.598 163.977 62.684 A 0.709 0.709 0 0 1 163.977 62.701 C 163.977 62.894 163.929 62.992 163.881 62.994 A 0.037 0.037 0 0 1 163.879 62.994 C 163.838 62.994 163.796 62.958 163.724 62.887 A 9.291 9.291 0 0 1 163.684 62.847 A 0.31 0.31 0 0 1 163.644 62.796 C 163.62 62.759 163.596 62.71 163.572 62.648 A 1.864 1.864 0 0 1 163.538 62.554 A 761.049 761.049 0 0 1 163.533 62.539 C 163.158 61.273 162.874 60.325 162.723 59.779 A 19.96 19.96 0 0 1 162.708 59.722 A 6.299 6.299 0 0 1 162.662 59.528 C 162.588 59.188 162.578 58.972 162.631 58.865 A 0.132 0.132 0 0 1 162.708 58.794 Z M 345.553 35.302 A 0.272 0.272 0 0 0 345.52 35.259 C 345.477 35.216 345.472 35.482 345.54 36.126 A 22.573 22.573 0 0 0 345.569 36.382 A 26.323 26.323 0 0 0 345.601 36.679 C 345.796 38.388 346.081 39.263 346.497 39.263 A 0.087 0.087 0 0 0 346.54 39.252 C 346.592 39.222 346.625 39.136 346.637 39.006 A 1.415 1.415 0 0 0 346.643 38.872 C 346.643 38.726 346.616 38.525 346.561 38.268 A 8.355 8.355 0 0 0 346.497 37.994 A 17.658 17.658 0 0 1 346.423 37.729 A 51.204 51.204 0 0 1 346.204 36.871 A 10.585 10.585 0 0 0 346.161 36.745 C 346.031 36.371 345.905 36.075 345.817 35.855 A 12.068 12.068 0 0 1 345.813 35.845 C 345.694 35.567 345.607 35.386 345.553 35.302 Z M 474.557 35.302 A 0.272 0.272 0 0 0 474.524 35.259 C 474.48 35.216 474.476 35.482 474.544 36.126 A 22.573 22.573 0 0 0 474.573 36.382 A 26.323 26.323 0 0 0 474.605 36.679 C 474.8 38.388 475.084 39.263 475.5 39.263 A 0.087 0.087 0 0 0 475.544 39.252 C 475.596 39.222 475.629 39.136 475.641 39.006 A 1.415 1.415 0 0 0 475.647 38.872 C 475.647 38.726 475.62 38.525 475.565 38.268 A 8.355 8.355 0 0 0 475.5 37.994 A 17.658 17.658 0 0 1 475.427 37.729 A 51.204 51.204 0 0 1 475.208 36.871 A 10.585 10.585 0 0 0 475.165 36.745 C 475.035 36.371 474.909 36.075 474.821 35.855 A 12.068 12.068 0 0 1 474.817 35.845 C 474.698 35.567 474.611 35.386 474.557 35.302 Z M 37.317 73.736 C 37.512 73.736 37.952 74.126 38.782 74.956 C 39.861 76.126 40.029 76.756 39.248 76.849 A 1.9 1.9 0 0 1 39.026 76.861 A 0.628 0.628 0 0 1 38.907 76.851 C 38.718 76.814 38.662 76.676 38.766 76.411 A 1.295 1.295 0 0 1 38.782 76.372 C 38.879 76.031 38.684 75.542 38.098 74.908 A 5.646 5.646 0 0 1 37.806 74.591 C 37.735 74.509 37.67 74.429 37.611 74.354 A 8.156 8.156 0 0 1 37.512 74.224 A 1.455 1.455 0 0 1 37.424 74.128 C 37.311 73.993 37.274 73.892 37.269 73.845 A 0.1 0.1 0 0 1 37.268 73.833 C 37.268 73.788 37.268 73.743 37.307 73.736 A 0.062 0.062 0 0 1 37.317 73.736 Z M 71.008 33.648 A 0.142 0.142 0 0 0 70.924 33.681 C 70.866 33.725 70.798 33.81 70.705 33.928 A 17.27 17.27 0 0 1 70.618 34.038 A 4.726 4.726 0 0 0 70.361 34.391 C 70.293 34.495 70.224 34.608 70.155 34.732 A 6.107 6.107 0 0 0 70.032 34.966 C 69.914 35.162 69.828 35.389 69.723 35.648 A 11.15 11.15 0 0 1 69.641 35.845 A 7.525 7.525 0 0 1 69.638 35.854 C 69.492 36.24 69.348 36.531 69.299 36.822 C 69.202 37.115 69.202 37.261 69.25 37.261 C 69.348 37.261 69.446 37.212 69.495 37.163 A 1.02 1.02 0 0 1 69.52 37.117 C 69.559 37.048 69.592 37 69.592 36.919 A 0.478 0.478 0 0 1 69.6 36.841 C 69.615 36.752 69.654 36.622 69.731 36.453 A 3.327 3.327 0 0 1 69.788 36.333 A 11.564 11.564 0 0 0 70.007 35.863 A 41.845 41.845 0 0 0 70.227 35.357 C 70.406 35.044 70.503 34.812 70.631 34.625 A 1.403 1.403 0 0 1 70.667 34.576 C 70.862 34.331 70.959 34.087 71.057 33.941 C 71.106 33.746 71.106 33.648 71.008 33.648 Z M 300.726 15.552 A 0.305 0.305 0 0 0 300.452 15.386 A 0.284 0.284 0 0 0 300.313 15.422 A 0.259 0.259 0 0 0 300.208 15.533 A 0.512 0.512 0 0 0 300.098 15.704 C 300.083 15.741 300.072 15.778 300.067 15.812 A 0.376 0.376 0 0 0 300.061 15.874 A 211.598 211.598 0 0 1 300.021 16.569 C 300 16.927 299.982 17.24 299.972 17.502 A 9.98 9.98 0 0 0 299.963 17.876 C 299.963 18.246 299.963 18.504 299.985 18.671 A 0.713 0.713 0 0 0 300.012 18.804 C 300.037 18.877 300.061 18.939 300.092 18.981 A 0.138 0.138 0 0 0 300.208 19.048 C 300.256 19.048 300.354 18.951 300.452 18.755 A 0.993 0.993 0 0 0 300.482 18.707 C 300.569 18.559 300.652 18.34 300.696 18.121 A 9.208 9.208 0 0 0 300.811 17.406 C 300.844 17.13 300.861 16.868 300.861 16.617 A 5.406 5.406 0 0 0 300.842 16.167 A 2.373 2.373 0 0 0 300.833 15.952 C 300.817 15.777 300.78 15.645 300.726 15.552 Z M 447.561 56.922 A 0.037 0.037 0 0 0 447.522 56.89 A 4.475 4.475 0 0 0 447.381 57.19 A 1.799 1.799 0 0 0 447.278 57.525 C 447.229 57.769 447.18 58.013 447.18 58.208 A 0.706 0.706 0 0 0 447.16 58.381 C 447.16 58.522 447.194 58.671 447.229 58.843 C 447.266 59.029 447.303 59.215 447.297 59.38 A 0.714 0.714 0 0 1 447.278 59.527 L 447.278 59.966 C 447.229 60.113 447.278 60.21 447.278 60.357 C 447.278 60.445 447.318 60.494 447.325 60.502 A 0.04 0.04 0 0 0 447.327 60.503 A 0.087 0.087 0 0 0 447.375 60.488 C 447.397 60.473 447.42 60.448 447.442 60.412 A 0.63 0.63 0 0 0 447.473 60.357 A 0.411 0.411 0 0 0 447.502 60.275 C 447.515 60.223 447.524 60.164 447.536 60.102 A 1.094 1.094 0 0 1 447.571 59.966 L 447.571 59.527 A 1.363 1.363 0 0 1 447.548 59.412 C 447.535 59.333 447.527 59.248 447.517 59.16 A 3.455 3.455 0 0 0 447.473 58.843 L 447.473 58.208 A 14.784 14.784 0 0 1 447.473 58.164 C 447.474 58.023 447.478 57.843 447.522 57.622 C 447.571 57.427 447.571 57.281 447.571 57.134 A 54.829 54.829 0 0 0 447.571 57.112 C 447.571 57.011 447.57 56.953 447.561 56.922 Z M 162.805 56.402 A 17.366 17.366 0 0 0 162.707 56.024 C 162.508 55.299 162.345 54.937 162.219 54.937 A 0.105 0.105 0 0 0 162.194 54.934 C 162.043 54.934 162.03 55.317 162.094 55.995 A 17.456 17.456 0 0 0 162.122 56.255 A 14.27 14.27 0 0 0 162.165 56.66 C 162.321 57.934 162.588 58.475 162.854 58.208 A 0.142 0.142 0 0 0 162.904 58.165 C 162.959 58.09 162.985 57.941 162.963 57.717 A 2.12 2.12 0 0 0 162.952 57.622 A 3.779 3.779 0 0 0 162.951 57.558 C 162.945 57.226 162.897 56.814 162.805 56.402 Z M 132.825 23.296 A 0.097 0.097 0 0 0 132.771 23.374 C 132.758 23.453 132.791 23.584 132.825 23.785 C 132.889 23.977 132.974 24.211 133.08 24.474 A 13.857 13.857 0 0 0 133.264 24.908 A 7.902 7.902 0 0 0 133.479 25.355 C 133.557 25.503 133.634 25.638 133.711 25.764 A 6.701 6.701 0 0 0 133.85 25.982 A 4.409 4.409 0 0 0 133.971 26.128 C 134.084 26.256 134.176 26.34 134.247 26.365 A 0.129 0.129 0 0 0 134.29 26.372 C 134.338 26.324 134.338 26.177 134.241 25.884 C 134.195 25.607 134.061 25.243 133.84 24.832 A 6.031 6.031 0 0 0 133.801 24.761 A 15.088 15.088 0 0 0 133.49 24.161 C 133.398 23.997 133.307 23.85 133.215 23.736 C 133.02 23.443 132.874 23.296 132.825 23.296 Z M 236.829 23.296 A 0.097 0.097 0 0 0 236.775 23.374 C 236.762 23.453 236.795 23.584 236.829 23.785 C 236.893 23.977 236.978 24.211 237.084 24.474 A 13.857 13.857 0 0 0 237.268 24.908 A 7.902 7.902 0 0 0 237.483 25.355 C 237.56 25.503 237.638 25.638 237.715 25.764 A 6.701 6.701 0 0 0 237.854 25.982 A 4.409 4.409 0 0 0 237.975 26.128 C 238.088 26.256 238.18 26.34 238.251 26.365 A 0.129 0.129 0 0 0 238.293 26.372 C 238.342 26.324 238.342 26.177 238.245 25.884 C 238.198 25.607 238.065 25.243 237.844 24.832 A 6.031 6.031 0 0 0 237.805 24.761 A 15.088 15.088 0 0 0 237.494 24.161 C 237.402 23.997 237.311 23.85 237.219 23.736 C 237.024 23.443 236.877 23.296 236.829 23.296 Z M 316.272 42.193 C 316.321 42.144 316.418 42.242 316.565 42.535 A 0.928 0.928 0 0 1 316.702 42.818 C 316.732 42.914 316.754 43.021 316.774 43.135 A 8.569 8.569 0 0 1 316.809 43.365 C 316.899 43.679 316.906 43.993 316.869 44.269 A 2.362 2.362 0 0 1 316.858 44.341 C 316.76 45.562 316.565 45.122 316.321 43.023 A 14.768 14.768 0 0 0 316.32 43.019 A 14.535 14.535 0 0 0 316.32 43.015 A 15.406 15.406 0 0 0 316.32 43.011 C 316.273 42.555 316.229 42.316 316.265 42.21 A 0.135 0.135 0 0 1 316.272 42.193 Z M 432.513 63.995 C 432.535 64.003 432.56 64.012 432.591 64.016 A 0.278 0.278 0 0 0 432.629 64.019 A 0.209 0.209 0 0 0 432.631 64.021 C 432.671 64.06 432.711 64.067 432.751 64.095 A 0.199 0.199 0 0 1 432.776 64.117 L 432.874 64.117 L 432.825 64.068 C 432.821 64.068 432.776 64.066 432.776 64.019 C 432.727 63.97 432.629 63.97 432.581 63.921 L 432.385 63.726 L 432.092 63.433 C 431.98 63.321 431.896 63.266 431.841 63.246 A 0.129 0.129 0 0 0 431.799 63.238 L 431.604 63.238 A 0.19 0.19 0 0 1 431.591 63.25 C 431.578 63.261 431.564 63.268 431.551 63.274 A 0.237 0.237 0 0 1 431.458 63.287 A 0.094 0.094 0 0 1 431.423 63.279 C 431.384 63.264 431.338 63.227 431.264 63.19 A 0.852 0.852 0 0 0 431.262 63.189 A 0.823 0.823 0 0 0 431.255 63.182 C 431.221 63.149 431.187 63.121 431.152 63.097 A 1.422 1.422 0 0 0 430.969 62.994 A 5.666 5.666 0 0 0 430.889 62.954 C 430.842 62.931 430.797 62.912 430.763 62.902 A 0.147 0.147 0 0 0 430.725 62.896 L 430.627 62.896 A 0.779 0.779 0 0 0 430.633 62.987 C 430.639 63.036 430.649 63.088 430.664 63.14 A 0.881 0.881 0 0 0 430.774 63.384 A 11.763 11.763 0 0 1 430.802 63.422 C 430.872 63.516 430.931 63.598 430.992 63.667 A 0.866 0.866 0 0 0 431.165 63.824 C 431.165 63.872 431.165 63.872 431.213 63.921 L 431.262 63.921 A 0.209 0.209 0 0 0 431.264 63.92 C 431.303 63.88 431.31 63.84 431.339 63.8 A 0.199 0.199 0 0 1 431.36 63.775 A 0.089 0.089 0 0 1 431.367 63.741 C 431.373 63.726 431.383 63.71 431.396 63.695 A 0.825 0.825 0 0 1 431.458 63.628 A 0.381 0.381 0 0 1 431.514 63.631 C 431.533 63.634 431.552 63.64 431.571 63.651 A 0.171 0.171 0 0 1 431.604 63.677 A 0.266 0.266 0 0 0 431.622 63.708 A 0.271 0.271 0 0 0 431.848 63.824 A 0.117 0.117 0 0 0 431.87 63.841 C 431.922 63.872 432.001 63.872 432.043 63.872 L 432.19 63.872 C 432.219 63.872 432.265 63.89 432.318 63.914 A 3.643 3.643 0 0 1 432.434 63.97 C 432.457 63.97 432.48 63.981 432.509 63.993 M 297.161 25.437 A 1.138 1.138 0 0 1 297.161 25.438 C 297.152 25.455 297.142 25.473 297.131 25.494 A 1.915 1.915 0 0 1 296.863 25.666 C 296.715 25.742 296.536 25.805 296.306 25.835 A 2.011 2.011 0 0 1 296.301 25.835 A 5.847 5.847 0 0 1 295.443 25.794 A 2.115 2.115 0 0 1 295.178 25.738 C 294.926 25.702 294.753 25.612 294.68 25.49 A 0.275 0.275 0 0 1 294.641 25.347 A 0.432 0.432 0 0 1 294.671 25.179 C 294.729 25.041 294.874 24.97 295.125 25.005 A 1.047 1.047 0 0 1 295.129 25.005 A 1.343 1.343 0 0 1 295.279 25.011 C 295.311 25.014 295.344 25.02 295.38 25.028 A 1.009 1.009 0 0 1 295.471 25.054 C 295.715 25.103 295.959 25.152 296.204 25.152 C 296.439 25.199 296.675 25.201 296.823 25.201 A 35.095 35.095 0 0 0 296.838 25.201 A 0.584 0.584 0 0 1 296.939 25.209 C 297.031 25.225 297.095 25.262 297.131 25.298 A 0.204 0.204 0 0 1 297.153 25.311 C 297.203 25.344 297.192 25.378 297.165 25.43 M 434.181 62.12 A 1.198 1.198 0 0 1 434.202 62.133 C 434.209 62.137 434.216 62.142 434.223 62.148 A 0.212 0.212 0 0 1 434.241 62.163 A 1.706 1.706 0 0 0 434.684 62.482 A 3.015 3.015 0 0 0 434.729 62.505 C 434.855 62.547 435.017 62.589 435.153 62.631 A 3.016 3.016 0 0 1 435.217 62.652 C 435.364 62.701 435.51 62.749 435.608 62.847 A 0.113 0.113 0 0 1 435.645 62.855 C 435.684 62.868 435.73 62.896 435.803 62.896 A 0.146 0.146 0 0 0 435.851 62.926 C 435.904 62.948 435.975 62.958 436.047 62.994 A 1.184 1.184 0 0 0 436.235 63.075 A 0.373 0.373 0 0 0 436.34 63.091 C 436.389 63.14 436.438 63.14 436.438 63.189 C 436.485 63.189 436.487 63.234 436.487 63.237 L 436.438 63.238 A 0.108 0.108 0 0 0 436.435 63.236 C 436.419 63.229 436.327 63.189 436.194 63.189 C 436.051 63.141 435.861 63.093 435.624 63.046 A 9.574 9.574 0 0 0 435.608 63.042 A 7.9 7.9 0 0 0 435.454 63.006 C 435.32 62.975 435.177 62.945 435.048 62.914 A 6.354 6.354 0 0 1 434.973 62.896 C 434.778 62.798 434.68 62.749 434.631 62.701 A 1.706 1.706 0 0 0 434.188 62.382 A 3.015 3.015 0 0 0 434.143 62.359 A 1.833 1.833 0 0 1 434.042 62.322 C 433.979 62.297 433.929 62.272 433.892 62.246 A 0.292 0.292 0 0 1 433.85 62.212 A 0.183 0.183 0 0 0 433.818 62.186 A 0.285 0.285 0 0 0 433.771 62.163 M 74.204 28.596 A 0.29 0.29 0 0 0 74.084 28.57 C 74.048 28.57 73.984 28.625 73.913 28.714 A 1.487 1.487 0 0 0 73.84 28.814 A 1.233 1.233 0 0 0 73.78 28.916 C 73.701 29.063 73.617 29.271 73.502 29.539 A 39.308 39.308 0 0 1 73.499 29.546 A 8.411 8.411 0 0 0 73.4 29.798 C 73.031 30.796 73.228 30.972 73.93 30.328 A 6.614 6.614 0 0 0 74.133 30.132 A 8.061 8.061 0 0 0 74.261 29.983 C 74.524 29.667 74.677 29.429 74.719 29.302 C 74.757 29.151 74.707 29.001 74.57 28.872 A 0.848 0.848 0 0 0 74.426 28.765 C 74.338 28.677 74.268 28.624 74.204 28.596 Z M 34.338 68.462 A 1.488 1.488 0 0 0 34.298 68.399 C 34.166 68.201 34.037 68.121 33.948 68.121 A 0.215 0.215 0 0 0 33.936 68.121 C 33.734 68.131 33.788 68.434 34.065 68.964 A 7.081 7.081 0 0 0 34.192 69.195 C 35.012 70.516 35.237 70.604 34.867 69.46 A 14.651 14.651 0 0 0 34.778 69.195 C 34.694 69.028 34.611 68.876 34.527 68.741 A 3.736 3.736 0 0 0 34.338 68.462 Z M 286.975 34.771 A 9.921 9.921 0 0 0 286.973 34.537 C 286.961 34.064 286.913 33.843 286.829 33.843 A 0.04 0.04 0 0 0 286.799 33.831 C 286.757 33.831 286.697 33.891 286.634 33.997 A 1.372 1.372 0 0 0 286.584 34.087 A 3.521 3.521 0 0 0 286.49 34.293 A 2.996 2.996 0 0 0 286.292 34.966 C 286.253 35.197 286.245 35.429 286.267 35.612 A 1.121 1.121 0 0 0 286.292 35.747 C 286.389 35.992 286.487 36.089 286.633 36.089 C 286.779 36.089 286.828 35.945 286.924 35.704 A 15.452 15.452 0 0 0 286.925 35.702 A 6.183 6.183 0 0 0 286.944 35.605 C 286.986 35.38 287.018 35.113 286.975 34.771 Z M 127.832 41.129 A 6.019 6.019 0 0 0 127.844 41.216 A 1.226 1.226 0 0 1 127.879 41.433 C 127.884 41.513 127.88 41.589 127.868 41.658 A 0.667 0.667 0 0 1 127.844 41.753 A 0.735 0.735 0 0 1 127.799 41.883 C 127.775 41.936 127.745 41.981 127.714 42.021 A 1.446 1.446 0 0 1 127.6 42.144 A 2.476 2.476 0 0 0 127.557 42.173 C 127.443 42.253 127.395 42.306 127.307 42.437 A 0.353 0.353 0 0 0 127.278 42.519 C 127.265 42.578 127.269 42.637 127.292 42.696 A 0.383 0.383 0 0 0 127.307 42.73 A 0.124 0.124 0 0 0 127.324 42.756 C 127.374 42.814 127.457 42.767 127.541 42.647 A 0.823 0.823 0 0 0 127.551 42.632 A 0.774 0.774 0 0 0 127.689 42.512 C 127.771 42.423 127.854 42.302 127.936 42.151 A 3.332 3.332 0 0 0 127.991 42.046 A 3.998 3.998 0 0 0 128.122 41.759 C 128.166 41.651 128.199 41.547 128.218 41.446 A 1.005 1.005 0 0 0 128.235 41.265 A 0.61 0.61 0 0 0 128.252 41.152 C 128.261 40.999 128.206 40.865 128.088 40.826 A 0.825 0.825 0 0 0 128.022 40.764 C 128.007 40.751 127.991 40.741 127.976 40.735 A 0.089 0.089 0 0 0 127.942 40.728 C 127.809 40.728 127.797 40.849 127.832 41.129 Z M 231.836 41.129 A 6.019 6.019 0 0 0 231.848 41.216 A 1.226 1.226 0 0 1 231.882 41.433 C 231.888 41.513 231.884 41.589 231.872 41.658 A 0.667 0.667 0 0 1 231.848 41.753 A 0.735 0.735 0 0 1 231.803 41.883 C 231.779 41.936 231.749 41.981 231.718 42.021 A 1.446 1.446 0 0 1 231.604 42.144 A 2.476 2.476 0 0 0 231.561 42.173 C 231.447 42.253 231.399 42.306 231.311 42.437 A 0.353 0.353 0 0 0 231.281 42.519 C 231.269 42.578 231.273 42.637 231.296 42.696 A 0.383 0.383 0 0 0 231.311 42.73 A 0.124 0.124 0 0 0 231.328 42.756 C 231.378 42.814 231.461 42.767 231.545 42.647 A 0.823 0.823 0 0 0 231.555 42.632 A 0.774 0.774 0 0 0 231.693 42.512 C 231.775 42.423 231.858 42.302 231.94 42.151 A 3.332 3.332 0 0 0 231.995 42.046 A 3.998 3.998 0 0 0 232.126 41.759 C 232.17 41.651 232.203 41.547 232.222 41.446 A 1.005 1.005 0 0 0 232.239 41.265 A 0.61 0.61 0 0 0 232.256 41.152 C 232.265 40.999 232.21 40.865 232.092 40.826 A 0.825 0.825 0 0 0 232.026 40.764 C 232.01 40.751 231.995 40.741 231.98 40.735 A 0.089 0.089 0 0 0 231.946 40.728 C 231.813 40.728 231.801 40.849 231.836 41.129 Z M 316.272 37.847 A 1.261 1.261 0 0 0 316.21 37.737 C 316.133 37.615 316.056 37.554 315.979 37.554 A 0.12 0.12 0 0 0 315.916 37.574 C 315.841 37.62 315.773 37.743 315.735 37.896 A 0.833 0.833 0 0 0 315.663 38.123 A 2.647 2.647 0 0 0 315.637 38.579 A 2.466 2.466 0 0 0 315.64 38.695 C 315.651 38.937 315.699 39.143 315.784 39.312 A 0.742 0.742 0 0 0 315.809 39.395 C 315.839 39.474 315.878 39.53 315.922 39.565 A 0.17 0.17 0 0 0 316.028 39.605 C 316.162 39.605 316.214 39.523 316.297 39.359 A 11.746 11.746 0 0 0 316.321 39.312 C 316.358 39.124 316.396 38.965 316.411 38.767 A 2.421 2.421 0 0 0 316.418 38.579 A 2.466 2.466 0 0 0 316.416 38.464 C 316.405 38.222 316.357 38.016 316.272 37.847 Z M 136.194 30.23 A 0.21 0.21 0 0 0 136.127 30.24 C 136.074 30.257 136.038 30.3 136.004 30.367 A 0.761 0.761 0 0 0 135.999 30.376 A 0.353 0.353 0 0 0 135.969 30.459 C 135.956 30.518 135.961 30.576 135.983 30.635 A 0.383 0.383 0 0 0 135.999 30.669 A 1.002 1.002 0 0 1 136.025 30.765 C 136.034 30.801 136.039 30.834 136.042 30.866 A 1.373 1.373 0 0 1 136.047 31.011 C 135.999 31.158 135.901 31.255 135.803 31.304 A 0.56 0.56 0 0 0 135.737 31.361 C 135.615 31.487 135.645 31.618 135.887 31.783 A 1.474 1.474 0 0 0 135.901 31.792 A 2.988 2.988 0 0 0 135.978 31.848 C 136.081 31.921 136.154 31.957 136.217 31.957 A 0.164 0.164 0 0 0 136.292 31.939 C 136.388 31.89 136.485 31.746 136.582 31.505 A 2.822 2.822 0 0 0 136.584 31.499 C 136.731 31.109 136.78 30.767 136.682 30.523 A 0.753 0.753 0 0 0 136.614 30.389 C 136.528 30.258 136.411 30.202 136.246 30.222 A 0.669 0.669 0 0 0 136.194 30.23 Z M 240.198 30.23 A 0.21 0.21 0 0 0 240.131 30.24 C 240.078 30.257 240.042 30.3 240.007 30.367 A 0.761 0.761 0 0 0 240.002 30.376 A 0.353 0.353 0 0 0 239.973 30.459 C 239.96 30.518 239.965 30.576 239.987 30.635 A 0.383 0.383 0 0 0 240.002 30.669 A 1.002 1.002 0 0 1 240.029 30.765 C 240.038 30.801 240.043 30.834 240.046 30.866 A 1.373 1.373 0 0 1 240.051 31.011 C 240.002 31.158 239.905 31.255 239.807 31.304 A 0.56 0.56 0 0 0 239.741 31.361 C 239.619 31.487 239.649 31.618 239.891 31.783 A 1.474 1.474 0 0 0 239.905 31.792 A 2.988 2.988 0 0 0 239.982 31.848 C 240.085 31.921 240.157 31.957 240.221 31.957 A 0.164 0.164 0 0 0 240.295 31.939 C 240.392 31.89 240.489 31.746 240.586 31.505 A 2.822 2.822 0 0 0 240.588 31.499 C 240.735 31.109 240.784 30.767 240.686 30.523 A 0.753 0.753 0 0 0 240.618 30.389 C 240.532 30.258 240.415 30.202 240.25 30.222 A 0.669 0.669 0 0 0 240.198 30.23 Z M 379.554 10.302 A 0.041 0.041 0 0 0 379.553 10.308 A 0.054 0.054 0 0 0 379.522 10.322 C 379.475 10.358 379.4 10.466 379.28 10.644 A 61.578 61.578 0 0 0 379.211 10.747 A 4.475 4.475 0 0 0 379.071 11.047 A 1.799 1.799 0 0 0 378.967 11.382 A 1.398 1.398 0 0 0 378.946 11.439 C 378.897 11.579 378.879 11.702 378.873 11.808 A 2.642 2.642 0 0 0 378.87 11.968 C 378.87 12.212 378.87 12.31 378.918 12.31 C 378.959 12.31 379.033 12.209 379.14 12.009 A 5.725 5.725 0 0 0 379.211 11.871 A 11.322 11.322 0 0 0 379.395 11.492 A 5.912 5.912 0 0 0 379.504 11.236 A 36.255 36.255 0 0 1 379.549 11.017 C 379.579 10.872 379.602 10.75 379.602 10.65 A 1.802 1.802 0 0 0 379.601 10.599 C 379.596 10.396 379.557 10.275 379.554 10.302 Z M 301.311 33.618 A 0.033 0.033 0 0 0 301.282 33.599 C 301.241 33.599 301.201 33.666 301.16 33.8 A 1.991 1.991 0 0 0 301.135 33.892 A 1.268 1.268 0 0 0 301.079 34.025 C 301.046 34.113 301.02 34.21 300.997 34.315 A 6.522 6.522 0 0 0 300.94 34.624 A 3.043 3.043 0 0 1 300.938 34.732 C 300.932 34.91 300.913 35.069 300.92 35.208 A 0.763 0.763 0 0 0 300.94 35.357 A 1.809 1.809 0 0 0 300.962 35.437 C 300.981 35.502 301.002 35.553 301.027 35.588 A 0.127 0.127 0 0 0 301.135 35.65 A 0.402 0.402 0 0 0 301.186 35.62 C 301.266 35.564 301.339 35.469 301.379 35.308 C 301.414 35.17 301.448 35.007 301.448 34.838 A 1.086 1.086 0 0 0 301.428 34.624 A 14.617 14.617 0 0 0 301.427 34.364 C 301.423 34.184 301.413 34.026 301.379 33.892 A 2.575 2.575 0 0 1 301.377 33.882 C 301.343 33.742 301.333 33.654 301.311 33.618 Z M 161.963 51.439 A 0.055 0.055 0 0 0 161.926 51.421 A 0.033 0.033 0 0 0 161.898 51.439 C 161.878 51.469 161.868 51.541 161.843 51.654 A 2.735 2.735 0 0 1 161.829 51.714 L 161.829 52.398 A 25.89 25.89 0 0 0 161.829 52.478 C 161.829 52.727 161.838 52.904 161.926 53.081 A 1.809 1.809 0 0 0 161.948 53.162 C 161.968 53.227 161.988 53.277 162.013 53.312 A 0.127 0.127 0 0 0 162.122 53.374 C 162.162 53.374 162.202 53.307 162.243 53.173 A 1.991 1.991 0 0 0 162.268 53.081 A 5.929 5.929 0 0 0 162.264 52.819 C 162.261 52.752 162.256 52.68 162.247 52.601 A 3.66 3.66 0 0 0 162.219 52.398 A 14.088 14.088 0 0 0 162.173 52.137 C 162.158 52.054 162.143 51.977 162.127 51.904 A 6.602 6.602 0 0 0 162.073 51.665 A 1.923 1.923 0 0 0 162.054 51.611 C 162.024 51.529 161.994 51.468 161.963 51.439 Z M 170.48 19.483 A 1.305 1.305 0 0 0 170.422 19.488 A 0.743 0.743 0 0 0 170.368 19.49 C 170.273 19.497 170.161 19.521 170.031 19.563 A 3.089 3.089 0 0 0 169.836 19.634 C 169.446 19.829 169.397 19.927 169.592 19.927 C 169.698 19.927 169.778 19.952 169.832 19.985 A 0.265 0.265 0 0 1 169.885 20.025 C 169.885 20.11 169.885 20.158 169.853 20.234 A 0.661 0.661 0 0 1 169.836 20.269 C 169.699 20.498 169.734 20.641 169.86 20.617 A 0.198 0.198 0 0 0 169.885 20.611 A 0.641 0.641 0 0 0 169.911 20.602 C 170.022 20.559 170.182 20.466 170.372 20.305 A 3.301 3.301 0 0 0 170.569 20.122 A 2.44 2.44 0 0 0 170.605 20.081 C 170.941 19.685 170.899 19.46 170.48 19.483 Z M 432.483 18.218 L 433.118 18.853 C 432.385 18.81 431.88 18.729 431.604 18.677 A 8.864 8.864 0 0 1 431.506 18.658 C 431.318 18.563 431.266 18.469 431.395 18.33 A 0.571 0.571 0 0 1 431.409 18.316 A 0.175 0.175 0 0 0 431.419 18.315 C 431.485 18.311 431.748 18.276 432.233 18.237 A 27.415 27.415 0 0 1 432.483 18.218 Z M 457.776 19.488 C 457.483 19.488 457.19 19.488 456.946 19.537 A 1.626 1.626 0 0 0 456.859 19.558 C 456.559 19.642 456.744 19.721 457.476 19.731 A 11.831 11.831 0 0 0 457.629 19.732 C 458.557 19.732 458.85 19.683 458.557 19.585 A 3.11 3.11 0 0 0 458.371 19.545 C 458.279 19.528 458.176 19.513 458.068 19.502 A 3.043 3.043 0 0 0 457.776 19.488 Z M 67.46 39.339 A 0.8 0.8 0 0 0 67.249 39.312 C 66.956 39.312 66.614 39.41 66.321 39.605 A 1.779 1.779 0 0 0 66.282 39.631 C 66.051 39.794 66 39.922 66.159 40.014 A 0.503 0.503 0 0 0 66.223 40.044 A 0.98 0.98 0 0 0 66.671 40.161 C 66.694 40.161 66.718 40.16 66.742 40.158 A 0.99 0.99 0 0 0 66.858 40.142 A 5.651 5.651 0 0 0 67.006 40.111 C 67.084 40.093 67.157 40.073 67.224 40.051 A 0.937 0.937 0 0 0 67.444 39.947 A 0.715 0.715 0 0 0 67.554 39.879 C 67.601 39.844 67.639 39.805 67.668 39.763 A 0.36 0.36 0 0 0 67.737 39.556 C 67.703 39.455 67.6 39.378 67.46 39.339 Z M 32.231 62.034 L 32.23 62.032 A 5.158 5.158 0 0 0 32.23 62.03 C 32.189 61.871 32.15 61.741 32.142 61.585 A 1.151 1.151 0 0 1 32.141 61.529 C 32.092 61.236 32.141 61.04 32.19 60.992 C 32.234 60.992 32.357 61.071 32.559 61.264 A 4.669 4.669 0 0 1 32.629 61.333 A 1.615 1.615 0 0 1 32.724 61.498 C 32.771 61.59 32.813 61.681 32.874 61.773 A 1.561 1.561 0 0 1 32.899 61.895 C 32.918 62.011 32.922 62.115 32.922 62.234 A 16.269 16.269 0 0 1 32.922 62.31 C 32.922 62.744 32.78 62.797 32.541 62.517 A 1.469 1.469 0 0 1 32.532 62.505 C 32.392 62.365 32.341 62.27 32.251 62.09 A 46.55 46.55 0 0 1 32.239 62.066 C 32.238 62.063 32.237 62.06 32.237 62.057 A 5.047 5.047 0 0 0 32.235 62.05 C 32.234 62.048 32.234 62.046 32.233 62.044 L 32.233 62.042 M 314.52 37.637 A 0.191 0.191 0 0 0 314.417 37.603 A 0.996 0.996 0 0 0 314.347 37.64 C 314.275 37.683 314.21 37.747 314.172 37.896 A 0.539 0.539 0 0 0 314.095 38.095 A 1.818 1.818 0 0 0 314.075 38.433 C 314.075 38.677 314.124 38.872 314.172 39.019 C 314.236 39.114 314.299 39.188 314.362 39.229 A 0.191 0.191 0 0 0 314.465 39.263 A 0.159 0.159 0 0 0 314.512 39.256 C 314.567 39.239 314.621 39.194 314.676 39.13 A 1.212 1.212 0 0 0 314.758 39.019 A 91.793 91.793 0 0 0 314.763 39.001 A 2.374 2.374 0 0 0 314.856 38.433 C 314.856 38.303 314.842 38.187 314.814 38.084 A 0.802 0.802 0 0 0 314.709 37.847 C 314.646 37.752 314.583 37.678 314.52 37.637 Z M 445.911 66.363 C 446.155 66.412 446.301 66.509 446.301 66.802 C 446.301 66.802 446.301 66.851 446.252 66.851 C 446.252 66.9 446.204 66.9 446.204 66.949 C 446.119 66.991 446.071 67.033 446.028 67.107 A 0.658 0.658 0 0 0 446.008 67.144 C 445.969 67.263 445.961 67.35 445.934 67.457 A 1.164 1.164 0 0 1 445.911 67.535 L 445.911 67.779 C 445.862 67.828 445.862 67.876 445.813 67.876 A 0.154 0.154 0 0 1 445.689 67.805 C 445.662 67.77 445.64 67.725 445.618 67.681 L 445.471 67.242 L 445.471 66.851 A 0.595 0.595 0 0 1 445.482 66.735 C 445.493 66.681 445.511 66.633 445.531 66.588 A 2.078 2.078 0 0 1 445.569 66.509 C 445.664 66.414 445.76 66.412 445.902 66.366 A 1.177 1.177 0 0 0 445.911 66.363 Z M 378.625 15.288 A 0.471 0.471 0 0 0 378.621 15.224 C 378.608 15.127 378.56 15.093 378.479 15.093 C 378.402 15.093 378.325 15.154 378.248 15.276 A 1.259 1.259 0 0 0 378.186 15.386 A 0.822 0.822 0 0 0 378.115 15.519 C 378.061 15.645 378.026 15.796 377.991 15.972 A 3.488 3.488 0 0 0 377.939 16.202 C 377.919 16.315 377.912 16.421 377.942 16.509 A 0.471 0.471 0 0 0 377.946 16.574 C 377.959 16.67 378.007 16.704 378.088 16.704 A 0.282 0.282 0 0 0 378.156 16.657 C 378.214 16.602 378.26 16.521 378.332 16.413 A 3.657 3.657 0 0 1 378.333 16.412 A 1.693 1.693 0 0 0 378.399 16.303 C 378.472 16.173 378.539 16.014 378.577 15.826 A 3.07 3.07 0 0 0 378.586 15.775 C 378.607 15.662 378.617 15.57 378.621 15.489 A 3.414 3.414 0 0 0 378.625 15.288 Z M 339.905 42.144 A 0.505 0.505 0 0 0 339.846 42.022 C 339.795 41.946 339.728 41.9 339.661 41.9 A 0.159 0.159 0 0 0 339.614 41.907 C 339.559 41.924 339.505 41.969 339.45 42.033 A 1.212 1.212 0 0 0 339.368 42.144 A 2.439 2.439 0 0 0 339.367 42.147 C 339.349 42.201 339.331 42.262 339.315 42.327 A 1.55 1.55 0 0 0 339.27 42.681 A 1.554 1.554 0 0 0 339.316 43.039 A 2.175 2.175 0 0 0 339.368 43.218 A 0.801 0.801 0 0 0 339.386 43.244 C 339.432 43.309 339.479 43.351 339.526 43.378 A 0.268 0.268 0 0 0 339.661 43.413 C 339.738 43.413 339.815 43.383 339.868 43.298 A 0.372 0.372 0 0 0 339.905 43.218 A 0.761 0.761 0 0 0 339.967 43.104 A 1.058 1.058 0 0 0 340.051 42.681 A 1.14 1.14 0 0 0 340.029 42.455 A 0.877 0.877 0 0 0 339.905 42.144 Z M 468.909 42.144 A 0.505 0.505 0 0 0 468.85 42.022 C 468.799 41.946 468.732 41.9 468.665 41.9 A 0.159 0.159 0 0 0 468.618 41.907 C 468.563 41.924 468.508 41.969 468.454 42.033 A 1.212 1.212 0 0 0 468.372 42.144 A 2.439 2.439 0 0 0 468.371 42.147 C 468.353 42.201 468.335 42.262 468.319 42.327 A 1.55 1.55 0 0 0 468.274 42.681 A 1.554 1.554 0 0 0 468.32 43.039 A 2.175 2.175 0 0 0 468.372 43.218 A 0.801 0.801 0 0 0 468.389 43.244 C 468.436 43.309 468.483 43.351 468.53 43.378 A 0.268 0.268 0 0 0 468.665 43.413 C 468.742 43.413 468.819 43.383 468.872 43.298 A 0.372 0.372 0 0 0 468.909 43.218 A 0.761 0.761 0 0 0 468.971 43.104 A 1.058 1.058 0 0 0 469.055 42.681 A 1.14 1.14 0 0 0 469.033 42.455 A 0.877 0.877 0 0 0 468.909 42.144 Z M 48.904 80.199 A 3.406 3.406 0 0 0 48.903 80.2 A 3.29 3.29 0 0 0 48.902 80.2 C 48.831 80.239 48.785 80.268 48.709 80.237 A 0.245 0.245 0 0 1 48.694 80.23 A 0.23 0.23 0 0 1 48.641 80.224 C 48.577 80.209 48.531 80.164 48.455 80.089 A 37.593 37.593 0 0 1 48.45 80.083 A 0.636 0.636 0 0 0 48.373 79.969 C 48.325 79.909 48.265 79.85 48.206 79.79 C 48.059 79.693 47.961 79.644 47.815 79.546 A 4.35 4.35 0 0 1 47.731 79.514 C 47.427 79.392 47.455 79.351 47.815 79.351 A 1.499 1.499 0 0 1 48.092 79.375 A 1.337 1.337 0 0 1 48.45 79.497 A 2.04 2.04 0 0 1 48.615 79.571 C 48.764 79.647 48.865 79.729 48.938 79.839 A 0.253 0.253 0 0 1 48.995 79.926 C 49.023 79.997 49.015 80.077 48.969 80.144 A 0.264 0.264 0 0 1 48.938 80.181 M 13.098 62.994 A 0.237 0.237 0 0 0 13.004 63.006 C 12.991 63.012 12.978 63.019 12.965 63.03 A 0.19 0.19 0 0 0 12.952 63.042 A 0.678 0.678 0 0 0 12.847 63.175 C 12.795 63.263 12.756 63.378 12.756 63.531 A 1.564 1.564 0 0 0 12.724 63.812 C 12.723 63.922 12.736 64.027 12.768 64.124 A 0.69 0.69 0 0 0 12.805 64.214 C 12.852 64.451 12.946 64.55 13.04 64.511 A 0.129 0.129 0 0 0 13.049 64.507 A 0.23 0.23 0 0 0 13.102 64.502 C 13.166 64.487 13.213 64.442 13.288 64.366 A 37.593 37.593 0 0 0 13.293 64.361 A 0.148 0.148 0 0 0 13.329 64.291 C 13.336 64.267 13.339 64.239 13.341 64.209 A 1.738 1.738 0 0 0 13.342 64.117 L 13.342 63.872 A 4.929 4.929 0 0 0 13.34 63.706 C 13.337 63.592 13.326 63.464 13.293 63.335 A 0.787 0.787 0 0 0 13.287 63.228 C 13.271 63.115 13.225 63.047 13.13 63.006 A 0.408 0.408 0 0 0 13.098 62.994 Z M 71.591 39.116 A 0.314 0.314 0 0 0 71.497 39.068 A 0.349 0.349 0 0 0 71.473 39.069 C 71.37 39.076 71.185 39.128 70.959 39.263 A 3.292 3.292 0 0 0 70.758 39.373 A 6.005 6.005 0 0 0 70.471 39.556 A 2.398 2.398 0 0 0 70.411 39.598 C 70.311 39.669 70.276 39.71 70.276 39.751 A 0.043 0.043 0 0 0 70.282 39.773 C 70.306 39.814 70.395 39.849 70.52 39.849 A 0.801 0.801 0 0 0 70.615 39.874 C 70.685 39.888 70.758 39.894 70.838 39.896 A 6.187 6.187 0 0 0 71.008 39.898 C 71.252 39.898 71.399 39.849 71.545 39.751 A 1.293 1.293 0 0 0 71.631 39.66 C 71.682 39.598 71.716 39.531 71.702 39.448 A 0.261 0.261 0 0 0 71.692 39.41 C 71.692 39.265 71.665 39.173 71.591 39.116 Z M 168.025 19.72 A 0.409 0.409 0 0 0 167.981 19.732 C 167.858 19.732 167.735 19.79 167.612 19.881 A 2.034 2.034 0 0 0 167.395 20.074 C 167.159 20.309 167.018 20.45 166.972 20.522 A 0.084 0.084 0 0 0 166.956 20.562 C 166.956 20.641 167.052 20.656 167.219 20.659 A 7.853 7.853 0 0 0 167.346 20.66 C 167.542 20.66 167.688 20.611 167.834 20.562 A 1.7 1.7 0 0 0 167.856 20.547 C 167.991 20.454 168.084 20.362 168.176 20.269 C 168.253 20.116 168.299 19.993 168.292 19.899 A 0.186 0.186 0 0 0 168.274 19.829 C 168.23 19.742 168.147 19.694 168.025 19.72 Z M 286.959 51.15 A 0.043 0.043 0 0 0 286.926 51.128 C 286.844 51.087 286.727 51.15 286.545 51.318 A 3.778 3.778 0 0 0 286.438 51.421 L 286.047 51.812 C 285.95 51.958 285.901 52.056 285.901 52.056 A 0.087 0.087 0 0 0 285.917 52.104 C 285.931 52.127 285.957 52.149 285.992 52.172 A 0.63 0.63 0 0 0 286.047 52.203 L 286.487 52.203 A 0.481 0.481 0 0 0 286.764 52.124 A 0.429 0.429 0 0 0 286.877 52.007 A 0.827 0.827 0 0 0 287.005 51.713 A 0.935 0.935 0 0 0 287.024 51.519 C 287.024 51.33 286.995 51.199 286.959 51.15 Z M 126.917 43.072 C 126.77 43.121 126.672 43.218 126.624 43.413 A 0.646 0.646 0 0 0 126.604 43.571 C 126.604 43.699 126.639 43.831 126.695 43.982 A 3.224 3.224 0 0 0 126.721 44.048 C 126.81 44.315 126.899 44.46 126.951 44.484 A 0.035 0.035 0 0 0 126.965 44.488 C 127.01 44.488 127.097 44.321 127.187 44.064 A 4.396 4.396 0 0 0 127.209 43.999 A 2.281 2.281 0 0 0 127.265 43.881 C 127.326 43.74 127.356 43.616 127.356 43.462 A 0.507 0.507 0 0 0 127.346 43.356 C 127.337 43.315 127.323 43.28 127.303 43.25 A 0.239 0.239 0 0 0 127.209 43.169 C 127.15 43.109 127.09 43.086 127.03 43.077 A 0.761 0.761 0 0 0 126.917 43.072 Z M 230.92 43.072 C 230.774 43.121 230.676 43.218 230.627 43.413 A 0.646 0.646 0 0 0 230.608 43.571 C 230.608 43.699 230.643 43.831 230.699 43.982 A 3.224 3.224 0 0 0 230.725 44.048 C 230.814 44.315 230.903 44.46 230.955 44.484 A 0.035 0.035 0 0 0 230.969 44.488 C 231.014 44.488 231.101 44.321 231.191 44.064 A 4.396 4.396 0 0 0 231.213 43.999 A 2.281 2.281 0 0 0 231.269 43.881 C 231.329 43.74 231.36 43.616 231.36 43.462 A 0.507 0.507 0 0 0 231.35 43.356 C 231.341 43.315 231.326 43.28 231.306 43.25 A 0.239 0.239 0 0 0 231.213 43.169 C 231.153 43.109 231.094 43.086 231.034 43.077 A 0.761 0.761 0 0 0 230.92 43.072 Z M 57.942 64.509 A 1.303 1.303 0 0 0 57.922 64.556 A 1.599 1.599 0 0 0 57.767 64.803 C 57.711 64.916 57.678 65.029 57.678 65.142 A 1.112 1.112 0 0 0 57.666 65.219 C 57.641 65.41 57.68 65.533 57.722 65.62 A 0.782 0.782 0 0 0 57.727 65.63 A 0.154 0.154 0 0 0 57.756 65.672 C 57.806 65.72 57.882 65.713 57.987 65.651 A 0.755 0.755 0 0 0 58.02 65.63 C 58.109 65.586 58.197 65.502 58.249 65.341 A 0.794 0.794 0 0 0 58.264 65.288 A 0.899 0.899 0 0 0 58.302 65.097 C 58.312 65.003 58.313 64.9 58.313 64.796 A 30.696 30.696 0 0 0 58.313 64.751 C 58.264 64.703 58.264 64.703 58.264 64.654 A 1.085 1.085 0 0 0 58.256 64.517 C 58.241 64.4 58.208 64.313 58.174 64.272 A 0.121 0.121 0 0 0 58.167 64.263 C 58.121 64.263 58.033 64.306 57.942 64.509 Z M 131.192 38.414 A 4.478 4.478 0 0 0 131.165 38.482 A 2.508 2.508 0 0 0 131.139 38.679 C 131.121 38.889 131.138 39.076 131.213 39.263 C 131.311 39.556 131.506 39.41 131.702 38.921 A 2.535 2.535 0 0 0 131.799 38.354 A 1.191 1.191 0 0 0 131.799 38.335 A 0.507 0.507 0 0 0 131.789 38.229 C 131.78 38.188 131.766 38.153 131.746 38.123 A 0.239 0.239 0 0 0 131.653 38.042 A 0.171 0.171 0 0 0 131.62 38.016 C 131.601 38.005 131.582 37.999 131.563 37.996 A 0.381 0.381 0 0 0 131.506 37.994 C 131.374 38.038 131.281 38.202 131.192 38.414 Z M 235.196 38.414 A 4.478 4.478 0 0 0 235.168 38.482 A 2.508 2.508 0 0 0 235.143 38.679 C 235.125 38.889 235.142 39.076 235.217 39.263 C 235.315 39.556 235.51 39.41 235.706 38.921 A 2.535 2.535 0 0 0 235.803 38.354 A 1.191 1.191 0 0 0 235.803 38.335 A 0.507 0.507 0 0 0 235.793 38.229 C 235.784 38.188 235.77 38.153 235.75 38.123 A 0.239 0.239 0 0 0 235.657 38.042 A 0.171 0.171 0 0 0 235.624 38.016 C 235.605 38.005 235.586 37.999 235.567 37.996 A 0.381 0.381 0 0 0 235.51 37.994 C 235.378 38.038 235.285 38.202 235.196 38.414 Z M 314.172 34.783 A 0.349 0.349 0 0 0 314.165 34.763 C 314.162 34.755 314.158 34.747 314.154 34.741 A 0.035 0.035 0 0 0 314.124 34.722 C 314.08 34.679 314.037 34.828 314.028 35.237 A 7.514 7.514 0 0 0 314.026 35.406 A 5.518 5.518 0 0 1 314.04 35.513 C 314.068 35.739 314.077 35.916 314.101 36.045 A 0.697 0.697 0 0 0 314.124 36.138 A 14.577 14.577 0 0 0 314.127 36.146 C 314.17 36.23 314.173 36.233 314.213 36.155 A 5.51 5.51 0 0 0 314.221 36.138 A 2.012 2.012 0 0 0 314.268 35.976 C 314.297 35.857 314.319 35.715 314.319 35.552 A 1.843 1.843 0 0 0 314.304 35.316 A 3.383 3.383 0 0 0 314.221 34.917 C 314.208 34.891 314.198 34.864 314.19 34.84 A 3.507 3.507 0 0 1 314.177 34.798 M 129.7 52.984 C 129.651 52.984 129.602 53.033 129.456 53.13 C 129.358 53.228 129.26 53.374 129.163 53.57 C 129.023 53.756 128.972 53.898 128.968 53.996 A 0.306 0.306 0 0 0 128.967 54.009 C 128.922 54.145 128.961 54.197 129.044 54.165 A 0.23 0.23 0 0 0 129.065 54.156 A 0.171 0.171 0 0 0 129.141 54.133 C 129.231 54.087 129.343 53.975 129.456 53.863 A 2.258 2.258 0 0 0 129.605 53.637 C 129.671 53.522 129.719 53.415 129.749 53.326 A 1.927 1.927 0 0 0 129.762 53.268 C 129.781 53.183 129.786 53.12 129.774 53.072 A 0.132 0.132 0 0 0 129.7 52.984 Z M 233.704 52.984 C 233.655 52.984 233.606 53.033 233.459 53.13 C 233.362 53.228 233.264 53.374 233.167 53.57 C 233.027 53.756 232.976 53.898 232.971 53.996 A 0.306 0.306 0 0 0 232.971 54.009 C 232.926 54.145 232.964 54.197 233.048 54.165 A 0.23 0.23 0 0 0 233.069 54.156 A 0.171 0.171 0 0 0 233.145 54.133 C 233.235 54.087 233.347 53.975 233.459 53.863 A 2.258 2.258 0 0 0 233.609 53.637 C 233.675 53.522 233.723 53.415 233.752 53.326 A 1.927 1.927 0 0 0 233.766 53.268 C 233.784 53.183 233.79 53.12 233.778 53.072 A 0.132 0.132 0 0 0 233.704 52.984 Z M 307.336 24.956 A 2.377 2.377 0 0 0 306.75 25.005 C 306.402 25.136 306.52 25.189 307 25.199 A 9.275 9.275 0 0 0 307.19 25.201 A 24.208 24.208 0 0 0 307.42 25.2 C 307.616 25.198 307.763 25.191 307.845 25.163 A 0.217 0.217 0 0 0 307.874 25.152 A 0.602 0.602 0 0 0 307.911 25.138 C 308.01 25.098 308.011 25.057 307.944 25.017 A 0.328 0.328 0 0 0 307.922 25.005 A 1.55 1.55 0 0 0 307.784 24.966 C 307.682 24.942 307.563 24.927 307.428 24.942 A 1.049 1.049 0 0 0 307.336 24.956 Z M 10.608 33.599 C 10.706 33.599 10.754 33.648 10.803 33.794 A 0.866 0.866 0 0 1 10.847 33.899 C 10.873 33.975 10.894 34.068 10.9 34.178 A 1.145 1.145 0 0 1 10.901 34.234 A 1.454 1.454 0 0 0 10.863 34.38 C 10.847 34.451 10.831 34.522 10.799 34.593 A 0.573 0.573 0 0 1 10.754 34.673 A 0.28 0.28 0 0 1 10.713 34.734 C 10.662 34.791 10.596 34.82 10.559 34.82 A 0.271 0.271 0 0 1 10.333 34.705 A 0.266 0.266 0 0 1 10.315 34.673 A 1.208 1.208 0 0 1 10.266 34.289 A 10.565 10.565 0 0 1 10.266 34.234 A 1.096 1.096 0 0 1 10.278 34.073 C 10.295 33.956 10.329 33.863 10.364 33.794 A 2.249 2.249 0 0 1 10.396 33.747 C 10.468 33.645 10.515 33.605 10.59 33.6 A 0.26 0.26 0 0 1 10.608 33.599 Z M 120.032 56.206 C 120.129 56.158 120.178 56.206 120.178 56.304 C 120.178 56.348 120.139 56.469 120.061 56.599 A 1.166 1.166 0 0 1 120.032 56.646 A 1.872 1.872 0 0 1 119.861 56.86 C 119.8 56.927 119.739 56.988 119.69 57.037 A 1.651 1.651 0 0 1 119.557 57.16 C 119.504 57.203 119.45 57.232 119.397 57.232 C 119.349 57.232 119.301 57.232 119.299 57.139 A 0.28 0.28 0 0 1 119.299 57.134 A 0.662 0.662 0 0 0 119.337 57.035 C 119.358 56.969 119.379 56.897 119.437 56.806 A 0.839 0.839 0 0 1 119.446 56.792 A 0.784 0.784 0 0 1 119.599 56.524 A 0.711 0.711 0 0 1 119.739 56.402 A 0.678 0.678 0 0 1 119.801 56.322 C 119.878 56.237 119.955 56.206 120.032 56.206 Z M 224.036 56.206 C 224.133 56.158 224.182 56.206 224.182 56.304 C 224.182 56.348 224.143 56.469 224.065 56.599 A 1.166 1.166 0 0 1 224.036 56.646 A 1.872 1.872 0 0 1 223.865 56.86 C 223.804 56.927 223.743 56.988 223.694 57.037 A 1.651 1.651 0 0 1 223.561 57.16 C 223.508 57.203 223.454 57.232 223.401 57.232 C 223.353 57.232 223.305 57.232 223.303 57.139 A 0.28 0.28 0 0 1 223.303 57.134 A 0.662 0.662 0 0 0 223.341 57.035 C 223.362 56.969 223.383 56.897 223.441 56.806 A 0.839 0.839 0 0 1 223.45 56.792 A 0.784 0.784 0 0 1 223.603 56.524 A 0.711 0.711 0 0 1 223.743 56.402 A 0.678 0.678 0 0 1 223.804 56.322 C 223.882 56.237 223.959 56.206 224.036 56.206 Z M 347.815 41.9 C 347.815 41.9 347.913 41.949 347.961 42.095 A 1.241 1.241 0 0 0 347.982 42.134 C 348.004 42.175 348.032 42.222 348.059 42.272 A 1.351 1.351 0 0 1 348.157 42.486 A 2.152 2.152 0 0 1 348.209 42.657 C 348.225 42.726 348.232 42.791 348.218 42.844 A 0.176 0.176 0 0 1 348.206 42.876 C 348.206 42.944 348.185 42.99 348.153 43.021 A 0.202 0.202 0 0 1 348.01 43.072 A 0.204 0.204 0 0 1 347.895 43.03 A 0.427 0.427 0 0 1 347.766 42.876 A 0.357 0.357 0 0 1 347.674 42.648 A 1.68 1.68 0 0 1 347.668 42.486 L 347.668 42.095 A 0.904 0.904 0 0 1 347.691 42.033 C 347.733 41.935 347.774 41.9 347.815 41.9 Z M 476.819 41.9 C 476.819 41.9 476.917 41.949 476.965 42.095 A 1.241 1.241 0 0 0 476.986 42.134 C 477.008 42.175 477.036 42.222 477.063 42.272 A 1.351 1.351 0 0 1 477.161 42.486 A 2.152 2.152 0 0 1 477.213 42.657 C 477.229 42.726 477.236 42.791 477.222 42.844 A 0.176 0.176 0 0 1 477.209 42.876 C 477.209 42.944 477.189 42.99 477.157 43.021 A 0.202 0.202 0 0 1 477.014 43.072 A 0.204 0.204 0 0 1 476.898 43.03 A 0.427 0.427 0 0 1 476.77 42.876 A 0.357 0.357 0 0 1 476.678 42.648 A 1.68 1.68 0 0 1 476.672 42.486 L 476.672 42.095 A 0.904 0.904 0 0 1 476.695 42.033 C 476.736 41.935 476.778 41.9 476.819 41.9 Z M 13.293 65.338 A 0.136 0.136 0 0 0 13.291 65.34 C 13.28 65.351 13.245 65.393 13.245 65.435 C 13.201 65.611 13.157 65.748 13.148 65.916 A 1.151 1.151 0 0 0 13.147 65.972 A 18.575 18.575 0 0 0 13.147 66.087 C 13.148 66.248 13.154 66.369 13.185 66.51 A 1.622 1.622 0 0 0 13.196 66.558 C 13.24 66.78 13.285 66.638 13.329 66.131 A 14.904 14.904 0 0 0 13.342 65.972 A 3.639 3.639 0 0 0 13.353 65.856 C 13.382 65.497 13.339 65.3 13.296 65.335 A 0.03 0.03 0 0 0 13.293 65.337 Z M 63.473 50.272 A 0.171 0.171 0 0 0 63.44 50.298 A 0.178 0.178 0 0 0 63.41 50.301 C 63.368 50.308 63.318 50.33 63.269 50.359 A 0.922 0.922 0 0 0 63.098 50.494 A 0.823 0.823 0 0 0 63.091 50.5 C 63.058 50.535 63.03 50.569 63.006 50.603 A 1.422 1.422 0 0 0 62.903 50.787 C 62.903 50.982 62.903 51.079 63 51.128 C 63.098 51.177 63.245 51.177 63.391 51.079 A 0.657 0.657 0 0 0 63.597 50.859 A 0.841 0.841 0 0 0 63.684 50.64 A 1.11 1.11 0 0 0 63.701 50.595 C 63.759 50.429 63.74 50.338 63.662 50.285 A 0.304 0.304 0 0 0 63.586 50.249 A 0.381 0.381 0 0 0 63.53 50.252 C 63.511 50.255 63.492 50.261 63.473 50.272 Z M 108.586 30.258 A 3.049 3.049 0 0 0 108.557 30.328 C 108.265 30.913 108.069 31.108 107.972 30.914 A 0.518 0.518 0 0 1 107.972 30.872 C 107.977 30.819 107.994 30.744 108.069 30.669 A 1.303 1.303 0 0 0 108.179 30.541 C 108.232 30.472 108.286 30.393 108.339 30.313 A 44.038 44.038 0 0 0 108.362 30.279 A 2.563 2.563 0 0 1 108.458 30.166 C 108.595 30.013 108.692 29.945 108.703 29.938 A 0.107 0.107 0 0 1 108.704 29.937 C 108.748 29.937 108.673 30.056 108.586 30.258 Z M 212.59 30.258 A 3.049 3.049 0 0 0 212.561 30.328 C 212.268 30.913 212.073 31.108 211.976 30.914 A 0.518 0.518 0 0 1 211.976 30.872 C 211.98 30.819 211.998 30.744 212.073 30.669 A 1.303 1.303 0 0 0 212.183 30.541 C 212.236 30.472 212.289 30.393 212.343 30.313 A 44.038 44.038 0 0 0 212.366 30.279 A 2.563 2.563 0 0 1 212.462 30.166 C 212.598 30.013 212.696 29.945 212.706 29.938 A 0.107 0.107 0 0 1 212.708 29.937 C 212.752 29.937 212.677 30.056 212.59 30.258 Z M 315.738 35.36 A 0.136 0.136 0 0 0 315.735 35.357 A 0.068 0.068 0 0 0 315.712 35.361 C 315.644 35.385 315.604 35.523 315.592 35.774 A 3.669 3.669 0 0 0 315.588 35.943 A 9.859 9.859 0 0 0 315.604 36.115 C 315.649 36.556 315.702 36.654 315.833 36.48 A 1.591 1.591 0 0 0 315.852 36.389 C 315.873 36.282 315.879 36.186 315.881 36.082 A 8.151 8.151 0 0 0 315.881 35.943 C 315.881 35.747 315.833 35.601 315.784 35.454 C 315.784 35.413 315.748 35.371 315.738 35.36 Z M 301.632 25.064 A 0.507 0.507 0 0 0 301.526 25.054 A 0.284 0.284 0 0 0 301.388 25.09 A 0.259 0.259 0 0 0 301.282 25.201 A 0.38 0.38 0 0 0 301.257 25.227 C 301.184 25.316 301.184 25.405 301.184 25.494 A 0.373 0.373 0 0 0 301.201 25.599 A 1.184 1.184 0 0 0 301.282 25.787 A 1.875 1.875 0 0 0 301.405 25.845 A 0.45 0.45 0 0 0 301.575 25.884 A 0.307 0.307 0 0 0 301.672 25.868 C 301.707 25.856 301.743 25.838 301.778 25.813 A 0.66 0.66 0 0 0 301.868 25.738 C 301.904 25.701 301.941 25.637 301.957 25.545 A 0.584 0.584 0 0 0 301.965 25.445 A 0.284 0.284 0 0 0 301.93 25.306 A 0.259 0.259 0 0 0 301.819 25.201 A 0.239 0.239 0 0 0 301.738 25.107 C 301.708 25.087 301.673 25.073 301.632 25.064 Z M 377.896 17.293 A 0.136 0.136 0 0 0 377.894 17.291 C 377.812 17.331 377.765 17.472 377.751 17.741 A 3.593 3.593 0 0 0 377.747 17.925 A 3.089 3.089 0 0 0 377.749 18.063 C 377.766 18.44 377.854 18.54 377.942 18.365 C 377.978 18.221 378.014 18.104 378.03 17.975 A 1.153 1.153 0 0 0 378.04 17.828 C 378.04 17.681 377.991 17.535 377.942 17.388 C 377.942 17.346 377.906 17.305 377.896 17.293 Z M 378.642 13.336 A 0.423 0.423 0 0 0 378.625 13.335 A 0.033 0.033 0 0 0 378.601 13.352 C 378.561 13.408 378.528 13.597 378.528 13.921 A 6.683 6.683 0 0 0 378.529 14.074 C 378.538 14.451 378.583 14.562 378.693 14.408 A 0.749 0.749 0 0 0 378.723 14.361 A 14.147 14.147 0 0 0 378.735 14.325 C 378.78 14.19 378.821 14.052 378.821 13.872 A 0.747 0.747 0 0 0 378.82 13.832 C 378.814 13.721 378.784 13.591 378.75 13.497 A 0.624 0.624 0 0 0 378.723 13.433 A 12.84 12.84 0 0 0 378.715 13.418 C 378.68 13.346 378.673 13.337 378.642 13.336 Z M 134.387 30.621 A 0.133 0.133 0 0 0 134.333 30.632 C 134.271 30.659 134.241 30.728 134.241 30.767 A 0.347 0.347 0 0 0 134.21 30.863 C 134.199 30.932 134.203 31.007 134.225 31.07 A 0.305 0.305 0 0 0 134.241 31.109 A 0.958 0.958 0 0 1 134.31 31.187 C 134.358 31.246 134.397 31.306 134.45 31.365 A 0.869 0.869 0 0 0 134.485 31.402 A 1.507 1.507 0 0 0 134.58 31.447 C 134.63 31.468 134.676 31.479 134.709 31.464 A 0.065 0.065 0 0 0 134.729 31.451 C 134.806 31.451 134.853 31.42 134.869 31.358 A 0.216 0.216 0 0 0 134.875 31.304 C 134.914 31.228 134.892 31.152 134.858 31.053 A 7.796 7.796 0 0 1 134.827 30.962 A 0.775 0.775 0 0 0 134.717 30.784 A 0.291 0.291 0 0 0 134.631 30.718 A 0.363 0.363 0 0 0 134.573 30.67 C 134.504 30.625 134.44 30.621 134.399 30.621 A 1.145 1.145 0 0 0 134.387 30.621 Z M 238.391 30.621 A 0.133 0.133 0 0 0 238.336 30.632 C 238.275 30.659 238.245 30.728 238.245 30.767 A 0.347 0.347 0 0 0 238.214 30.863 C 238.203 30.932 238.207 31.007 238.229 31.07 A 0.305 0.305 0 0 0 238.245 31.109 A 0.958 0.958 0 0 1 238.314 31.187 C 238.362 31.246 238.401 31.306 238.454 31.365 A 0.869 0.869 0 0 0 238.489 31.402 A 1.507 1.507 0 0 0 238.584 31.447 C 238.634 31.468 238.68 31.479 238.713 31.464 A 0.065 0.065 0 0 0 238.733 31.451 C 238.81 31.451 238.857 31.42 238.873 31.358 A 0.216 0.216 0 0 0 238.879 31.304 C 238.917 31.228 238.896 31.152 238.862 31.053 A 7.796 7.796 0 0 1 238.831 30.962 A 0.775 0.775 0 0 0 238.721 30.784 A 0.291 0.291 0 0 0 238.635 30.718 A 0.363 0.363 0 0 0 238.577 30.67 C 238.508 30.625 238.444 30.621 238.403 30.621 A 1.145 1.145 0 0 0 238.391 30.621 Z M 33.85 67.193 A 0.38 0.38 0 0 0 33.823 67.168 C 33.735 67.095 33.646 67.095 33.557 67.095 C 33.448 67.132 33.366 67.168 33.311 67.245 A 0.352 0.352 0 0 0 33.264 67.339 A 0.275 0.275 0 0 0 33.248 67.38 C 33.223 67.458 33.23 67.557 33.303 67.66 A 0.534 0.534 0 0 0 33.362 67.73 C 33.411 67.779 33.459 67.779 33.557 67.779 A 0.34 0.34 0 0 0 33.618 67.773 C 33.696 67.759 33.781 67.721 33.896 67.682 A 2.373 2.373 0 0 1 33.899 67.681 A 0.71 0.71 0 0 0 33.907 67.676 C 34.143 67.53 34.14 67.338 33.85 67.193 Z M 50.319 81.413 C 50.363 81.441 50.41 81.399 50.496 81.355 A 0.8 0.8 0 0 1 50.497 81.355 C 50.41 81.399 50.363 81.441 50.319 81.413 A 0.082 0.082 0 0 1 50.305 81.402 A 0.081 0.081 0 0 1 50.248 81.377 C 50.229 81.358 50.215 81.329 50.21 81.288 A 0.26 0.26 0 0 1 50.208 81.255 A 0.45 0.45 0 0 1 50.247 81.086 A 1.875 1.875 0 0 1 50.305 80.962 L 50.549 80.718 A 0.237 0.237 0 0 0 50.643 80.705 C 50.656 80.7 50.669 80.692 50.682 80.682 A 0.19 0.19 0 0 0 50.696 80.669 C 50.777 80.669 50.825 80.703 50.838 80.8 A 0.471 0.471 0 0 1 50.842 80.865 A 0.45 0.45 0 0 1 50.803 81.034 A 1.875 1.875 0 0 1 50.745 81.158 C 50.696 81.206 50.598 81.304 50.5 81.353 A 0.854 0.854 0 0 0 50.499 81.354 A 0.835 0.835 0 0 0 50.498 81.354 M 287.952 47.808 A 0.401 0.401 0 0 0 287.892 47.756 C 287.853 47.73 287.799 47.71 287.708 47.71 A 0.284 0.284 0 0 0 287.569 47.746 A 0.259 0.259 0 0 0 287.463 47.857 A 0.239 0.239 0 0 0 287.37 47.938 C 287.35 47.968 287.336 48.003 287.327 48.044 A 0.507 0.507 0 0 0 287.317 48.15 A 0.37 0.37 0 0 0 287.323 48.213 C 287.333 48.274 287.355 48.33 287.363 48.369 A 0.131 0.131 0 0 1 287.366 48.394 A 0.63 0.63 0 0 0 287.397 48.449 C 287.418 48.483 287.44 48.508 287.462 48.523 A 0.088 0.088 0 0 0 287.512 48.54 A 0.091 0.091 0 0 0 287.555 48.528 C 287.587 48.512 287.622 48.478 287.673 48.428 A 11.182 11.182 0 0 0 287.708 48.394 A 1.9 1.9 0 0 0 287.734 48.367 C 287.772 48.328 287.823 48.27 287.863 48.193 A 0.605 0.605 0 0 0 287.903 48.101 A 0.371 0.371 0 0 0 287.927 48.074 C 288 47.986 287.996 47.897 287.952 47.808 Z M 300.061 20.269 C 300.11 20.269 300.159 20.269 300.208 20.367 A 0.593 0.593 0 0 0 300.231 20.509 C 300.243 20.557 300.256 20.606 300.256 20.655 A 0.298 0.298 0 0 1 300.256 20.66 A 0.325 0.325 0 0 1 300.22 20.806 C 300.204 20.838 300.182 20.87 300.156 20.902 A 0.729 0.729 0 0 1 300.11 20.953 A 0.162 0.162 0 0 1 300.065 21.009 C 300.013 21.05 299.939 21.05 299.866 21.05 C 299.748 21.089 299.693 21.066 299.651 21.004 A 0.434 0.434 0 0 1 299.622 20.953 C 299.579 20.91 299.574 20.83 299.638 20.712 A 0.733 0.733 0 0 1 299.67 20.66 C 299.713 20.574 299.793 20.489 299.845 20.403 A 0.502 0.502 0 0 0 299.866 20.367 A 0.852 0.852 0 0 0 299.867 20.366 C 299.942 20.328 299.988 20.291 300.027 20.276 A 0.094 0.094 0 0 1 300.061 20.269 Z M 429.652 59.251 A 0.088 0.088 0 0 0 429.602 59.234 C 429.573 59.234 429.527 59.251 429.474 59.275 A 3.643 3.643 0 0 0 429.358 59.331 C 429.26 59.429 429.211 59.527 429.26 59.624 C 429.3 59.704 429.34 59.751 429.432 59.792 A 0.8 0.8 0 0 0 429.504 59.82 A 0.399 0.399 0 0 0 429.52 59.835 C 429.613 59.918 429.705 59.92 429.797 59.966 L 429.944 59.966 A 0.092 0.092 0 0 0 429.945 59.965 C 429.953 59.957 429.988 59.917 429.944 59.917 A 0.089 0.089 0 0 0 429.937 59.884 C 429.93 59.868 429.92 59.853 429.908 59.837 A 0.825 0.825 0 0 0 429.846 59.771 A 0.19 0.19 0 0 1 429.834 59.758 C 429.823 59.744 429.816 59.731 429.81 59.718 A 0.237 0.237 0 0 1 429.797 59.624 A 0.37 0.37 0 0 0 429.791 59.561 C 429.781 59.501 429.759 59.444 429.751 59.405 A 0.131 0.131 0 0 1 429.749 59.38 A 0.63 0.63 0 0 0 429.718 59.325 C 429.696 59.291 429.674 59.266 429.652 59.251 Z M 61.78 55.132 A 0.383 0.383 0 0 0 61.776 55.124 C 61.728 55.035 61.679 55.035 61.584 55.035 A 1.794 1.794 0 0 0 61.52 55.035 C 61.465 55.037 61.403 55.044 61.346 55.066 A 0.294 0.294 0 0 0 61.243 55.132 A 2.14 2.14 0 0 0 61.17 55.17 A 0.382 0.382 0 0 0 60.999 55.328 C 60.964 55.396 60.954 55.465 60.968 55.517 A 0.122 0.122 0 0 0 60.999 55.572 C 61.036 55.609 61.074 55.647 61.134 55.662 A 0.242 0.242 0 0 0 61.194 55.669 A 0.373 0.373 0 0 0 61.299 55.653 A 1.184 1.184 0 0 0 61.487 55.572 A 0.553 0.553 0 0 0 61.623 55.472 A 0.56 0.56 0 0 0 61.731 55.328 C 61.78 55.23 61.78 55.181 61.78 55.132 Z M 10.657 31.451 C 10.706 31.451 10.754 31.548 10.852 31.695 C 10.901 31.841 10.95 31.988 10.95 32.085 A 0.8 0.8 0 0 1 10.922 32.158 C 10.881 32.25 10.834 32.29 10.754 32.329 C 10.709 32.375 10.621 32.378 10.53 32.299 A 0.387 0.387 0 0 1 10.51 32.281 A 0.29 0.29 0 0 1 10.47 32.229 C 10.451 32.198 10.434 32.161 10.424 32.122 A 0.336 0.336 0 0 1 10.413 32.037 C 10.413 31.89 10.413 31.792 10.461 31.695 A 0.576 0.576 0 0 1 10.496 31.612 C 10.548 31.513 10.618 31.451 10.657 31.451 Z M 24.323 40.461 A 0.739 0.739 0 0 0 24.084 40.435 C 24.027 40.435 23.976 40.443 23.931 40.455 A 0.979 0.979 0 0 0 23.743 40.533 A 0.274 0.274 0 0 0 23.731 40.539 C 23.656 40.581 23.612 40.653 23.6 40.703 A 0.11 0.11 0 0 0 23.596 40.728 A 0.269 0.269 0 0 0 23.597 40.753 C 23.605 40.834 23.649 40.879 23.694 40.923 A 1.373 1.373 0 0 0 23.839 40.918 C 23.871 40.915 23.904 40.91 23.94 40.901 A 1.002 1.002 0 0 0 24.036 40.874 A 1.593 1.593 0 0 0 24.125 40.842 A 0.704 0.704 0 0 0 24.377 40.679 A 0.812 0.812 0 0 0 24.387 40.674 C 24.467 40.633 24.511 40.593 24.522 40.584 A 0.111 0.111 0 0 0 24.524 40.581 C 24.524 40.533 24.475 40.484 24.377 40.484 A 0.41 0.41 0 0 0 24.323 40.461 Z M 302.176 16.693 A 0.075 0.075 0 0 0 302.161 16.704 A 0.143 0.143 0 0 1 302.159 16.723 C 302.153 16.771 302.127 16.867 302.116 16.993 A 1.232 1.232 0 0 0 302.112 17.095 A 13.702 13.702 0 0 0 302.112 17.238 C 302.113 17.334 302.117 17.41 302.127 17.473 A 0.39 0.39 0 0 0 302.161 17.583 C 302.204 17.67 302.247 17.68 302.324 17.647 A 0.565 0.565 0 0 0 302.356 17.632 A 0.131 0.131 0 0 0 302.367 17.62 C 302.391 17.589 302.413 17.537 302.43 17.475 A 0.742 0.742 0 0 0 302.454 17.29 C 302.454 17.144 302.405 16.997 302.356 16.851 A 3.205 3.205 0 0 0 302.351 16.843 C 302.266 16.717 302.219 16.667 302.176 16.693 Z M 78.102 23.754 A 3.406 3.406 0 0 1 78.103 23.754 A 3.29 3.29 0 0 0 78.101 23.755 A 1.969 1.969 0 0 1 78.056 23.779 C 78.008 23.804 77.967 23.816 77.908 23.792 A 0.245 0.245 0 0 1 77.893 23.785 A 0.052 0.052 0 0 1 77.863 23.773 C 77.826 23.746 77.795 23.677 77.795 23.638 A 0.739 0.739 0 0 1 77.822 23.4 A 0.41 0.41 0 0 1 77.844 23.345 A 0.56 0.56 0 0 1 77.952 23.201 A 0.553 0.553 0 0 1 78.088 23.101 A 0.171 0.171 0 0 1 78.122 23.075 C 78.14 23.063 78.159 23.058 78.178 23.055 A 0.381 0.381 0 0 1 78.235 23.052 C 78.287 23.026 78.339 23.042 78.384 23.077 A 0.367 0.367 0 0 1 78.479 23.199 A 0.45 0.45 0 0 1 78.439 23.368 A 1.875 1.875 0 0 1 78.381 23.492 A 0.56 0.56 0 0 1 78.274 23.636 A 0.553 0.553 0 0 1 78.137 23.736 M 182.092 17.583 A 0.148 0.148 0 0 0 182.07 17.611 C 182.047 17.648 182.051 17.691 182.082 17.758 A 0.69 0.69 0 0 0 182.092 17.779 L 182.336 18.023 A 1.184 1.184 0 0 0 182.524 18.104 A 0.373 0.373 0 0 0 182.629 18.121 A 2.238 2.238 0 0 0 182.725 18.099 C 182.899 18.057 182.964 18.009 182.922 17.925 C 182.876 17.879 182.743 17.789 182.48 17.656 A 7.013 7.013 0 0 0 182.434 17.632 C 182.291 17.585 182.149 17.583 182.096 17.583 A 4.983 4.983 0 0 0 182.092 17.583 Z M 336.584 49.908 C 336.487 49.908 336.389 49.956 336.389 50.005 A 0.507 0.507 0 0 0 336.373 50.04 C 336.342 50.117 336.353 50.17 336.438 50.298 C 336.487 50.395 336.584 50.493 336.633 50.542 A 1.822 1.822 0 0 1 336.633 50.542 C 336.708 50.617 336.754 50.635 336.793 50.639 A 0.327 0.327 0 0 0 336.829 50.64 C 336.877 50.64 336.925 50.64 336.926 50.548 A 0.28 0.28 0 0 0 336.926 50.542 A 0.148 0.148 0 0 0 336.962 50.473 C 336.969 50.448 336.972 50.42 336.973 50.39 A 1.738 1.738 0 0 0 336.975 50.298 C 336.975 50.164 336.975 50.112 336.9 50.029 A 0.661 0.661 0 0 0 336.877 50.005 A 1.184 1.184 0 0 0 336.69 49.924 A 0.373 0.373 0 0 0 336.584 49.908 Z M 465.588 49.908 C 465.491 49.908 465.393 49.956 465.393 50.005 A 0.507 0.507 0 0 0 465.377 50.04 C 465.346 50.117 465.356 50.17 465.442 50.298 C 465.49 50.395 465.587 50.493 465.636 50.542 A 1.822 1.822 0 0 1 465.637 50.542 C 465.712 50.617 465.758 50.635 465.797 50.639 A 0.327 0.327 0 0 0 465.833 50.64 C 465.88 50.64 465.928 50.64 465.93 50.548 A 0.28 0.28 0 0 0 465.93 50.542 A 0.148 0.148 0 0 0 465.966 50.473 C 465.973 50.448 465.976 50.42 465.977 50.39 A 1.738 1.738 0 0 0 465.979 50.298 C 465.979 50.164 465.979 50.112 465.904 50.029 A 0.661 0.661 0 0 0 465.881 50.005 A 1.184 1.184 0 0 0 465.694 49.924 A 0.373 0.373 0 0 0 465.588 49.908 Z M 377.217 21.413 A 9.208 9.208 0 0 1 377.216 21.411 A 8.977 8.977 0 0 0 377.217 21.414 A 6.163 6.163 0 0 1 377.248 21.505 C 377.278 21.596 377.294 21.677 377.258 21.783 C 377.258 21.914 377.258 22.006 377.187 22.095 A 0.369 0.369 0 0 1 377.161 22.124 C 377.12 22.207 377.079 22.185 377.037 22.147 A 0.835 0.835 0 0 1 377.014 22.124 C 376.965 22.027 376.965 21.88 376.965 21.685 A 1.578 1.578 0 0 1 376.971 21.548 C 376.982 21.421 377.008 21.331 377.038 21.28 A 0.163 0.163 0 0 1 377.063 21.246 A 0.078 0.078 0 0 1 377.077 21.234 C 377.115 21.211 377.153 21.246 377.191 21.34 A 0.911 0.911 0 0 1 377.209 21.392 C 377.21 21.394 377.211 21.395 377.211 21.397 A 2.411 2.411 0 0 0 377.212 21.399 A 5.801 5.801 0 0 0 377.212 21.4 A 2.307 2.307 0 0 0 377.213 21.402 A 2.257 2.257 0 0 0 377.213 21.404 A 2.76 2.76 0 0 0 377.214 21.405 A 2.16 2.16 0 0 0 377.214 21.407 A 9.963 9.963 0 0 0 377.215 21.408 Z M 58.655 62.31 A 0.129 0.129 0 0 0 58.613 62.318 C 58.558 62.338 58.474 62.393 58.362 62.505 A 1.735 1.735 0 0 1 58.36 62.509 C 58.295 62.605 58.23 62.681 58.18 62.749 A 0.69 0.69 0 0 0 58.118 62.847 C 58.118 62.922 58.118 62.997 58.14 63.05 A 0.126 0.126 0 0 0 58.167 63.091 A 0.52 0.52 0 0 0 58.202 63.108 C 58.272 63.136 58.318 63.129 58.391 63.061 A 0.689 0.689 0 0 0 58.411 63.042 A 0.208 0.208 0 0 0 58.442 62.998 C 58.48 62.931 58.519 62.816 58.557 62.701 A 2.386 2.386 0 0 0 58.594 62.601 C 58.655 62.429 58.655 62.352 58.655 62.31 Z M 76.819 38.531 A 0.072 0.072 0 0 0 76.779 38.542 C 76.756 38.558 76.751 38.588 76.803 38.62 A 0.231 0.231 0 0 0 76.819 38.628 C 76.857 38.705 76.925 38.721 77.022 38.725 A 2.445 2.445 0 0 0 77.112 38.726 C 77.255 38.726 77.351 38.726 77.491 38.681 A 1.131 1.131 0 0 0 77.502 38.677 C 77.795 38.531 77.698 38.482 77.258 38.482 A 6.847 6.847 0 0 0 77.105 38.483 C 76.984 38.486 76.889 38.496 76.819 38.531 Z M 188.116 21.465 A 0.279 0.279 0 0 0 188.143 21.392 A 0.256 0.256 0 0 0 188.147 21.343 A 0.37 0.37 0 0 0 188.141 21.28 C 188.13 21.219 188.109 21.163 188.101 21.124 A 0.131 0.131 0 0 1 188.098 21.099 L 188 21.001 A 0.094 0.094 0 0 0 187.966 21.008 C 187.927 21.024 187.881 21.061 187.807 21.098 A 0.852 0.852 0 0 1 187.805 21.099 A 0.442 0.442 0 0 0 187.764 21.15 C 187.74 21.182 187.714 21.22 187.682 21.262 A 0.923 0.923 0 0 1 187.61 21.343 A 0.69 0.69 0 0 0 187.597 21.371 C 187.567 21.437 187.562 21.482 187.561 21.545 A 3.091 3.091 0 0 0 187.561 21.587 C 187.599 21.625 187.637 21.663 187.697 21.678 A 0.242 0.242 0 0 0 187.756 21.685 C 187.903 21.685 187.952 21.636 188.049 21.587 A 0.987 0.987 0 0 1 188.072 21.545 C 188.086 21.52 188.1 21.497 188.111 21.475 M 129.501 27.84 A 0.136 0.136 0 0 0 129.504 27.838 A 0.234 0.234 0 0 1 129.55 27.841 C 129.651 27.861 129.651 27.958 129.651 28.13 A 2.391 2.391 0 0 1 129.65 28.185 C 129.644 28.442 129.596 28.573 129.504 28.619 A 0.058 0.058 0 0 1 129.462 28.636 C 129.419 28.636 129.36 28.592 129.299 28.493 A 0.915 0.915 0 0 1 129.26 28.423 C 129.218 28.339 129.212 28.291 129.243 28.217 A 0.565 0.565 0 0 1 129.26 28.179 L 129.407 27.886 C 129.449 27.886 129.49 27.85 129.501 27.84 Z M 233.505 27.84 A 0.136 0.136 0 0 0 233.508 27.838 A 0.234 0.234 0 0 1 233.553 27.841 C 233.655 27.861 233.655 27.958 233.655 28.13 A 2.391 2.391 0 0 1 233.654 28.185 C 233.648 28.442 233.6 28.573 233.508 28.619 A 0.058 0.058 0 0 1 233.466 28.636 C 233.422 28.636 233.364 28.592 233.303 28.493 A 0.915 0.915 0 0 1 233.264 28.423 C 233.222 28.339 233.216 28.291 233.247 28.217 A 0.565 0.565 0 0 1 233.264 28.179 L 233.411 27.886 C 233.452 27.886 233.494 27.85 233.505 27.84 Z M 76.624 29.888 A 1.229 1.229 0 0 0 76.577 29.843 C 76.543 29.813 76.51 29.79 76.477 29.79 A 0.089 0.089 0 0 0 76.443 29.798 C 76.428 29.804 76.412 29.814 76.397 29.826 A 0.825 0.825 0 0 0 76.331 29.888 A 0.291 0.291 0 0 0 76.245 29.954 A 0.775 0.775 0 0 0 76.135 30.132 A 0.69 0.69 0 0 0 76.122 30.16 C 76.093 30.226 76.088 30.271 76.087 30.334 A 3.091 3.091 0 0 0 76.086 30.376 A 0.126 0.126 0 0 0 76.127 30.403 C 76.18 30.425 76.255 30.425 76.331 30.425 C 76.404 30.425 76.477 30.425 76.53 30.384 A 0.162 0.162 0 0 0 76.575 30.328 C 76.612 30.29 76.65 30.252 76.665 30.192 A 0.242 0.242 0 0 0 76.672 30.132 A 0.37 0.37 0 0 0 76.666 30.069 C 76.656 30.008 76.634 29.952 76.626 29.913 A 0.131 0.131 0 0 1 76.624 29.888 Z M 10.618 46.772 A 4.558 4.558 0 0 0 10.608 46.783 A 0.29 0.29 0 0 0 10.568 46.834 C 10.549 46.865 10.532 46.902 10.522 46.942 A 0.336 0.336 0 0 0 10.51 47.027 A 3.834 3.834 0 0 0 10.511 47.086 C 10.512 47.178 10.519 47.289 10.559 47.369 C 10.648 47.592 10.697 47.57 10.742 47.265 A 4.193 4.193 0 0 0 10.754 47.173 C 10.754 46.978 10.754 46.845 10.729 46.774 A 0.108 0.108 0 0 0 10.706 46.734 C 10.66 46.734 10.657 46.734 10.618 46.772 Z M 434.174 62.115 C 434.16 62.106 434.15 62.097 434.146 62.083 A 0.055 0.055 0 0 1 434.143 62.066 C 434.094 62.066 434.094 62.017 434.094 62.017 L 434.045 61.968 L 433.997 61.968 L 433.997 61.919 L 433.997 61.968 L 433.948 61.919 C 433.899 61.919 433.899 61.871 433.85 61.871 A 0.823 0.823 0 0 0 433.843 61.864 C 433.809 61.83 433.775 61.803 433.74 61.779 A 1.422 1.422 0 0 0 433.557 61.675 A 0.987 0.987 0 0 1 433.515 61.653 C 433.49 61.638 433.467 61.625 433.445 61.613 M 433.435 61.608 A 0.279 0.279 0 0 0 433.361 61.582 A 0.256 0.256 0 0 0 433.313 61.578 L 433.264 61.578 C 433.215 61.675 433.264 61.773 433.362 61.871 A 0.869 0.869 0 0 0 433.398 61.905 C 433.458 61.958 433.517 61.997 433.577 62.045 A 0.958 0.958 0 0 1 433.655 62.115 C 433.697 62.136 433.73 62.148 433.758 62.158 A 1.151 1.151 0 0 0 433.758 62.158 M 36.717 72.544 A 0.918 0.918 0 0 1 36.731 72.515 C 36.731 72.434 36.697 72.387 36.658 72.317 A 1.02 1.02 0 0 1 36.633 72.271 C 36.584 72.222 36.487 72.173 36.389 72.173 A 0.109 0.109 0 0 0 36.372 72.175 C 36.32 72.183 36.238 72.222 36.194 72.222 A 0.212 0.212 0 0 1 36.177 72.237 C 36.169 72.243 36.162 72.248 36.155 72.253 A 1.198 1.198 0 0 1 36.134 72.266 M 36.265 72.554 A 1.346 1.346 0 0 1 36.264 72.553 C 36.297 72.594 36.336 72.635 36.389 72.662 C 36.487 72.71 36.536 72.71 36.584 72.71 C 36.666 72.67 36.679 72.629 36.71 72.56 M 36.127 72.271 C 36.113 72.28 36.103 72.289 36.099 72.303 A 0.055 0.055 0 0 0 36.096 72.32 A 0.089 0.089 0 0 0 36.103 72.354 C 36.11 72.369 36.12 72.384 36.132 72.4 A 0.825 0.825 0 0 0 36.194 72.466 C 36.214 72.487 36.235 72.516 36.259 72.546 A 0.948 0.948 0 0 1 36.259 72.546 M 48.92 80.19 A 1.479 1.479 0 0 1 48.921 80.19 A 1.555 1.555 0 0 1 48.923 80.189 A 1.595 1.595 0 0 1 48.924 80.188 A 1.637 1.637 0 0 1 48.925 80.188 A 1.726 1.726 0 0 1 48.927 80.187 A 1.772 1.772 0 0 1 48.928 80.186 A 0.936 0.936 0 0 1 48.929 80.186 A 0.959 0.959 0 0 0 48.929 80.186 M 32.876 65.994 C 32.876 65.995 32.876 65.997 32.876 65.998 M 319.06 59.685 C 319.061 59.686 319.061 59.688 319.062 59.689 M 32.232 62.04 C 32.232 62.038 32.232 62.037 32.231 62.036 M 286.926 35.699 C 286.926 35.7 286.925 35.701 286.925 35.702 M 316.32 43.011 C 316.319 43.009 316.319 43.008 316.319 43.007 M 323.046 62.295 C 323.046 62.297 323.047 62.298 323.048 62.299 M 64.841 50.8 C 64.843 50.799 64.844 50.799 64.845 50.798 M 104.978 40.448 C 104.979 40.448 104.98 40.447 104.982 40.446 M 208.982 40.448 C 208.983 40.448 208.984 40.447 208.986 40.446 M 64.847 50.797 C 64.848 50.796 64.849 50.795 64.85 50.795 M 104.984 40.445 C 104.985 40.445 104.986 40.444 104.987 40.443 M 208.988 40.445 C 208.989 40.445 208.99 40.444 208.991 40.443 M 113.342 65.777 C 113.343 65.776 113.345 65.776 113.346 65.776 M 217.346 65.777 C 217.347 65.776 217.348 65.776 217.35 65.776 M 78.127 23.741 A 1.772 1.772 0 0 0 78.126 23.741 A 0.936 0.936 0 0 1 78.128 23.74 A 0.959 0.959 0 0 0 78.128 23.74 Z M 301.587 18.978 C 301.587 18.977 301.587 18.976 301.587 18.975 M 78.119 23.745 C 78.119 23.745 78.118 23.746 78.117 23.746 M 323.048 62.299 A 0.682 0.682 0 0 0 323.048 62.3 A 0.794 0.794 0 0 1 323.048 62.3 Z M 104.982 40.446 A 0.682 0.682 0 0 0 104.983 40.446 A 0.794 0.794 0 0 1 104.983 40.446 Z M 208.986 40.446 A 0.682 0.682 0 0 0 208.987 40.446 A 0.794 0.794 0 0 1 208.987 40.446 Z M 64.845 50.798 A 0.682 0.682 0 0 0 64.846 50.797 A 0.794 0.794 0 0 1 64.846 50.797 Z M 48.938 80.181 C 48.937 80.181 48.936 80.182 48.936 80.182 M 78.137 23.736 C 78.136 23.736 78.136 23.736 78.135 23.737 M 323.049 62.301 A 0.658 0.658 0 0 0 323.05 62.302 A 0.767 0.767 0 0 1 323.05 62.302 Z M 64.853 50.794 A 1.093 1.093 0 0 0 64.854 50.793 A 0.831 0.831 0 0 1 64.854 50.793 Z M 104.989 40.442 A 1.093 1.093 0 0 0 104.99 40.442 A 0.831 0.831 0 0 1 104.99 40.442 Z M 208.993 40.442 A 1.093 1.093 0 0 0 208.994 40.442 A 0.831 0.831 0 0 1 208.994 40.442 Z M 323.052 62.307 A 1.093 1.093 0 0 0 323.052 62.308 A 0.831 0.831 0 0 1 323.052 62.308 Z M 78.123 23.743 A 1.595 1.595 0 0 0 78.122 23.743 A 1.555 1.555 0 0 1 78.122 23.743 Z M 433.763 62.16 A 1.207 1.207 0 0 0 433.762 62.16 A 1.684 1.684 0 0 1 433.762 62.16 Z M 78.121 23.744 C 78.121 23.744 78.12 23.745 78.119 23.745 M 433.761 62.16 C 433.76 62.159 433.76 62.159 433.759 62.159 M 32.233 62.042 C 32.233 62.041 32.232 62.04 32.232 62.04 M 32.231 62.036 C 32.231 62.035 32.231 62.034 32.231 62.034 M 78.117 23.746 A 2.539 2.539 0 0 0 78.116 23.747 A 1.308 1.308 0 0 1 78.116 23.747 Z M 377.215 21.408 C 377.215 21.409 377.215 21.409 377.216 21.41 M 377.216 21.41 C 377.216 21.41 377.216 21.411 377.216 21.411 M 377.217 21.414 C 377.217 21.415 377.217 21.415 377.218 21.416 M 50.498 81.354 C 50.498 81.354 50.497 81.355 50.497 81.355 M 64.85 50.795 C 64.851 50.795 64.851 50.794 64.852 50.794 M 104.987 40.443 C 104.988 40.443 104.988 40.443 104.988 40.443 M 208.991 40.443 C 208.991 40.443 208.992 40.443 208.992 40.443 M 323.051 62.304 C 323.051 62.305 323.051 62.305 323.051 62.306 M 323.051 62.306 C 323.051 62.306 323.052 62.306 323.052 62.307 M 64.852 50.794 C 64.852 50.794 64.852 50.794 64.853 50.794 M 104.988 40.443 C 104.989 40.443 104.989 40.442 104.989 40.442 M 208.992 40.443 C 208.993 40.443 208.993 40.442 208.993 40.442 M 48.931 80.184 C 48.931 80.185 48.931 80.185 48.93 80.185 M 78.131 23.739 C 78.13 23.739 78.13 23.739 78.129 23.74 M 323.053 62.309 C 323.053 62.309 323.053 62.309 323.054 62.31 M 64.855 50.793 C 64.855 50.792 64.855 50.792 64.856 50.792 M 104.991 40.441 C 104.992 40.441 104.992 40.441 104.992 40.44 M 208.995 40.441 C 208.996 40.441 208.996 40.441 208.996 40.44 M 48.926 80.187 C 48.926 80.187 48.925 80.187 48.925 80.188 M 78.124 23.742 C 78.124 23.742 78.124 23.743 78.123 23.743 M 48.922 80.189 C 48.922 80.189 48.922 80.189 48.921 80.19 M 48.916 80.193 C 48.915 80.193 48.915 80.193 48.915 80.193 M 48.919 80.191 C 48.919 80.191 48.919 80.191 48.919 80.191 M 78.125 23.742 C 78.125 23.742 78.125 23.742 78.125 23.742 M 113.363 65.77 C 113.363 65.77 113.363 65.77 113.363 65.77 M 135.886 35.582 C 135.886 35.582 135.886 35.582 135.886 35.582 M 217.367 65.77 C 217.367 65.77 217.367 65.77 217.367 65.77 M 239.889 35.582 C 239.889 35.582 239.889 35.582 239.889 35.582 M 32.88 66.044 A 89.878 89.878 0 0 1 32.88 66.04 M 32.238 62.061 A 4.669 4.669 0 0 1 32.238 62.064 M 32.234 62.046 A 4.846 4.846 0 0 1 32.234 62.048 M 48.916 80.193 A 1.308 1.308 0 0 1 48.917 80.192 M 64.844 50.799 A 0.623 0.623 0 0 1 64.843 50.799 M 64.849 50.795 A 0.767 0.767 0 0 1 64.848 50.796 M 64.857 50.791 A 1.039 1.039 0 0 1 64.856 50.792 M 78.118 23.746 A 0.742 0.742 0 0 1 78.119 23.745 M 78.114 23.748 A 0.904 0.904 0 0 1 78.115 23.747 M 104.98 40.447 A 0.623 0.623 0 0 1 104.979 40.448 M 104.986 40.444 A 0.767 0.767 0 0 1 104.985 40.445 M 104.993 40.44 A 1.039 1.039 0 0 1 104.992 40.44 M 208.984 40.447 A 0.623 0.623 0 0 1 208.983 40.448 M 208.99 40.444 A 0.767 0.767 0 0 1 208.989 40.445 M 208.997 40.44 A 1.039 1.039 0 0 1 208.996 40.44 M 323.047 62.298 A 0.623 0.623 0 0 1 323.046 62.297 M 323.051 62.304 A 0.635 0.635 0 0 1 323.05 62.303 M 323.054 62.311 A 1.039 1.039 0 0 1 323.054 62.31 M 377.211 21.395 A 2.522 2.522 0 0 1 377.21 21.394" vector-effect="non-scaling-stroke"></path></g></svg><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" style="${
    __vite_ssr_import_1__.ssrRenderStyle({"enable-background":"new 0 0 512 512"})
  }" xml:space="preserve" class="absolute z-0" width="120" height="120"><path style="${
    __vite_ssr_import_1__.ssrRenderStyle({"fill":"#88888f"})
  }" d="M133.818 116.364h34.909v116.364h-34.909z"></path><path style="${
    __vite_ssr_import_1__.ssrRenderStyle({"fill":"#797781"})
  }" d="M343.273 116.364h34.909v116.364h-34.909z"></path><path style="${
    __vite_ssr_import_1__.ssrRenderStyle({"fill":"#e02753"})
  }" d="M512 23.273C473.659 36.83 377.594 69.818 256 69.818S38.341 36.83 0 23.273l15.914 93.091C54.255 129.921 134.407 139.636 256 139.636s201.745-9.715 240.086-23.273L512 23.273z"></path><path style="${
    __vite_ssr_import_1__.ssrRenderStyle({"fill":"#c5142c"})
  }" d="M256 69.818v69.818c121.594 0 201.745-9.715 240.086-23.273L512 23.273C473.659 36.83 377.594 69.818 256 69.818z"></path><path style="${
    __vite_ssr_import_1__.ssrRenderStyle({"fill":"#e07188"})
  }" d="M116.364 267.636h69.818v221.091h-69.818z"></path><path style="${
    __vite_ssr_import_1__.ssrRenderStyle({"fill":"#e02753"})
  }" d="M325.818 267.636h69.818v221.091h-69.818z"></path><path style="${
    __vite_ssr_import_1__.ssrRenderStyle({"fill":"#e02753"})
  }" d="m494.547 219.093-11.639-32.911C454.173 196.343 391.48 208.456 256 208.456S57.827 196.343 29.092 186.182l-11.639 32.911c10.358 3.662 22.529 6.91 36.451 9.748v50.432h404.191v-50.432c13.922-2.838 26.094-6.085 36.452-9.748z"></path><path style="${
    __vite_ssr_import_1__.ssrRenderStyle({"fill":"#c5142c"})
  }" d="M482.908 186.182C454.173 196.343 391.48 208.456 256 208.456v70.817h202.096v-50.432c13.922-2.838 26.093-6.086 36.451-9.748l-11.639-32.911z"></path><path style="${
    __vite_ssr_import_1__.ssrRenderStyle({"fill":"#88888f"})
  }" d="M221.091 128h69.818v93.089h-69.818z"></path><path style="${
    __vite_ssr_import_1__.ssrRenderStyle({"fill":"#797781"})
  }" d="M256 128h34.909v93.089H256z"></path></svg></figure><div class="mx-auto flex w-[70%] flex-col justify-center space-y-4 text-lg md:text-2xl"><h1 class="text-center text-2xl font-bold md:text-4xl">Kyoto Manga là website đọc truyện tranh miễn phí</h1><div class="flex flex-col items-center justify-center gap-4 md:flex-row md:space-x-8 md:text-2xl"><a class="hover:text-primary" href="/terms-of-service">Điều khoản dịch vụ</a><a class="hover:text-primary" href="/privacy-policy">Chính sách riêng tư</a><a class="hover:text-primary" href="/dmca">DMCA</a><a class="hover:text-primary" href="/contact">Liên hệ</a></div></div><div class="my-4 mx-auto w-[70%] space-y-4 lg:w-1/2"><p class="text-center text-lg text-white/40 md:text-2xl">Kyoto Manga không lưu trữ bất kì tệp tin nào trên máy chủ, chúng tôi chỉ liên kết tới những phương tiện truyền thông được lưu trữ bên dịch vụ thứ 3.</p><p class="text-center text-lg text-white/40 md:text-2xl">Kyoto Manga does not store any files on our server, we only linked to the media which is hosted on 3rd party services.</p></div></footer>`)
}


const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_setup = _sfc_main.setup
_sfc_main.setup = (props, ctx) => {
  const ssrContext = __vite_ssr_import_2__.useSSRContext()
  ;(ssrContext.modules || (ssrContext.modules = new Set())).add("components/TheFooter.vue")
  return _sfc_setup ? _sfc_setup(props, ctx) : undefined
}
const __vite_ssr_import_3__ = await __vite_ssr_import__("/@id/plugin-vue:export-helper");

__vite_ssr_exports__.default = /*#__PURE__*/__vite_ssr_import_3__.default(_sfc_main, [['ssrRender',_sfc_ssrRender],['__file',"/Users/bonn/Documents/GitHub/next-truyen/components/TheFooter.vue"]]);
}


// --------------------
// Request: /components/TheHome.vue
// Parents: 
// - /pages/index.vue?macro=true ($id_5dd70240)
// - /pages/index.vue ($id_cca58e97)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs ($id_fe38f457)
// - /node_modules/vue/server-renderer/index.js ($id_b215fa1c)
// - /components/TheHome.vue?vue&type=style&index=0&lang.scss ($id_3c70adbd)
// - /@id/plugin-vue:export-helper ($id_bbb863c1)
// - /components/HomePage/Spotlight.vue ($id_3c9ba117)
// - /components/HomePage/MangeNewUpdate.vue ($id_eef87c89)
// - /components/HomePage/MangaFeatured.vue ($id_f783c960)
// --------------------
const $id_370723ed = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __nuxt_component_0_lazy = __vite_ssr_import_0__.defineAsyncComponent(() => __vite_ssr_dynamic_import__('/components/HomePage/Spotlight.vue'))
const __nuxt_component_1_lazy = __vite_ssr_import_0__.defineAsyncComponent(() => __vite_ssr_dynamic_import__('/components/HomePage/MangeNewUpdate.vue'))
const __nuxt_component_2_lazy = __vite_ssr_import_0__.defineAsyncComponent(() => __vite_ssr_dynamic_import__('/components/HomePage/MangaFeatured.vue'))
const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs");

const _sfc_main = /* @__PURE__ */ __vite_ssr_import_1__.defineComponent({
  __name: "TheHome",
  setup(__props, { expose }) {
    expose();
    const { data: homeProps } = __vite_ssr_import_2__.useFetch("/api/home-props");
    console.log("homeProps", homeProps.value);
    const __returned__ = { homeProps };
    Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
    return __returned__;
  }
});
const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_4__ = await __vite_ssr_import__("/node_modules/vue/server-renderer/index.js");

function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_LazyHomePageSpotlight = __nuxt_component_0_lazy;
  const _component_LazyHomePageMangeNewUpdate = __nuxt_component_1_lazy;
  const _component_LazyHomePageMangaFeatured = __nuxt_component_2_lazy;
  _push(`<!--[-->`);
  _push(__vite_ssr_import_4__.ssrRenderComponent(_component_LazyHomePageSpotlight, null, null, _parent));
  _push(__vite_ssr_import_4__.ssrRenderComponent(_component_LazyHomePageMangeNewUpdate, {
    title: "C\u1EADp nh\u1EADt m\u1EDBi",
    mangas: $setup.homeProps.newManga
  }, null, _parent));
  _push(__vite_ssr_import_4__.ssrRenderComponent(_component_LazyHomePageMangaFeatured, {
    title: "Truy\u1EC7n n\u1ED5i b\u1EADt nh\u1EA5t",
    mangas: $setup.homeProps.newMangaUpdated
  }, null, _parent));
  _push(__vite_ssr_import_4__.ssrRenderComponent(_component_LazyHomePageMangaFeatured, {
    title: "Truy\u1EC7n top th\xE1ng",
    mangas: $setup.homeProps.topMonthManga
  }, null, _parent));
  _push(__vite_ssr_import_4__.ssrRenderComponent(_component_LazyHomePageMangaFeatured, {
    title: "Truy\u1EC7n top tu\u1EA7n",
    mangas: $setup.homeProps.topWeekManga
  }, null, _parent));
  _push(__vite_ssr_import_4__.ssrRenderComponent(_component_LazyHomePageMangaFeatured, {
    title: "Truy\u1EC7n top ng\xE0y",
    mangas: $setup.homeProps.topDayManga
  }, null, _parent));
  _push(__vite_ssr_import_4__.ssrRenderComponent(_component_LazyHomePageMangeNewUpdate, {
    title: "Truy\u1EC7n m\u1EDBi",
    mangas: $setup.homeProps.newManga
  }, null, _parent));
  _push(`<!--]-->`);
}
const __vite_ssr_import_5__ = await __vite_ssr_import__("/components/TheHome.vue?vue&type=style&index=0&lang.scss");

const __vite_ssr_import_6__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = __vite_ssr_import_6__.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/TheHome.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const __vite_ssr_import_7__ = await __vite_ssr_import__("/@id/plugin-vue:export-helper");

__vite_ssr_exports__.default = /* @__PURE__ */ __vite_ssr_import_7__.default(_sfc_main, [["ssrRender", _sfc_ssrRender], ["__file", "/Users/bonn/Documents/GitHub/next-truyen/components/TheHome.vue"]]);
;
}


// --------------------
// Request: /components/TheHome.vue?vue&type=style&index=0&lang.scss
// Parents: 
// - /components/TheHome.vue ($id_370723ed)
// Dependencies: 

// --------------------
const $id_3c70adbd = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
__vite_ssr_exports__.default = ".deslide-cover:before{background:linear-gradient(90deg,#202125,rgba(32,33,37,.6) 40%,rgba(32,33,37,0) 60%,rgba(32,33,37,0) 80%,#202125);z-index:1}.deslide-cover:after{background:linear-gradient(0deg,#202125,rgba(32,33,37,0) 50%,#202125);z-index:2}.deslide-cover:after,.deslide-cover:before{bottom:0;content:\"\";left:0;position:absolute;right:0;top:0}";
}


// --------------------
// Request: /components/HomePage/Spotlight.vue
// Parents: 
// - /components/TheHome.vue ($id_370723ed)
// Dependencies: 
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/swiper/vue/swiper-vue.js ($id_72e3deca)
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// - /contants/index.ts ($id_c59edb32)
// - /node_modules/vue/server-renderer/index.js ($id_b215fa1c)
// - /@id/plugin-vue:export-helper ($id_bbb863c1)
// --------------------
const $id_3c9ba117 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/index.mjs");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/swiper/vue/swiper-vue.js");

const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/swiper/swiper.esm.js");

const __vite_ssr_import_4__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_5__ = await __vite_ssr_import__("/contants/index.ts");

const _sfc_main = /* @__PURE__ */ __vite_ssr_import_1__.defineComponent({
  __name: "Spotlight",
  async setup(__props, { expose }) {
    expose();
    let __temp, __restore;
    const modules = __vite_ssr_import_4__.ref([__vite_ssr_import_3__.Autoplay, __vite_ssr_import_3__.EffectFade]);
    const autoPlaySettings = __vite_ssr_import_4__.ref({
      delay: 2500,
      disableOnInteraction: false
    });
    const backgroundImage = (spotlight) => {
      return {
        backgroundImage: `url(${spotlight.thumbnail})`
      };
    };
    const { data: spotlights } = ([__temp, __restore] = __vite_ssr_import_1__.withAsyncContext(() => __vite_ssr_import_0__.useFetch("/api/header")), __temp = await __temp, __restore(), __temp);
    const __returned__ = { modules, autoPlaySettings, backgroundImage, spotlights, Swiper: __vite_ssr_import_2__.Swiper, SwiperSlide: __vite_ssr_import_2__.SwiperSlide, MANGA_PATH_NAME: __vite_ssr_import_5__.MANGA_PATH_NAME, MANGA_PATH_READ_NAME: __vite_ssr_import_5__.MANGA_PATH_READ_NAME };
    Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
    return __returned__;
  }
});
const __vite_ssr_import_6__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_7__ = await __vite_ssr_import__("/node_modules/vue/server-renderer/index.js");

function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(__vite_ssr_import_7__.ssrRenderComponent($setup["Swiper"], __vite_ssr_import_6__.mergeProps({
    modules: $setup.modules,
    autoplay: $setup.autoPlaySettings
  }, _attrs), {
    default: __vite_ssr_import_6__.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<!--[-->`);
        __vite_ssr_import_7__.ssrRenderList($setup.spotlights, (spotlight) => {
          _push2(__vite_ssr_import_7__.ssrRenderComponent($setup["SwiperSlide"], null, {
            default: __vite_ssr_import_6__.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<div class="cursor-pointer"${_scopeId2}><figure class="deslide-cover h-[250px] w-full bg-cover bg-center bg-no-repeat blur md:h-[350px] lg:h-[450px]" style="${__vite_ssr_import_7__.ssrRenderStyle($setup.backgroundImage(spotlight))}"${_scopeId2}></figure><div class="aspect-[3/4] 0 absolute-center absolute top-1/2 right-[5%] md:right-[10%] z-10 flex h-[80%] w-[150px] -translate-y-1/2 items-center md:w-[200px] lg:w-[250px]"${_scopeId2}><div class="relative h-full w-[90%] overflow-hidden rounded-2xl magictime vanishIn"${_scopeId2}><span style="${__vite_ssr_import_7__.ssrRenderStyle({ "box-sizing": "border-box", "display": "block", "overflow": "hidden", "width": "initial", "height": "initial", "background": "none", "opacity": "1", "border": "0", "margin": "0", "padding": "0", "position": "absolute", "inset": "0" })}"${_scopeId2}><img alt="image-preview" sizes="100vw"${__vite_ssr_import_7__.ssrRenderAttr("srcset", spotlight.thumbnail)}${__vite_ssr_import_7__.ssrRenderAttr("src", spotlight.thumbnail)} decoding="async" data-nimg="fill" class="absolute inset-0 object-cover object-center" style="${__vite_ssr_import_7__.ssrRenderStyle({ "position": "absolute", "inset": "0px", "box-sizing": "border-box", "padding": "0px", "border": "none", "margin": "auto", "display": "block", "width": "0px", "height": "0px", "min-width": "100%", "max-width": "100%", "min-height": "100%", "max-height": "100%" })}"${_scopeId2}></span></div></div><div class="absolute top-12 left-5 z-40 flex h-[70%] w-[50%] flex-col space-x-4 space-y-4 font-secondary text-white md:left-[5%] md:w-[55%] md:py-4 lg:space-y-6"${_scopeId2}><a${__vite_ssr_import_7__.ssrRenderAttr("href", `/manga?slug=${spotlight.slug}`)}${_scopeId2}><h3 class="mx-4 mt-6 text-xl md:text-4xl"${_scopeId2}>${__vite_ssr_import_7__.ssrInterpolate(spotlight.newChapter)}</h3></a><a${__vite_ssr_import_7__.ssrRenderAttr("href", `/manga?slug=${spotlight.slug}`)}${_scopeId2}><h1 class="text-3xl transition-all line-clamp-1 hover:text-primary md:min-h-[30px] md:text-6xl"${_scopeId2}>${__vite_ssr_import_7__.ssrInterpolate(spotlight.name)}</h1></a><a${__vite_ssr_import_7__.ssrRenderAttr("href", `/manga?slug=${spotlight.slug}`)}${_scopeId2}><h5 class="text-sm line-clamp-3 md:min-h-[60px] md:text-2xl"${_scopeId2}>${__vite_ssr_import_7__.ssrInterpolate(spotlight.review ? spotlight.review : "")}</h5></a><ul class="hidden space-x-4 text-lg md:flex"${_scopeId2}><li class="flex w-fit max-w-[100px] items-center whitespace-nowrap rounded-xl border-[1px] border-white py-2 px-4 line-clamp-1"${_scopeId2}> Action </li><li class="flex w-fit max-w-[100px] items-center whitespace-nowrap rounded-xl border-[1px] border-white py-2 px-4 line-clamp-1"${_scopeId2}> Fantasy </li><li class="flex w-fit max-w-[100px] items-center whitespace-nowrap rounded-xl border-[1px] border-white py-2 px-4 line-clamp-1"${_scopeId2}> Manga </li><li class="flex w-fit max-w-[100px] items-center whitespace-nowrap rounded-xl border-[1px] border-white py-2 px-4 line-clamp-1"${_scopeId2}> Shounen </li><li class="flex w-fit max-w-[100px] items-center whitespace-nowrap rounded-xl border-[1px] border-white py-2 px-4 line-clamp-1"${_scopeId2}> Supernatural </li></ul><div class="flex space-x-6 text-xl md:text-2xl lg:pt-6"${_scopeId2}><a${__vite_ssr_import_7__.ssrRenderAttr("href", `${$setup.MANGA_PATH_NAME}/${$setup.MANGA_PATH_READ_NAME}/${spotlight.slug}/${spotlight?.chapters && spotlight.chapters[spotlight.chapters?.length - 1].chapterNumber}/${spotlight?.chapters && spotlight?.chapters[spotlight.chapters?.length - 1].chapterId}`)}${_scopeId2}><button class="absolute-center rounded-xl bg-primary py-3 px-5 transition-all hover:scale-110 md:w-[100px]"${_scopeId2}> \u0110\u1ECDc ngay </button></a><a${__vite_ssr_import_7__.ssrRenderAttr("href", `/manga?slug=${spotlight.slug}`)}${_scopeId2}><button class="absolute-center rounded-xl bg-white py-3 px-5 text-gray-800 transition-all hover:scale-110 md:w-[100px]"${_scopeId2}> Chi ti\u1EBFt </button></a></div></div></div>`);
              } else {
                return [
                  __vite_ssr_import_6__.createVNode("div", { class: "cursor-pointer" }, [
                    __vite_ssr_import_6__.createVNode("figure", {
                      class: "deslide-cover h-[250px] w-full bg-cover bg-center bg-no-repeat blur md:h-[350px] lg:h-[450px]",
                      style: $setup.backgroundImage(spotlight)
                    }, null, 4),
                    __vite_ssr_import_6__.createVNode("div", { class: "aspect-[3/4] 0 absolute-center absolute top-1/2 right-[5%] md:right-[10%] z-10 flex h-[80%] w-[150px] -translate-y-1/2 items-center md:w-[200px] lg:w-[250px]" }, [
                      __vite_ssr_import_6__.createVNode("div", { class: "relative h-full w-[90%] overflow-hidden rounded-2xl magictime vanishIn" }, [
                        __vite_ssr_import_6__.createVNode("span", { style: { "box-sizing": "border-box", "display": "block", "overflow": "hidden", "width": "initial", "height": "initial", "background": "none", "opacity": "1", "border": "0", "margin": "0", "padding": "0", "position": "absolute", "inset": "0" } }, [
                          __vite_ssr_import_6__.createVNode("img", {
                            alt: "image-preview",
                            sizes: "100vw",
                            srcset: spotlight.thumbnail,
                            src: spotlight.thumbnail,
                            decoding: "async",
                            "data-nimg": "fill",
                            class: "absolute inset-0 object-cover object-center",
                            style: { "position": "absolute", "inset": "0px", "box-sizing": "border-box", "padding": "0px", "border": "none", "margin": "auto", "display": "block", "width": "0px", "height": "0px", "min-width": "100%", "max-width": "100%", "min-height": "100%", "max-height": "100%" }
                          }, null, 8, ["srcset", "src"])
                        ])
                      ])
                    ]),
                    __vite_ssr_import_6__.createVNode("div", { class: "absolute top-12 left-5 z-40 flex h-[70%] w-[50%] flex-col space-x-4 space-y-4 font-secondary text-white md:left-[5%] md:w-[55%] md:py-4 lg:space-y-6" }, [
                      __vite_ssr_import_6__.createVNode("a", {
                        href: `/manga?slug=${spotlight.slug}`
                      }, [
                        __vite_ssr_import_6__.createVNode("h3", { class: "mx-4 mt-6 text-xl md:text-4xl" }, __vite_ssr_import_6__.toDisplayString(spotlight.newChapter), 1)
                      ], 8, ["href"]),
                      __vite_ssr_import_6__.createVNode("a", {
                        href: `/manga?slug=${spotlight.slug}`
                      }, [
                        __vite_ssr_import_6__.createVNode("h1", { class: "text-3xl transition-all line-clamp-1 hover:text-primary md:min-h-[30px] md:text-6xl" }, __vite_ssr_import_6__.toDisplayString(spotlight.name), 1)
                      ], 8, ["href"]),
                      __vite_ssr_import_6__.createVNode("a", {
                        href: `/manga?slug=${spotlight.slug}`
                      }, [
                        __vite_ssr_import_6__.createVNode("h5", { class: "text-sm line-clamp-3 md:min-h-[60px] md:text-2xl" }, __vite_ssr_import_6__.toDisplayString(spotlight.review ? spotlight.review : ""), 1)
                      ], 8, ["href"]),
                      __vite_ssr_import_6__.createVNode("ul", { class: "hidden space-x-4 text-lg md:flex" }, [
                        __vite_ssr_import_6__.createVNode("li", { class: "flex w-fit max-w-[100px] items-center whitespace-nowrap rounded-xl border-[1px] border-white py-2 px-4 line-clamp-1" }, " Action "),
                        __vite_ssr_import_6__.createVNode("li", { class: "flex w-fit max-w-[100px] items-center whitespace-nowrap rounded-xl border-[1px] border-white py-2 px-4 line-clamp-1" }, " Fantasy "),
                        __vite_ssr_import_6__.createVNode("li", { class: "flex w-fit max-w-[100px] items-center whitespace-nowrap rounded-xl border-[1px] border-white py-2 px-4 line-clamp-1" }, " Manga "),
                        __vite_ssr_import_6__.createVNode("li", { class: "flex w-fit max-w-[100px] items-center whitespace-nowrap rounded-xl border-[1px] border-white py-2 px-4 line-clamp-1" }, " Shounen "),
                        __vite_ssr_import_6__.createVNode("li", { class: "flex w-fit max-w-[100px] items-center whitespace-nowrap rounded-xl border-[1px] border-white py-2 px-4 line-clamp-1" }, " Supernatural ")
                      ]),
                      __vite_ssr_import_6__.createVNode("div", { class: "flex space-x-6 text-xl md:text-2xl lg:pt-6" }, [
                        __vite_ssr_import_6__.createVNode("a", {
                          href: `${$setup.MANGA_PATH_NAME}/${$setup.MANGA_PATH_READ_NAME}/${spotlight.slug}/${spotlight?.chapters && spotlight.chapters[spotlight.chapters?.length - 1].chapterNumber}/${spotlight?.chapters && spotlight?.chapters[spotlight.chapters?.length - 1].chapterId}`
                        }, [
                          __vite_ssr_import_6__.createVNode("button", { class: "absolute-center rounded-xl bg-primary py-3 px-5 transition-all hover:scale-110 md:w-[100px]" }, " \u0110\u1ECDc ngay ")
                        ], 8, ["href"]),
                        __vite_ssr_import_6__.createVNode("a", {
                          href: `/manga?slug=${spotlight.slug}`
                        }, [
                          __vite_ssr_import_6__.createVNode("button", { class: "absolute-center rounded-xl bg-white py-3 px-5 text-gray-800 transition-all hover:scale-110 md:w-[100px]" }, " Chi ti\u1EBFt ")
                        ], 8, ["href"])
                      ])
                    ])
                  ])
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
        });
        _push2(`<!--]-->`);
      } else {
        return [
          (__vite_ssr_import_6__.openBlock(true), __vite_ssr_import_6__.createBlock(__vite_ssr_import_6__.Fragment, null, __vite_ssr_import_6__.renderList($setup.spotlights, (spotlight) => {
            return __vite_ssr_import_6__.openBlock(), __vite_ssr_import_6__.createBlock($setup["SwiperSlide"], null, {
              default: __vite_ssr_import_6__.withCtx(() => [
                __vite_ssr_import_6__.createVNode("div", { class: "cursor-pointer" }, [
                  __vite_ssr_import_6__.createVNode("figure", {
                    class: "deslide-cover h-[250px] w-full bg-cover bg-center bg-no-repeat blur md:h-[350px] lg:h-[450px]",
                    style: $setup.backgroundImage(spotlight)
                  }, null, 4),
                  __vite_ssr_import_6__.createVNode("div", { class: "aspect-[3/4] 0 absolute-center absolute top-1/2 right-[5%] md:right-[10%] z-10 flex h-[80%] w-[150px] -translate-y-1/2 items-center md:w-[200px] lg:w-[250px]" }, [
                    __vite_ssr_import_6__.createVNode("div", { class: "relative h-full w-[90%] overflow-hidden rounded-2xl magictime vanishIn" }, [
                      __vite_ssr_import_6__.createVNode("span", { style: { "box-sizing": "border-box", "display": "block", "overflow": "hidden", "width": "initial", "height": "initial", "background": "none", "opacity": "1", "border": "0", "margin": "0", "padding": "0", "position": "absolute", "inset": "0" } }, [
                        __vite_ssr_import_6__.createVNode("img", {
                          alt: "image-preview",
                          sizes: "100vw",
                          srcset: spotlight.thumbnail,
                          src: spotlight.thumbnail,
                          decoding: "async",
                          "data-nimg": "fill",
                          class: "absolute inset-0 object-cover object-center",
                          style: { "position": "absolute", "inset": "0px", "box-sizing": "border-box", "padding": "0px", "border": "none", "margin": "auto", "display": "block", "width": "0px", "height": "0px", "min-width": "100%", "max-width": "100%", "min-height": "100%", "max-height": "100%" }
                        }, null, 8, ["srcset", "src"])
                      ])
                    ])
                  ]),
                  __vite_ssr_import_6__.createVNode("div", { class: "absolute top-12 left-5 z-40 flex h-[70%] w-[50%] flex-col space-x-4 space-y-4 font-secondary text-white md:left-[5%] md:w-[55%] md:py-4 lg:space-y-6" }, [
                    __vite_ssr_import_6__.createVNode("a", {
                      href: `/manga?slug=${spotlight.slug}`
                    }, [
                      __vite_ssr_import_6__.createVNode("h3", { class: "mx-4 mt-6 text-xl md:text-4xl" }, __vite_ssr_import_6__.toDisplayString(spotlight.newChapter), 1)
                    ], 8, ["href"]),
                    __vite_ssr_import_6__.createVNode("a", {
                      href: `/manga?slug=${spotlight.slug}`
                    }, [
                      __vite_ssr_import_6__.createVNode("h1", { class: "text-3xl transition-all line-clamp-1 hover:text-primary md:min-h-[30px] md:text-6xl" }, __vite_ssr_import_6__.toDisplayString(spotlight.name), 1)
                    ], 8, ["href"]),
                    __vite_ssr_import_6__.createVNode("a", {
                      href: `/manga?slug=${spotlight.slug}`
                    }, [
                      __vite_ssr_import_6__.createVNode("h5", { class: "text-sm line-clamp-3 md:min-h-[60px] md:text-2xl" }, __vite_ssr_import_6__.toDisplayString(spotlight.review ? spotlight.review : ""), 1)
                    ], 8, ["href"]),
                    __vite_ssr_import_6__.createVNode("ul", { class: "hidden space-x-4 text-lg md:flex" }, [
                      __vite_ssr_import_6__.createVNode("li", { class: "flex w-fit max-w-[100px] items-center whitespace-nowrap rounded-xl border-[1px] border-white py-2 px-4 line-clamp-1" }, " Action "),
                      __vite_ssr_import_6__.createVNode("li", { class: "flex w-fit max-w-[100px] items-center whitespace-nowrap rounded-xl border-[1px] border-white py-2 px-4 line-clamp-1" }, " Fantasy "),
                      __vite_ssr_import_6__.createVNode("li", { class: "flex w-fit max-w-[100px] items-center whitespace-nowrap rounded-xl border-[1px] border-white py-2 px-4 line-clamp-1" }, " Manga "),
                      __vite_ssr_import_6__.createVNode("li", { class: "flex w-fit max-w-[100px] items-center whitespace-nowrap rounded-xl border-[1px] border-white py-2 px-4 line-clamp-1" }, " Shounen "),
                      __vite_ssr_import_6__.createVNode("li", { class: "flex w-fit max-w-[100px] items-center whitespace-nowrap rounded-xl border-[1px] border-white py-2 px-4 line-clamp-1" }, " Supernatural ")
                    ]),
                    __vite_ssr_import_6__.createVNode("div", { class: "flex space-x-6 text-xl md:text-2xl lg:pt-6" }, [
                      __vite_ssr_import_6__.createVNode("a", {
                        href: `${$setup.MANGA_PATH_NAME}/${$setup.MANGA_PATH_READ_NAME}/${spotlight.slug}/${spotlight?.chapters && spotlight.chapters[spotlight.chapters?.length - 1].chapterNumber}/${spotlight?.chapters && spotlight?.chapters[spotlight.chapters?.length - 1].chapterId}`
                      }, [
                        __vite_ssr_import_6__.createVNode("button", { class: "absolute-center rounded-xl bg-primary py-3 px-5 transition-all hover:scale-110 md:w-[100px]" }, " \u0110\u1ECDc ngay ")
                      ], 8, ["href"]),
                      __vite_ssr_import_6__.createVNode("a", {
                        href: `/manga?slug=${spotlight.slug}`
                      }, [
                        __vite_ssr_import_6__.createVNode("button", { class: "absolute-center rounded-xl bg-white py-3 px-5 text-gray-800 transition-all hover:scale-110 md:w-[100px]" }, " Chi ti\u1EBFt ")
                      ], 8, ["href"])
                    ])
                  ])
                ])
              ]),
              _: 2
            }, 1024);
          }), 256))
        ];
      }
    }),
    _: 1
  }, _parent));
}
const __vite_ssr_import_8__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = __vite_ssr_import_8__.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/HomePage/Spotlight.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const __vite_ssr_import_9__ = await __vite_ssr_import__("/@id/plugin-vue:export-helper");

__vite_ssr_exports__.default = /* @__PURE__ */ __vite_ssr_import_9__.default(_sfc_main, [["ssrRender", _sfc_ssrRender], ["__file", "/Users/bonn/Documents/GitHub/next-truyen/components/HomePage/Spotlight.vue"]]);
;
}


// --------------------
// Request: /node_modules/swiper/vue/swiper-vue.js
// Parents: 
// - /components/HomePage/Spotlight.vue ($id_3c9ba117)
// - /components/HomePage/MangeNewUpdate.vue ($id_eef87c89)
// Dependencies: 

// --------------------
const $id_72e3deca = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/vue/swiper-vue.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/vue/swiper-vue.js\".")
  })


// --------------------
// Request: /node_modules/swiper/swiper.esm.js
// Parents: 
// - /components/HomePage/Spotlight.vue ($id_3c9ba117)
// - /components/HomePage/MangeNewUpdate.vue ($id_eef87c89)
// Dependencies: 
// - /node_modules/swiper/core/core.js ($id_413488a5)
// - /node_modules/swiper/modules/virtual/virtual.js ($id_cdb0752d)
// - /node_modules/swiper/modules/keyboard/keyboard.js ($id_b79f366d)
// - /node_modules/swiper/modules/mousewheel/mousewheel.js ($id_ff1b73b2)
// - /node_modules/swiper/modules/navigation/navigation.js ($id_3cbacc13)
// - /node_modules/swiper/modules/pagination/pagination.js ($id_9d25ff48)
// - /node_modules/swiper/modules/scrollbar/scrollbar.js ($id_b7c15973)
// - /node_modules/swiper/modules/parallax/parallax.js ($id_2bc0dda6)
// - /node_modules/swiper/modules/zoom/zoom.js ($id_b6094d1d)
// - /node_modules/swiper/modules/lazy/lazy.js ($id_27878f55)
// - /node_modules/swiper/modules/controller/controller.js ($id_224f2e59)
// - /node_modules/swiper/modules/a11y/a11y.js ($id_7fc5b0be)
// - /node_modules/swiper/modules/history/history.js ($id_f5205ad9)
// - /node_modules/swiper/modules/hash-navigation/hash-navigation.js ($id_39f6940c)
// - /node_modules/swiper/modules/autoplay/autoplay.js ($id_11d42465)
// - /node_modules/swiper/modules/thumbs/thumbs.js ($id_7f241531)
// - /node_modules/swiper/modules/free-mode/free-mode.js ($id_adae43c1)
// - /node_modules/swiper/modules/grid/grid.js ($id_be08b669)
// - /node_modules/swiper/modules/manipulation/manipulation.js ($id_9ffdf8ef)
// - /node_modules/swiper/modules/effect-fade/effect-fade.js ($id_ed5701f6)
// - /node_modules/swiper/modules/effect-cube/effect-cube.js ($id_03914d04)
// - /node_modules/swiper/modules/effect-flip/effect-flip.js ($id_24c07261)
// - /node_modules/swiper/modules/effect-coverflow/effect-coverflow.js ($id_0ea540eb)
// - /node_modules/swiper/modules/effect-creative/effect-creative.js ($id_3ab2d8b1)
// - /node_modules/swiper/modules/effect-cards/effect-cards.js ($id_597d31c2)
// --------------------
const $id_d1eb9a9e = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
/**
 * Swiper 8.2.6
 * Most modern mobile touch slider and framework with hardware accelerated transitions
 * https://swiperjs.com
 *
 * Copyright 2014-2022 Vladimir Kharlampidi
 *
 * Released under the MIT License
 *
 * Released on: June 29, 2022
 */

const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/swiper/core/core.js");

Object.defineProperty(__vite_ssr_exports__, "Swiper", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_0__.default }});
Object.defineProperty(__vite_ssr_exports__, "default", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_0__.default }});
const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/swiper/modules/virtual/virtual.js");

Object.defineProperty(__vite_ssr_exports__, "Virtual", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_1__.default }});
const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/swiper/modules/keyboard/keyboard.js");

Object.defineProperty(__vite_ssr_exports__, "Keyboard", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_2__.default }});
const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/swiper/modules/mousewheel/mousewheel.js");

Object.defineProperty(__vite_ssr_exports__, "Mousewheel", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_3__.default }});
const __vite_ssr_import_4__ = await __vite_ssr_import__("/node_modules/swiper/modules/navigation/navigation.js");

Object.defineProperty(__vite_ssr_exports__, "Navigation", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_4__.default }});
const __vite_ssr_import_5__ = await __vite_ssr_import__("/node_modules/swiper/modules/pagination/pagination.js");

Object.defineProperty(__vite_ssr_exports__, "Pagination", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_5__.default }});
const __vite_ssr_import_6__ = await __vite_ssr_import__("/node_modules/swiper/modules/scrollbar/scrollbar.js");

Object.defineProperty(__vite_ssr_exports__, "Scrollbar", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_6__.default }});
const __vite_ssr_import_7__ = await __vite_ssr_import__("/node_modules/swiper/modules/parallax/parallax.js");

Object.defineProperty(__vite_ssr_exports__, "Parallax", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_7__.default }});
const __vite_ssr_import_8__ = await __vite_ssr_import__("/node_modules/swiper/modules/zoom/zoom.js");

Object.defineProperty(__vite_ssr_exports__, "Zoom", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_8__.default }});
const __vite_ssr_import_9__ = await __vite_ssr_import__("/node_modules/swiper/modules/lazy/lazy.js");

Object.defineProperty(__vite_ssr_exports__, "Lazy", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_9__.default }});
const __vite_ssr_import_10__ = await __vite_ssr_import__("/node_modules/swiper/modules/controller/controller.js");

Object.defineProperty(__vite_ssr_exports__, "Controller", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_10__.default }});
const __vite_ssr_import_11__ = await __vite_ssr_import__("/node_modules/swiper/modules/a11y/a11y.js");

Object.defineProperty(__vite_ssr_exports__, "A11y", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_11__.default }});
const __vite_ssr_import_12__ = await __vite_ssr_import__("/node_modules/swiper/modules/history/history.js");

Object.defineProperty(__vite_ssr_exports__, "History", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_12__.default }});
const __vite_ssr_import_13__ = await __vite_ssr_import__("/node_modules/swiper/modules/hash-navigation/hash-navigation.js");

Object.defineProperty(__vite_ssr_exports__, "HashNavigation", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_13__.default }});
const __vite_ssr_import_14__ = await __vite_ssr_import__("/node_modules/swiper/modules/autoplay/autoplay.js");

Object.defineProperty(__vite_ssr_exports__, "Autoplay", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_14__.default }});
const __vite_ssr_import_15__ = await __vite_ssr_import__("/node_modules/swiper/modules/thumbs/thumbs.js");

Object.defineProperty(__vite_ssr_exports__, "Thumbs", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_15__.default }});
const __vite_ssr_import_16__ = await __vite_ssr_import__("/node_modules/swiper/modules/free-mode/free-mode.js");

Object.defineProperty(__vite_ssr_exports__, "FreeMode", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_16__.default }});
const __vite_ssr_import_17__ = await __vite_ssr_import__("/node_modules/swiper/modules/grid/grid.js");

Object.defineProperty(__vite_ssr_exports__, "Grid", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_17__.default }});
const __vite_ssr_import_18__ = await __vite_ssr_import__("/node_modules/swiper/modules/manipulation/manipulation.js");

Object.defineProperty(__vite_ssr_exports__, "Manipulation", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_18__.default }});
const __vite_ssr_import_19__ = await __vite_ssr_import__("/node_modules/swiper/modules/effect-fade/effect-fade.js");

Object.defineProperty(__vite_ssr_exports__, "EffectFade", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_19__.default }});
const __vite_ssr_import_20__ = await __vite_ssr_import__("/node_modules/swiper/modules/effect-cube/effect-cube.js");

Object.defineProperty(__vite_ssr_exports__, "EffectCube", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_20__.default }});
const __vite_ssr_import_21__ = await __vite_ssr_import__("/node_modules/swiper/modules/effect-flip/effect-flip.js");

Object.defineProperty(__vite_ssr_exports__, "EffectFlip", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_21__.default }});
const __vite_ssr_import_22__ = await __vite_ssr_import__("/node_modules/swiper/modules/effect-coverflow/effect-coverflow.js");

Object.defineProperty(__vite_ssr_exports__, "EffectCoverflow", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_22__.default }});
const __vite_ssr_import_23__ = await __vite_ssr_import__("/node_modules/swiper/modules/effect-creative/effect-creative.js");

Object.defineProperty(__vite_ssr_exports__, "EffectCreative", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_23__.default }});
const __vite_ssr_import_24__ = await __vite_ssr_import__("/node_modules/swiper/modules/effect-cards/effect-cards.js");

Object.defineProperty(__vite_ssr_exports__, "EffectCards", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_24__.default }});;
}


// --------------------
// Request: /node_modules/swiper/core/core.js
// Parents: 
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// Dependencies: 

// --------------------
const $id_413488a5 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/core/core.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/core/core.js\".")
  })


// --------------------
// Request: /node_modules/swiper/modules/virtual/virtual.js
// Parents: 
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// Dependencies: 

// --------------------
const $id_cdb0752d = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/virtual/virtual.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/virtual/virtual.js\".")
  })


// --------------------
// Request: /node_modules/swiper/modules/keyboard/keyboard.js
// Parents: 
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// Dependencies: 

// --------------------
const $id_b79f366d = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/keyboard/keyboard.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/keyboard/keyboard.js\".")
  })


// --------------------
// Request: /node_modules/swiper/modules/mousewheel/mousewheel.js
// Parents: 
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// Dependencies: 

// --------------------
const $id_ff1b73b2 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/mousewheel/mousewheel.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/mousewheel/mousewheel.js\".")
  })


// --------------------
// Request: /node_modules/swiper/modules/navigation/navigation.js
// Parents: 
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// Dependencies: 

// --------------------
const $id_3cbacc13 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/navigation/navigation.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/navigation/navigation.js\".")
  })


// --------------------
// Request: /node_modules/swiper/modules/pagination/pagination.js
// Parents: 
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// Dependencies: 

// --------------------
const $id_9d25ff48 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/pagination/pagination.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/pagination/pagination.js\".")
  })


// --------------------
// Request: /node_modules/swiper/modules/scrollbar/scrollbar.js
// Parents: 
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// Dependencies: 

// --------------------
const $id_b7c15973 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/scrollbar/scrollbar.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/scrollbar/scrollbar.js\".")
  })


// --------------------
// Request: /node_modules/swiper/modules/parallax/parallax.js
// Parents: 
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// Dependencies: 

// --------------------
const $id_2bc0dda6 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/parallax/parallax.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/parallax/parallax.js\".")
  })


// --------------------
// Request: /node_modules/swiper/modules/zoom/zoom.js
// Parents: 
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// Dependencies: 

// --------------------
const $id_b6094d1d = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/zoom/zoom.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/zoom/zoom.js\".")
  })


// --------------------
// Request: /node_modules/swiper/modules/lazy/lazy.js
// Parents: 
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// Dependencies: 

// --------------------
const $id_27878f55 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/lazy/lazy.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/lazy/lazy.js\".")
  })


// --------------------
// Request: /node_modules/swiper/modules/controller/controller.js
// Parents: 
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// Dependencies: 

// --------------------
const $id_224f2e59 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/controller/controller.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/controller/controller.js\".")
  })


// --------------------
// Request: /node_modules/swiper/modules/a11y/a11y.js
// Parents: 
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// Dependencies: 

// --------------------
const $id_7fc5b0be = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/a11y/a11y.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/a11y/a11y.js\".")
  })


// --------------------
// Request: /node_modules/swiper/modules/history/history.js
// Parents: 
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// Dependencies: 

// --------------------
const $id_f5205ad9 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/history/history.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/history/history.js\".")
  })


// --------------------
// Request: /node_modules/swiper/modules/hash-navigation/hash-navigation.js
// Parents: 
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// Dependencies: 

// --------------------
const $id_39f6940c = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/hash-navigation/hash-navigation.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/hash-navigation/hash-navigation.js\".")
  })


// --------------------
// Request: /node_modules/swiper/modules/autoplay/autoplay.js
// Parents: 
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// Dependencies: 

// --------------------
const $id_11d42465 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/autoplay/autoplay.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/autoplay/autoplay.js\".")
  })


// --------------------
// Request: /node_modules/swiper/modules/thumbs/thumbs.js
// Parents: 
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// Dependencies: 

// --------------------
const $id_7f241531 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/thumbs/thumbs.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/thumbs/thumbs.js\".")
  })


// --------------------
// Request: /node_modules/swiper/modules/free-mode/free-mode.js
// Parents: 
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// Dependencies: 

// --------------------
const $id_adae43c1 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/free-mode/free-mode.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/free-mode/free-mode.js\".")
  })


// --------------------
// Request: /node_modules/swiper/modules/grid/grid.js
// Parents: 
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// Dependencies: 

// --------------------
const $id_be08b669 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/grid/grid.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/grid/grid.js\".")
  })


// --------------------
// Request: /node_modules/swiper/modules/manipulation/manipulation.js
// Parents: 
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// Dependencies: 

// --------------------
const $id_9ffdf8ef = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/manipulation/manipulation.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/manipulation/manipulation.js\".")
  })


// --------------------
// Request: /node_modules/swiper/modules/effect-fade/effect-fade.js
// Parents: 
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// Dependencies: 

// --------------------
const $id_ed5701f6 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/effect-fade/effect-fade.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/effect-fade/effect-fade.js\".")
  })


// --------------------
// Request: /node_modules/swiper/modules/effect-cube/effect-cube.js
// Parents: 
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// Dependencies: 

// --------------------
const $id_03914d04 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/effect-cube/effect-cube.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/effect-cube/effect-cube.js\".")
  })


// --------------------
// Request: /node_modules/swiper/modules/effect-flip/effect-flip.js
// Parents: 
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// Dependencies: 

// --------------------
const $id_24c07261 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/effect-flip/effect-flip.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/effect-flip/effect-flip.js\".")
  })


// --------------------
// Request: /node_modules/swiper/modules/effect-coverflow/effect-coverflow.js
// Parents: 
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// Dependencies: 

// --------------------
const $id_0ea540eb = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/effect-coverflow/effect-coverflow.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/effect-coverflow/effect-coverflow.js\".")
  })


// --------------------
// Request: /node_modules/swiper/modules/effect-creative/effect-creative.js
// Parents: 
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// Dependencies: 

// --------------------
const $id_3ab2d8b1 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/effect-creative/effect-creative.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/effect-creative/effect-creative.js\".")
  })


// --------------------
// Request: /node_modules/swiper/modules/effect-cards/effect-cards.js
// Parents: 
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// Dependencies: 

// --------------------
const $id_597d31c2 = (global, module, _, exports, importMeta, ssrImport, ssrDynamicImport, ssrExportAll) =>
import("file:///Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/effect-cards/effect-cards.js")
  .then(r => {
    if (r.default && r.default.__esModule)
      r = r.default
    exports.default = r.default
    ssrExportAll(r)
  })
  .catch(e => {
    console.error(e)
    throw new Error("[vite dev] Error loading external \"/Users/bonn/Documents/GitHub/next-truyen/node_modules/swiper/modules/effect-cards/effect-cards.js\".")
  })


// --------------------
// Request: /contants/index.ts
// Parents: 
// - /components/HomePage/Spotlight.vue ($id_3c9ba117)
// - /pages/manga/index.vue?macro=true ($id_811fac0c)
// - /pages/manga/index.vue ($id_f3f97c4e)
// Dependencies: 

// --------------------
const $id_c59edb32 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const REVALIDATE_TIME = 3 * 60 * 60;
Object.defineProperty(__vite_ssr_exports__, "REVALIDATE_TIME", { enumerable: true, configurable: true, get(){ return REVALIDATE_TIME }});
const SourceCollection = {
  nt: "http://www.nettruyenco.com"
};
Object.defineProperty(__vite_ssr_exports__, "SourceCollection", { enumerable: true, configurable: true, get(){ return SourceCollection }});
const SourceParams = {
  netTruyen: "nt"
};
Object.defineProperty(__vite_ssr_exports__, "SourceParams", { enumerable: true, configurable: true, get(){ return SourceParams }});
const MANGA_PATH_NAME = "manga";
Object.defineProperty(__vite_ssr_exports__, "MANGA_PATH_NAME", { enumerable: true, configurable: true, get(){ return MANGA_PATH_NAME }});
const MANGA_PATH_READ_NAME = "read";
Object.defineProperty(__vite_ssr_exports__, "MANGA_PATH_READ_NAME", { enumerable: true, configurable: true, get(){ return MANGA_PATH_READ_NAME }});
;
}


// --------------------
// Request: /components/HomePage/MangeNewUpdate.vue
// Parents: 
// - /components/TheHome.vue ($id_370723ed)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/swiper/vue/swiper-vue.js ($id_72e3deca)
// - /node_modules/swiper/swiper.esm.js ($id_d1eb9a9e)
// - /node_modules/vue/server-renderer/index.js ($id_b215fa1c)
// - /components/HomePage/MangeNewUpdate.vue?vue&type=style&index=0&scoped=true&lang.scss ($id_dfb59d3e)
// - /@id/plugin-vue:export-helper ($id_bbb863c1)
// --------------------
const $id_eef87c89 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/swiper/vue/swiper-vue.js");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/swiper/swiper.esm.js");

const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_main = /* @__PURE__ */ __vite_ssr_import_0__.defineComponent({
  __name: "MangeNewUpdate",
  props: {
    mangas: Array
  },
  setup(__props, { expose }) {
    expose();
    const modules = __vite_ssr_import_3__.ref([__vite_ssr_import_2__.Pagination]);
    const __returned__ = { modules, Swiper: __vite_ssr_import_1__.Swiper, SwiperSlide: __vite_ssr_import_1__.SwiperSlide };
    Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
    return __returned__;
  }
});
const __vite_ssr_import_4__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_5__ = await __vite_ssr_import__("/node_modules/vue/server-renderer/index.js");

function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<section${__vite_ssr_import_5__.ssrRenderAttrs(__vite_ssr_import_4__.mergeProps({ class: "w-[90%] mx-auto w-max-[1300px] mt-6 overflow-x-hidden" }, _attrs))} data-v-9bf7f932><h2 class="mt-4 flex select-none items-center font-secondary text-3xl text-white hover:cursor-pointer md:text-4xl lg:text-5xl" data-v-9bf7f932><div class="flex items-center transition-all hover:text-primary" data-v-9bf7f932><a href="/browse?view=newComic" data-v-9bf7f932>M\u1EDBi c\u1EADp nh\u1EADt</a><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="h-8 w-8 lg:h-10 lg:w-10" data-v-9bf7f932><path stroke-linecap="round" stroke-linejoin="round" d="M9 5l7 7-7 7" data-v-9bf7f932></path></svg></div></h2><div class="mt-4 hover:cursor-grab lg:mt-6" data-v-9bf7f932><div class="swiper swiper-initialized swiper-horizontal swiper-ios section-swiper" data-v-9bf7f932>`);
  _push(__vite_ssr_import_5__.ssrRenderComponent($setup["Swiper"], {
    "slides-per-view": "auto",
    pagination: true,
    "space-between": 20,
    modules: $setup.modules,
    style: { "transform": "translate3d(0px, 0px, 0px)", "padding-bottom": "50px" }
  }, {
    default: __vite_ssr_import_4__.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<!--[-->`);
        __vite_ssr_import_5__.ssrRenderList($props.mangas.slice(0, 15), (manga) => {
          _push2(__vite_ssr_import_5__.ssrRenderComponent($setup["SwiperSlide"], null, {
            default: __vite_ssr_import_4__.withCtx((_2, _push3, _parent3, _scopeId2) => {
              if (_push3) {
                _push3(`<div class="aspect-h-4 aspect-w-3 rounded-xl" data-v-9bf7f932${_scopeId2}><a href="/manga/details/vo-luyen-dinh-phong-17696?src=nt" data-v-9bf7f932${_scopeId2}><span style="${__vite_ssr_import_5__.ssrRenderStyle({ "box-sizing": "border-box", "display": "block", "overflow": "hidden", "width": "initial", "height": "initial", "background": "none", "opacity": "1", "border": "0", "margin": "0", "padding": "0", "position": "absolute", "inset": "0" })}" data-v-9bf7f932${_scopeId2}><img alt="manga-thumbnail z-50" sizes="100vw"${__vite_ssr_import_5__.ssrRenderAttr("srcset", manga.thumbnail)}${__vite_ssr_import_5__.ssrRenderAttr("src", manga.thumbnail)} decoding="async" data-nimg="fill" class="absolute inset-0 rounded-xl object-cover object-center" style="${__vite_ssr_import_5__.ssrRenderStyle({ "position": "absolute", "inset": "0", "box-sizing": "border-box", "padding": "0", "border": "none", "margin": "auto", "display": "block", "width": "0", "height": "0", "min-width": "100%", "max-width": "100%", "min-height": "100%", "max-height": "100%" })}" data-v-9bf7f932${_scopeId2}></span></a><span class="absolute top-2 left-2 h-fit w-fit rounded-xl bg-white bg-opacity-40 px-4 py-2 text-base backdrop-blur-md md:text-xl lg:text-3xl" data-v-9bf7f932${_scopeId2}> Chapter ${__vite_ssr_import_5__.ssrInterpolate(manga.chapter)}</span></div><a href="/manga/details/vo-luyen-dinh-phong-17696?src=nt" data-v-9bf7f932${_scopeId2}><h2 class="my-2 select-none text-xl text-white transition-all line-clamp-1 hover:text-primary md:text-2xl" data-v-9bf7f932${_scopeId2}>${__vite_ssr_import_5__.ssrInterpolate(manga.name)}</h2></a>`);
              } else {
                return [
                  __vite_ssr_import_4__.createVNode("div", { class: "aspect-h-4 aspect-w-3 rounded-xl" }, [
                    __vite_ssr_import_4__.createVNode("a", { href: "/manga/details/vo-luyen-dinh-phong-17696?src=nt" }, [
                      __vite_ssr_import_4__.createVNode("span", { style: { "box-sizing": "border-box", "display": "block", "overflow": "hidden", "width": "initial", "height": "initial", "background": "none", "opacity": "1", "border": "0", "margin": "0", "padding": "0", "position": "absolute", "inset": "0" } }, [
                        __vite_ssr_import_4__.createVNode("img", {
                          alt: "manga-thumbnail z-50",
                          sizes: "100vw",
                          srcset: manga.thumbnail,
                          src: manga.thumbnail,
                          decoding: "async",
                          "data-nimg": "fill",
                          class: "absolute inset-0 rounded-xl object-cover object-center",
                          style: { "position": "absolute", "inset": "0", "box-sizing": "border-box", "padding": "0", "border": "none", "margin": "auto", "display": "block", "width": "0", "height": "0", "min-width": "100%", "max-width": "100%", "min-height": "100%", "max-height": "100%" }
                        }, null, 8, ["srcset", "src"])
                      ])
                    ]),
                    __vite_ssr_import_4__.createVNode("span", { class: "absolute top-2 left-2 h-fit w-fit rounded-xl bg-white bg-opacity-40 px-4 py-2 text-base backdrop-blur-md md:text-xl lg:text-3xl" }, " Chapter " + __vite_ssr_import_4__.toDisplayString(manga.chapter), 1)
                  ]),
                  __vite_ssr_import_4__.createVNode("a", { href: "/manga/details/vo-luyen-dinh-phong-17696?src=nt" }, [
                    __vite_ssr_import_4__.createVNode("h2", { class: "my-2 select-none text-xl text-white transition-all line-clamp-1 hover:text-primary md:text-2xl" }, __vite_ssr_import_4__.toDisplayString(manga.name), 1)
                  ])
                ];
              }
            }),
            _: 2
          }, _parent2, _scopeId));
        });
        _push2(`<!--]-->`);
      } else {
        return [
          (__vite_ssr_import_4__.openBlock(true), __vite_ssr_import_4__.createBlock(__vite_ssr_import_4__.Fragment, null, __vite_ssr_import_4__.renderList($props.mangas.slice(0, 15), (manga) => {
            return __vite_ssr_import_4__.openBlock(), __vite_ssr_import_4__.createBlock($setup["SwiperSlide"], null, {
              default: __vite_ssr_import_4__.withCtx(() => [
                __vite_ssr_import_4__.createVNode("div", { class: "aspect-h-4 aspect-w-3 rounded-xl" }, [
                  __vite_ssr_import_4__.createVNode("a", { href: "/manga/details/vo-luyen-dinh-phong-17696?src=nt" }, [
                    __vite_ssr_import_4__.createVNode("span", { style: { "box-sizing": "border-box", "display": "block", "overflow": "hidden", "width": "initial", "height": "initial", "background": "none", "opacity": "1", "border": "0", "margin": "0", "padding": "0", "position": "absolute", "inset": "0" } }, [
                      __vite_ssr_import_4__.createVNode("img", {
                        alt: "manga-thumbnail z-50",
                        sizes: "100vw",
                        srcset: manga.thumbnail,
                        src: manga.thumbnail,
                        decoding: "async",
                        "data-nimg": "fill",
                        class: "absolute inset-0 rounded-xl object-cover object-center",
                        style: { "position": "absolute", "inset": "0", "box-sizing": "border-box", "padding": "0", "border": "none", "margin": "auto", "display": "block", "width": "0", "height": "0", "min-width": "100%", "max-width": "100%", "min-height": "100%", "max-height": "100%" }
                      }, null, 8, ["srcset", "src"])
                    ])
                  ]),
                  __vite_ssr_import_4__.createVNode("span", { class: "absolute top-2 left-2 h-fit w-fit rounded-xl bg-white bg-opacity-40 px-4 py-2 text-base backdrop-blur-md md:text-xl lg:text-3xl" }, " Chapter " + __vite_ssr_import_4__.toDisplayString(manga.chapter), 1)
                ]),
                __vite_ssr_import_4__.createVNode("a", { href: "/manga/details/vo-luyen-dinh-phong-17696?src=nt" }, [
                  __vite_ssr_import_4__.createVNode("h2", { class: "my-2 select-none text-xl text-white transition-all line-clamp-1 hover:text-primary md:text-2xl" }, __vite_ssr_import_4__.toDisplayString(manga.name), 1)
                ])
              ]),
              _: 2
            }, 1024);
          }), 256))
        ];
      }
    }),
    _: 1
  }, _parent));
  _push(`</div></div></section>`);
}
const __vite_ssr_import_6__ = await __vite_ssr_import__("/components/HomePage/MangeNewUpdate.vue?vue&type=style&index=0&scoped=true&lang.scss");

const __vite_ssr_import_7__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = __vite_ssr_import_7__.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/HomePage/MangeNewUpdate.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const __vite_ssr_import_8__ = await __vite_ssr_import__("/@id/plugin-vue:export-helper");

__vite_ssr_exports__.default = /* @__PURE__ */ __vite_ssr_import_8__.default(_sfc_main, [["ssrRender", _sfc_ssrRender], ["__scopeId", "data-v-9bf7f932"], ["__file", "/Users/bonn/Documents/GitHub/next-truyen/components/HomePage/MangeNewUpdate.vue"]]);
;
}


// --------------------
// Request: /components/HomePage/MangeNewUpdate.vue?vue&type=style&index=0&scoped=true&lang.scss
// Parents: 
// - /components/HomePage/MangeNewUpdate.vue ($id_eef87c89)
// Dependencies: 

// --------------------
const $id_dfb59d3e = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
__vite_ssr_exports__.default = ".swiper-slide[data-v-9bf7f932]{width:30%}";
}


// --------------------
// Request: /components/HomePage/MangaFeatured.vue
// Parents: 
// - /components/TheHome.vue ($id_370723ed)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/vue/server-renderer/index.js ($id_b215fa1c)
// - /@id/plugin-vue:export-helper ($id_bbb863c1)
// --------------------
const $id_f783c960 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_main = /* @__PURE__ */ __vite_ssr_import_0__.defineComponent({
  __name: "MangaFeatured",
  props: {
    title: String,
    mangas: {
      type: Array,
      default: () => []
    }
  },
  setup(__props, { expose }) {
    expose();
    const __returned__ = {};
    Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
    return __returned__;
  }
});
const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/vue/server-renderer/index.js");

function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<section${__vite_ssr_import_2__.ssrRenderAttrs(__vite_ssr_import_1__.mergeProps({ class: "w-[90%] mx-auto min-w-[333px] w-max-[1300px] mt-6 overflow-x-hidden" }, _attrs))}><div class="grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-4"><div class="w-full rounded-xl bg-deep-black pb-4 lg:my-4"><h2 class="my-6 whitespace-nowrap text-center font-secondary text-3xl text-white lg:text-[160%]">${__vite_ssr_import_2__.ssrInterpolate($props.title)}</h2><ul class="w-full space-y-4 overflow-hidden text-white"><!--[-->`);
  __vite_ssr_import_2__.ssrRenderList($props.mangas.slice(0, 5), (manga) => {
    _push(`<li class="flex w-full px-4 py-2 odd:bg-highlight/40"><a${__vite_ssr_import_2__.ssrRenderAttr("href", `/manga?slug=${manga.slug}`)}><figure class="relative h-[80px] min-h-[80px] w-[60px] min-w-[60px] overflow-hidden rounded-xl"><span style="${__vite_ssr_import_2__.ssrRenderStyle({ "box-sizing": "border-box", "display": "block", "overflow": "hidden", "width": "initial", "height": "initial", "background": "none", "opacity": "1", "border": "0px", "margin": "0px", "padding": "0px", "position": "absolute", "inset": "0px" })}"><img alt="img-preview"${__vite_ssr_import_2__.ssrRenderAttr("src", manga.thumbnail)} decoding="async" data-nimg="fill" class="aspect-w-3 aspect-h-4 absolute object-cover object-center" sizes="100vw"${__vite_ssr_import_2__.ssrRenderAttr("srcset", manga.thumbnail)} style="${__vite_ssr_import_2__.ssrRenderStyle({ "position": "absolute", "inset": "0px", "box-sizing": "border-box", "padding": "0px", "border": "none", "margin": "auto", "display": "block", "width": "0px", "height": "0px", "min-width": "100%", "max-width": "100%", "min-height": "100%", "max-height": "100%" })}"></span></figure></a><div class="flex w-full flex-col justify-center space-y-2 pl-4"><a${__vite_ssr_import_2__.ssrRenderAttr("href", `/manga?slug=${manga.slug}`)}><h3 class="font-secondary text-2xl font-semibold transition-all line-clamp-1 hover:cursor-pointer hover:text-primary md:text-3xl">${__vite_ssr_import_2__.ssrInterpolate(manga.name)}</h3></a><h4 class="text-lg">Chapter 205</h4><ul class="flex items-center text-base line-clamp-1 lg:text-xl"><!--[-->`);
    __vite_ssr_import_2__.ssrRenderList(manga.genres.slice(0, 4), (genre, index) => {
      _push(`<li class="inline-block"><span>${__vite_ssr_import_2__.ssrInterpolate(genre)}</span><span>`);
      if (index !== 3) {
        _push(`<svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 16 16" class="inline-block" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M8 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z"></path></svg>`);
      } else {
        _push(`<!---->`);
      }
      _push(`</span></li>`);
    });
    _push(`<!--]--></ul></div></li>`);
  });
  _push(`<!--]--><li class="flex w-full items-center justify-center rounded-xl py-4 px-4 transition-all hover:cursor-pointer hover:bg-highlight"><button class="lg:text-3xl"><a href="/browse?comics=manga-112&amp;view=all">Xem th\xEAm</a></button><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="h-8 w-8"><path stroke-linecap="round" stroke-linejoin="round" d="M9 5l7 7-7 7"></path></svg></li></ul></div></div></section>`);
}
const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = __vite_ssr_import_3__.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/HomePage/MangaFeatured.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const __vite_ssr_import_4__ = await __vite_ssr_import__("/@id/plugin-vue:export-helper");

__vite_ssr_exports__.default = /* @__PURE__ */ __vite_ssr_import_4__.default(_sfc_main, [["ssrRender", _sfc_ssrRender], ["__file", "/Users/bonn/Documents/GitHub/next-truyen/components/HomePage/MangaFeatured.vue"]]);
;
}


// --------------------
// Request: /pages/manga/index.vue?macro=true
// Parents: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/routes.mjs ($id_d2568f6b)
// Dependencies: 
// - /node_modules/nuxt/dist/app/components/layout.mjs ($id_39003883)
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs ($id_fe38f457)
// - /contants/index.ts ($id_c59edb32)
// - /node_modules/vue/server-renderer/index.js ($id_b215fa1c)
// - /@id/plugin-vue:export-helper ($id_bbb863c1)
// - /components/Manga/Review.vue ($id_4f57d685)
// - /components/Manga/Chaplist.vue ($id_49b3b6a3)
// --------------------
const $id_811fac0c = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/components/layout.mjs");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __nuxt_component_1_lazy = __vite_ssr_import_1__.defineAsyncComponent(() => __vite_ssr_dynamic_import__('/components/Manga/Review.vue'))
const __nuxt_component_2_lazy = __vite_ssr_import_1__.defineAsyncComponent(() => __vite_ssr_dynamic_import__('/components/Manga/Chaplist.vue'))
const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/index.mjs");

const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_4__ = await __vite_ssr_import__("/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs");

const __vite_ssr_import_5__ = await __vite_ssr_import__("/contants/index.ts");

const _sfc_main = /* @__PURE__ */ __vite_ssr_import_3__.defineComponent({
  __name: "index",
  setup(__props, { expose }) {
    expose();
    const route = __vite_ssr_import_4__.useRoute();
    const { slug } = route.query;
    const url = `/api/comic?slug=${slug}&source=${__vite_ssr_import_5__.SourceParams.netTruyen}`;
    const { data: comic } = __vite_ssr_import_2__.useLazyFetch(url);
    const __returned__ = { route, slug, url, comic };
    Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
    return __returned__;
  }
});
const __vite_ssr_import_6__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_7__ = await __vite_ssr_import__("/node_modules/vue/server-renderer/index.js");

function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_NuxtLayout = __vite_ssr_import_0__.default;
  const _component_LazyMangaReview = __nuxt_component_1_lazy;
  const _component_LazyMangaChaplist = __nuxt_component_2_lazy;
  _push(__vite_ssr_import_7__.ssrRenderComponent(_component_NuxtLayout, _attrs, {
    default: __vite_ssr_import_6__.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex h-fit flex-col" style="${__vite_ssr_import_7__.ssrRenderStyle({ "height": "auto" })}"${_scopeId}><div class="absolute inset-0 z-0 h-[35%] w-full lg:h-[45%]"${_scopeId}><figure class="deslide-cover"${_scopeId}><span style="${__vite_ssr_import_7__.ssrRenderStyle({ "box-sizing": "border-box", "display": "block", "overflow": "hidden", "width": "initial", "height": "initial", "background": "none", "opacity": "1", "border": "0px", "margin": "0px", "padding": "0px", "position": "absolute", "inset": "0px" })}"${_scopeId}><img alt="comic-banner" src="https://kyotomanga.live/_next/image?url=https%3A%2F%2Fst.nettruyenco.com%2Fdata%2Fcomics%2F131%2Fbao-boi-cua-lao-dai-da-xuyen-khong-tro-v-5719.jpg&amp;w=3840&amp;q=75" decoding="async" data-nimg="fill" class="count={10} object-fit absolute h-full w-full bg-cover bg-top bg-no-repeat object-cover blur" sizes="100vw" srcset="https://kyotomanga.live/_next/image?url=https%3A%2F%2Fst.nettruyenco.com%2Fdata%2Fcomics%2F131%2Fbao-boi-cua-lao-dai-da-xuyen-khong-tro-v-5719.jpg&amp;w=3840&amp;q=75" style="${__vite_ssr_import_7__.ssrRenderStyle({ "position": "absolute", "inset": "0px", "box-sizing": "border-box", "padding": "0px", "border": "none", "margin": "auto", "display": "block", "width": "0px", "height": "0px", "min-width": "100%", "max-width": "100%", "min-height": "100%", "max-height": "100%" })}"${_scopeId}></span></figure></div><div class="z-10 mx-auto w-[85%] pt-32"${_scopeId}><section class="h-fit w-full"${_scopeId}><div class="flex h-full w-full flex-col items-center overflow-x-hidden md:flex-row md:items-start"${_scopeId}><div class="mt-4 w-[50%] md:w-[250px] md:min-w-[250px]"${_scopeId}><figure class="aspect-w-3 aspect-h-5 relative rounded-2xl"${_scopeId}><span style="${__vite_ssr_import_7__.ssrRenderStyle({ "box-sizing": "border-box", "display": "block", "overflow": "hidden", "width": "initial", "height": "initial", "background": "none", "opacity": "1", "border": "0px", "margin": "0px", "padding": "0px", "position": "absolute", "inset": "0px" })}"${_scopeId}><img alt="manga-thumbnail" sizes="100vw"${__vite_ssr_import_7__.ssrRenderAttr("srcset", $setup.comic.data.thumbnail)}${__vite_ssr_import_7__.ssrRenderAttr("src", $setup.comic.data.thumbnail)} decoding="async" data-nimg="fill" class="absolute inset-0 rounded-2xl object-cover object-center" style="${__vite_ssr_import_7__.ssrRenderStyle({ "position": "absolute", "inset": "0px", "box-sizing": "border-box", "padding": "0px", "border": "none", "margin": "auto", "display": "block", "width": "0px", "height": "0px", "min-width": "100%", "max-width": "100%", "min-height": "100%", "max-height": "100%" })}"${_scopeId}></span></figure></div><div class="flex h-full w-full flex-col justify-center p-4 text-white md:min-h-[430px] lg:ml-4"${_scopeId}><div class="w-full space-y-4 text-center md:ml-2 md:text-left lg:w-[80%]"${_scopeId}><h1 class="font-secondary font-bold leading-none text-[6.5vw] md:text-[5.5vw] lg:text-[3.5vw]"${_scopeId}>${__vite_ssr_import_7__.ssrInterpolate($setup.comic.data.title)}</h1><h2 class="text-[3vw] md:min-h-[28px] md:text-[2vw] lg:text-[1.2vw]"${_scopeId}></h2><h3 class="text-center text-[3vw] md:text-left md:text-[2vw] lg:text-[1.1vw]"${_scopeId}>${__vite_ssr_import_7__.ssrInterpolate($setup.comic.data.author)}</h3><h4 class="flex items-center justify-center gap-4 md:justify-start"${_scopeId}><span class="block h-3 w-3 rounded-full bg-green-500"${_scopeId}></span> ${__vite_ssr_import_7__.ssrInterpolate($setup.comic.data.status)}</h4></div><div class="mt-4 flex flex-col-reverse gap-2 md:flex-col"${_scopeId}><ul class="my-4 flex flex-wrap items-center gap-4"${_scopeId}><h3 class="px-2 py-2"${_scopeId}>Th\u1EC3 lo\u1EA1i:</h3><!--[-->`);
        __vite_ssr_import_7__.ssrRenderList($setup.comic.data.genres, (genre) => {
          _push2(`<li class="rounded-xl bg-highlight px-4 py-2"${_scopeId}><a href="/browse?genres=mystery"${_scopeId}>${__vite_ssr_import_7__.ssrInterpolate(genre.genreTitle)}</a></li>`);
        });
        _push2(`<!--]--></ul><div class="flex h-[150px] w-full flex-col items-center gap-6 md:flex-row md:items-start"${_scopeId}><a${__vite_ssr_import_7__.ssrRenderAttr("href", `/manga/read/${$setup.slug}/${$setup.comic.data.chapterList[0].chapterNumber}/${$setup.comic.data.chapterList[0].chapterId}`)}${_scopeId}><button class="pulse-effect-primary absolute-center h-[50px] w-[150px] gap-3 rounded-2xl bg-primary transition-all hover:scale-[110%]"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="h-8 w-8"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"${_scopeId}></path></svg> \u0110\u1ECDc ngay </button></a><a href="/manga/read/nhat-niem-vinh-hang-20674/63.5/872343"${_scopeId}><button class="pulse-effect-secondary absolute-center h-[50px] w-[150px] gap-3 rounded-2xl bg-white text-gray-800 transition-all hover:scale-[110%]"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="h-8 w-8 text-primary"${_scopeId}><path fill-rule="evenodd" d="M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z" clip-rule="evenodd"${_scopeId}></path></svg> Chap m\u1EDBi nh\u1EA5t </button></a><button class="shine-effect absolute-center bg-hight-light h-[50px] w-[50px] rounded-xl transition-all hover:text-primary"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="h-8 w-8"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z"${_scopeId}></path></svg></button></div></div></div></div></section>`);
        _push2(__vite_ssr_import_7__.ssrRenderComponent(_component_LazyMangaReview, {
          review: $setup.comic.data.review
        }, null, _parent2, _scopeId));
        _push2(__vite_ssr_import_7__.ssrRenderComponent(_component_LazyMangaChaplist, {
          chapterList: $setup.comic.data.chapterList
        }, null, _parent2, _scopeId));
        _push2(`</div></div>`);
      } else {
        return [
          __vite_ssr_import_6__.createVNode("div", {
            class: "flex h-fit flex-col",
            style: { "height": "auto" }
          }, [
            __vite_ssr_import_6__.createVNode("div", { class: "absolute inset-0 z-0 h-[35%] w-full lg:h-[45%]" }, [
              __vite_ssr_import_6__.createVNode("figure", { class: "deslide-cover" }, [
                __vite_ssr_import_6__.createVNode("span", { style: { "box-sizing": "border-box", "display": "block", "overflow": "hidden", "width": "initial", "height": "initial", "background": "none", "opacity": "1", "border": "0px", "margin": "0px", "padding": "0px", "position": "absolute", "inset": "0px" } }, [
                  __vite_ssr_import_6__.createVNode("img", {
                    alt: "comic-banner",
                    src: "https://kyotomanga.live/_next/image?url=https%3A%2F%2Fst.nettruyenco.com%2Fdata%2Fcomics%2F131%2Fbao-boi-cua-lao-dai-da-xuyen-khong-tro-v-5719.jpg&w=3840&q=75",
                    decoding: "async",
                    "data-nimg": "fill",
                    class: "count={10} object-fit absolute h-full w-full bg-cover bg-top bg-no-repeat object-cover blur",
                    sizes: "100vw",
                    srcset: "https://kyotomanga.live/_next/image?url=https%3A%2F%2Fst.nettruyenco.com%2Fdata%2Fcomics%2F131%2Fbao-boi-cua-lao-dai-da-xuyen-khong-tro-v-5719.jpg&w=3840&q=75",
                    style: { "position": "absolute", "inset": "0px", "box-sizing": "border-box", "padding": "0px", "border": "none", "margin": "auto", "display": "block", "width": "0px", "height": "0px", "min-width": "100%", "max-width": "100%", "min-height": "100%", "max-height": "100%" }
                  })
                ])
              ])
            ]),
            __vite_ssr_import_6__.createVNode("div", { class: "z-10 mx-auto w-[85%] pt-32" }, [
              __vite_ssr_import_6__.createVNode("section", { class: "h-fit w-full" }, [
                __vite_ssr_import_6__.createVNode("div", { class: "flex h-full w-full flex-col items-center overflow-x-hidden md:flex-row md:items-start" }, [
                  __vite_ssr_import_6__.createVNode("div", { class: "mt-4 w-[50%] md:w-[250px] md:min-w-[250px]" }, [
                    __vite_ssr_import_6__.createVNode("figure", { class: "aspect-w-3 aspect-h-5 relative rounded-2xl" }, [
                      __vite_ssr_import_6__.createVNode("span", { style: { "box-sizing": "border-box", "display": "block", "overflow": "hidden", "width": "initial", "height": "initial", "background": "none", "opacity": "1", "border": "0px", "margin": "0px", "padding": "0px", "position": "absolute", "inset": "0px" } }, [
                        __vite_ssr_import_6__.createVNode("img", {
                          alt: "manga-thumbnail",
                          sizes: "100vw",
                          srcset: $setup.comic.data.thumbnail,
                          src: $setup.comic.data.thumbnail,
                          decoding: "async",
                          "data-nimg": "fill",
                          class: "absolute inset-0 rounded-2xl object-cover object-center",
                          style: { "position": "absolute", "inset": "0px", "box-sizing": "border-box", "padding": "0px", "border": "none", "margin": "auto", "display": "block", "width": "0px", "height": "0px", "min-width": "100%", "max-width": "100%", "min-height": "100%", "max-height": "100%" }
                        }, null, 8, ["srcset", "src"])
                      ])
                    ])
                  ]),
                  __vite_ssr_import_6__.createVNode("div", { class: "flex h-full w-full flex-col justify-center p-4 text-white md:min-h-[430px] lg:ml-4" }, [
                    __vite_ssr_import_6__.createVNode("div", { class: "w-full space-y-4 text-center md:ml-2 md:text-left lg:w-[80%]" }, [
                      __vite_ssr_import_6__.createVNode("h1", { class: "font-secondary font-bold leading-none text-[6.5vw] md:text-[5.5vw] lg:text-[3.5vw]" }, __vite_ssr_import_6__.toDisplayString($setup.comic.data.title), 1),
                      __vite_ssr_import_6__.createVNode("h2", { class: "text-[3vw] md:min-h-[28px] md:text-[2vw] lg:text-[1.2vw]" }),
                      __vite_ssr_import_6__.createVNode("h3", { class: "text-center text-[3vw] md:text-left md:text-[2vw] lg:text-[1.1vw]" }, __vite_ssr_import_6__.toDisplayString($setup.comic.data.author), 1),
                      __vite_ssr_import_6__.createVNode("h4", { class: "flex items-center justify-center gap-4 md:justify-start" }, [
                        __vite_ssr_import_6__.createVNode("span", { class: "block h-3 w-3 rounded-full bg-green-500" }),
                        __vite_ssr_import_6__.createTextVNode(" " + __vite_ssr_import_6__.toDisplayString($setup.comic.data.status), 1)
                      ])
                    ]),
                    __vite_ssr_import_6__.createVNode("div", { class: "mt-4 flex flex-col-reverse gap-2 md:flex-col" }, [
                      __vite_ssr_import_6__.createVNode("ul", { class: "my-4 flex flex-wrap items-center gap-4" }, [
                        __vite_ssr_import_6__.createVNode("h3", { class: "px-2 py-2" }, "Th\u1EC3 lo\u1EA1i:"),
                        (__vite_ssr_import_6__.openBlock(true), __vite_ssr_import_6__.createBlock(__vite_ssr_import_6__.Fragment, null, __vite_ssr_import_6__.renderList($setup.comic.data.genres, (genre) => {
                          return __vite_ssr_import_6__.openBlock(), __vite_ssr_import_6__.createBlock("li", { class: "rounded-xl bg-highlight px-4 py-2" }, [
                            __vite_ssr_import_6__.createVNode("a", { href: "/browse?genres=mystery" }, __vite_ssr_import_6__.toDisplayString(genre.genreTitle), 1)
                          ]);
                        }), 256))
                      ]),
                      __vite_ssr_import_6__.createVNode("div", { class: "flex h-[150px] w-full flex-col items-center gap-6 md:flex-row md:items-start" }, [
                        __vite_ssr_import_6__.createVNode("a", {
                          href: `/manga/read/${$setup.slug}/${$setup.comic.data.chapterList[0].chapterNumber}/${$setup.comic.data.chapterList[0].chapterId}`
                        }, [
                          __vite_ssr_import_6__.createVNode("button", { class: "pulse-effect-primary absolute-center h-[50px] w-[150px] gap-3 rounded-2xl bg-primary transition-all hover:scale-[110%]" }, [
                            (__vite_ssr_import_6__.openBlock(), __vite_ssr_import_6__.createBlock("svg", {
                              xmlns: "http://www.w3.org/2000/svg",
                              fill: "none",
                              viewBox: "0 0 24 24",
                              "stroke-width": "2",
                              stroke: "currentColor",
                              "aria-hidden": "true",
                              class: "h-8 w-8"
                            }, [
                              __vite_ssr_import_6__.createVNode("path", {
                                "stroke-linecap": "round",
                                "stroke-linejoin": "round",
                                d: "M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"
                              })
                            ])),
                            __vite_ssr_import_6__.createTextVNode(" \u0110\u1ECDc ngay ")
                          ])
                        ], 8, ["href"]),
                        __vite_ssr_import_6__.createVNode("a", { href: "/manga/read/nhat-niem-vinh-hang-20674/63.5/872343" }, [
                          __vite_ssr_import_6__.createVNode("button", { class: "pulse-effect-secondary absolute-center h-[50px] w-[150px] gap-3 rounded-2xl bg-white text-gray-800 transition-all hover:scale-[110%]" }, [
                            (__vite_ssr_import_6__.openBlock(), __vite_ssr_import_6__.createBlock("svg", {
                              xmlns: "http://www.w3.org/2000/svg",
                              viewBox: "0 0 20 20",
                              fill: "currentColor",
                              "aria-hidden": "true",
                              class: "h-8 w-8 text-primary"
                            }, [
                              __vite_ssr_import_6__.createVNode("path", {
                                "fill-rule": "evenodd",
                                d: "M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z",
                                "clip-rule": "evenodd"
                              })
                            ])),
                            __vite_ssr_import_6__.createTextVNode(" Chap m\u1EDBi nh\u1EA5t ")
                          ])
                        ]),
                        __vite_ssr_import_6__.createVNode("button", { class: "shine-effect absolute-center bg-hight-light h-[50px] w-[50px] rounded-xl transition-all hover:text-primary" }, [
                          (__vite_ssr_import_6__.openBlock(), __vite_ssr_import_6__.createBlock("svg", {
                            xmlns: "http://www.w3.org/2000/svg",
                            fill: "none",
                            viewBox: "0 0 24 24",
                            "stroke-width": "2",
                            stroke: "currentColor",
                            "aria-hidden": "true",
                            class: "h-8 w-8"
                          }, [
                            __vite_ssr_import_6__.createVNode("path", {
                              "stroke-linecap": "round",
                              "stroke-linejoin": "round",
                              d: "M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z"
                            })
                          ]))
                        ])
                      ])
                    ])
                  ])
                ])
              ]),
              __vite_ssr_import_6__.createVNode(_component_LazyMangaReview, {
                review: $setup.comic.data.review
              }, null, 8, ["review"]),
              __vite_ssr_import_6__.createVNode(_component_LazyMangaChaplist, {
                chapterList: $setup.comic.data.chapterList
              }, null, 8, ["chapterList"])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const __vite_ssr_import_8__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = __vite_ssr_import_8__.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("pages/manga/index.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const __vite_ssr_import_9__ = await __vite_ssr_import__("/@id/plugin-vue:export-helper");

__vite_ssr_exports__.default = /* @__PURE__ */ __vite_ssr_import_9__.default(_sfc_main, [["ssrRender", _sfc_ssrRender], ["__file", "/Users/bonn/Documents/GitHub/next-truyen/pages/manga/index.vue"]]);

const meta = undefined
Object.defineProperty(__vite_ssr_exports__, "meta", { enumerable: true, configurable: true, get(){ return meta }});;
}


// --------------------
// Request: /components/Manga/Review.vue
// Parents: 
// - /pages/manga/index.vue?macro=true ($id_811fac0c)
// - /pages/manga/index.vue ($id_f3f97c4e)
// Dependencies: 
// - /node_modules/@headlessui/vue/dist/headlessui.esm.js ($id_2c13895f)
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/vue/server-renderer/index.js ($id_b215fa1c)
// - /@id/plugin-vue:export-helper ($id_bbb863c1)
// --------------------
const $id_4f57d685 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/@headlessui/vue/dist/headlessui.esm.js");



const _sfc_main = {
  __name: 'Review',
  props: {
  review: {
    type: Object,
  }
},
  setup(__props, { expose }) {
  expose();



const __returned__ = { Disclosure: __vite_ssr_import_0__.Disclosure, DisclosureButton: __vite_ssr_import_0__.DisclosureButton, DisclosurePanel: __vite_ssr_import_0__.DisclosurePanel }
Object.defineProperty(__returned__, '__isScriptSetup', { enumerable: false, value: true })
return __returned__
}

}
const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/vue/server-renderer/index.js");


function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${__vite_ssr_import_2__.ssrRenderAttrs(__vite_ssr_import_1__.mergeProps({ class: "flex-col-reverse flex" }, _attrs))}>`)
  _push(__vite_ssr_import_2__.ssrRenderComponent($setup["Disclosure"], null, {
    default: __vite_ssr_import_1__.withCtx(({ open }, _push, _parent, _scopeId) => {
      if (_push) {
        _push(__vite_ssr_import_2__.ssrRenderComponent($setup["DisclosureButton"], null, {
          default: __vite_ssr_import_1__.withCtx((_, _push, _parent, _scopeId) => {
            if (_push) {
              _push(`<button class="flex w-full flex-col items-center bg-cyan-300/0 text-white"${
                _scopeId
              }> Tóm tắt <svg class="${
                __vite_ssr_import_2__.ssrRenderClass([open ? 'rotate-180 transform' : '', "h-8 w-8"])
              }" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true"${
                _scopeId
              }><path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7"${
                _scopeId
              }></path></svg></button>`)
            } else {
              return [
                __vite_ssr_import_1__.createVNode("button", { class: "flex w-full flex-col items-center bg-cyan-300/0 text-white" }, [
                  __vite_ssr_import_1__.createTextVNode(" Tóm tắt "),
                  (__vite_ssr_import_1__.openBlock(), __vite_ssr_import_1__.createBlock("svg", {
                    class: [open ? 'rotate-180 transform' : '', "h-8 w-8"],
                    xmlns: "http://www.w3.org/2000/svg",
                    fill: "none",
                    viewBox: "0 0 24 24",
                    "stroke-width": "2",
                    stroke: "currentColor",
                    "aria-hidden": "true"
                  }, [
                    __vite_ssr_import_1__.createVNode("path", {
                      "stroke-linecap": "round",
                      "stroke-linejoin": "round",
                      d: "M19 9l-7 7-7-7"
                    })
                  ], 2 /* CLASS */))
                ])
              ]
            }
          }),
          _: 2 /* DYNAMIC */
        }, _parent, _scopeId))
        _push(__vite_ssr_import_2__.ssrRenderComponent($setup["DisclosurePanel"], { class: "transform scale-100 opacity-100" }, {
          default: __vite_ssr_import_1__.withCtx((_, _push, _parent, _scopeId) => {
            if (_push) {
              _push(`<p class="text-white"${
                _scopeId
              }>${
                __vite_ssr_import_2__.ssrInterpolate($props.review)
              }</p>`)
            } else {
              return [
                __vite_ssr_import_1__.createVNode("p", { class: "text-white" }, __vite_ssr_import_1__.toDisplayString($props.review), 1 /* TEXT */)
              ]
            }
          }),
          _: 2 /* DYNAMIC */
        }, _parent, _scopeId))
      } else {
        return [
          __vite_ssr_import_1__.createVNode($setup["DisclosureButton"], null, {
            default: __vite_ssr_import_1__.withCtx(() => [
              __vite_ssr_import_1__.createVNode("button", { class: "flex w-full flex-col items-center bg-cyan-300/0 text-white" }, [
                __vite_ssr_import_1__.createTextVNode(" Tóm tắt "),
                (__vite_ssr_import_1__.openBlock(), __vite_ssr_import_1__.createBlock("svg", {
                  class: [open ? 'rotate-180 transform' : '', "h-8 w-8"],
                  xmlns: "http://www.w3.org/2000/svg",
                  fill: "none",
                  viewBox: "0 0 24 24",
                  "stroke-width": "2",
                  stroke: "currentColor",
                  "aria-hidden": "true"
                }, [
                  __vite_ssr_import_1__.createVNode("path", {
                    "stroke-linecap": "round",
                    "stroke-linejoin": "round",
                    d: "M19 9l-7 7-7-7"
                  })
                ], 2 /* CLASS */))
              ])
            ]),
            _: 2 /* DYNAMIC */
          }, 1024 /* DYNAMIC_SLOTS */),
          __vite_ssr_import_1__.createVNode($setup["DisclosurePanel"], { class: "transform scale-100 opacity-100" }, {
            default: __vite_ssr_import_1__.withCtx(() => [
              __vite_ssr_import_1__.createVNode("p", { class: "text-white" }, __vite_ssr_import_1__.toDisplayString($props.review), 1 /* TEXT */)
            ]),
            _: 1 /* STABLE */
          })
        ]
      }
    }),
    _: 1 /* STABLE */
  }, _parent))
  _push(`</div>`)
}


const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_setup = _sfc_main.setup
_sfc_main.setup = (props, ctx) => {
  const ssrContext = __vite_ssr_import_3__.useSSRContext()
  ;(ssrContext.modules || (ssrContext.modules = new Set())).add("components/Manga/Review.vue")
  return _sfc_setup ? _sfc_setup(props, ctx) : undefined
}
const __vite_ssr_import_4__ = await __vite_ssr_import__("/@id/plugin-vue:export-helper");

__vite_ssr_exports__.default = /*#__PURE__*/__vite_ssr_import_4__.default(_sfc_main, [['ssrRender',_sfc_ssrRender],['__file',"/Users/bonn/Documents/GitHub/next-truyen/components/Manga/Review.vue"]]);
}


// --------------------
// Request: /components/Manga/Chaplist.vue
// Parents: 
// - /pages/manga/index.vue?macro=true ($id_811fac0c)
// - /pages/manga/index.vue ($id_f3f97c4e)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/vue/server-renderer/index.js ($id_b215fa1c)
// - /@id/plugin-vue:export-helper ($id_bbb863c1)
// --------------------
const $id_49b3b6a3 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_main = /* @__PURE__ */ __vite_ssr_import_0__.defineComponent({
  __name: "Chaplist",
  props: {
    chapterList: {
      type: Array
    }
  },
  setup(__props, { expose }) {
    expose();
    const props = __props;
    const __returned__ = { props };
    Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
    return __returned__;
  }
});
const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/vue/server-renderer/index.js");

function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<section${__vite_ssr_import_2__.ssrRenderAttrs(__vite_ssr_import_1__.mergeProps({ class: "h-fit w-full" }, _attrs))}><h2 class="mt-4 flex select-none items-center font-secondary text-3xl text-white hover:cursor-pointer md:text-4xl lg:text-5xl"><div class="flex items-center transition-all hover:text-primary">Danh s\xE1ch ch\u01B0\u01A1ng</div></h2><div class="my-6 flex h-fit w-full flex-col overflow-x-hidden rounded-xl bg-highlight"><div class="z-40 my-4 flex min-h-[40px] w-full items-center gap-4 text-white md:my-2"><div class="mx-4 flex h-[32px] w-[50%] items-center justify-center rounded-xl bg-[#5f5f5f] px-2 hover:bg-white/25 md:w-[30%] lg:w-[20%]"><input placeholder="\u0110i \u0111\u1EBFn ch\u01B0\u01A1ng..." type="number" min="0" class="w-full bg-transparent p-2 transition-all" value=""><button class="px-4 transition-all"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z"></path></svg></button></div><div class="relative"><button id="headlessui-listbox-button-3" type="button" aria-haspopup="true" aria-expanded="false"><div class="mr-2 flex items-center gap-1 text-lg md:text-2xl"><span>Ngu\u1ED3n: NT</span><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="animate__animated animate__faster animate__rotateIn h-8 w-8"><path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7"></path></svg></div></button></div></div><div class="animate__fadeIn animate__animated m-2 overflow-hidden text-white" style="${__vite_ssr_import_2__.ssrRenderStyle({ "height": "600px", "overflow": "scroll" })}"><!--[-->`);
  __vite_ssr_import_2__.ssrRenderList($props.chapterList, (chap, index) => {
    _push(`<button class="w-full my-1"><a class="bg-deep-black flex h-[30px] items-center justify-between rounded-lg" href="/manga/read/tham-tu-conan-4638/1096/868641"><div class="flex w-[30%] min-w-max items-center"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="mx-4 h-4 w-4"><path fill-rule="evenodd" d="M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z" clip-rule="evenodd"></path></svg><span class="inline-block overflow-hidden text-left text-lg font-bold line-clamp-1 hover:text-white max-w-[200px]">Chapter ${__vite_ssr_import_2__.ssrInterpolate(index)}</span></div><div class="flex items-center px-4"><span class="whitespace-nowrap text-lg font-extralight text-gray-300">${__vite_ssr_import_2__.ssrInterpolate(chap.updatedAt)}</span></div></a></button>`);
  });
  _push(`<!--]--></div><!--      --><!--      <div data-test-id="virtuoso-scroller" data-virtuoso-scroller="true" tabindex="0"--><!--           style="height: auto; outline: none; overflow-y: auto; position: relative;">--><!--        <div data-viewport-type="element" style="width: 100%; height: 100%; position: absolute; top: 0px;">--><!--          <div data-test-id="virtuoso-item-list"--><!--               style="box-sizing: border-box;  margin-top: 0px;">--><!--            <div data-index="8" data-known-size="30" data-item-index="8" style="overflow-anchor: none;">--><!--              <div class="animate__fadeIn animate__animated m-2 overflow-hidden text-white">--><!--                <button class="h-full w-full"><a--><!--                    class="bg-deep-black flex h-[30px] items-center justify-between rounded-lg"--><!--                    href="/manga/read/tham-tu-conan-4638/1088/832906">--><!--                  <div class="flex w-[30%] min-w-max items-center">--><!--                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"--><!--                         class="mx-4 h-4 w-4">--><!--                      <path fill-rule="evenodd"--><!--                            d="M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z"--><!--                            clip-rule="evenodd"></path>--><!--                    </svg>--><!--                    <span--><!--                        class="inline-block  overflow-hidden text-left text-lg font-bold line-clamp-1 hover:text-white max-w-[200px]">Chapter 1088</span>--><!--                  </div>--><!--                  <div class="flex items-center px-4"><span--><!--                      class="whitespace-nowrap text-lg font-extralight text-gray-300">19:17 14/03</span></div>--><!--                </a></button>--><!--              </div>--><!--            </div>--><!--            <div data-index="9" data-known-size="30" data-item-index="9" style="overflow-anchor: none;">--><!--              <div class="animate__fadeIn animate__animated m-2 overflow-hidden text-white">--><!--                <button class="h-full w-full"><a--><!--                    class="bg-deep-black flex h-[30px] items-center justify-between rounded-lg"--><!--                    href="/manga/read/tham-tu-conan-4638/1087/821857">--><!--                  <div class="flex w-[30%] min-w-max items-center">--><!--                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"--><!--                         class="mx-4 h-4 w-4">--><!--                      <path fill-rule="evenodd"--><!--                            d="M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z"--><!--                            clip-rule="evenodd"></path>--><!--                    </svg>--><!--                    <span--><!--                        class="inline-block  overflow-hidden text-left text-lg font-bold line-clamp-1 hover:text-white max-w-[200px]">Chapter 1087</span>--><!--                  </div>--><!--                  <div class="flex items-center px-4"><span--><!--                      class="whitespace-nowrap text-lg font-extralight text-gray-300">12:12 08/02</span></div>--><!--                </a></button>--><!--              </div>--><!--            </div>--><!--          </div>--><!--        </div>--><!--      </div>--></div></section>`);
}
const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = __vite_ssr_import_3__.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("components/Manga/Chaplist.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const __vite_ssr_import_4__ = await __vite_ssr_import__("/@id/plugin-vue:export-helper");

__vite_ssr_exports__.default = /* @__PURE__ */ __vite_ssr_import_4__.default(_sfc_main, [["ssrRender", _sfc_ssrRender], ["__file", "/Users/bonn/Documents/GitHub/next-truyen/components/Manga/Chaplist.vue"]]);
;
}


// --------------------
// Request: /pages/manga/read/[slug]/[chapter]/[id].vue?macro=true
// Parents: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/routes.mjs ($id_d2568f6b)
// Dependencies: 
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs ($id_fe38f457)
// - /node_modules/vue/server-renderer/index.js ($id_b215fa1c)
// - /@id/plugin-vue:export-helper ($id_bbb863c1)
// --------------------
const $id_6e06068f = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/index.mjs");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs");

const _sfc_main = /* @__PURE__ */ __vite_ssr_import_1__.defineComponent({
  __name: "[id]",
  setup(__props, { expose }) {
    expose();
    const runtimeConfig = __vite_ssr_import_0__.useRuntimeConfig();
    const route = __vite_ssr_import_2__.useRoute();
    const { params } = route;
    const { slug, chapter, id } = params;
    const realSlug = slug.slice(0, slug.lastIndexOf("-"));
    const url = `/api/chapters?slug=${realSlug}&chapter=${chapter}&id=${id}`;
    const { data: chapters } = __vite_ssr_import_0__.useLazyFetch(url);
    const __returned__ = { runtimeConfig, route, params, slug, chapter, id, realSlug, url, chapters };
    Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
    return __returned__;
  }
});
const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_4__ = await __vite_ssr_import__("/node_modules/vue/server-renderer/index.js");

function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<main${__vite_ssr_import_4__.ssrRenderAttrs(__vite_ssr_import_3__.mergeProps({ class: "overflow-x-hidden" }, _attrs))}><div class="flex h-fit min-h-screen flex-col bg-black"><section class="flex h-fit relative"><div class="relative flex h-fit flex-1 text-white"><div class="absolute top-0 left-0 z-[699] h-full w-[75px]"></div><div class="absolute top-0 right-0 z-[699] h-full w-[75px]"></div><div class="h-fit min-h-screen w-full bg-black"><div class="fixed top-0 right-0 z-[888] min-h-[50px] px-24" style="${__vite_ssr_import_4__.ssrRenderStyle({ "width": "390px" })}"></div><div class="slideUpReturn magictime fixed top-0 left-0 z-[999] h-[60px] w-full bg-[#141313]"><div class="flex h-full w-full items-center justify-between text-lg md:text-2xl"><div class="flex h-full w-fit items-center justify-evenly gap-4 px-4 md:space-x-4"><button><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="h-8 w-8"><path stroke-linecap="round" stroke-linejoin="round" d="M7 16l-4-4m0 0l4-4m-4 4h18"></path></svg></button><h1 class="fond-bold h-fit w-[25%] capitalize line-clamp-1 md:w-[30%]">Ki\u1EBFm Ngh\u1ECBch Th\u01B0\u01A1ng Khung</h1><button class="h-[60%] w-fit max-w-[80px] whitespace-nowrap rounded-xl bg-highlight p-2 text-base line-clamp-1 md:text-lg"> Chapter: ${__vite_ssr_import_4__.ssrInterpolate($setup.chapter)}</button><div class="absolute-center h-full w-fit gap-4 md:mx-6"><button data-id="prev" class="rounded-lg bg-highlight p-4 md:p-4"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path></svg></button><button data-id="next" class="rounded-lg bg-highlight p-4 md:p-4"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M14 5l7 7m0 0l-7 7m7-7H3"></path></svg></button></div></div><div class="flex h-full w-fit items-center pr-2 md:gap-10 md:px-4"><!--                  <button class="hidden items-center justify-center md:flex">--><!--                    <button class="absolute-center relative w-full rounded-xl p-4 gap-2 transition-all bg-highlight">--><!--                      Ngu\u1ED3n: <span>NT</span>--><!--                      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2"--><!--                           stroke="currentColor" aria-hidden="true"--><!--                           class="animate__rotateIn animate__animated animate__faster h-8 w-8">--><!--                        <path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7"></path>--><!--                      </svg>--><!--                    </button>--><!--                  </button>--><button class="rounded-lg bg-highlight p-2"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="h-8 w-8"><path stroke-linecap="round" stroke-linejoin="round" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path><path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path></svg></button></div></div></div><div class="pt-24 mx-auto w-full lg:w-[60%]"><!--[-->`);
  __vite_ssr_import_4__.ssrRenderList($setup.chapters.data, (chap, index) => {
    _push(`<div${__vite_ssr_import_4__.ssrRenderAttr("id", `page-${index}`)} class="relative my-0 h-fit w-full"><img alt="chapter-img" class="h-auto comic-img mx-auto w-auto"${__vite_ssr_import_4__.ssrRenderAttr("src", `${$setup.runtimeConfig.NUXT_PUBLIC_SERVICE_URL}/api/proxy?url=http://www.nettruyenco.com&src=${chap.imgSrc}`)}></div>`);
  });
  _push(`<!--]--></div><div class="h-[200px] w-full overflow-hidden py-4"><div class="mx-auto flex h-full w-full flex-col space-y-4 md:w-1/2"><div class="flex h-full w-full gap-4"><button data-id="prev" class="absolute-center z-[700] h-full w-[20%] border-2 border-dashed border-white/40 px-2 text-white/40 transition-all hover:border-white hover:text-white md:gap-2"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="inline h-8 w-8"><path stroke-linecap="round" stroke-linejoin="round" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path></svg> Chapter tr\u01B0\u1EDBc </button><button data-id="next" class="absolute-center h-full w-[80%] gap-2 border-2 border-dashed border-white/40 text-white/40 transition-all hover:border-white hover:text-white"> Chapter k\u1EBF ti\u1EBFp <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="inline-block h-8 w-8"><path stroke-linecap="round" stroke-linejoin="round" d="M14 5l7 7m0 0l-7 7m7-7H3"></path></svg></button></div><h1 class="py-4 px-2 text-center text-white/75">M\u1EB9o: B\u1EA1n c\xF3 th\u1EC3 double tap/click v\xE0o 2 c\u1EA1nh c\u1EE7a m\xE0n h\xECnh \u0111\u1EC3 chuy\u1EC3n chap \u1EDF b\u1EA5t c\u1EE9 v\u1ECB tr\xED n\xE0o \u1EDF ch\u1EBF \u0111\u1ED9 d\u1ECDc!</h1></div></div></div></div></section></div></main>`);
}
const __vite_ssr_import_5__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = __vite_ssr_import_5__.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("pages/manga/read/[slug]/[chapter]/[id].vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const __vite_ssr_import_6__ = await __vite_ssr_import__("/@id/plugin-vue:export-helper");

__vite_ssr_exports__.default = /* @__PURE__ */ __vite_ssr_import_6__.default(_sfc_main, [["ssrRender", _sfc_ssrRender], ["__file", "/Users/bonn/Documents/GitHub/next-truyen/pages/manga/read/[slug]/[chapter]/[id].vue"]]);

const meta = undefined
Object.defineProperty(__vite_ssr_exports__, "meta", { enumerable: true, configurable: true, get(){ return meta }});;
}


// --------------------
// Request: /pages/index.vue
// Parents: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/routes.mjs ($id_d2568f6b)
// Dependencies: 
// - /node_modules/nuxt/dist/app/components/layout.mjs ($id_39003883)
// - /components/TheHome.vue ($id_370723ed)
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/vue/server-renderer/index.js ($id_b215fa1c)
// - /@id/plugin-vue:export-helper ($id_bbb863c1)
// --------------------
const $id_cca58e97 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/components/layout.mjs");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/components/TheHome.vue");

const _sfc_main = {}
const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/vue/server-renderer/index.js");


function _sfc_ssrRender(_ctx, _push, _parent, _attrs) {
  const _component_NuxtLayout = __vite_ssr_import_0__.default
  const _component_TheHome = __vite_ssr_import_1__.default

  _push(__vite_ssr_import_3__.ssrRenderComponent(_component_NuxtLayout, _attrs, {
    default: __vite_ssr_import_2__.withCtx((_, _push, _parent, _scopeId) => {
      if (_push) {
        _push(__vite_ssr_import_3__.ssrRenderComponent(_component_TheHome, null, null, _parent, _scopeId))
      } else {
        return [
          __vite_ssr_import_2__.createVNode(_component_TheHome)
        ]
      }
    }),
    _: 1 /* STABLE */
  }, _parent))
}


const __vite_ssr_import_4__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_setup = _sfc_main.setup
_sfc_main.setup = (props, ctx) => {
  const ssrContext = __vite_ssr_import_4__.useSSRContext()
  ;(ssrContext.modules || (ssrContext.modules = new Set())).add("pages/index.vue")
  return _sfc_setup ? _sfc_setup(props, ctx) : undefined
}
const __vite_ssr_import_5__ = await __vite_ssr_import__("/@id/plugin-vue:export-helper");

__vite_ssr_exports__.default = /*#__PURE__*/__vite_ssr_import_5__.default(_sfc_main, [['ssrRender',_sfc_ssrRender],['__file',"/Users/bonn/Documents/GitHub/next-truyen/pages/index.vue"]]);
}


// --------------------
// Request: /pages/manga/index.vue
// Parents: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/routes.mjs ($id_d2568f6b)
// Dependencies: 
// - /node_modules/nuxt/dist/app/components/layout.mjs ($id_39003883)
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs ($id_fe38f457)
// - /contants/index.ts ($id_c59edb32)
// - /node_modules/vue/server-renderer/index.js ($id_b215fa1c)
// - /@id/plugin-vue:export-helper ($id_bbb863c1)
// - /components/Manga/Review.vue ($id_4f57d685)
// - /components/Manga/Chaplist.vue ($id_49b3b6a3)
// --------------------
const $id_f3f97c4e = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/components/layout.mjs");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __nuxt_component_1_lazy = __vite_ssr_import_1__.defineAsyncComponent(() => __vite_ssr_dynamic_import__('/components/Manga/Review.vue'))
const __nuxt_component_2_lazy = __vite_ssr_import_1__.defineAsyncComponent(() => __vite_ssr_dynamic_import__('/components/Manga/Chaplist.vue'))
const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/index.mjs");

const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_4__ = await __vite_ssr_import__("/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs");

const __vite_ssr_import_5__ = await __vite_ssr_import__("/contants/index.ts");

const _sfc_main = /* @__PURE__ */ __vite_ssr_import_3__.defineComponent({
  __name: "index",
  setup(__props, { expose }) {
    expose();
    const route = __vite_ssr_import_4__.useRoute();
    const { slug } = route.query;
    const url = `/api/comic?slug=${slug}&source=${__vite_ssr_import_5__.SourceParams.netTruyen}`;
    const { data: comic } = __vite_ssr_import_2__.useLazyFetch(url);
    const __returned__ = { route, slug, url, comic };
    Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
    return __returned__;
  }
});
const __vite_ssr_import_6__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_7__ = await __vite_ssr_import__("/node_modules/vue/server-renderer/index.js");

function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_NuxtLayout = __vite_ssr_import_0__.default;
  const _component_LazyMangaReview = __nuxt_component_1_lazy;
  const _component_LazyMangaChaplist = __nuxt_component_2_lazy;
  _push(__vite_ssr_import_7__.ssrRenderComponent(_component_NuxtLayout, _attrs, {
    default: __vite_ssr_import_6__.withCtx((_, _push2, _parent2, _scopeId) => {
      if (_push2) {
        _push2(`<div class="flex h-fit flex-col" style="${__vite_ssr_import_7__.ssrRenderStyle({ "height": "auto" })}"${_scopeId}><div class="absolute inset-0 z-0 h-[35%] w-full lg:h-[45%]"${_scopeId}><figure class="deslide-cover"${_scopeId}><span style="${__vite_ssr_import_7__.ssrRenderStyle({ "box-sizing": "border-box", "display": "block", "overflow": "hidden", "width": "initial", "height": "initial", "background": "none", "opacity": "1", "border": "0px", "margin": "0px", "padding": "0px", "position": "absolute", "inset": "0px" })}"${_scopeId}><img alt="comic-banner" src="https://kyotomanga.live/_next/image?url=https%3A%2F%2Fst.nettruyenco.com%2Fdata%2Fcomics%2F131%2Fbao-boi-cua-lao-dai-da-xuyen-khong-tro-v-5719.jpg&amp;w=3840&amp;q=75" decoding="async" data-nimg="fill" class="count={10} object-fit absolute h-full w-full bg-cover bg-top bg-no-repeat object-cover blur" sizes="100vw" srcset="https://kyotomanga.live/_next/image?url=https%3A%2F%2Fst.nettruyenco.com%2Fdata%2Fcomics%2F131%2Fbao-boi-cua-lao-dai-da-xuyen-khong-tro-v-5719.jpg&amp;w=3840&amp;q=75" style="${__vite_ssr_import_7__.ssrRenderStyle({ "position": "absolute", "inset": "0px", "box-sizing": "border-box", "padding": "0px", "border": "none", "margin": "auto", "display": "block", "width": "0px", "height": "0px", "min-width": "100%", "max-width": "100%", "min-height": "100%", "max-height": "100%" })}"${_scopeId}></span></figure></div><div class="z-10 mx-auto w-[85%] pt-32"${_scopeId}><section class="h-fit w-full"${_scopeId}><div class="flex h-full w-full flex-col items-center overflow-x-hidden md:flex-row md:items-start"${_scopeId}><div class="mt-4 w-[50%] md:w-[250px] md:min-w-[250px]"${_scopeId}><figure class="aspect-w-3 aspect-h-5 relative rounded-2xl"${_scopeId}><span style="${__vite_ssr_import_7__.ssrRenderStyle({ "box-sizing": "border-box", "display": "block", "overflow": "hidden", "width": "initial", "height": "initial", "background": "none", "opacity": "1", "border": "0px", "margin": "0px", "padding": "0px", "position": "absolute", "inset": "0px" })}"${_scopeId}><img alt="manga-thumbnail" sizes="100vw"${__vite_ssr_import_7__.ssrRenderAttr("srcset", $setup.comic.data.thumbnail)}${__vite_ssr_import_7__.ssrRenderAttr("src", $setup.comic.data.thumbnail)} decoding="async" data-nimg="fill" class="absolute inset-0 rounded-2xl object-cover object-center" style="${__vite_ssr_import_7__.ssrRenderStyle({ "position": "absolute", "inset": "0px", "box-sizing": "border-box", "padding": "0px", "border": "none", "margin": "auto", "display": "block", "width": "0px", "height": "0px", "min-width": "100%", "max-width": "100%", "min-height": "100%", "max-height": "100%" })}"${_scopeId}></span></figure></div><div class="flex h-full w-full flex-col justify-center p-4 text-white md:min-h-[430px] lg:ml-4"${_scopeId}><div class="w-full space-y-4 text-center md:ml-2 md:text-left lg:w-[80%]"${_scopeId}><h1 class="font-secondary font-bold leading-none text-[6.5vw] md:text-[5.5vw] lg:text-[3.5vw]"${_scopeId}>${__vite_ssr_import_7__.ssrInterpolate($setup.comic.data.title)}</h1><h2 class="text-[3vw] md:min-h-[28px] md:text-[2vw] lg:text-[1.2vw]"${_scopeId}></h2><h3 class="text-center text-[3vw] md:text-left md:text-[2vw] lg:text-[1.1vw]"${_scopeId}>${__vite_ssr_import_7__.ssrInterpolate($setup.comic.data.author)}</h3><h4 class="flex items-center justify-center gap-4 md:justify-start"${_scopeId}><span class="block h-3 w-3 rounded-full bg-green-500"${_scopeId}></span> ${__vite_ssr_import_7__.ssrInterpolate($setup.comic.data.status)}</h4></div><div class="mt-4 flex flex-col-reverse gap-2 md:flex-col"${_scopeId}><ul class="my-4 flex flex-wrap items-center gap-4"${_scopeId}><h3 class="px-2 py-2"${_scopeId}>Th\u1EC3 lo\u1EA1i:</h3><!--[-->`);
        __vite_ssr_import_7__.ssrRenderList($setup.comic.data.genres, (genre) => {
          _push2(`<li class="rounded-xl bg-highlight px-4 py-2"${_scopeId}><a href="/browse?genres=mystery"${_scopeId}>${__vite_ssr_import_7__.ssrInterpolate(genre.genreTitle)}</a></li>`);
        });
        _push2(`<!--]--></ul><div class="flex h-[150px] w-full flex-col items-center gap-6 md:flex-row md:items-start"${_scopeId}><a${__vite_ssr_import_7__.ssrRenderAttr("href", `/manga/read/${$setup.slug}/${$setup.comic.data.chapterList[0].chapterNumber}/${$setup.comic.data.chapterList[0].chapterId}`)}${_scopeId}><button class="pulse-effect-primary absolute-center h-[50px] w-[150px] gap-3 rounded-2xl bg-primary transition-all hover:scale-[110%]"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="h-8 w-8"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"${_scopeId}></path></svg> \u0110\u1ECDc ngay </button></a><a href="/manga/read/nhat-niem-vinh-hang-20674/63.5/872343"${_scopeId}><button class="pulse-effect-secondary absolute-center h-[50px] w-[150px] gap-3 rounded-2xl bg-white text-gray-800 transition-all hover:scale-[110%]"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true" class="h-8 w-8 text-primary"${_scopeId}><path fill-rule="evenodd" d="M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z" clip-rule="evenodd"${_scopeId}></path></svg> Chap m\u1EDBi nh\u1EA5t </button></a><button class="shine-effect absolute-center bg-hight-light h-[50px] w-[50px] rounded-xl transition-all hover:text-primary"${_scopeId}><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="h-8 w-8"${_scopeId}><path stroke-linecap="round" stroke-linejoin="round" d="M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z"${_scopeId}></path></svg></button></div></div></div></div></section>`);
        _push2(__vite_ssr_import_7__.ssrRenderComponent(_component_LazyMangaReview, {
          review: $setup.comic.data.review
        }, null, _parent2, _scopeId));
        _push2(__vite_ssr_import_7__.ssrRenderComponent(_component_LazyMangaChaplist, {
          chapterList: $setup.comic.data.chapterList
        }, null, _parent2, _scopeId));
        _push2(`</div></div>`);
      } else {
        return [
          __vite_ssr_import_6__.createVNode("div", {
            class: "flex h-fit flex-col",
            style: { "height": "auto" }
          }, [
            __vite_ssr_import_6__.createVNode("div", { class: "absolute inset-0 z-0 h-[35%] w-full lg:h-[45%]" }, [
              __vite_ssr_import_6__.createVNode("figure", { class: "deslide-cover" }, [
                __vite_ssr_import_6__.createVNode("span", { style: { "box-sizing": "border-box", "display": "block", "overflow": "hidden", "width": "initial", "height": "initial", "background": "none", "opacity": "1", "border": "0px", "margin": "0px", "padding": "0px", "position": "absolute", "inset": "0px" } }, [
                  __vite_ssr_import_6__.createVNode("img", {
                    alt: "comic-banner",
                    src: "https://kyotomanga.live/_next/image?url=https%3A%2F%2Fst.nettruyenco.com%2Fdata%2Fcomics%2F131%2Fbao-boi-cua-lao-dai-da-xuyen-khong-tro-v-5719.jpg&w=3840&q=75",
                    decoding: "async",
                    "data-nimg": "fill",
                    class: "count={10} object-fit absolute h-full w-full bg-cover bg-top bg-no-repeat object-cover blur",
                    sizes: "100vw",
                    srcset: "https://kyotomanga.live/_next/image?url=https%3A%2F%2Fst.nettruyenco.com%2Fdata%2Fcomics%2F131%2Fbao-boi-cua-lao-dai-da-xuyen-khong-tro-v-5719.jpg&w=3840&q=75",
                    style: { "position": "absolute", "inset": "0px", "box-sizing": "border-box", "padding": "0px", "border": "none", "margin": "auto", "display": "block", "width": "0px", "height": "0px", "min-width": "100%", "max-width": "100%", "min-height": "100%", "max-height": "100%" }
                  })
                ])
              ])
            ]),
            __vite_ssr_import_6__.createVNode("div", { class: "z-10 mx-auto w-[85%] pt-32" }, [
              __vite_ssr_import_6__.createVNode("section", { class: "h-fit w-full" }, [
                __vite_ssr_import_6__.createVNode("div", { class: "flex h-full w-full flex-col items-center overflow-x-hidden md:flex-row md:items-start" }, [
                  __vite_ssr_import_6__.createVNode("div", { class: "mt-4 w-[50%] md:w-[250px] md:min-w-[250px]" }, [
                    __vite_ssr_import_6__.createVNode("figure", { class: "aspect-w-3 aspect-h-5 relative rounded-2xl" }, [
                      __vite_ssr_import_6__.createVNode("span", { style: { "box-sizing": "border-box", "display": "block", "overflow": "hidden", "width": "initial", "height": "initial", "background": "none", "opacity": "1", "border": "0px", "margin": "0px", "padding": "0px", "position": "absolute", "inset": "0px" } }, [
                        __vite_ssr_import_6__.createVNode("img", {
                          alt: "manga-thumbnail",
                          sizes: "100vw",
                          srcset: $setup.comic.data.thumbnail,
                          src: $setup.comic.data.thumbnail,
                          decoding: "async",
                          "data-nimg": "fill",
                          class: "absolute inset-0 rounded-2xl object-cover object-center",
                          style: { "position": "absolute", "inset": "0px", "box-sizing": "border-box", "padding": "0px", "border": "none", "margin": "auto", "display": "block", "width": "0px", "height": "0px", "min-width": "100%", "max-width": "100%", "min-height": "100%", "max-height": "100%" }
                        }, null, 8, ["srcset", "src"])
                      ])
                    ])
                  ]),
                  __vite_ssr_import_6__.createVNode("div", { class: "flex h-full w-full flex-col justify-center p-4 text-white md:min-h-[430px] lg:ml-4" }, [
                    __vite_ssr_import_6__.createVNode("div", { class: "w-full space-y-4 text-center md:ml-2 md:text-left lg:w-[80%]" }, [
                      __vite_ssr_import_6__.createVNode("h1", { class: "font-secondary font-bold leading-none text-[6.5vw] md:text-[5.5vw] lg:text-[3.5vw]" }, __vite_ssr_import_6__.toDisplayString($setup.comic.data.title), 1),
                      __vite_ssr_import_6__.createVNode("h2", { class: "text-[3vw] md:min-h-[28px] md:text-[2vw] lg:text-[1.2vw]" }),
                      __vite_ssr_import_6__.createVNode("h3", { class: "text-center text-[3vw] md:text-left md:text-[2vw] lg:text-[1.1vw]" }, __vite_ssr_import_6__.toDisplayString($setup.comic.data.author), 1),
                      __vite_ssr_import_6__.createVNode("h4", { class: "flex items-center justify-center gap-4 md:justify-start" }, [
                        __vite_ssr_import_6__.createVNode("span", { class: "block h-3 w-3 rounded-full bg-green-500" }),
                        __vite_ssr_import_6__.createTextVNode(" " + __vite_ssr_import_6__.toDisplayString($setup.comic.data.status), 1)
                      ])
                    ]),
                    __vite_ssr_import_6__.createVNode("div", { class: "mt-4 flex flex-col-reverse gap-2 md:flex-col" }, [
                      __vite_ssr_import_6__.createVNode("ul", { class: "my-4 flex flex-wrap items-center gap-4" }, [
                        __vite_ssr_import_6__.createVNode("h3", { class: "px-2 py-2" }, "Th\u1EC3 lo\u1EA1i:"),
                        (__vite_ssr_import_6__.openBlock(true), __vite_ssr_import_6__.createBlock(__vite_ssr_import_6__.Fragment, null, __vite_ssr_import_6__.renderList($setup.comic.data.genres, (genre) => {
                          return __vite_ssr_import_6__.openBlock(), __vite_ssr_import_6__.createBlock("li", { class: "rounded-xl bg-highlight px-4 py-2" }, [
                            __vite_ssr_import_6__.createVNode("a", { href: "/browse?genres=mystery" }, __vite_ssr_import_6__.toDisplayString(genre.genreTitle), 1)
                          ]);
                        }), 256))
                      ]),
                      __vite_ssr_import_6__.createVNode("div", { class: "flex h-[150px] w-full flex-col items-center gap-6 md:flex-row md:items-start" }, [
                        __vite_ssr_import_6__.createVNode("a", {
                          href: `/manga/read/${$setup.slug}/${$setup.comic.data.chapterList[0].chapterNumber}/${$setup.comic.data.chapterList[0].chapterId}`
                        }, [
                          __vite_ssr_import_6__.createVNode("button", { class: "pulse-effect-primary absolute-center h-[50px] w-[150px] gap-3 rounded-2xl bg-primary transition-all hover:scale-[110%]" }, [
                            (__vite_ssr_import_6__.openBlock(), __vite_ssr_import_6__.createBlock("svg", {
                              xmlns: "http://www.w3.org/2000/svg",
                              fill: "none",
                              viewBox: "0 0 24 24",
                              "stroke-width": "2",
                              stroke: "currentColor",
                              "aria-hidden": "true",
                              class: "h-8 w-8"
                            }, [
                              __vite_ssr_import_6__.createVNode("path", {
                                "stroke-linecap": "round",
                                "stroke-linejoin": "round",
                                d: "M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"
                              })
                            ])),
                            __vite_ssr_import_6__.createTextVNode(" \u0110\u1ECDc ngay ")
                          ])
                        ], 8, ["href"]),
                        __vite_ssr_import_6__.createVNode("a", { href: "/manga/read/nhat-niem-vinh-hang-20674/63.5/872343" }, [
                          __vite_ssr_import_6__.createVNode("button", { class: "pulse-effect-secondary absolute-center h-[50px] w-[150px] gap-3 rounded-2xl bg-white text-gray-800 transition-all hover:scale-[110%]" }, [
                            (__vite_ssr_import_6__.openBlock(), __vite_ssr_import_6__.createBlock("svg", {
                              xmlns: "http://www.w3.org/2000/svg",
                              viewBox: "0 0 20 20",
                              fill: "currentColor",
                              "aria-hidden": "true",
                              class: "h-8 w-8 text-primary"
                            }, [
                              __vite_ssr_import_6__.createVNode("path", {
                                "fill-rule": "evenodd",
                                d: "M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z",
                                "clip-rule": "evenodd"
                              })
                            ])),
                            __vite_ssr_import_6__.createTextVNode(" Chap m\u1EDBi nh\u1EA5t ")
                          ])
                        ]),
                        __vite_ssr_import_6__.createVNode("button", { class: "shine-effect absolute-center bg-hight-light h-[50px] w-[50px] rounded-xl transition-all hover:text-primary" }, [
                          (__vite_ssr_import_6__.openBlock(), __vite_ssr_import_6__.createBlock("svg", {
                            xmlns: "http://www.w3.org/2000/svg",
                            fill: "none",
                            viewBox: "0 0 24 24",
                            "stroke-width": "2",
                            stroke: "currentColor",
                            "aria-hidden": "true",
                            class: "h-8 w-8"
                          }, [
                            __vite_ssr_import_6__.createVNode("path", {
                              "stroke-linecap": "round",
                              "stroke-linejoin": "round",
                              d: "M5 5a2 2 0 012-2h10a2 2 0 012 2v16l-7-3.5L5 21V5z"
                            })
                          ]))
                        ])
                      ])
                    ])
                  ])
                ])
              ]),
              __vite_ssr_import_6__.createVNode(_component_LazyMangaReview, {
                review: $setup.comic.data.review
              }, null, 8, ["review"]),
              __vite_ssr_import_6__.createVNode(_component_LazyMangaChaplist, {
                chapterList: $setup.comic.data.chapterList
              }, null, 8, ["chapterList"])
            ])
          ])
        ];
      }
    }),
    _: 1
  }, _parent));
}
const __vite_ssr_import_8__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = __vite_ssr_import_8__.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("pages/manga/index.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const __vite_ssr_import_9__ = await __vite_ssr_import__("/@id/plugin-vue:export-helper");

__vite_ssr_exports__.default = /* @__PURE__ */ __vite_ssr_import_9__.default(_sfc_main, [["ssrRender", _sfc_ssrRender], ["__file", "/Users/bonn/Documents/GitHub/next-truyen/pages/manga/index.vue"]]);
;
}


// --------------------
// Request: /pages/manga/read/[slug]/[chapter]/[id].vue
// Parents: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/routes.mjs ($id_d2568f6b)
// Dependencies: 
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs ($id_fe38f457)
// - /node_modules/vue/server-renderer/index.js ($id_b215fa1c)
// - /@id/plugin-vue:export-helper ($id_bbb863c1)
// --------------------
const $id_b9cb4a69 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/index.mjs");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs");

const _sfc_main = /* @__PURE__ */ __vite_ssr_import_1__.defineComponent({
  __name: "[id]",
  setup(__props, { expose }) {
    expose();
    const runtimeConfig = __vite_ssr_import_0__.useRuntimeConfig();
    const route = __vite_ssr_import_2__.useRoute();
    const { params } = route;
    const { slug, chapter, id } = params;
    const realSlug = slug.slice(0, slug.lastIndexOf("-"));
    const url = `/api/chapters?slug=${realSlug}&chapter=${chapter}&id=${id}`;
    const { data: chapters } = __vite_ssr_import_0__.useLazyFetch(url);
    const __returned__ = { runtimeConfig, route, params, slug, chapter, id, realSlug, url, chapters };
    Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
    return __returned__;
  }
});
const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_4__ = await __vite_ssr_import__("/node_modules/vue/server-renderer/index.js");

function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<main${__vite_ssr_import_4__.ssrRenderAttrs(__vite_ssr_import_3__.mergeProps({ class: "overflow-x-hidden" }, _attrs))}><div class="flex h-fit min-h-screen flex-col bg-black"><section class="flex h-fit relative"><div class="relative flex h-fit flex-1 text-white"><div class="absolute top-0 left-0 z-[699] h-full w-[75px]"></div><div class="absolute top-0 right-0 z-[699] h-full w-[75px]"></div><div class="h-fit min-h-screen w-full bg-black"><div class="fixed top-0 right-0 z-[888] min-h-[50px] px-24" style="${__vite_ssr_import_4__.ssrRenderStyle({ "width": "390px" })}"></div><div class="slideUpReturn magictime fixed top-0 left-0 z-[999] h-[60px] w-full bg-[#141313]"><div class="flex h-full w-full items-center justify-between text-lg md:text-2xl"><div class="flex h-full w-fit items-center justify-evenly gap-4 px-4 md:space-x-4"><button><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="h-8 w-8"><path stroke-linecap="round" stroke-linejoin="round" d="M7 16l-4-4m0 0l4-4m-4 4h18"></path></svg></button><h1 class="fond-bold h-fit w-[25%] capitalize line-clamp-1 md:w-[30%]">Ki\u1EBFm Ngh\u1ECBch Th\u01B0\u01A1ng Khung</h1><button class="h-[60%] w-fit max-w-[80px] whitespace-nowrap rounded-xl bg-highlight p-2 text-base line-clamp-1 md:text-lg"> Chapter: ${__vite_ssr_import_4__.ssrInterpolate($setup.chapter)}</button><div class="absolute-center h-full w-fit gap-4 md:mx-6"><button data-id="prev" class="rounded-lg bg-highlight p-4 md:p-4"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path></svg></button><button data-id="next" class="rounded-lg bg-highlight p-4 md:p-4"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="h-6 w-6"><path stroke-linecap="round" stroke-linejoin="round" d="M14 5l7 7m0 0l-7 7m7-7H3"></path></svg></button></div></div><div class="flex h-full w-fit items-center pr-2 md:gap-10 md:px-4"><!--                  <button class="hidden items-center justify-center md:flex">--><!--                    <button class="absolute-center relative w-full rounded-xl p-4 gap-2 transition-all bg-highlight">--><!--                      Ngu\u1ED3n: <span>NT</span>--><!--                      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2"--><!--                           stroke="currentColor" aria-hidden="true"--><!--                           class="animate__rotateIn animate__animated animate__faster h-8 w-8">--><!--                        <path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7"></path>--><!--                      </svg>--><!--                    </button>--><!--                  </button>--><button class="rounded-lg bg-highlight p-2"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="h-8 w-8"><path stroke-linecap="round" stroke-linejoin="round" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path><path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path></svg></button></div></div></div><div class="pt-24 mx-auto w-full lg:w-[60%]"><!--[-->`);
  __vite_ssr_import_4__.ssrRenderList($setup.chapters.data, (chap, index) => {
    _push(`<div${__vite_ssr_import_4__.ssrRenderAttr("id", `page-${index}`)} class="relative my-0 h-fit w-full"><img alt="chapter-img" class="h-auto comic-img mx-auto w-auto"${__vite_ssr_import_4__.ssrRenderAttr("src", `${$setup.runtimeConfig.NUXT_PUBLIC_SERVICE_URL}/api/proxy?url=http://www.nettruyenco.com&src=${chap.imgSrc}`)}></div>`);
  });
  _push(`<!--]--></div><div class="h-[200px] w-full overflow-hidden py-4"><div class="mx-auto flex h-full w-full flex-col space-y-4 md:w-1/2"><div class="flex h-full w-full gap-4"><button data-id="prev" class="absolute-center z-[700] h-full w-[20%] border-2 border-dashed border-white/40 px-2 text-white/40 transition-all hover:border-white hover:text-white md:gap-2"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="inline h-8 w-8"><path stroke-linecap="round" stroke-linejoin="round" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path></svg> Chapter tr\u01B0\u1EDBc </button><button data-id="next" class="absolute-center h-full w-[80%] gap-2 border-2 border-dashed border-white/40 text-white/40 transition-all hover:border-white hover:text-white"> Chapter k\u1EBF ti\u1EBFp <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" aria-hidden="true" class="inline-block h-8 w-8"><path stroke-linecap="round" stroke-linejoin="round" d="M14 5l7 7m0 0l-7 7m7-7H3"></path></svg></button></div><h1 class="py-4 px-2 text-center text-white/75">M\u1EB9o: B\u1EA1n c\xF3 th\u1EC3 double tap/click v\xE0o 2 c\u1EA1nh c\u1EE7a m\xE0n h\xECnh \u0111\u1EC3 chuy\u1EC3n chap \u1EDF b\u1EA5t c\u1EE9 v\u1ECB tr\xED n\xE0o \u1EDF ch\u1EBF \u0111\u1ED9 d\u1ECDc!</h1></div></div></div></div></section></div></main>`);
}
const __vite_ssr_import_5__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = __vite_ssr_import_5__.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("pages/manga/read/[slug]/[chapter]/[id].vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const __vite_ssr_import_6__ = await __vite_ssr_import__("/@id/plugin-vue:export-helper");

__vite_ssr_exports__.default = /* @__PURE__ */ __vite_ssr_import_6__.default(_sfc_main, [["ssrRender", _sfc_ssrRender], ["__file", "/Users/bonn/Documents/GitHub/next-truyen/pages/manga/read/[slug]/[chapter]/[id].vue"]]);
;
}


// --------------------
// Request: /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/router.options.mjs
// Parents: 
// - /node_modules/nuxt/dist/pages/runtime/router.mjs ($id_a090977b)
// Dependencies: 

// --------------------
const $id_6fc2687f = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const configRouterOptions = {}
__vite_ssr_exports__.default = {
...configRouterOptions,
};
}


// --------------------
// Request: /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/middleware.mjs
// Parents: 
// - /node_modules/nuxt/dist/pages/runtime/router.mjs ($id_a090977b)
// Dependencies: 

// --------------------
const $id_215201b3 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const globalMiddleware = []
Object.defineProperty(__vite_ssr_exports__, "globalMiddleware", { enumerable: true, configurable: true, get(){ return globalMiddleware }});
const namedMiddleware = {}
Object.defineProperty(__vite_ssr_exports__, "namedMiddleware", { enumerable: true, configurable: true, get(){ return namedMiddleware }});;
}


// --------------------
// Request: /node_modules/@nuxtjs/color-mode/dist/runtime/plugin.server.mjs
// Parents: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/plugins/server.mjs ($id_54c812eb)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs ($id_fe38f457)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/color-mode-options.mjs ($id_20cc7c5c)
// --------------------
const $id_a217e6ae = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/color-mode-options.mjs");

const addScript = (head) => {
  head.script = head.script || [];
  head.script.push({
    hid: __vite_ssr_import_2__.hid,
    innerHTML: __vite_ssr_import_2__.script
  });
  const serializeProp = "__dangerouslyDisableSanitizersByTagID";
  head[serializeProp] = head[serializeProp] || {};
  head[serializeProp][__vite_ssr_import_2__.hid] = ["innerHTML"];
};
__vite_ssr_exports__.default = __vite_ssr_import_1__.defineNuxtPlugin((nuxtApp) => {
  const colorMode = __vite_ssr_import_1__.useState("color-mode", () => __vite_ssr_import_0__.reactive({
    preference: __vite_ssr_import_2__.preference,
    value: __vite_ssr_import_2__.preference,
    unknown: true,
    forced: false
  })).value;
  const htmlAttrs = {};
  if (__vite_ssr_import_1__.isVue2) {
    const app = nuxtApp.nuxt2Context.app;
    if (typeof app.head === "function") {
      const originalHead = app.head;
      app.head = function() {
        const head = originalHead.call(this) || {};
        addScript(head);
        head.htmlAttrs = htmlAttrs;
        return head;
      };
    } else {
      addScript(app.head);
      app.head.htmlAttrs = htmlAttrs;
    }
  }
  if (__vite_ssr_import_1__.isVue3) {
    __vite_ssr_import_1__.useHead({
      htmlAttrs,
      script: [{ children: __vite_ssr_import_2__.script }]
    });
  }
  __vite_ssr_import_1__.useRouter().afterEach((to) => {
    const forcedColorMode = __vite_ssr_import_1__.isVue2 ? to.matched[0]?.components.default?.options.colorMode : to.meta.colorMode;
    if (forcedColorMode && forcedColorMode !== "system") {
      colorMode.value = htmlAttrs["data-color-mode-forced"] = forcedColorMode;
      if (__vite_ssr_import_2__.dataValue) {
        htmlAttrs[`data-${__vite_ssr_import_2__.dataValue}`] = colorMode.value;
      }
      colorMode.forced = true;
    } else if (forcedColorMode === "system") {
      console.warn("You cannot force the colorMode to system at the page level.");
    }
  });
  nuxtApp.provide("colorMode", colorMode);
});
;
}


// --------------------
// Request: /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/color-mode-options.mjs
// Parents: 
// - /node_modules/@nuxtjs/color-mode/dist/runtime/plugin.server.mjs ($id_a217e6ae)
// Dependencies: 

// --------------------
const $id_20cc7c5c = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const preference = "dark"
Object.defineProperty(__vite_ssr_exports__, "preference", { enumerable: true, configurable: true, get(){ return preference }});
      
const fallback = "dark"
Object.defineProperty(__vite_ssr_exports__, "fallback", { enumerable: true, configurable: true, get(){ return fallback }});
      
const hid = "nuxt-color-mode-script"
Object.defineProperty(__vite_ssr_exports__, "hid", { enumerable: true, configurable: true, get(){ return hid }});
      
const globalName = "__NUXT_COLOR_MODE__"
Object.defineProperty(__vite_ssr_exports__, "globalName", { enumerable: true, configurable: true, get(){ return globalName }});
      
const componentName = "ColorScheme"
Object.defineProperty(__vite_ssr_exports__, "componentName", { enumerable: true, configurable: true, get(){ return componentName }});
      
const classPrefix = ""
Object.defineProperty(__vite_ssr_exports__, "classPrefix", { enumerable: true, configurable: true, get(){ return classPrefix }});
      
const classSuffix = "-mode"
Object.defineProperty(__vite_ssr_exports__, "classSuffix", { enumerable: true, configurable: true, get(){ return classSuffix }});
      
const dataValue = ""
Object.defineProperty(__vite_ssr_exports__, "dataValue", { enumerable: true, configurable: true, get(){ return dataValue }});
      
const storageKey = "nuxt-color-mode"
Object.defineProperty(__vite_ssr_exports__, "storageKey", { enumerable: true, configurable: true, get(){ return storageKey }});
      
const script = "const w=window,de=document.documentElement,knownColorSchemes=[\"dark\",\"light\"],preference=window.localStorage.getItem(\"nuxt-color-mode\")||\"dark\";let value=preference===\"system\"?getColorScheme():preference;const forcedColorMode=de.getAttribute(\"data-color-mode-forced\");forcedColorMode&&(value=forcedColorMode),addColorScheme(value),w[\"__NUXT_COLOR_MODE__\"]={preference,value,getColorScheme,addColorScheme,removeColorScheme};function addColorScheme(e){const o=\"\"+e+\"-mode\",t=\"\";de.classList?de.classList.add(o):de.className+=\" \"+o,de.setAttribute(\"data-\"+t,e)}function removeColorScheme(e){const o=\"\"+e+\"-mode\",t=\"\";de.classList?de.classList.remove(o):de.className=de.className.replace(new RegExp(o,\"g\"),\"\"),de.removeAttribute(\"data-\"+t)}function prefersColorScheme(e){return w.matchMedia(\"(prefers-color-scheme\"+e+\")\")}function getColorScheme(){if(w.matchMedia&&prefersColorScheme(\"\").media!==\"not all\"){for(const e of knownColorSchemes)if(prefersColorScheme(\":\"+e).matches)return e}return\"dark\"}\n"
Object.defineProperty(__vite_ssr_exports__, "script", { enumerable: true, configurable: true, get(){ return script }});
      ;
}


// --------------------
// Request: /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/root-component.mjs
// Parents: 
// - /Users/bonn/Documents/GitHub/next-truyen/node_modules/nuxt/dist/app/entry ($id_e3b1bc70)
// Dependencies: 
// - /node_modules/nuxt/dist/app/components/nuxt-root.vue ($id_e9bfada3)
// --------------------
const $id_1d2b572d = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/components/nuxt-root.vue");

Object.defineProperty(__vite_ssr_exports__, "default", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_0__.default }});;
}


// --------------------
// Request: /node_modules/nuxt/dist/app/components/nuxt-root.vue
// Parents: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/root-component.mjs ($id_1d2b572d)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/nuxt/dist/app/index.mjs ($id_36927477)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/error-component.mjs ($id_cacf1acb)
// - /node_modules/vue/server-renderer/index.js ($id_b215fa1c)
// - /@id/plugin-vue:export-helper ($id_bbb863c1)
// --------------------
const $id_e9bfada3 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/index.mjs");

// @ts-ignore
const __vite_ssr_import_2__ = await __vite_ssr_import__("/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/error-component.mjs");



const _sfc_main = {
  __name: 'nuxt-root',
  setup(__props, { expose }) {
  expose();

const nuxtApp = __vite_ssr_import_1__.useNuxtApp()
const onResolve = () => nuxtApp.callHook('app:suspense:resolve')

// vue:setup hook
const results = nuxtApp.hooks.callHookWith(hooks => hooks.map(hook => hook()), 'vue:setup')
if (true && results && results.some(i => i && 'then' in i)) {
  console.error('[nuxt] Error in `vue:setup`. Callbacks must be synchronous.')
}

// error handling
const error = __vite_ssr_import_1__.useError()
__vite_ssr_import_0__.onErrorCaptured((err, target, info) => {
  nuxtApp.hooks.callHook('vue:error', err, target, info).catch(hookError => console.error('[nuxt] Error in `vue:error` hook', hookError))
  if (true) {
    __vite_ssr_import_1__.callWithNuxt(nuxtApp, __vite_ssr_import_1__.throwError, [err])
  }
})

const __returned__ = { nuxtApp, onResolve, results, error, onErrorCaptured: __vite_ssr_import_0__.onErrorCaptured, callWithNuxt: __vite_ssr_import_1__.callWithNuxt, throwError: __vite_ssr_import_1__.throwError, useError: __vite_ssr_import_1__.useError, useNuxtApp: __vite_ssr_import_1__.useNuxtApp, ErrorComponent: __vite_ssr_import_2__.default }
Object.defineProperty(__returned__, '__isScriptSetup', { enumerable: false, value: true })
return __returned__
}

}
const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_4__ = await __vite_ssr_import__("/node_modules/vue/server-renderer/index.js");


function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_App = __vite_ssr_import_3__.resolveComponent("App")

  __vite_ssr_import_4__.ssrRenderSuspense(_push, {
    default: () => {
      if ($setup.error) {
        _push(__vite_ssr_import_4__.ssrRenderComponent($setup["ErrorComponent"], { error: $setup.error }, null, _parent))
      } else {
        _push(__vite_ssr_import_4__.ssrRenderComponent(_component_App, null, null, _parent))
      }
    },
    _: 1 /* STABLE */
  })
}


const __vite_ssr_import_5__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_setup = _sfc_main.setup
_sfc_main.setup = (props, ctx) => {
  const ssrContext = __vite_ssr_import_5__.useSSRContext()
  ;(ssrContext.modules || (ssrContext.modules = new Set())).add("node_modules/nuxt/dist/app/components/nuxt-root.vue")
  return _sfc_setup ? _sfc_setup(props, ctx) : undefined
}
const __vite_ssr_import_6__ = await __vite_ssr_import__("/@id/plugin-vue:export-helper");

__vite_ssr_exports__.default = /*#__PURE__*/__vite_ssr_import_6__.default(_sfc_main, [['ssrRender',_sfc_ssrRender],['__file',"/Users/bonn/Documents/GitHub/next-truyen/node_modules/nuxt/dist/app/components/nuxt-root.vue"]]);
}


// --------------------
// Request: /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/error-component.mjs
// Parents: 
// - /node_modules/nuxt/dist/app/components/nuxt-root.vue ($id_e9bfada3)
// Dependencies: 
// - /node_modules/nuxt/dist/app/components/nuxt-error-page.vue ($id_8cc6d73f)
// --------------------
const $id_cacf1acb = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/components/nuxt-error-page.vue");

Object.defineProperty(__vite_ssr_exports__, "default", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_0__.default }});;
}


// --------------------
// Request: /node_modules/nuxt/dist/app/components/nuxt-error-page.vue
// Parents: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/error-component.mjs ($id_cacf1acb)
// Dependencies: 
// - /node_modules/@nuxt/ui-templates/dist/templates/error-404.vue ($id_b90d4d0f)
// - /node_modules/@nuxt/ui-templates/dist/templates/error-500.vue ($id_14c8b574)
// - /node_modules/@nuxt/ui-templates/dist/templates/error-dev.vue ($id_bc2d74a1)
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/vue/server-renderer/index.js ($id_b215fa1c)
// - /@id/plugin-vue:export-helper ($id_bbb863c1)
// --------------------
const $id_8cc6d73f = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/@nuxt/ui-templates/dist/templates/error-404.vue");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/@nuxt/ui-templates/dist/templates/error-500.vue");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/@nuxt/ui-templates/dist/templates/error-dev.vue");



const _sfc_main = {
  __name: 'nuxt-error-page',
  props: {
  error: Object
},
  setup(__props, { expose }) {
  expose();

const props = __props



const error = props.error

// TODO: extract to a separate utility
const stacktrace = (error.stack || '')
  .split('\n')
  .splice(1)
  .map((line) => {
    const text = line
      .replace('webpack:/', '')
      .replace('.vue', '.js') // TODO: Support sourcemap
      .trim()
    return {
      text,
      internal: (line.includes('node_modules') && !line.includes('.cache')) ||
          line.includes('internal') ||
          line.includes('new Promise')
    }
  }).map(i => `<span class="stack${i.internal ? ' internal' : ''}">${i.text}</span>`).join('\n')

// Error page props
const statusCode = String(error.statusCode || 500)
const is404 = statusCode === '404'

const statusMessage = error.statusMessage ?? (is404 ? 'Page Not Found' : 'Internal Server Error')
const description = error.message || error.toString()
const stack = true && !is404 ? error.description || `<pre>${stacktrace}</pre>` : undefined

const ErrorTemplate = is404 ? __vite_ssr_import_0__.default : true ? __vite_ssr_import_2__.default : __vite_ssr_import_1__.default

const __returned__ = { props, error, stacktrace, statusCode, is404, statusMessage, description, stack, ErrorTemplate, Error404: __vite_ssr_import_0__.default, Error500: __vite_ssr_import_1__.default, ErrorDev: __vite_ssr_import_2__.default }
Object.defineProperty(__returned__, '__isScriptSetup', { enumerable: false, value: true })
return __returned__
}

}
const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_4__ = await __vite_ssr_import__("/node_modules/vue/server-renderer/index.js");


function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(__vite_ssr_import_4__.ssrRenderComponent($setup["ErrorTemplate"], __vite_ssr_import_3__.mergeProps({ statusCode: $setup.statusCode, statusMessage: $setup.statusMessage, description: $setup.description, stack: $setup.stack }, _attrs), null, _parent))
}


const __vite_ssr_import_5__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_setup = _sfc_main.setup
_sfc_main.setup = (props, ctx) => {
  const ssrContext = __vite_ssr_import_5__.useSSRContext()
  ;(ssrContext.modules || (ssrContext.modules = new Set())).add("node_modules/nuxt/dist/app/components/nuxt-error-page.vue")
  return _sfc_setup ? _sfc_setup(props, ctx) : undefined
}
const __vite_ssr_import_6__ = await __vite_ssr_import__("/@id/plugin-vue:export-helper");

__vite_ssr_exports__.default = /*#__PURE__*/__vite_ssr_import_6__.default(_sfc_main, [['ssrRender',_sfc_ssrRender],['__file',"/Users/bonn/Documents/GitHub/next-truyen/node_modules/nuxt/dist/app/components/nuxt-error-page.vue"]]);
}


// --------------------
// Request: /node_modules/@nuxt/ui-templates/dist/templates/error-404.vue
// Parents: 
// - /node_modules/nuxt/dist/app/components/nuxt-error-page.vue ($id_8cc6d73f)
// Dependencies: 
// - /node_modules/nuxt/dist/app/components/nuxt-link.mjs ($id_ffac87b5)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs ($id_fe38f457)
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/vue/server-renderer/index.js ($id_b215fa1c)
// - /node_modules/@nuxt/ui-templates/dist/templates/error-404.vue?vue&type=style&index=0&scoped=true&lang.css ($id_e68b6b38)
// - /@id/plugin-vue:export-helper ($id_bbb863c1)
// --------------------
const $id_b90d4d0f = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/nuxt/dist/app/components/nuxt-link.mjs");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs");


const _sfc_main = {
  __name: 'error-404',
  props: {
  appName: {
    type: String,
    default: "Nuxt"
  },
  version: {
    type: String,
    default: ""
  },
  statusCode: {
    type: String,
    default: "404"
  },
  statusMessage: {
    type: String,
    default: "Not Found"
  },
  description: {
    type: String,
    default: "Sorry, the page you are looking for could not be found."
  },
  backHome: {
    type: String,
    default: "Go back home"
  }
},
  setup(__props, { expose }) {
  expose();

const props = __props


__vite_ssr_import_1__.useHead({
  title: `${ props.statusCode } - ${ props.statusMessage } | ${ props.appName }`,
  script: [],
  style: [
    {
      children: `*,:before,:after{-webkit-box-sizing:border-box;box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}*{--tw-ring-inset:var(--tw-empty, );--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(14, 165, 233, .5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000}:root{-moz-tab-size:4;-o-tab-size:4;tab-size:4}a{color:inherit;text-decoration:inherit}body{margin:0;font-family:inherit;line-height:inherit}html{-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";line-height:1.5}h1,p{margin:0}h1{font-size:inherit;font-weight:inherit}`
    }
  ]
})

const __returned__ = { props, useHead: __vite_ssr_import_1__.useHead }
Object.defineProperty(__returned__, '__isScriptSetup', { enumerable: false, value: true })
return __returned__
}

}
const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/vue/server-renderer/index.js");


function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_NuxtLink = __vite_ssr_import_0__.default

  _push(`<div${
    __vite_ssr_import_3__.ssrRenderAttrs(__vite_ssr_import_2__.mergeProps({ class: "font-sans antialiased bg-white dark:bg-black text-black dark:text-white grid min-h-screen place-content-center overflow-hidden" }, _attrs))
  } data-v-573335c0><div class="fixed left-0 right-0 spotlight z-10" data-v-573335c0></div><div class="max-w-520px text-center z-20" data-v-573335c0><h1 class="text-8xl sm:text-10xl font-medium mb-8" data-v-573335c0>${
    __vite_ssr_import_3__.ssrInterpolate($props.statusCode)
  }</h1><p class="text-xl px-8 sm:px-0 sm:text-4xl font-light mb-16 leading-tight" data-v-573335c0>${
    __vite_ssr_import_3__.ssrInterpolate($props.description)
  }</p><div class="w-full flex items-center justify-center" data-v-573335c0>`)
  _push(__vite_ssr_import_3__.ssrRenderComponent(_component_NuxtLink, {
    to: "/",
    class: "gradient-border text-md sm:text-xl py-2 px-4 sm:py-3 sm:px-6 cursor-pointer"
  }, {
    default: __vite_ssr_import_2__.withCtx((_, _push, _parent, _scopeId) => {
      if (_push) {
        _push(`${__vite_ssr_import_3__.ssrInterpolate($props.backHome)}`)
      } else {
        return [
          __vite_ssr_import_2__.createTextVNode(__vite_ssr_import_2__.toDisplayString($props.backHome), 1 /* TEXT */)
        ]
      }
    }),
    _: 1 /* STABLE */
  }, _parent))
  _push(`</div></div></div>`)
}

const __vite_ssr_import_4__ = await __vite_ssr_import__("/node_modules/@nuxt/ui-templates/dist/templates/error-404.vue?vue&type=style&index=0&scoped=true&lang.css");


const __vite_ssr_import_5__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_setup = _sfc_main.setup
_sfc_main.setup = (props, ctx) => {
  const ssrContext = __vite_ssr_import_5__.useSSRContext()
  ;(ssrContext.modules || (ssrContext.modules = new Set())).add("node_modules/@nuxt/ui-templates/dist/templates/error-404.vue")
  return _sfc_setup ? _sfc_setup(props, ctx) : undefined
}
const __vite_ssr_import_6__ = await __vite_ssr_import__("/@id/plugin-vue:export-helper");

__vite_ssr_exports__.default = /*#__PURE__*/__vite_ssr_import_6__.default(_sfc_main, [['ssrRender',_sfc_ssrRender],['__scopeId',"data-v-573335c0"],['__file',"/Users/bonn/Documents/GitHub/next-truyen/node_modules/@nuxt/ui-templates/dist/templates/error-404.vue"]]);
}


// --------------------
// Request: /node_modules/@nuxt/ui-templates/dist/templates/error-404.vue?vue&type=style&index=0&scoped=true&lang.css
// Parents: 
// - /node_modules/@nuxt/ui-templates/dist/templates/error-404.vue ($id_b90d4d0f)
// Dependencies: 

// --------------------
const $id_e68b6b38 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
__vite_ssr_exports__.default = ".bg-white[data-v-573335c0]{--tw-bg-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity))}.cursor-pointer[data-v-573335c0]{cursor:pointer}.flex[data-v-573335c0]{display:flex}.grid[data-v-573335c0]{display:grid}.place-content-center[data-v-573335c0]{place-content:center}.items-center[data-v-573335c0]{align-items:center}.justify-center[data-v-573335c0]{justify-content:center}.font-sans[data-v-573335c0]{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",Segoe UI Symbol,\"Noto Color Emoji\"}.font-medium[data-v-573335c0]{font-weight:500}.font-light[data-v-573335c0]{font-weight:300}.text-8xl[data-v-573335c0]{font-size:6rem;line-height:1}.text-xl[data-v-573335c0]{font-size:1.25rem;line-height:1.75rem}.leading-tight[data-v-573335c0]{line-height:1.25}.mb-8[data-v-573335c0]{margin-bottom:2rem}.mb-16[data-v-573335c0]{margin-bottom:4rem}.max-w-520px[data-v-573335c0]{max-width:520px}.min-h-screen[data-v-573335c0]{min-height:100vh}.overflow-hidden[data-v-573335c0]{overflow:hidden}.px-8[data-v-573335c0]{padding-left:2rem;padding-right:2rem}.py-2[data-v-573335c0]{padding-bottom:.5rem;padding-top:.5rem}.px-4[data-v-573335c0]{padding-left:1rem;padding-right:1rem}.fixed[data-v-573335c0]{position:fixed}.left-0[data-v-573335c0]{left:0}.right-0[data-v-573335c0]{right:0}.text-center[data-v-573335c0]{text-align:center}.text-black[data-v-573335c0]{--tw-text-opacity:1;color:rgba(0,0,0,var(--tw-text-opacity))}.antialiased[data-v-573335c0]{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.w-full[data-v-573335c0]{width:100%}.z-10[data-v-573335c0]{z-index:10}.z-20[data-v-573335c0]{z-index:20}@media (min-width:640px){.sm\\:text-4xl[data-v-573335c0]{font-size:2.25rem;line-height:2.5rem}.sm\\:text-xl[data-v-573335c0]{font-size:1.25rem;line-height:1.75rem}.sm\\:text-10xl[data-v-573335c0]{font-size:10rem;line-height:1}.sm\\:px-0[data-v-573335c0]{padding-left:0;padding-right:0}.sm\\:py-3[data-v-573335c0]{padding-bottom:.75rem;padding-top:.75rem}.sm\\:px-6[data-v-573335c0]{padding-left:1.5rem;padding-right:1.5rem}}@media (prefers-color-scheme:dark){.dark\\:bg-black[data-v-573335c0]{--tw-bg-opacity:1;background-color:rgba(0,0,0,var(--tw-bg-opacity))}.dark\\:text-white[data-v-573335c0]{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity))}}.spotlight[data-v-573335c0]{background:linear-gradient(45deg,#00dc82,#36e4da 50%,#0047e1);bottom:-30vh;filter:blur(20vh);height:40vh}.gradient-border[data-v-573335c0]{-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);border-radius:.5rem;position:relative}@media (prefers-color-scheme:light){.gradient-border[data-v-573335c0]{background-color:#ffffff4d}.gradient-border[data-v-573335c0]:before{background:linear-gradient(90deg,#e2e2e2,#e2e2e2 25%,#00dc82 50%,#36e4da 75%,#0047e1)}}@media (prefers-color-scheme:dark){.gradient-border[data-v-573335c0]{background-color:#1414144d}.gradient-border[data-v-573335c0]:before{background:linear-gradient(90deg,#303030,#303030 25%,#00dc82 50%,#36e4da 75%,#0047e1)}}.gradient-border[data-v-573335c0]:before{background-size:400% auto;border-radius:.5rem;bottom:0;content:\"\";left:0;-webkit-mask:linear-gradient(#fff 0 0) content-box,linear-gradient(#fff 0 0);mask:linear-gradient(#fff 0 0) content-box,linear-gradient(#fff 0 0);-webkit-mask-composite:xor;mask-composite:exclude;opacity:.5;padding:2px;position:absolute;right:0;top:0;transition:background-position .3s ease-in-out,opacity .2s ease-in-out;width:100%}.gradient-border[data-v-573335c0]:hover:before{background-position:-50% 0;opacity:1}";
}


// --------------------
// Request: /node_modules/@nuxt/ui-templates/dist/templates/error-500.vue
// Parents: 
// - /node_modules/nuxt/dist/app/components/nuxt-error-page.vue ($id_8cc6d73f)
// Dependencies: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs ($id_fe38f457)
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/vue/server-renderer/index.js ($id_b215fa1c)
// - /node_modules/@nuxt/ui-templates/dist/templates/error-500.vue?vue&type=style&index=0&scoped=true&lang.css ($id_a2b3b709)
// - /@id/plugin-vue:export-helper ($id_bbb863c1)
// --------------------
const $id_14c8b574 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs");


const _sfc_main = {
  __name: 'error-500',
  props: {
  appName: {
    type: String,
    default: "Nuxt"
  },
  version: {
    type: String,
    default: ""
  },
  statusCode: {
    type: String,
    default: "500"
  },
  statusMessage: {
    type: String,
    default: "Server error"
  },
  description: {
    type: String,
    default: "This page is temporarily unavailable."
  }
},
  setup(__props, { expose }) {
  expose();

const props = __props


__vite_ssr_import_0__.useHead({
  title: `${ props.statusCode } - ${ props.statusMessage } | ${ props.appName }`,
  script: [],
  style: [
    {
      children: `*,:before,:after{-webkit-box-sizing:border-box;box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}*{--tw-ring-inset:var(--tw-empty, );--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(14, 165, 233, .5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000}:root{-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{margin:0;font-family:inherit;line-height:inherit}html{-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";line-height:1.5}h1,p{margin:0}h1{font-size:inherit;font-weight:inherit}`
    }
  ]
})

const __returned__ = { props, useHead: __vite_ssr_import_0__.useHead }
Object.defineProperty(__returned__, '__isScriptSetup', { enumerable: false, value: true })
return __returned__
}

}
const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/vue/server-renderer/index.js");


function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${
    __vite_ssr_import_2__.ssrRenderAttrs(__vite_ssr_import_1__.mergeProps({ class: "font-sans antialiased bg-white dark:bg-black text-black dark:text-white grid min-h-screen place-content-center overflow-hidden" }, _attrs))
  } data-v-0914425d><div class="fixed -bottom-1/2 left-0 right-0 h-1/2 spotlight" data-v-0914425d></div><div class="max-w-520px text-center" data-v-0914425d><h1 class="text-8xl sm:text-10xl font-medium mb-8" data-v-0914425d>${
    __vite_ssr_import_2__.ssrInterpolate($props.statusCode)
  }</h1><p class="text-xl px-8 sm:px-0 sm:text-4xl font-light mb-16 leading-tight" data-v-0914425d>${
    __vite_ssr_import_2__.ssrInterpolate($props.description)
  }</p></div></div>`)
}

const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/@nuxt/ui-templates/dist/templates/error-500.vue?vue&type=style&index=0&scoped=true&lang.css");


const __vite_ssr_import_4__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_setup = _sfc_main.setup
_sfc_main.setup = (props, ctx) => {
  const ssrContext = __vite_ssr_import_4__.useSSRContext()
  ;(ssrContext.modules || (ssrContext.modules = new Set())).add("node_modules/@nuxt/ui-templates/dist/templates/error-500.vue")
  return _sfc_setup ? _sfc_setup(props, ctx) : undefined
}
const __vite_ssr_import_5__ = await __vite_ssr_import__("/@id/plugin-vue:export-helper");

__vite_ssr_exports__.default = /*#__PURE__*/__vite_ssr_import_5__.default(_sfc_main, [['ssrRender',_sfc_ssrRender],['__scopeId',"data-v-0914425d"],['__file',"/Users/bonn/Documents/GitHub/next-truyen/node_modules/@nuxt/ui-templates/dist/templates/error-500.vue"]]);
}


// --------------------
// Request: /node_modules/@nuxt/ui-templates/dist/templates/error-500.vue?vue&type=style&index=0&scoped=true&lang.css
// Parents: 
// - /node_modules/@nuxt/ui-templates/dist/templates/error-500.vue ($id_14c8b574)
// Dependencies: 

// --------------------
const $id_a2b3b709 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
__vite_ssr_exports__.default = ".bg-white[data-v-0914425d]{--tw-bg-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity))}.grid[data-v-0914425d]{display:grid}.place-content-center[data-v-0914425d]{place-content:center}.font-sans[data-v-0914425d]{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",Segoe UI Symbol,\"Noto Color Emoji\"}.font-medium[data-v-0914425d]{font-weight:500}.font-light[data-v-0914425d]{font-weight:300}.h-1\\/2[data-v-0914425d]{height:50%}.text-8xl[data-v-0914425d]{font-size:6rem;line-height:1}.text-xl[data-v-0914425d]{font-size:1.25rem;line-height:1.75rem}.leading-tight[data-v-0914425d]{line-height:1.25}.mb-8[data-v-0914425d]{margin-bottom:2rem}.mb-16[data-v-0914425d]{margin-bottom:4rem}.max-w-520px[data-v-0914425d]{max-width:520px}.min-h-screen[data-v-0914425d]{min-height:100vh}.overflow-hidden[data-v-0914425d]{overflow:hidden}.px-8[data-v-0914425d]{padding-left:2rem;padding-right:2rem}.fixed[data-v-0914425d]{position:fixed}.left-0[data-v-0914425d]{left:0}.right-0[data-v-0914425d]{right:0}.-bottom-1\\/2[data-v-0914425d]{bottom:-50%}.text-center[data-v-0914425d]{text-align:center}.text-black[data-v-0914425d]{--tw-text-opacity:1;color:rgba(0,0,0,var(--tw-text-opacity))}.antialiased[data-v-0914425d]{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}@media (min-width:640px){.sm\\:text-4xl[data-v-0914425d]{font-size:2.25rem;line-height:2.5rem}.sm\\:text-10xl[data-v-0914425d]{font-size:10rem;line-height:1}.sm\\:px-0[data-v-0914425d]{padding-left:0;padding-right:0}}@media (prefers-color-scheme:dark){.dark\\:bg-black[data-v-0914425d]{--tw-bg-opacity:1;background-color:rgba(0,0,0,var(--tw-bg-opacity))}.dark\\:text-white[data-v-0914425d]{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity))}}.spotlight[data-v-0914425d]{background:linear-gradient(45deg,#00dc82,#36e4da 50%,#0047e1);filter:blur(20vh)}";
}


// --------------------
// Request: /node_modules/@nuxt/ui-templates/dist/templates/error-dev.vue
// Parents: 
// - /node_modules/nuxt/dist/app/components/nuxt-error-page.vue ($id_8cc6d73f)
// Dependencies: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs ($id_fe38f457)
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/vue/server-renderer/index.js ($id_b215fa1c)
// - /node_modules/@nuxt/ui-templates/dist/templates/error-dev.vue?vue&type=style&index=0&scoped=true&lang.css ($id_2691164c)
// - /@id/plugin-vue:export-helper ($id_bbb863c1)
// --------------------
const $id_bc2d74a1 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs");


const _sfc_main = {
  __name: 'error-dev',
  props: {
  appName: {
    type: String,
    default: "Nuxt"
  },
  version: {
    type: String,
    default: ""
  },
  statusCode: {
    type: String,
    default: "500"
  },
  statusMessage: {
    type: String,
    default: "Server error"
  },
  description: {
    type: String,
    default: "An error occurred in the application and the page could not be served. If you are the application owner, check your server logs for details."
  },
  stack: {
    type: String,
    default: ""
  }
},
  setup(__props, { expose }) {
  expose();

const props = __props


__vite_ssr_import_0__.useHead({
  title: `${ props.statusCode } - ${ props.statusMessage } | ${ props.appName }`,
  script: [],
  style: [
    {
      children: `*,:before,:after{-webkit-box-sizing:border-box;box-sizing:border-box;border-width:0;border-style:solid;border-color:#e5e7eb}*{--tw-ring-inset:var(--tw-empty, );--tw-ring-offset-width:0px;--tw-ring-offset-color:#fff;--tw-ring-color:rgba(14, 165, 233, .5);--tw-ring-offset-shadow:0 0 #0000;--tw-ring-shadow:0 0 #0000;--tw-shadow:0 0 #0000}:root{-moz-tab-size:4;-o-tab-size:4;tab-size:4}body{margin:0;font-family:inherit;line-height:inherit}html{-webkit-text-size-adjust:100%;font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,"Apple Color Emoji","Segoe UI Emoji",Segoe UI Symbol,"Noto Color Emoji";line-height:1.5}h1,p,pre{margin:0}h1{font-size:inherit;font-weight:inherit}pre{font-size:1em;font-family:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace}`
    }
  ]
})

const __returned__ = { props, useHead: __vite_ssr_import_0__.useHead }
Object.defineProperty(__returned__, '__isScriptSetup', { enumerable: false, value: true })
return __returned__
}

}
const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/vue/server-renderer/index.js");


function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${
    __vite_ssr_import_2__.ssrRenderAttrs(__vite_ssr_import_1__.mergeProps({ class: "font-sans antialiased bg-white px-10 pt-14 dark:bg-black text-black dark:text-white min-h-screen flex flex-col" }, _attrs))
  } data-v-1da4697d><div class="fixed left-0 right-0 spotlight" data-v-1da4697d></div><h1 class="text-6xl sm:text-8xl font-medium mb-6" data-v-1da4697d>${
    __vite_ssr_import_2__.ssrInterpolate($props.statusCode)
  }</h1><p class="text-xl sm:text-2xl font-light mb-8 leading-tight" data-v-1da4697d>${
    __vite_ssr_import_2__.ssrInterpolate($props.description)
  }</p><div class="bg-white rounded-t-md bg-black/5 dark:bg-white/10 flex-1 overflow-y-auto h-auto" data-v-1da4697d><pre class="text-xl font-light leading-tight z-10 p-8" data-v-1da4697d>${
    $props.stack
  }</pre></div></div>`)
}

const __vite_ssr_import_3__ = await __vite_ssr_import__("/node_modules/@nuxt/ui-templates/dist/templates/error-dev.vue?vue&type=style&index=0&scoped=true&lang.css");


const __vite_ssr_import_4__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_setup = _sfc_main.setup
_sfc_main.setup = (props, ctx) => {
  const ssrContext = __vite_ssr_import_4__.useSSRContext()
  ;(ssrContext.modules || (ssrContext.modules = new Set())).add("node_modules/@nuxt/ui-templates/dist/templates/error-dev.vue")
  return _sfc_setup ? _sfc_setup(props, ctx) : undefined
}
const __vite_ssr_import_5__ = await __vite_ssr_import__("/@id/plugin-vue:export-helper");

__vite_ssr_exports__.default = /*#__PURE__*/__vite_ssr_import_5__.default(_sfc_main, [['ssrRender',_sfc_ssrRender],['__scopeId',"data-v-1da4697d"],['__file',"/Users/bonn/Documents/GitHub/next-truyen/node_modules/@nuxt/ui-templates/dist/templates/error-dev.vue"]]);
}


// --------------------
// Request: /node_modules/@nuxt/ui-templates/dist/templates/error-dev.vue?vue&type=style&index=0&scoped=true&lang.css
// Parents: 
// - /node_modules/@nuxt/ui-templates/dist/templates/error-dev.vue ($id_bc2d74a1)
// Dependencies: 

// --------------------
const $id_2691164c = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
__vite_ssr_exports__.default = ".bg-white[data-v-1da4697d]{--tw-bg-opacity:1;background-color:rgba(255,255,255,var(--tw-bg-opacity))}.bg-black\\/5[data-v-1da4697d]{--tw-bg-opacity:.05;background-color:rgba(0,0,0,var(--tw-bg-opacity))}.rounded-t-md[data-v-1da4697d]{border-top-left-radius:.375rem;border-top-right-radius:.375rem}.flex[data-v-1da4697d]{display:flex}.flex-col[data-v-1da4697d]{flex-direction:column}.flex-1[data-v-1da4697d]{flex:1 1 0%}.font-sans[data-v-1da4697d]{font-family:ui-sans-serif,system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",Segoe UI Symbol,\"Noto Color Emoji\"}.font-medium[data-v-1da4697d]{font-weight:500}.font-light[data-v-1da4697d]{font-weight:300}.h-auto[data-v-1da4697d]{height:auto}.text-xl[data-v-1da4697d]{font-size:1.25rem;line-height:1.75rem}.text-6xl[data-v-1da4697d]{font-size:3.75rem;line-height:1}.leading-tight[data-v-1da4697d]{line-height:1.25}.mb-8[data-v-1da4697d]{margin-bottom:2rem}.mb-6[data-v-1da4697d]{margin-bottom:1.5rem}.min-h-screen[data-v-1da4697d]{min-height:100vh}.overflow-y-auto[data-v-1da4697d]{overflow-y:auto}.p-8[data-v-1da4697d]{padding:2rem}.px-10[data-v-1da4697d]{padding-left:2.5rem;padding-right:2.5rem}.pt-14[data-v-1da4697d]{padding-top:3.5rem}.fixed[data-v-1da4697d]{position:fixed}.left-0[data-v-1da4697d]{left:0}.right-0[data-v-1da4697d]{right:0}.text-black[data-v-1da4697d]{--tw-text-opacity:1;color:rgba(0,0,0,var(--tw-text-opacity))}.antialiased[data-v-1da4697d]{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.z-10[data-v-1da4697d]{z-index:10}@media (min-width:640px){.sm\\:text-8xl[data-v-1da4697d]{font-size:6rem;line-height:1}.sm\\:text-2xl[data-v-1da4697d]{font-size:1.5rem;line-height:2rem}}@media (prefers-color-scheme:dark){.dark\\:bg-black[data-v-1da4697d]{--tw-bg-opacity:1;background-color:rgba(0,0,0,var(--tw-bg-opacity))}.dark\\:bg-white\\/10[data-v-1da4697d]{--tw-bg-opacity:.1;background-color:rgba(255,255,255,var(--tw-bg-opacity))}.dark\\:text-white[data-v-1da4697d]{--tw-text-opacity:1;color:rgba(255,255,255,var(--tw-text-opacity))}}.spotlight[data-v-1da4697d]{background:linear-gradient(45deg,#00dc82,#36e4da 50%,#0047e1);bottom:-40vh;filter:blur(30vh);height:60vh;opacity:.8}";
}


// --------------------
// Request: /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/app-component.mjs
// Parents: 
// - /Users/bonn/Documents/GitHub/next-truyen/node_modules/nuxt/dist/app/entry ($id_e3b1bc70)
// Dependencies: 
// - /app.vue ($id_2b46e842)
// --------------------
const $id_88ee8cb1 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/app.vue");

Object.defineProperty(__vite_ssr_exports__, "default", { enumerable: true, configurable: true, get(){ return __vite_ssr_import_0__.default }});;
}


// --------------------
// Request: /app.vue
// Parents: 
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/app-component.mjs ($id_88ee8cb1)
// Dependencies: 
// - /node_modules/vue/dist/vue.cjs.js ($id_60f0615f)
// - /node_modules/swiper/swiper.min.css ($id_9d54fdba)
// - /node_modules/swiper/modules/pagination/pagination.min.css ($id_d3ef010f)
// - /@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs ($id_fe38f457)
// - /node_modules/vue/server-renderer/index.js ($id_b215fa1c)
// - /@id/plugin-vue:export-helper ($id_bbb863c1)
// --------------------
const $id_2b46e842 = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
const __vite_ssr_import_0__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_1__ = await __vite_ssr_import__("/node_modules/swiper/swiper.min.css");

const __vite_ssr_import_2__ = await __vite_ssr_import__("/node_modules/swiper/modules/pagination/pagination.min.css");

const __vite_ssr_import_3__ = await __vite_ssr_import__("/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs");

const _sfc_main = /* @__PURE__ */ __vite_ssr_import_0__.defineComponent({
  __name: "app",
  setup(__props, { expose }) {
    expose();
    const useColor = __vite_ssr_import_3__.useColorMode();
    useColor.preference = "dark";
    const __returned__ = { useColor };
    Object.defineProperty(__returned__, "__isScriptSetup", { enumerable: false, value: true });
    return __returned__;
  }
});
const __vite_ssr_import_4__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const __vite_ssr_import_5__ = await __vite_ssr_import__("/node_modules/vue/server-renderer/index.js");

function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  const _component_NuxtPage = __vite_ssr_import_4__.resolveComponent("NuxtPage");
  _push(__vite_ssr_import_5__.ssrRenderComponent(_component_NuxtPage, _attrs, null, _parent));
}
const __vite_ssr_import_6__ = await __vite_ssr_import__("/node_modules/vue/dist/vue.cjs.js");

const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = __vite_ssr_import_6__.useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("app.vue");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const __vite_ssr_import_7__ = await __vite_ssr_import__("/@id/plugin-vue:export-helper");

__vite_ssr_exports__.default = /* @__PURE__ */ __vite_ssr_import_7__.default(_sfc_main, [["ssrRender", _sfc_ssrRender], ["__file", "/Users/bonn/Documents/GitHub/next-truyen/app.vue"]]);
;
}


// --------------------
// Request: /node_modules/swiper/swiper.min.css
// Parents: 
// - /app.vue ($id_2b46e842)
// Dependencies: 

// --------------------
const $id_9d54fdba = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
__vite_ssr_exports__.default = "@font-face{font-family:swiper-icons;font-style:normal;font-weight:400;src:url(\"data:application/font-woff;charset=utf-8;base64, d09GRgABAAAAAAZgABAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAAGRAAAABoAAAAci6qHkUdERUYAAAWgAAAAIwAAACQAYABXR1BPUwAABhQAAAAuAAAANuAY7+xHU1VCAAAFxAAAAFAAAABm2fPczU9TLzIAAAHcAAAASgAAAGBP9V5RY21hcAAAAkQAAACIAAABYt6F0cBjdnQgAAACzAAAAAQAAAAEABEBRGdhc3AAAAWYAAAACAAAAAj//wADZ2x5ZgAAAywAAADMAAAD2MHtryVoZWFkAAABbAAAADAAAAA2E2+eoWhoZWEAAAGcAAAAHwAAACQC9gDzaG10eAAAAigAAAAZAAAArgJkABFsb2NhAAAC0AAAAFoAAABaFQAUGG1heHAAAAG8AAAAHwAAACAAcABAbmFtZQAAA/gAAAE5AAACXvFdBwlwb3N0AAAFNAAAAGIAAACE5s74hXjaY2BkYGAAYpf5Hu/j+W2+MnAzMYDAzaX6QjD6/4//Bxj5GA8AuRwMYGkAPywL13jaY2BkYGA88P8Agx4j+/8fQDYfA1AEBWgDAIB2BOoAeNpjYGRgYNBh4GdgYgABEMnIABJzYNADCQAACWgAsQB42mNgYfzCOIGBlYGB0YcxjYGBwR1Kf2WQZGhhYGBiYGVmgAFGBiQQkOaawtDAoMBQxXjg/wEGPcYDDA4wNUA2CCgwsAAAO4EL6gAAeNpj2M0gyAACqxgGNWBkZ2D4/wMA+xkDdgAAAHjaY2BgYGaAYBkGRgYQiAHyGMF8FgYHIM3DwMHABGQrMOgyWDLEM1T9/w8UBfEMgLzE////P/5//f/V/xv+r4eaAAeMbAxwIUYmIMHEgKYAYjUcsDAwsLKxc3BycfPw8jEQA/gZBASFhEVExcQlJKWkZWTl5BUUlZRVVNXUNTQZBgMAAMR+E+gAEQFEAAAAKgAqACoANAA+AEgAUgBcAGYAcAB6AIQAjgCYAKIArAC2AMAAygDUAN4A6ADyAPwBBgEQARoBJAEuATgBQgFMAVYBYAFqAXQBfgGIAZIBnAGmAbIBzgHsAAB42u2NMQ6CUAyGW568x9AneYYgm4MJbhKFaExIOAVX8ApewSt4Bic4AfeAid3VOBixDxfPYEza5O+Xfi04YADggiUIULCuEJK8VhO4bSvpdnktHI5QCYtdi2sl8ZnXaHlqUrNKzdKcT8cjlq+rwZSvIVczNiezsfnP/uznmfPFBNODM2K7MTQ45YEAZqGP81AmGGcF3iPqOop0r1SPTaTbVkfUe4HXj97wYE+yNwWYxwWu4v1ugWHgo3S1XdZEVqWM7ET0cfnLGxWfkgR42o2PvWrDMBSFj/IHLaF0zKjRgdiVMwScNRAoWUoH78Y2icB/yIY09An6AH2Bdu/UB+yxopYshQiEvnvu0dURgDt8QeC8PDw7Fpji3fEA4z/PEJ6YOB5hKh4dj3EvXhxPqH/SKUY3rJ7srZ4FZnh1PMAtPhwP6fl2PMJMPDgeQ4rY8YT6Gzao0eAEA409DuggmTnFnOcSCiEiLMgxCiTI6Cq5DZUd3Qmp10vO0LaLTd2cjN4fOumlc7lUYbSQcZFkutRG7g6JKZKy0RmdLY680CDnEJ+UMkpFFe1RN7nxdVpXrC4aTtnaurOnYercZg2YVmLN/d/gczfEimrE/fs/bOuq29Zmn8tloORaXgZgGa78yO9/cnXm2BpaGvq25Dv9S4E9+5SIc9PqupJKhYFSSl47+Qcr1mYNAAAAeNptw0cKwkAAAMDZJA8Q7OUJvkLsPfZ6zFVERPy8qHh2YER+3i/BP83vIBLLySsoKimrqKqpa2hp6+jq6RsYGhmbmJqZSy0sraxtbO3sHRydnEMU4uR6yx7JJXveP7WrDycAAAAAAAH//wACeNpjYGRgYOABYhkgZgJCZgZNBkYGLQZtIJsFLMYAAAw3ALgAeNolizEKgDAQBCchRbC2sFER0YD6qVQiBCv/H9ezGI6Z5XBAw8CBK/m5iQQVauVbXLnOrMZv2oLdKFa8Pjuru2hJzGabmOSLzNMzvutpB3N42mNgZGBg4GKQYzBhYMxJLMlj4GBgAYow/P/PAJJhLM6sSoWKfWCAAwDAjgbRAAB42mNgYGBkAIIbCZo5IPrmUn0hGA0AO8EFTQAA\")}:root{--swiper-theme-color:#007aff}.swiper{list-style:none;margin-left:auto;margin-right:auto;overflow:hidden;padding:0;position:relative;z-index:1}.swiper-vertical>.swiper-wrapper{flex-direction:column}.swiper-wrapper{box-sizing:content-box;display:flex;height:100%;position:relative;transition-property:transform;width:100%;z-index:1}.swiper-android .swiper-slide,.swiper-wrapper{transform:translateZ(0)}.swiper-pointer-events{touch-action:pan-y}.swiper-pointer-events.swiper-vertical{touch-action:pan-x}.swiper-slide{flex-shrink:0;height:100%;position:relative;transition-property:transform;width:100%}.swiper-slide-invisible-blank{visibility:hidden}.swiper-autoheight,.swiper-autoheight .swiper-slide{height:auto}.swiper-autoheight .swiper-wrapper{align-items:flex-start;transition-property:transform,height}.swiper-backface-hidden .swiper-slide{-webkit-backface-visibility:hidden;backface-visibility:hidden;transform:translateZ(0)}.swiper-3d,.swiper-3d.swiper-css-mode .swiper-wrapper{perspective:1200px}.swiper-3d .swiper-cube-shadow,.swiper-3d .swiper-slide,.swiper-3d .swiper-slide-shadow,.swiper-3d .swiper-slide-shadow-bottom,.swiper-3d .swiper-slide-shadow-left,.swiper-3d .swiper-slide-shadow-right,.swiper-3d .swiper-slide-shadow-top,.swiper-3d .swiper-wrapper{transform-style:preserve-3d}.swiper-3d .swiper-slide-shadow,.swiper-3d .swiper-slide-shadow-bottom,.swiper-3d .swiper-slide-shadow-left,.swiper-3d .swiper-slide-shadow-right,.swiper-3d .swiper-slide-shadow-top{height:100%;left:0;pointer-events:none;position:absolute;top:0;width:100%;z-index:10}.swiper-3d .swiper-slide-shadow{background:rgba(0,0,0,.15)}.swiper-3d .swiper-slide-shadow-left{background-image:linear-gradient(270deg,rgba(0,0,0,.5),transparent)}.swiper-3d .swiper-slide-shadow-right{background-image:linear-gradient(90deg,rgba(0,0,0,.5),transparent)}.swiper-3d .swiper-slide-shadow-top{background-image:linear-gradient(0deg,rgba(0,0,0,.5),transparent)}.swiper-3d .swiper-slide-shadow-bottom{background-image:linear-gradient(180deg,rgba(0,0,0,.5),transparent)}.swiper-css-mode>.swiper-wrapper{-ms-overflow-style:none;overflow:auto;scrollbar-width:none}.swiper-css-mode>.swiper-wrapper::-webkit-scrollbar{display:none}.swiper-css-mode>.swiper-wrapper>.swiper-slide{scroll-snap-align:start start}.swiper-horizontal.swiper-css-mode>.swiper-wrapper{scroll-snap-type:x mandatory}.swiper-vertical.swiper-css-mode>.swiper-wrapper{scroll-snap-type:y mandatory}.swiper-centered>.swiper-wrapper:before{content:\"\";flex-shrink:0;order:9999}.swiper-centered.swiper-horizontal>.swiper-wrapper>.swiper-slide:first-child{-webkit-margin-start:var(--swiper-centered-offset-before);margin-inline-start:var(--swiper-centered-offset-before)}.swiper-centered.swiper-horizontal>.swiper-wrapper:before{height:100%;min-height:1px;width:var(--swiper-centered-offset-after)}.swiper-centered.swiper-vertical>.swiper-wrapper>.swiper-slide:first-child{-webkit-margin-before:var(--swiper-centered-offset-before);margin-block-start:var(--swiper-centered-offset-before)}.swiper-centered.swiper-vertical>.swiper-wrapper:before{height:var(--swiper-centered-offset-after);min-width:1px;width:100%}.swiper-centered>.swiper-wrapper>.swiper-slide{scroll-snap-align:center center}";
}


// --------------------
// Request: /node_modules/swiper/modules/pagination/pagination.min.css
// Parents: 
// - /app.vue ($id_2b46e842)
// Dependencies: 

// --------------------
const $id_d3ef010f = async function (global, module, exports, __vite_ssr_exports__, __vite_ssr_import_meta__, __vite_ssr_import__, __vite_ssr_dynamic_import__, __vite_ssr_exportAll__) {
__vite_ssr_exports__.default = ".swiper-pagination{position:absolute;text-align:center;transform:translateZ(0);transition:opacity .3s;z-index:10}.swiper-pagination.swiper-pagination-hidden{opacity:0}.swiper-pagination-disabled>.swiper-pagination,.swiper-pagination.swiper-pagination-disabled{display:none!important}.swiper-horizontal>.swiper-pagination-bullets,.swiper-pagination-bullets.swiper-pagination-horizontal,.swiper-pagination-custom,.swiper-pagination-fraction{bottom:10px;left:0;width:100%}.swiper-pagination-bullets-dynamic{font-size:0;overflow:hidden}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{position:relative;transform:scale(.33)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active,.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-main{transform:scale(1)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev{transform:scale(.66)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev-prev{transform:scale(.33)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next{transform:scale(.66)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next-next{transform:scale(.33)}.swiper-pagination-bullet{background:var(--swiper-pagination-bullet-inactive-color,#000);border-radius:50%;display:inline-block;height:var(--swiper-pagination-bullet-height,var(--swiper-pagination-bullet-size,8px));opacity:var(--swiper-pagination-bullet-inactive-opacity,.2);width:var(--swiper-pagination-bullet-width,var(--swiper-pagination-bullet-size,8px))}button.swiper-pagination-bullet{-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none;box-shadow:none;margin:0;padding:0}.swiper-pagination-clickable .swiper-pagination-bullet{cursor:pointer}.swiper-pagination-bullet:only-child{display:none!important}.swiper-pagination-bullet-active{background:var(--swiper-pagination-color,var(--swiper-theme-color));opacity:var(--swiper-pagination-bullet-opacity,1)}.swiper-pagination-vertical.swiper-pagination-bullets,.swiper-vertical>.swiper-pagination-bullets{right:10px;top:50%;transform:translate3d(0,-50%,0)}.swiper-pagination-vertical.swiper-pagination-bullets .swiper-pagination-bullet,.swiper-vertical>.swiper-pagination-bullets .swiper-pagination-bullet{display:block;margin:var(--swiper-pagination-bullet-vertical-gap,6px) 0}.swiper-pagination-vertical.swiper-pagination-bullets.swiper-pagination-bullets-dynamic,.swiper-vertical>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic{top:50%;transform:translateY(-50%);width:8px}.swiper-pagination-vertical.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet,.swiper-vertical>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{display:inline-block;transition:transform .2s,top .2s}.swiper-horizontal>.swiper-pagination-bullets .swiper-pagination-bullet,.swiper-pagination-horizontal.swiper-pagination-bullets .swiper-pagination-bullet{margin:0 var(--swiper-pagination-bullet-horizontal-gap,4px)}.swiper-horizontal>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic,.swiper-pagination-horizontal.swiper-pagination-bullets.swiper-pagination-bullets-dynamic{left:50%;transform:translateX(-50%);white-space:nowrap}.swiper-horizontal>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet,.swiper-pagination-horizontal.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{transition:transform .2s,left .2s}.swiper-horizontal.swiper-rtl>.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{transition:transform .2s,right .2s}.swiper-pagination-progressbar{background:rgba(0,0,0,.25);position:absolute}.swiper-pagination-progressbar .swiper-pagination-progressbar-fill{background:var(--swiper-pagination-color,var(--swiper-theme-color));height:100%;left:0;position:absolute;top:0;transform:scale(0);transform-origin:left top;width:100%}.swiper-rtl .swiper-pagination-progressbar .swiper-pagination-progressbar-fill{transform-origin:right top}.swiper-horizontal>.swiper-pagination-progressbar,.swiper-pagination-progressbar.swiper-pagination-horizontal,.swiper-pagination-progressbar.swiper-pagination-vertical.swiper-pagination-progressbar-opposite,.swiper-vertical>.swiper-pagination-progressbar.swiper-pagination-progressbar-opposite{height:4px;left:0;top:0;width:100%}.swiper-horizontal>.swiper-pagination-progressbar.swiper-pagination-progressbar-opposite,.swiper-pagination-progressbar.swiper-pagination-horizontal.swiper-pagination-progressbar-opposite,.swiper-pagination-progressbar.swiper-pagination-vertical,.swiper-vertical>.swiper-pagination-progressbar{height:100%;left:0;top:0;width:4px}.swiper-pagination-lock{display:none}";
}


const __modules__ = {
  "/Users/bonn/Documents/GitHub/next-truyen/node_modules/nuxt/dist/app/entry": $id_e3b1bc70,
  "/node_modules/vue/dist/vue.cjs.js": $id_60f0615f,
  "/node_modules/ohmyfetch/dist/index.mjs": $id_780217c4,
  "/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/paths.mjs": $id_dba18d01,
  "/node_modules/ufo/dist/index.mjs": $id_614de060,
  "/node_modules/nuxt/dist/app/index.mjs": $id_36927477,
  "/node_modules/nuxt/dist/app/nuxt.mjs": $id_e069d411,
  "/node_modules/hookable/dist/index.mjs": $id_a2c811c4,
  "/node_modules/unctx/dist/index.mjs": $id_a569ca2d,
  "/node_modules/nuxt/dist/app/compat/legacy-app.mjs": $id_a48341bc,
  "/node_modules/unenv/runtime/mock/proxy.mjs": $id_39e12da7,
  "/node_modules/nuxt/dist/app/composables/index.mjs": $id_b067a79a,
  "/node_modules/nuxt/dist/app/composables/component.mjs": $id_53345950,
  "/node_modules/vue-router/dist/vue-router.cjs.js": $id_f9a4a698,
  "/node_modules/nuxt/dist/app/composables/asyncData.mjs": $id_d5b6a221,
  "/node_modules/nuxt/dist/app/composables/utils.mjs": $id_df511336,
  "/node_modules/nuxt/dist/app/composables/hydrate.mjs": $id_0063df1b,
  "/node_modules/nuxt/dist/app/composables/state.mjs": $id_7d872108,
  "/node_modules/nuxt/dist/app/composables/error.mjs": $id_6fe050f1,
  "/node_modules/nuxt/dist/app/composables/fetch.mjs": $id_41f5ae4e,
  "/node_modules/ohash/dist/index.mjs": $id_b1b82cf3,
  "/node_modules/nuxt/dist/app/composables/cookie.mjs": $id_511b441d,
  "/node_modules/cookie-es/dist/index.mjs": $id_f4975261,
  "/node_modules/h3/dist/index.mjs": $id_57d7ded6,
  "/node_modules/destr/dist/index.mjs": $id_03d15ecd,
  "/node_modules/nuxt/dist/app/composables/ssr.mjs": $id_c4866ba7,
  "/node_modules/nuxt/dist/app/composables/router.mjs": $id_db4d90a8,
  "/node_modules/nuxt/dist/app/components/index.mjs": $id_161bfe9f,
  "/node_modules/nuxt/dist/app/components/nuxt-link.mjs": $id_ffac87b5,
  "/node_modules/nuxt/dist/head/runtime/index.mjs": $id_b7351483,
  "/node_modules/nuxt/dist/head/runtime/composables.mjs": $id_04ea9504,
  "/node_modules/@vue/shared/dist/shared.cjs.js": $id_852b06a2,
  "/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/css.mjs": $id_a5c1c6ec,
  "/assets/css/main.css": $id_f8b2993b,
  "/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/plugins/server.mjs": $id_54c812eb,
  "/node_modules/nuxt/dist/app/plugins/preload.server.mjs": $id_9871bba0,
  "/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/components.plugin.mjs": $id_2078c34e,
  "/node_modules/nuxt/dist/head/runtime/lib/vueuse-head.plugin.mjs": $id_e6f12003,
  "/node_modules/@vueuse/head/dist/index.mjs": $id_c032264e,
  "/node_modules/defu/dist/defu.mjs": $id_d7afab65,
  "/node_modules/nuxt/dist/head/runtime/plugin.mjs": $id_a2650341,
  "/node_modules/nuxt/dist/head/runtime/components.mjs": $id_b2a29d6f,
  "/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/meta.config.mjs": $id_b6985a47,
  "/node_modules/nuxt/dist/pages/runtime/router.mjs": $id_a090977b,
  "/node_modules/nuxt/dist/pages/runtime/page.mjs": $id_5fc14cdc,
  "/node_modules/nuxt/dist/pages/runtime/utils.mjs": $id_80f433aa,
  "/node_modules/nuxt/dist/app/components/utils.mjs": $id_69c52686,
  "/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/routes.mjs": $id_d2568f6b,
  "/pages/index.vue?macro=true": $id_5dd70240,
  "/node_modules/nuxt/dist/app/components/layout.mjs": $id_39003883,
  "/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/layouts.mjs": $id_5e3529c5,
  "/layouts/default.vue": $id_7689e89d,
  "/components/TheHeader.vue": $id_d18d7003,
  "/components/TheSidebar.vue": $id_a452c5e5,
  "/node_modules/vue/server-renderer/index.js": $id_b215fa1c,
  "/@id/plugin-vue:export-helper": $id_bbb863c1,
  "/components/TheNav.vue": $id_0ec40bd1,
  "/node_modules/@headlessui/vue/dist/headlessui.esm.js": $id_2c13895f,
  "/node_modules/@headlessui/vue/dist/components/combobox/combobox.js": $id_92aab129,
  "/node_modules/@headlessui/vue/dist/components/dialog/dialog.js": $id_b07f1154,
  "/node_modules/@headlessui/vue/dist/components/disclosure/disclosure.js": $id_90ea7d3e,
  "/node_modules/@headlessui/vue/dist/components/focus-trap/focus-trap.js": $id_58899675,
  "/node_modules/@headlessui/vue/dist/components/listbox/listbox.js": $id_2feddcbf,
  "/node_modules/@headlessui/vue/dist/components/menu/menu.js": $id_b1042eef,
  "/node_modules/@headlessui/vue/dist/components/popover/popover.js": $id_f86ffab2,
  "/node_modules/@headlessui/vue/dist/components/portal/portal.js": $id_1d43fca2,
  "/node_modules/@headlessui/vue/dist/components/radio-group/radio-group.js": $id_0e8af24b,
  "/node_modules/@headlessui/vue/dist/components/switch/switch.js": $id_44a1a907,
  "/node_modules/@headlessui/vue/dist/components/tabs/tabs.js": $id_6cd55209,
  "/node_modules/@headlessui/vue/dist/components/transitions/transition.js": $id_99377655,
  "/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/imports.mjs": $id_fe38f457,
  "/node_modules/nuxt/dist/app/compat/vue-demi.mjs": $id_a8110be7,
  "/node_modules/nuxt/dist/app/compat/capi.mjs": $id_0c5717a4,
  "/node_modules/@vueuse/core/index.mjs": $id_e8934cdc,
  "/node_modules/@vueuse/shared/index.mjs": $id_d77aacc8,
  "/composables/useSource.ts": $id_fd16ee2a,
  "/node_modules/@nuxtjs/color-mode/dist/runtime/composables.mjs": $id_9d5ba8e3,
  "/node_modules/nuxt/dist/pages/runtime/composables.mjs": $id_ff6ed455,
  "/components/TheHeader.vue?vue&type=style&index=0&scoped=true&lang.scss": $id_aa6519fd,
  "/components/TheFooter.vue": $id_cdfd5170,
  "/components/TheHome.vue": $id_370723ed,
  "/components/TheHome.vue?vue&type=style&index=0&lang.scss": $id_3c70adbd,
  "/components/HomePage/Spotlight.vue": $id_3c9ba117,
  "/node_modules/swiper/vue/swiper-vue.js": $id_72e3deca,
  "/node_modules/swiper/swiper.esm.js": $id_d1eb9a9e,
  "/node_modules/swiper/core/core.js": $id_413488a5,
  "/node_modules/swiper/modules/virtual/virtual.js": $id_cdb0752d,
  "/node_modules/swiper/modules/keyboard/keyboard.js": $id_b79f366d,
  "/node_modules/swiper/modules/mousewheel/mousewheel.js": $id_ff1b73b2,
  "/node_modules/swiper/modules/navigation/navigation.js": $id_3cbacc13,
  "/node_modules/swiper/modules/pagination/pagination.js": $id_9d25ff48,
  "/node_modules/swiper/modules/scrollbar/scrollbar.js": $id_b7c15973,
  "/node_modules/swiper/modules/parallax/parallax.js": $id_2bc0dda6,
  "/node_modules/swiper/modules/zoom/zoom.js": $id_b6094d1d,
  "/node_modules/swiper/modules/lazy/lazy.js": $id_27878f55,
  "/node_modules/swiper/modules/controller/controller.js": $id_224f2e59,
  "/node_modules/swiper/modules/a11y/a11y.js": $id_7fc5b0be,
  "/node_modules/swiper/modules/history/history.js": $id_f5205ad9,
  "/node_modules/swiper/modules/hash-navigation/hash-navigation.js": $id_39f6940c,
  "/node_modules/swiper/modules/autoplay/autoplay.js": $id_11d42465,
  "/node_modules/swiper/modules/thumbs/thumbs.js": $id_7f241531,
  "/node_modules/swiper/modules/free-mode/free-mode.js": $id_adae43c1,
  "/node_modules/swiper/modules/grid/grid.js": $id_be08b669,
  "/node_modules/swiper/modules/manipulation/manipulation.js": $id_9ffdf8ef,
  "/node_modules/swiper/modules/effect-fade/effect-fade.js": $id_ed5701f6,
  "/node_modules/swiper/modules/effect-cube/effect-cube.js": $id_03914d04,
  "/node_modules/swiper/modules/effect-flip/effect-flip.js": $id_24c07261,
  "/node_modules/swiper/modules/effect-coverflow/effect-coverflow.js": $id_0ea540eb,
  "/node_modules/swiper/modules/effect-creative/effect-creative.js": $id_3ab2d8b1,
  "/node_modules/swiper/modules/effect-cards/effect-cards.js": $id_597d31c2,
  "/contants/index.ts": $id_c59edb32,
  "/components/HomePage/MangeNewUpdate.vue": $id_eef87c89,
  "/components/HomePage/MangeNewUpdate.vue?vue&type=style&index=0&scoped=true&lang.scss": $id_dfb59d3e,
  "/components/HomePage/MangaFeatured.vue": $id_f783c960,
  "/pages/manga/index.vue?macro=true": $id_811fac0c,
  "/components/Manga/Review.vue": $id_4f57d685,
  "/components/Manga/Chaplist.vue": $id_49b3b6a3,
  "/pages/manga/read/[slug]/[chapter]/[id].vue?macro=true": $id_6e06068f,
  "/pages/index.vue": $id_cca58e97,
  "/pages/manga/index.vue": $id_f3f97c4e,
  "/pages/manga/read/[slug]/[chapter]/[id].vue": $id_b9cb4a69,
  "/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/router.options.mjs": $id_6fc2687f,
  "/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/middleware.mjs": $id_215201b3,
  "/node_modules/@nuxtjs/color-mode/dist/runtime/plugin.server.mjs": $id_a217e6ae,
  "/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/color-mode-options.mjs": $id_20cc7c5c,
  "/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/root-component.mjs": $id_1d2b572d,
  "/node_modules/nuxt/dist/app/components/nuxt-root.vue": $id_e9bfada3,
  "/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/error-component.mjs": $id_cacf1acb,
  "/node_modules/nuxt/dist/app/components/nuxt-error-page.vue": $id_8cc6d73f,
  "/node_modules/@nuxt/ui-templates/dist/templates/error-404.vue": $id_b90d4d0f,
  "/node_modules/@nuxt/ui-templates/dist/templates/error-404.vue?vue&type=style&index=0&scoped=true&lang.css": $id_e68b6b38,
  "/node_modules/@nuxt/ui-templates/dist/templates/error-500.vue": $id_14c8b574,
  "/node_modules/@nuxt/ui-templates/dist/templates/error-500.vue?vue&type=style&index=0&scoped=true&lang.css": $id_a2b3b709,
  "/node_modules/@nuxt/ui-templates/dist/templates/error-dev.vue": $id_bc2d74a1,
  "/node_modules/@nuxt/ui-templates/dist/templates/error-dev.vue?vue&type=style&index=0&scoped=true&lang.css": $id_2691164c,
  "/@id/virtual:nuxt:/Users/bonn/Documents/GitHub/next-truyen/.nuxt/app-component.mjs": $id_88ee8cb1,
  "/app.vue": $id_2b46e842,
  "/node_modules/swiper/swiper.min.css": $id_9d54fdba,
  "/node_modules/swiper/modules/pagination/pagination.min.css": $id_d3ef010f
}


const __pendingModules__ = new Map()
const __pendingImports__ = new Map()
const __ssrContext__ = { global: globalThis }

function __ssrLoadModule__(url, urlStack = []) {
  const pendingModule = __pendingModules__.get(url)
  if (pendingModule) { return pendingModule }
  const modulePromise = __instantiateModule__(url, urlStack)
  __pendingModules__.set(url, modulePromise)
  modulePromise.catch(() => { __pendingModules__.delete(url) })
         .finally(() => { __pendingModules__.delete(url) })
  return modulePromise
}

async function __instantiateModule__(url, urlStack) {
  const mod = __modules__[url]
  if (mod.stubModule) { return mod.stubModule }
  const stubModule = { [Symbol.toStringTag]: 'Module' }
  Object.defineProperty(stubModule, '__esModule', { value: true })
  mod.stubModule = stubModule
  // https://vitejs.dev/guide/api-hmr.html
  const importMeta = { url, hot: { accept() {}, prune() {}, dispose() {}, invalidate() {}, decline() {}, on() {} } }
  urlStack = urlStack.concat(url)
  const isCircular = url => urlStack.includes(url)
  const pendingDeps = []
  const ssrImport = async (dep) => {
    // TODO: Handle externals if dep[0] !== '.' | '/'
    if (!isCircular(dep) && !__pendingImports__.get(dep)?.some(isCircular)) {
      pendingDeps.push(dep)
      if (pendingDeps.length === 1) {
        __pendingImports__.set(url, pendingDeps)
      }
      await __ssrLoadModule__(dep, urlStack)
      if (pendingDeps.length === 1) {
        __pendingImports__.delete(url)
      } else {
        pendingDeps.splice(pendingDeps.indexOf(dep), 1)
      }
    }
    return __modules__[dep].stubModule
  }
  function ssrDynamicImport (dep) {
    // TODO: Handle dynamic import starting with . relative to url
    return ssrImport(dep)
  }

  function ssrExportAll(sourceModule) {
    for (const key in sourceModule) {
      if (key !== 'default') {
        try {
          Object.defineProperty(stubModule, key, {
            enumerable: true,
            configurable: true,
            get() { return sourceModule[key] }
          })
        } catch (_err) { }
      }
    }
  }

  const cjsModule = {
    get exports () {
      return stubModule.default
    },
    set exports (v) {
      stubModule.default = v
    },
  }

  await mod(
    __ssrContext__.global,
    cjsModule,
    stubModule.default,
    stubModule,
    importMeta,
    ssrImport,
    ssrDynamicImport,
    ssrExportAll
  )

  return stubModule
}


export default await __ssrLoadModule__("/Users/bonn/Documents/GitHub/next-truyen/node_modules/nuxt/dist/app/entry")